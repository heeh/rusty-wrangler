{"text": "Each lexical entry discovered in this way is then acted on by the rules in synthesis order , to allow the testing of various criteria more conveniently tested when the lexical entry is known .( The algorithm assumed here is then a generate - and - test algorithm . )", "label": "", "metadata": {}, "score": "27.04411"}
{"text": "It is also possible for the invocation of one template to appear in the definition of another one , so that the effect of the first one is included whenever the second one is invoked .The pattern of inter - template references typically forms a hierarchy that can encode and organize families of linguistic generalizations .", "label": "", "metadata": {}, "score": "33.213547"}
{"text": "This function should be able to accept files in a variety of formats , including variant order of fields and various whitespace characters .Implementation note : The format for lexical entries in a text file is not fixed , except that each lexical entry must conform to the lexical entry format as defined above ( see Lexical Entry Record Structure , section 5.2 ) .", "label": "", "metadata": {}, "score": "33.221523"}
{"text": "You need to indicate that the predicate is going to be provided as a parameter at each invocation of the template , and that the given predicate is then to appear in the semantic - form of a PRED schema .You must specify a parameter - name , say P , to stand for the predicate that will be supplied each time , and use that in a generalized PRED schema .", "label": "", "metadata": {}, "score": "33.913513"}
{"text": "The system allows correspondences between multiple levels of linguistic representation to be defined , as described by Kaplan ( 1987 ) and Halvorsen and Kaplan ( 1988 ) .As a simple application of this capability , the system can display the properties of a semantic representation that is characterized and associated with a string by lexical and syntactic schemata .", "label": "", "metadata": {}, "score": "34.493828"}
{"text": "The first member of that list is a sublist containing the real lexical entry which was looked up .For each rule which applied ( vacuously or not ) in a given derivation , the list will contain an additional sublist for that rule , consisting of the rule name followed by the lexical entry resulting from the application of that rule .", "label": "", "metadata": {}, "score": "34.630867"}
{"text": "Whenever it find a match , it constructs a complete bridging inference path from the first input sentence to the second input sentence .Iapplyrules 705 determines which rules match a tagged sentence , applies those rules to the tagged sentence , and returns the new tagged sentences that result from the application of those rules .", "label": "", "metadata": {}, "score": "35.81517"}
{"text": "If the lexicon module does not have an entry for a particular root , the entry can be derived .For each word , derivation information for each affix is derived .The derivation information is then represented in the lexical entry .", "label": "", "metadata": {}, "score": "36.10872"}
{"text": "We could do this with : .This is tedious and prone to error .If we needed to change the type of ANIM feature that was assigned , we would have to do so in three places .Instead , we can define a template which has as its argument the value of the PRED : .", "label": "", "metadata": {}, "score": "36.519367"}
{"text": "These differing representations are made compatible internally to the morpher by being translated into a Phonetic Sequence ( also defined below ) .At the other \" end \" , the phonetic shape of a virtual lexical entry ( i.e. a lexical entry derived by the application of phonological and/or morphological rules ) is translated from a Phonetic Sequence into a string before lexical lookup .", "label": "", "metadata": {}, "score": "36.568993"}
{"text": "The first token record is the word to be morphed , while the second and third token records represent the previous and following words , respectively .Purpose : The function morph_and_lookup_word performs an exhaustive morphing and lookup of the word represented by the second token in its input argument , by applying the following generate - and - test algorithm : .", "label": "", "metadata": {}, "score": "36.820206"}
{"text": "If this field is absent , the attempted application of the morphological rule being traced failed .See also comments under Rule Input ( section 5.8.4.2 ) concerning optional or ambiguous segments .Purpose : This field represents a virtual storable lexical entry which the morpher constructed during the analysis phase , and then attempted to look up in the lexicon .", "label": "", "metadata": {}, "score": "37.09701"}
{"text": "List of string plus name of a character definition table : The string is translated into a sequence of segments using the specified character definition table , and inserted into the output of the rule at this position .A Realizational Rule is one which realizes a given set of morphosyntactic features for a certain part of speech .", "label": "", "metadata": {}, "score": "37.148502"}
{"text": "The function morph_and_lookup_list accepts a list of Token Record data structures of any length .The morpher morphs each word separately ; the previous word and the following word ( if any ) are , however , accessible to phonological rules through the phonological rule fields prev_word and next_word .", "label": "", "metadata": {}, "score": "37.17125"}
{"text": "It will of course have no phonological or morphological rule applications .Its output field , if present , indicates that the derived lexical entry passes all the final tests ( specifically , for the output of the command morph_and_lookup_word , the phonetic form of the derived lexical entry matches that of the original input word ) .", "label": "", "metadata": {}, "score": "38.099007"}
{"text": "You can incorporate a collection of schemata into the definition of a named template , and then use the name of the template in place of those schemata in lexical entries or in c - structure rules .The specifications of individual lexical entries or rules can thus be streamlined , with the template definition representing the common properties that are shared by all the items that mention ( or invoke ) it .", "label": "", "metadata": {}, "score": "38.210907"}
{"text": "That is , the Input Side of each of the Subrules is checked in order for a match ( see below ) ; if there is a match , that Subrule is applied , and the application of the Morphological Rule is complete .", "label": "", "metadata": {}, "score": "38.359207"}
{"text": "( The result of this operation is then combined with the Head ( Foot ) Features of the subrule to create the Head ( Foot ) Features of the Output Lexical Entry ; see 4.2.6 below . )Note that features may be either uninstantiated or instantiated .", "label": "", "metadata": {}, "score": "38.460594"}
{"text": "Implementation notes : The format for writing lexical entries to a file is not fixed , except that each lexical entry should conform to the lexical entry format as defined above ( see Lexical Entry Record Structure , section 5.2 ) .", "label": "", "metadata": {}, "score": "38.809334"}
{"text": "This is true even though templates are purely abbreviatory devices and do not require the deep mathematical analysis that type inheritance seems to call for .You can define a few more templates with more interesting reference relationships .Begin by defining templates just for the PRED schemata of intransitive and transitive verbs and another template that invokes these to provide for verbs that are optionally transitive : .", "label": "", "metadata": {}, "score": "39.088943"}
{"text": "InitializeImmutableBinding(N , V ) .Set the value of an already existing but uninitialized immutable binding in an environment record .The String value N is the text of the bound name .V is the value for the binding and is a value of any ECMAScript language type .", "label": "", "metadata": {}, "score": "39.25074"}
{"text": "Implementation notes : \" Loading \" a dictionary file merely means that its information is now accessible ; it is analogous to opening a file for reading .The file need not be copied into memory .Accordingly , it may be necessary to lock the file against writes , so that the locations of lexical entries in the file do not change .", "label": "", "metadata": {}, "score": "39.36827"}
{"text": "This result is due to the finite state basis of PC - KIMMO 's morphotactics : for a given morpheme , you can only state what can follow it .You can not know that large has been preceded by a verbalizing prefix and thus is eligible to take a verbal suffix .", "label": "", "metadata": {}, "score": "39.402832"}
{"text": "Zero - origin indexing is employed throughout this description .Tagtokens(s ) 419 returns a list of tokens representing all words or phrases in s that are recognized as lexical entries .An invocation of tagtokens 419 on s starts by setting result to the empty list .", "label": "", "metadata": {}, "score": "39.46273"}
{"text": "Note that we do not distinguish between the application of realizational rules and \" ordinary \" morphological rules .Purpose : This field represents the virtual lexical entry which was the input ( in the analysis sense ) of the rule being traced .", "label": "", "metadata": {}, "score": "39.606224"}
{"text": "It is clear from the context that Johnson believes this strategy especially useful for non - configurational languages .In left - corner parsers [ 55 ] the first step of the algorithm is to select the left - most word of a phrase .", "label": "", "metadata": {}, "score": "39.980392"}
{"text": "In order to get the new rule to load , you have to reload the transfer rules , just as you have to reload the grammar if you change the grammar rules or the templates .There are two ways to do this .", "label": "", "metadata": {}, "score": "40.071457"}
{"text": "After processing the slots , set the head features of the resulting word equal to RzF plus any nonconflicting Head Features of LE ' .( An alternative would be to assign the Head Features of each Realizational Rule as it is applied , which would have the effect of allowing one affix to block attachment of a later affix .", "label": "", "metadata": {}, "score": "40.117134"}
{"text": "The use of individual property setting records allows the latter properties to be changed without having to reset the former properties .Purpose : Specifies the property of the stratum that is being set : its character definition table ; its cyclicity ; the ordering of its morphological or phonological rules , or its realizational affixes template .", "label": "", "metadata": {}, "score": "40.190228"}
{"text": "We have developed a framework for integrating a lexical repetition - based model of discourse segmentation capable of detecting shifts in topic , with a linguistically - aware summarizer which utilizes notions of salience and dynamically - adjustable size of the resulting summaries .", "label": "", "metadata": {}, "score": "40.199184"}
{"text": "The constraints will come from the lexicon if the node is a pre - terminal node , and otherwise they will come from a rule .The constraints are the base constraints that are obtained when all of the templates have been expanded .", "label": "", "metadata": {}, "score": "40.24186"}
{"text": "The number of solutions and the time it took to perform the analysis , are displayed in the prompt window and are also recorded for future reference at the end of the sentence : .The system also records the number of subtrees , a measure of the number of steps XLE required to perform all the constituent structure computations .", "label": "", "metadata": {}, "score": "40.378815"}
{"text": "The following subsections define the application of a phonological rule to a phonetic sequence under these three settings of the mult_applic field .For the purposes of this specification , a rule is said to apply to a form when one of the following algorithms has been applied , regardless of whether the rule actually changes the input form .", "label": "", "metadata": {}, "score": "40.522766"}
{"text": "The method according to . claim 1 , all the limitations of which are incorporated herein by reference , further comprising providing said lexicon and ontology data structure to have one or more lexical entries , concepts , and character strings .", "label": "", "metadata": {}, "score": "40.578266"}
{"text": "Only one of them can be active when the system analyzes a sentence , so some mechanism is needed to distinguish between them .The LFG formalism allows the grammar writer to distinguish between different versions of the same rule or lexical entry by giving them different names .", "label": "", "metadata": {}, "score": "40.809994"}
{"text": "That is , all the templates for a given Stratum are loaded together with a single Stratum Property Setting Record .The intention is to ensure that there is no ambiguity in the use of the r_pos and r_subcat fields , since if Affix Templates were loaded individually , it would be unclear whether a given template should replace a previously loaded template .", "label": "", "metadata": {}, "score": "40.985832"}
{"text": "Such a noun would ( all other requirements being met ) be a Complete Lexical Entry , ambiguous for number .Externally , there are two different representations for sequences of phonetic segments in the morpher .Input words ( tokens ) and the phonetic shape of Real Lexical Entries are represented as strings , in which each segment and/or suprasegmental is represented by one or more string characters .", "label": "", "metadata": {}, "score": "41.122307"}
{"text": "Each derivative must be considered individually , since there are no generally applicable transformations .If the user finds that no rules apply to a given derivative , this derivative should either be encoded as a full lexical entry or as an explicit derivative .", "label": "", "metadata": {}, "score": "41.26805"}
{"text": "When another rule needs to know the value of an un - instantiated feature , the morpher simply assumes that uninstantiated features have the required value .This may result in over - application of phonological rules , but any incorrect application will be discovered when the rules are applied in synthesis mode to looked - up lexical entries .", "label": "", "metadata": {}, "score": "41.37796"}
{"text": "In particular , when ( un-)applying rules in analysis order , boundary markers which the input side of a phonological rule may call for are unlikely to be present in the lexical form .This section describes the lexical entry generated by applying a morphological rule to another lexical entry .", "label": "", "metadata": {}, "score": "41.38546"}
{"text": "Since this is an optional rule , the choice space has been split in the \" Transfer Result \" window .You should see a:1 and a:2 choices depending on whether the rule applied ( a:1 ) or not ( a:2 ) .", "label": "", "metadata": {}, "score": "41.419083"}
{"text": "The concrete Environment Record method InitializeImmutableBinding for declarative environment records is used to set the bound value of the current binding of the identifier whose name is the value of the argument N to the value of argument V .An uninitialized immutable binding for N must already exist .", "label": "", "metadata": {}, "score": "41.506355"}
{"text": "next - word ( optional ) : token record , representing the next word in the utterance .Purpose : To allow the user to test the rules by synthesizing a surface lexical entry from an underlying lexical entry .This should be useful for debugging , but it may also be useful for historical reconstruction and Computer Assisted Related Language Adaptation ( CARLA ) .", "label": "", "metadata": {}, "score": "41.58523"}
{"text": "Given an input form such as machine - readable , the Recognizer will first recognize machine ; since that is a whole word , it will enter the End sublexicon , where it matches the hyphen and takes the Compound alternation .", "label": "", "metadata": {}, "score": "41.621254"}
{"text": "Summaries automatically derived by sentence extraction are known to exhibit some coherence degradation , readability deterioration , and topical under - representation .We propose a strategy for improving upon these problems , aiming to generate more cohesive summaries by analyzing the lexical cohesion factors in the source document texts .", "label": "", "metadata": {}, "score": "41.68283"}
{"text": "Additional error messages which may appear : .hc6013 \" Morpher error : Unknown lexical entry : . \"( The user supplied a lexical i d string as the first argument , but the specified lexical i d could not be found . )", "label": "", "metadata": {}, "score": "41.80603"}
{"text": "In most situations only the running execution context ( the top of the execution context stack ) is directly manipulated by algorithms within this specification .Hence when the terms \" LexicalEnvironment \" , \" VariableEnvironment \" and \" ThisBinding \" are used without qualification they are in reference to those components of the running execution context .", "label": "", "metadata": {}, "score": "41.902607"}
{"text": "If this field is omitted , there is no requirement that the input belong to any particular part of speech .Purpose : The rule will apply to a lexical entry only if the lexical entry subcategorizes at least one of the rules in this list .", "label": "", "metadata": {}, "score": "41.96446"}
{"text": "Associated with each rule are feature constraints which are satified by using an operation called unification .Thus PC - KIMMO 's word grammar component is a type of grammar formalism called a unification grammar .Its implementation closely follows the PATR - II grammar described in Shieber 1986 .", "label": "", "metadata": {}, "score": "41.99015"}
{"text": "Importantly , the present invention provides explicit recognition in text representation of the relationship between words that derive from a common root by utilizing the word root along with information contained in the complete form in which a word appears , i.e. , prefix , affix and root .", "label": "", "metadata": {}, "score": "42.006073"}
{"text": "The \" abbreviate attributes \" menu item determines whether or not only PRED s are displayed .The \" constraints \" menu item determines whether or not negated and sub - c constraints are included in the display .Finally , the \" linear \" menu item changes the display into a line of tokens with corresponding f - structures .", "label": "", "metadata": {}, "score": "42.054924"}
{"text": "Purpose : Loads a single morphological or phonological rule from the shell into the morpher , replacing any existing rule of the same name .However , Realizational Morphological Rules are only loaded , not added to the list of morphological rules ; in order to be used after being loaded , they must be added to an Affix Template ( see set_stratum , section 6.1.12 ) .", "label": "", "metadata": {}, "score": "42.170258"}
{"text": "The disambiguated inputs are 802 and 808 .The processing shown in .FIG .8 is similar to that shown in .FIG .6 , discussed above , except that the search process proceeds bidirectionally starting from 801 and 809 until two paths are found that meet at bridging inference 806 .", "label": "", "metadata": {}, "score": "42.2126"}
{"text": "Note : Under part ( 3 ) above , it is not sufficient that a feature have a default value ; it must have been assigned some value in the Real Lexical Entry from which the Complete Lexical Entry is derived , or by a morphological rule .", "label": "", "metadata": {}, "score": "42.232216"}
{"text": "( These two recommendations are to make it easier to use line - oriented tools like grep . )There is no required order for fields within a lexical entry , although it is suggested that the order in which the fields are presented in this specification be used .", "label": "", "metadata": {}, "score": "42.316914"}
{"text": "If you only want to see the content of a lexical entry , then you can use the Tcl command print - lex - entry .Type help print - lex - entry in the Tcl shell for more details .Putting schemata in the lexical entry for an affix factors those specifications out from all the word - forms that take that affix , and thus enables morphologically - related generalizations to be stated across broad classes of lexical items .", "label": "", "metadata": {}, "score": "42.325123"}
{"text": "This section specifies the application of a set of ordinary and/or compounding ( but not realizational ) morphological rules of a given stratum .( Again , \" input \" and \" output \" are used here in the synthesis sense . )", "label": "", "metadata": {}, "score": "42.354187"}
{"text": "It is impossible for an ECMAScript program to access an execution context .10.3.1 Identifier Resolution .Identifier resolution is the process of determining the binding of an Identifier using the LexicalEnvironment of the running execution context .During execution of ECMAScript code , the syntactic production PrimaryExpression : Identifier is evaluated using the following algorithm : .", "label": "", "metadata": {}, "score": "42.36903"}
{"text": "Purpose : By default , a morphological rule may apply only once .Rarely there are affixes which may be repeated ( e.g. honorifics and causatives ) .By setting this field to an integer greater than one , this rule may be applied to a lexical entry up to that number of times .", "label": "", "metadata": {}, "score": "42.394768"}
{"text": "The ordering of such sets of rules of different strata or in different cycles with respect to each other , and with respect to morphological rules , is defined above ( see Storable Lexical Entries , section 3.3 ) .( Again , \" input \" and \" output \" are used in the synthesis sense . )", "label": "", "metadata": {}, "score": "42.470478"}
{"text": "Set the [ [ ParameterMap ] ] internal property of obj to map .Set the [ [ Get ] ] , [ [ GetOwnProperty ] ] , [ [ DefineOwnProperty ] ] , and [ [ Delete ] ] internal methods of obj to the definitions provided below .", "label": "", "metadata": {}, "score": "42.48844"}
{"text": "Other than present approaches to chaining , this model reflects the logical document structure of texts as well as semantic relations of their lexical constituents in order to compute text similarity values .By varying the terminological ontology used to induce such relations , a door is opened to systematically evaluate their contribution to text classification .", "label": "", "metadata": {}, "score": "42.52474"}
{"text": "The second approach has several obvious advantages : .The parser will be able to recognize any word regularly derived from a root without having to list it in the lexicon ; thus by simply adding a single root entry to the lexicon , all complex words based on it will automatically be recognized .", "label": "", "metadata": {}, "score": "42.614395"}
{"text": "( During synthesis , a feature must be instantiated in at least one place at the point the agreement rule is supposed to apply .For instance , if the target is supposed to agree in point of articulation with the following segment , then the point of articulation of that following segment must be instantiated when the rule applies . ) hc6055 \" Morpher error : Ambiguous application of Affix Templates to Lexical Entry ; the following Templates matched : . \"", "label": "", "metadata": {}, "score": "42.788383"}
{"text": "The value associated with the this keyword within ECMAScript code associated with this execution context .The LexicalEnvironment and VariableEnvironment components of an execution context are always Lexical Environments .When an execution context is created its LexicalEnvironment and VariableEnvironment components initially have the same value .", "label": "", "metadata": {}, "score": "42.799133"}
{"text": "The transitiveClosure iterator signature is very similar to iterate . where .The default result variable is an empty Set(T ) .The invocation . is equivalent to invocation of a helper routine as .where the synthesized uniqueNameXxx is one of .", "label": "", "metadata": {}, "score": "42.831726"}
{"text": "It is easier to write lexical entries ( and rules as well ) if you use an existing entry as a starting point and edit an old one into a new one by replacing selected elements of the starting entry with something new of the same type .", "label": "", "metadata": {}, "score": "42.83207"}
{"text": "A method in accordance with claim 3 wherein applying derivation information to an entry comprises the steps of : . creating a new lexical entry with a target as its part - of - speech for each lexical target ; and .", "label": "", "metadata": {}, "score": "42.878185"}
{"text": "The optional sequence is itself a phonetic sequence .The simple context whose specification is the list ( ( ) ) represents an optional sequence composed of any segment , and matches either a phonetic segment or a boundary marker .One use of such a sequence is described above under Maximum Occurrence .", "label": "", "metadata": {}, "score": "42.896652"}
{"text": "Well - formed constituent structures are filtered through the functional well - formedness conditions .By default , the system automatically displays one c - structure tree for which the functional description of the root node is consistent and is satisfied by at least one complete and coherent f - structure .", "label": "", "metadata": {}, "score": "42.92514"}
{"text": "( This would allow a program like awk to readily distinguish fields . )There is no need to write empty fields , and not writing them will save time and space .The dictionary process may itself interact with the user to set defaults ( e.g. maximum line length , character set , specific format , etc . ) .", "label": "", "metadata": {}, "score": "42.996582"}
{"text": "If this is a very common case , it may justify an additional iterator , say .It seems interesting .Of course , it can !& quot ; operator makes & quot;closure&quot ; look like a model operation .I stumbled over the experimental closure ( ) implementation a few days ago .", "label": "", "metadata": {}, "score": "43.063786"}
{"text": "If the user has specified multiple strata , there is a linear order among those strata , and no morphological rule from an earlier stratum may apply after a rule from a later stratum .\" Looping back \" ( as advocated in Halle and Mohanan 1985 ) is therefore not provided for .", "label": "", "metadata": {}, "score": "43.095654"}
{"text": "The system provides a powerful interface for defining and manipulating linguistic rules and representations .After installing a collection of syntactic rules and lexical entries into XLE , you can see whether those items are sufficient to analyze sentences or phrases in the language in question .", "label": "", "metadata": {}, "score": "43.18928"}
{"text": "The results of simultaneous application of a rule to overlapping sequences of segments is in the general case ill - defined . )If the mult_applic variable for the rule has the value lr_iterative ( the default ) , the following describes the application of a rule to a phonetic sequence .", "label": "", "metadata": {}, "score": "43.251163"}
{"text": "\" When this variable is changed , all subsequent commands refer to that language until this variable is set again , or until the command open_language is issued .Information associated with a language ( rules , lexicon , variable settings etc . ) remains in existence during a session , until the command close_language is issued for the named language .", "label": "", "metadata": {}, "score": "43.25535"}
{"text": "In order for a Realizational Rule to be used , it must first be loaded , then added to at least one affix template of its stratum .Compounding Rules are variants of ordinary Morphological Rules , with the several differences .", "label": "", "metadata": {}, "score": "43.342316"}
{"text": "The next goal ( 10 ) is to connect the complementizer with an empty subcat list up to the top - goal , with trivial success .Hence the first call to parse will succeed , yielding : \" ...TextTiling is a technique for subdividing texts into multi - paragraph units that represent passages , or subtopics .", "label": "", "metadata": {}, "score": "43.413467"}
{"text": "This is intentional , so as to allow the user to explore varying rule orders .This stratum has a character definition table , but no morphological or phonological rules .Summary : When deletion rules are unapplied , it may be impossible to tell when to stop unapplying them , if the unapplication of such a rule creates an environment for its repeated unapplication .", "label": "", "metadata": {}, "score": "43.41874"}
{"text": "Such a list might be used to find entries needing editing or removal from the lexicon .Normal output : A list whose first member is the identifier lexical_entries , and whose second member is a ( possibly empty ) list of lexical entries .", "label": "", "metadata": {}, "score": "43.436245"}
{"text": "A Lexical Environment is a specification type used to define the association of Identifiers to specific variables and functions based upon the lexical nesting structure of ECMAScript code .A Lexical Environment consists of an Environment Record and a possibly null reference to an outer Lexical Environment .", "label": "", "metadata": {}, "score": "43.44504"}
{"text": "( a ) the current rule stratum is noncyclic , or .( 3 ) Else set CurSeg to the first segment after OutStretch and go to step ( 2 ) .If the mult_applic variable for the rule has the value rl_iterative , the rule is applied iteratively from right to left .", "label": "", "metadata": {}, "score": "43.447426"}
{"text": "As with templates , macros have names .Our noun identifying macro would be : . and we could call it from any rules that need to identify nouns ( note that the macro definition must appear before the call to it ) .", "label": "", "metadata": {}, "score": "43.475098"}
{"text": "Included in the data structure is an indication of how many times the optional segment sequence may appear within the string being matched .Purpose : This defines the maximum number of adjacent appearances of the optional sequence at the corresponding position in the string being matched .", "label": "", "metadata": {}, "score": "43.567207"}
{"text": "In other words , in this process tagtokens 419 identifies sequences of words in a character string that match lexical entries in the Lexicon and Ontology 101 .An invocation of getwords 423 on a character string s returns a list of the words in s , where a word is defined as a sequence of one or more letters or digits taken from s. In other words , the invention determines that , if there is a nonalphanumeric character , such as a space , between two adjoining strings of characters , then these two strings of characters are actually two separate words .", "label": "", "metadata": {}, "score": "43.670574"}
{"text": "For the second through the last inferred tagged sentences in the bridging inference path , each inferred tagged sentence in the bridging inference path is the particular inferred tagged sentence that resulted from application of a rule to the previous inferred tagged sentence in the bridging inference path .", "label": "", "metadata": {}, "score": "43.70941"}
{"text": "All these records are contained recursively .The output of the function generate_word is also altered when tracing of rules in synthesis mode or tracing of blocking is turned on .A Successful Lookup Trace record is produced as the root record of the trace , which contains as its Virtual Lexical Entry field the input argument of the function generate_word .", "label": "", "metadata": {}, "score": "43.804543"}
{"text": "An inheritance schema is one way this might be implemented .Purpose : To represent the morpher 's analysis of the word 's meaning .The intention is that it will contain the translation of one or more of the morphemes composing the word .", "label": "", "metadata": {}, "score": "43.820717"}
{"text": "Each c - structure node that the parser discovers is assigned a unique node - number , whether or not it forms part of a valid S c - structure .The default display is to have the node numbers displayed .", "label": "", "metadata": {}, "score": "43.84475"}
{"text": "In addition to linear and simultaneous ordering , it is logically possible that a set of rules would be freely ordered , that is , the set would reapply to a given form until they produced no further change .In Kenstowicz and Kisseberth ( 1979 , chapter 8) , this is referred to as \" the Free Reapplication Hypothesis . \"", "label": "", "metadata": {}, "score": "43.99774"}
{"text": "This first line indicates the format that the rules are in .Note that it is technically a comment , since anything that appears in quotes is a comment , just as in grammar and lexicon files .In order for transfer to correctly interpret the rules , there can not be any other comment line before this one .", "label": "", "metadata": {}, "score": "44.067993"}
{"text": "The method according to . claim 9 , all the limitations of which are incorporated herein by reference , further comprising providing said lexicon and ontology data structure to have one or more lexical entries , concepts , and character strings .", "label": "", "metadata": {}, "score": "44.156967"}
{"text": "If the Realizational Features of R1 are not a subset of RzF , rule R2 is checked , and so forth .If none of the rules of slot Sj match , processing continues with Slot Sj+1 .( It is not an error if none of the rules of a given slot apply , nor is it an error if a rule of a slot matches LE ' , but none of its subrules matches .", "label": "", "metadata": {}, "score": "44.171646"}
{"text": "The concrete Environment Record method SetMutableBinding for object environment records attempts to set the value of the environment record 's associated binding object 's property whose name is the value of the argument N to the value of argument V .A property named N should already exist but if it does not or is not currently writable , error handling is determined by the value of the Boolean argument S .", "label": "", "metadata": {}, "score": "44.178017"}
{"text": "Once this semantic knowledge of the text is generated in a computer - understandable format , a system user can use the computer , via an application program such as a search program to perform tasks such as text retrieval .One analyzer module which may be utilized to operate upon input text to facilitate generation of the computer - understandable semantic representation of the text is a morphological analysis module .", "label": "", "metadata": {}, "score": "44.291386"}
{"text": "A method in accordance with claim 7 wherein applying derivation information to an entry comprises the steps of : . creating a new lexical entry with a target as its part - of - speech for each lexical target ; and .", "label": "", "metadata": {}, "score": "44.294144"}
{"text": "The notion of a superentry of a lexical entry is used in the debugging function show_morphings , and in the lexicon function find_lexical_entries .Intuitively , one lexical entry is a superentry of a template lexical entry if the superentry is a ( possibly more specific ) instantiation of the second entry .", "label": "", "metadata": {}, "score": "44.39765"}
{"text": "Finally , subsets of the phonological rules in a given stratum may be specified as applying disjunctively .Morphological rules analyze the phonetic ( or phonological ) shape of their input ( a lexical entry ) into one or more substrings , and output a lexical entry whose phonetic shape is the concatenation of one or more phonological substrings .", "label": "", "metadata": {}, "score": "44.41668"}
{"text": "Call the [ [ Delete ] ] internal method of map passing P , and false as the arguments .Return result .This means that changing the property changes the corresponding value of the argument binding and vice - versa .", "label": "", "metadata": {}, "score": "44.43246"}
{"text": "Note : This function is intended to allow entering new lexical entries interactively .It is likely that many users will also wish to enter lexical entries from existing dictionaries , perhaps using the morpher to strip suffixes from full word entries .", "label": "", "metadata": {}, "score": "44.51741"}
{"text": "The interpretation of each such member is as follows : .Integer : An integer N implies that the stretch of the Phonetic Shape of the input which matches the Nth member of the Required Phonetic Input field of this rule should be copied to the output in this position .", "label": "", "metadata": {}, "score": "44.544117"}
{"text": "SetMutableBinding(N , V , S ) .Set the value of an already existing mutable binding in an environment record .The String value N is the text of the bound name .V is the value for the binding and may be a value of any ECMAScript language type .", "label": "", "metadata": {}, "score": "44.624763"}
{"text": "If this field is omitted , there is no requirement that the input lexical entry subcategorize any particular rules .Purpose : This list gives the Features with which the Head Features of the lexical entry input to this rule must be unifiable in order to undergo the rule .", "label": "", "metadata": {}, "score": "44.653244"}
{"text": "If you middle - click on the root S , the original outermost f - structure will be displayed , with the SUBJ completed .This is a good point to explore some of the other features of the f - structure window .", "label": "", "metadata": {}, "score": "44.721584"}
{"text": "As with templates , the call to a macro is preceded by an @.The rule will expand the macro so that the rule will have the NUMBER and PERS requirements defined there .Add the macro and rule call to your grammar , reload the rules , parse : . and Translate this f - structure .", "label": "", "metadata": {}, "score": "44.760677"}
{"text": "There is no provision for this at present , but this may be added in the future .A Blocking data structure is used to show when the output of a morphological rule is blocked by a storable lexical entries representing an irregular form listed in the lexicon .", "label": "", "metadata": {}, "score": "44.83203"}
{"text": "Except for the character definition table , the properties of the stratum have defaults ; but the use of this command requires an explicit value .A phonetic sequence consists of a list of boundary segments , natural classes , and optional sequences , and represents a sequence of phonetic segments and/or phonological boundaries .", "label": "", "metadata": {}, "score": "44.8813"}
{"text": "( This allows rules to be changed by loading a new version with the same Rule Name . )Note that morphological and phonological rules occupy the same namespace , i.e. it is not possible to have a phonological rule with the same name as a morphological rule .", "label": "", "metadata": {}, "score": "44.907288"}
{"text": "It also provides an interface with finite - state morphological analyzers .The system applies these specifications to sentences or other strings and then provides the following analytic information : .Constituent - structures --- whether or not they have valid f - structures .", "label": "", "metadata": {}, "score": "45.058746"}
{"text": "Second , Englex must be able to recognize words formed by derivation .There are two strategies for accomplishing this : .List all derived words ( such as computer , computerize , computerization , and so on ) in the lexicon .", "label": "", "metadata": {}, "score": "45.06187"}
{"text": "I assume that the predicate head /2 defines these feature percolations ; for the grammar of the foregoing section this predicate simply is defined as : .Because of the definition of ' head corner ' , these features will also be shared between a node and its head corner ; hence we can use this definition to restrict lexical lookup by top - down prediction .", "label": "", "metadata": {}, "score": "45.137634"}
{"text": "This can be tackled by building a bottom - up phraseological dictionary which will help both with decoding and encoding .The building method uses collocational networks in order to compile a dictionary which will demonstrate usage of individual verbs , grouping them into a natural classification system that will grow from the corpus data .", "label": "", "metadata": {}, "score": "45.169056"}
{"text": "Return true if it does and false if it does not .The String value N is the text of the identifier .CreateMutableBinding(N , D ) .Create a new mutable binding in an environment record .The String value N is the text of the bound name .", "label": "", "metadata": {}, "score": "45.317513"}
{"text": "If you select a preterminal lexical category you can focus just on lexical template expansions .Selecting a terminal node ( a word ) does not show the instantiated lexical schemata , since instantiating them only trivially modifies the lexical information .", "label": "", "metadata": {}, "score": "45.388412"}
{"text": "Thus , if you analyze the string .The box around the NP node indicates that it is the lowest node in the tree where the f - description becomes unsatisfactory .That is , the D and N subtrees both have satisfiable f - descriptions , but when the f - descriptions of those two nodes are combined together according to the assertions in the NP rule , the resulting formula no longer has well - formed solutions .", "label": "", "metadata": {}, "score": "45.416763"}
{"text": "Note that the phonetic shape shown in a trace at the output of one stratum may be different from the phonetic shape shown at the input of the next stratum , since the two strata may use different character sets .Purpose : This field represents the virtual lexical entry which was the input ( in the analysis sense ) of the rule being traced .", "label": "", "metadata": {}, "score": "45.418644"}
{"text": "The f - structure chart window indexes the packed solutions by their constraints , so that each constraint appears once in an f - structure annotated by all of the choices where that constraint holds : .By default , this window appears at the upper right of the display .", "label": "", "metadata": {}, "score": "45.497406"}
{"text": "Morphological rules may also be constrained to require that the lexical entry to which they apply subcategorize a specified rule .Purpose : This field is meant to carry information specified in syntactic rules as to the function of this node .", "label": "", "metadata": {}, "score": "45.58568"}
{"text": "The : SYNTAX field encodes syntactic constraints and subcategorizations for each sense .Where senses share constraints , these can be encoded at the level of the word entry .When the syntactic constraints , such as io - rec , one - obj , and no - obj , influence semantic preferences , these are attached to the sense entry .", "label": "", "metadata": {}, "score": "45.628963"}
{"text": "Likewise , the phonetic shape of a lexical entry is given as a string , not a phonetic sequence .However , the morpher uses phonetic sequences internally to represent an input word or its analysis .Finally , the Phonetic Output field of morphological rules allows affixal material to be specified by strings ( to be translated into segments using a specified character definition table ) , as well as by phonetic sequences .", "label": "", "metadata": {}, "score": "45.80078"}
{"text": "More precisely , the last parameter provided to the Function constructor is converted to a String and treated as the FunctionBody .If more than one parameter is provided to the Function constructor , all parameters except the last one are converted to Strings and concatenated together , separated by commas .", "label": "", "metadata": {}, "score": "45.83364"}
{"text": "For example , the following is one set of entries for expressions with take : .Accordingly , it is intended that the invention herein be limited only by the scope of the appended claims .Walkthrough .XLE is a computational environment that assists in writing and debugging Lexical Functional Grammars ( LFGs ) ( Kaplan & Bresnan , 1982 ) .", "label": "", "metadata": {}, "score": "45.837105"}
{"text": "The second inferred tagged sentence in the briding inference path is the particular second inferred tagged sentence that resulted from application of a second rule to the first inferred tagged sentence , and so on .The invention is useful for computer applications , such as online and standalone applications , that incorporate natural language interactions with a user .", "label": "", "metadata": {}, "score": "45.83952"}
{"text": "However , assignment of syntactic feature values in the output side of a morphological rule overrides feature values ( if any ) previously assigned to the lexical entry .( E.g. a rule may change a singular noun into a plural noun . )", "label": "", "metadata": {}, "score": "45.86737"}
{"text": "This strongly suggests that one should parse according to a ' ' head - first ' ' strategy : when one parses a sentence , one looks for its verb first , and then , based on the lexical form of the verb , one looks for the other arguments in the clause .", "label": "", "metadata": {}, "score": "46.023453"}
{"text": "It is above the boxed VP 's , and these are already known to be bad in irredeemable ways .XLE does not bother to propagate the incorrect results into higher structures , to avoid excessive computation .The Coherence Condition as enforced by XLE is slightly different than the condition defined originally by Kaplan and Bresnan ( 1982 ) .", "label": "", "metadata": {}, "score": "46.04411"}
{"text": "Particularly , when text is input to a NL system , the system not only stores the text but also generates a representation , in a computer - understandable format , of the meaning , i.e. , semantics , of the text .", "label": "", "metadata": {}, "score": "46.086655"}
{"text": "An invocation of join 425 on words , starti , and endi returns a character string comprising the words starting at index starti and stopping at index endi- 1 , where the words are separated by a single space .Given a list of tokens , the tagpossibilities operation 421 returns one or more tagged sentences , each comprising a list of lexical entries .", "label": "", "metadata": {}, "score": "46.11464"}
{"text": "The fact that a lexical entry successfully loads is no guarantee that it is correct , since the morpher may or may not check all parts of the entry as it loads it .Errors in other parts of the lexical entry may not become apparent until a word fails to be morphed which should have used that lexical entry .", "label": "", "metadata": {}, "score": "46.299133"}
{"text": "The morpher may be used to model either an Item - and - Process theory or an Item - and - Arrangement theory .The user may define various strata of rule application , where a \" stratum \" of rules refers to a set of rules which apply in a block , before or after the application of rules of other strata .", "label": "", "metadata": {}, "score": "46.332294"}
{"text": "SUMMARY OF THE INVENTION .The present morphological analysis system generates a recorded version for each word of text by breaking a word into potential base - suffix pairs and base - prefix pairs .Then , using spelling rules , possible roots of each base are determined .", "label": "", "metadata": {}, "score": "46.452805"}
{"text": "These subparts are first defined , followed by the definitions of Phonetic Sequences and Phonetic Templates .Purpose : To define the variable - valued features of the simple context .Variable - valued features are often used in assimilation rules ; they are the \" alpha \" variables of classical generative phonology .", "label": "", "metadata": {}, "score": "46.49868"}
{"text": "Similarly , no facility for permanently storing rules is provided .The shell is responsible for tracking changed rules ( alternatively , the current version of a rule may be obtained from the morpher using the function show_active_phon_rules or show_active_morph_rules ) , and saving such changes as necessary .", "label": "", "metadata": {}, "score": "46.50779"}
{"text": "The important point to note in this discussion is that the morphotactic contraints in the lexicon do not enforce any cooccurrence restrictions among the positional morpheme slots ; rather , this is done by the word grammar .In this simple case , it seems like it would be more efficient to expand the positional analysis of the lexicon so that it would distinguish noun and verb roots , which could be followed only by the inflectional suffixes appropriate to them .", "label": "", "metadata": {}, "score": "46.51922"}
{"text": "If Boolean argument D is provided and has the value true the new property 's [ [ Configurable ] ] attribute is set to true , otherwise it is set to false .Let envRec be the object environment record for which the method was invoked .", "label": "", "metadata": {}, "score": "46.540718"}
{"text": "We begin with a brief discussion of the tedious but necessary matter of how you must refer to your linguistic specifications once you have entered them into the system .An LFG grammar may have a variety of different kinds of linguistic specifications within it : c - structure rules , lexical entries , different abbreviatory conventions , and other kinds of specifications that might be introduced as the theory and system evolve .", "label": "", "metadata": {}, "score": "46.55649"}
{"text": "An example is a prefix that attaches to any stem beginning with a consonant .The required phonetic input would be a single simple context for a consonant , followed by an optional sequence of any number of segments : .( assuming the simple contexts \" cons \" and \" mt \" had been defined previously ) .", "label": "", "metadata": {}, "score": "46.575104"}
{"text": "This is an abstraction from the more general situation in which a phonological rule may apply multiple times to a single phonetic sequence ; that case is defined in the next section , based on the definition given here .It is also an abstraction from the application of a disjunctive set of phonological rules to a lexical entry , which is described in the second section following .", "label": "", "metadata": {}, "score": "46.57847"}
{"text": "The other is to choose \" Load Transfer Rules \" under \" Commands \" in the f - structure window .If you do this , a prompt will appear in the XLE window asking for the name of the rule file to load .", "label": "", "metadata": {}, "score": "46.61386"}
{"text": "In other words , this embodiment of the invention automatically produces bridging inferences that join two related input sentences .This embodiment starts as before by applying the Lexicon and Ontology to the first input sentence to produce first input tagged sentences and applying the Lexicon and Ontology to the second input sentence to produce second input tagged sentences .", "label": "", "metadata": {}, "score": "46.6444"}
{"text": "Setting this field to -1 allows the optional sequence to match a stretch of segments any number of times .An optional sequence whose maximum occurrence is -1 , and which contains an empty set of features ( a set which matches any segment ) will match any string .", "label": "", "metadata": {}, "score": "46.67273"}
{"text": "Rather , the shell is responsible for presenting the information in some useful form , which will form will depend on the capabilities of the display device , the linguistic theory being represented , etc . .The root trace record is the ' outer ' data structure used to output information when tracing the function morph_and_lookup_word .", "label": "", "metadata": {}, "score": "46.75474"}
{"text": "The punctuation is crucial .The system understands that a schema is attached to the NP only because of the colon which precedes it .The semicolon acts as a close colon ; it informs the system that you have finished with the schemata for one category and the next symbol will be a new category .", "label": "", "metadata": {}, "score": "46.859764"}
{"text": "A Complete Lexical Entry results from the application of zero or more morphological and phonological rules to some Real Lexical Entry , provided all Obligatory Features required by that Real Lexical Entry and the morphological rules which applied in the derivation are instantiated in the Complete Lexical Entry .", "label": "", "metadata": {}, "score": "46.89418"}
{"text": "If this field is omitted , there is no requirement on the part of speech of the input lexical entry .Purpose : This defines the phonetic output of the subrule ( see Phonetics of Phonological Rule Application , section 4.4.1 ) , and represents what a linguist would think of as the output of the rule .", "label": "", "metadata": {}, "score": "46.92298"}
{"text": "By default , this window appears at the lower right of the display .Choices are labeled a:1 , a:2 , a:3 , ... b:1 , b:2 , b:3 , etc . .The choices that belong to the same disjunction have the same alphabetic string as a prefix .", "label": "", "metadata": {}, "score": "46.939087"}
{"text": "As indicated at 110 , for each of these entries , the derivative entry for the suffix must be retrieved .The derivative entry specifies the derived part of speech or lexical subcategory and the semantic transformation rules to apply to the entry 's senses .", "label": "", "metadata": {}, "score": "46.969578"}
{"text": "Referring now to FIG .1 , a flowchart 100 illustrating a sequence of method steps for performing morphological analysis in accordance with the present invention is shown .Although the steps shown indicate that the analysis is for suffixes , the same operations are to be performed for prefixes .", "label": "", "metadata": {}, "score": "47.017235"}
{"text": "In other words , the invention makes explicit the implied relationship between two input sentences .The rules have a first portion , a connector , and a second portion .The first portion and the second portion consist of a sequence of natural language words or phrases .", "label": "", "metadata": {}, "score": "47.026634"}
{"text": "that execution context .The newly created execution context is pushed onto the stack and becomes the running execution context .An execution context contains whatever state is necessary to track the execution progress of its associated code .In addition , each execution context has the state components listed in Table 19 .", "label": "", "metadata": {}, "score": "47.057404"}
{"text": "Implementation note : The shell may use the morpher to help the user create lexical entries .For instance , rather than simply asking the user if a root provided by the user has irregular inflected forms , the morpher may be used to generate a set of regularly inflected forms , and the user queried as to whether the forms are correct .", "label": "", "metadata": {}, "score": "47.077526"}
{"text": "The basic semantic hierarchy acts as a sense - disambiguited thesaurus , under the assumption that in the absence of more specific knowledge , word senses will tend to share semantic constraints with the most closely related words .Note that derivative lexical entries , such as week - ly - x above , do \" double duty \" in the lexicon , so that an application program can use the derivation as well as the semantics of the derivative form .", "label": "", "metadata": {}, "score": "47.07851"}
{"text": "The modified lexical entry may then be loaded back in with the function load_lexical_entry , and the original lexical entry removed with the function remove_lexical_entry if desired .Purpose : Loads a new dictionary file into the lexicon .New lexical entries loaded in do not overwrite previous lexical entries , even if identical .", "label": "", "metadata": {}, "score": "47.09709"}
{"text": "If you only want to see the content of a rule , you can use \" print - rule \" .Type \" help print - rule \" in the Tcl shell for more details . and later decide you do n't want it after all .", "label": "", "metadata": {}, "score": "47.119164"}
{"text": "Purpose : The user may use this function to follow the blocking of virtual lexical entries by real lexical entries listed in the lexicon .When the tracing of blocking is turned on , the functions morph_and_lookup_word and generate_word output trace data structures before their normal output .", "label": "", "metadata": {}, "score": "47.143997"}
{"text": "The [ [ Get ] ] internal method of an arguments object for a non - strict mode function with formal parameters when called with a property name P performs the following steps : .Let map be the value of the [ [ ParameterMap ] ] internal property of the arguments object .", "label": "", "metadata": {}, "score": "47.147583"}
{"text": "Purpose : This function shows how the input word was analyzed into one or more real lexical entries , and how the morphological an phonological rules applied in the analyses .Normal Output : A list whose first member is the identifier derivations , and whose second member is a list of one or more derivations of the word which was the function 's argument .", "label": "", "metadata": {}, "score": "47.15628"}
{"text": "More specifically , a lexical entry L is a Complete Lexical Entry if : .( 2 ) it is derived from a Real Lexical Entry by the application of zero or more morphological rules and the corresponding phonological rules in accordance with the definitions of Morphological Rule Application and of Phonological Rule Application ; and .", "label": "", "metadata": {}, "score": "47.348415"}
{"text": "At least , I have n't tried very hard ;-) .The important stopping condition is the encountering of an object that has already been added to the closure result collection before .This , of course , is the classic means of dealing with recursion in cyclical structures .", "label": "", "metadata": {}, "score": "47.37491"}
{"text": "All further input comes from standard input , and all further output is sent to standard output .Note : The format for error messages in a file of messages follows the example below : . msg_text(hc6041 , ' Morpher error : Natural class \" name \" is unknown . ' ) where \" ( ASCII 174 ) and \" ( ASCII 175 ) enclose the labels of the arguments , which will be replaced by the actual arguments when the message is output .", "label": "", "metadata": {}, "score": "47.376335"}
{"text": "Another possible use is to scan a text known to contain a number of words ( i.e. roots or stems ) not in the dictionary .The unknown words are then sorted , duplicates removed , and the resulting list again passed through the morpher , this time with tracing of lexical lookup turned on .", "label": "", "metadata": {}, "score": "47.38314"}
{"text": "An invocation of tagpossibilities 421 on tokens proceeds as follows .If the length of tokens is 0 , then it returns an empty list .It sets results to the empty list .It sets starti to 0 .It sets maxstarti to the greatest start index in tokens .", "label": "", "metadata": {}, "score": "47.393227"}
{"text": "If it does not have such a binding , return false .10.2.1.1.2 CreateMutableBinding ( N , D ) .The concrete Environment Record method CreateMutableBinding for declarative environment records creates a new mutable binding for the name N that is initialized to the value undefined .", "label": "", "metadata": {}, "score": "47.398476"}
{"text": "generating semantic transformations of the derivation information for a sense and storing the result in the lexical entry .A computer based method for performing morphological analysis of word structure comprising the steps of : . breaking a word into possible base - affix pairs ; . deriving a lexical entry for a root if a lexical entry is not provided in the lexicon ; . storing a derivative and a sense under a lexical target for each sense of the entry and for each sense level derivative of a suffix wherein , said derivative results in said lexical target ; . storing a derivative with each sense of the entry under a lexical target for each entry - level derivative of a suffix , wherein said derivative results in said lexical target ; . storing a derivative with each sense of the entry under a lexical target for each part - of - speech default derivative of a suffix , wherein said derivative results in a lexical target not yet derived ; and .", "label": "", "metadata": {}, "score": "47.41268"}
{"text": "This is not considered an error .( The specified natural class name appears in one of the phonetic sequences of the named rule , but it is not defined .Since it had to have been defined when the rule was loaded ( see load_morpher_rule , section 6.2.1 ) , it must have been removed by remove_nat_class . )", "label": "", "metadata": {}, "score": "47.56743"}
{"text": "Set the [ [ Prototype ] ] internal property of obj to the standard built - in Object prototype object ( 15.2.4 ) .Let map be the result of creating a new object as if by the expression new Object ( ) where Object is the standard built - in constructor with that name .", "label": "", "metadata": {}, "score": "47.616367"}
{"text": "The computer , by being able to understand the meaning , i.e. , semantics , of the text , can perform a more accurate search and bring only relevant information to the attention of the requestor .In order to perform such \" intelligent \" searches , the computer itself must \" understand \" the text .", "label": "", "metadata": {}, "score": "47.64813"}
{"text": "In rules , a sequence of categories means that they all must appear in the c - structure in that order .In lexical entries , a sequence of categories may be thought of as a disjunction since each indicates a possible interpretation of a homophonous word .", "label": "", "metadata": {}, "score": "47.79203"}
{"text": ".. the task of exploring such chains , that is , tracking semantically related tokens in a text .Green [ 6 , 7 , 8 ] exploits lexical chains in order to generate intra- and intertextual hyperlinks .Mo .. \" ...", "label": "", "metadata": {}, "score": "47.885735"}
{"text": "The Suffix slot can be filled by zero or more suffixes from the SUFFIX sublexicon .Figure 3.8 shows three sample suffix entries .The first is a null entry whose alternation field names the Infl alternation ; this permits the suffix slot to be optional .", "label": "", "metadata": {}, "score": "47.97992"}
{"text": "See also comments under Rule Input ( section 5.8.3.2 ) concerning optional or ambiguous segments .The Morphological Rule Analysis Trace Record structure is used to output information resulting from the tracing of one or more morphological rules during analysis .What counts as an attempted application of a rule will depend on the specific algorithm for selecting candidate rules .", "label": "", "metadata": {}, "score": "48.04299"}
{"text": "Purpose : This lists the alpha variables which may appear in the subrule , and assigns a feature name to each .There is no provision for using the same alpha variable name with different features in different parts of the rule .", "label": "", "metadata": {}, "score": "48.086308"}
{"text": "Purpose : The rule will apply to a lexical entry only if the lexical entry subcategorizes at least one of the rules in this list .This is useful for a template that requires that the stem to which it attaches have certain transitivity properties , e.g. object agreement .", "label": "", "metadata": {}, "score": "48.124268"}
{"text": "The acquisition bottleneck and scarcity of detailed large - scale lexical resources has led to research into the feasibility of obtaining ... . ...language 's associated conceptual domain .Collocation or the regular co - occurrence of items reveals the cognitive content of the text .", "label": "", "metadata": {}, "score": "48.15103"}
{"text": "In addition , phonetic sequences are used both internally and externally to define the input of morphological rules , and the input and output of phonological rules .A phonetic template is a phonetic sequence augmented with a specification as to whether it must match against a phonetic sequence beginning at the left end of the phonetic sequence and/or ending at its right end .", "label": "", "metadata": {}, "score": "48.18596"}
{"text": "The entire length of the stem must match against this required shape .With each sublist of the list is associated a unique integer beginning with one at the left end of the list and increasing up to the length of the list .", "label": "", "metadata": {}, "score": "48.19806"}
{"text": "To constrain the input and output categories of affixes ; for example , to ensure that the suffix + ment attaches to a verb and produces a noun .To determine the part - of - speech of a word ; for example , that a complex word such as enlargement is a noun .", "label": "", "metadata": {}, "score": "48.241127"}
{"text": "As discussed above , the dictionary is the permanent repository of lexical information .The user can maintain multiple dictionary files ( e.g. for different semantic domains or different languages ) , and any number of dictionary files may be loaded into the morpher at any point .", "label": "", "metadata": {}, "score": "48.30964"}
{"text": "While a 20,000-entry lexicon sounds small , Englex can actually recognize many times that number of words because it analyzes productive derivational morphology .For example , the lexicon contains entries for re- , compute , -er , -ize , and -ation and can thus recognize any complex word formed from those parts .", "label": "", "metadata": {}, "score": "48.391563"}
{"text": "Call env 's SetMutableBinding concrete method passing argName , v , and strict as the arguments .For each FunctionDeclaration f in code , in source text order do .Let fn be the Identifier in FunctionDeclaration f .Let fo be the result of instantiating FunctionDeclaration f as described in Clause 13 .", "label": "", "metadata": {}, "score": "48.39421"}
{"text": "Let bindings be the binding object for envRec .Return the result of calling the [ [ HasProperty ] ] internal method of bindings , passing N as the property name . 10.2.1.2.2CreateMutableBinding ( N , D ) .The concrete Environment Record method CreateMutableBinding for object environment records creates in an environment record 's associated binding object a property whose name is the String value and initializes it to the value undefined .", "label": "", "metadata": {}, "score": "48.417255"}
{"text": "Referring now to FIG .2 , a flowchart 200 illustrating a sequence of method steps for retrieving derivation information of an entry for a suffix is shown .Then , as indicated at 206 , for each entry - level derivative of the suffix , if the derivative will result in a lexical target , the derivative along with each sense of the entry are saved under the lexical target .", "label": "", "metadata": {}, "score": "48.452812"}
{"text": "The algorithm is fully implemented and is shown to produce segmentation t ... \" .TextTiling is a technique for subdividing texts into multi - paragraph units that represent passages , or subtopics .The discourse cues for identifying major subtopic shifts are patterns of lexical co - occurrence and distribution .", "label": "", "metadata": {}, "score": "48.459396"}
{"text": "The lexicon , on the other hand , appears to the user as a temporary repository of information during a given session .The lexicon may be loaded from the dictionary or from a portion of the dictionary ( such as a single file containing only nouns ) .", "label": "", "metadata": {}, "score": "48.524433"}
{"text": "( However , the analysis may be indeterminate if the stratum in question contains null affixes . )Realizational Morphological Rules are applied according to an Affix Template .The Affix Template of a given Stratum applies after all relevant ordinary Morphological Rules of that Stratum have been applied , but before any Phonological Rules of a non - cyclic Stratum have been applied .", "label": "", "metadata": {}, "score": "48.546734"}
{"text": "Purpose : Each member of this list represents a continuation by rules being traced during synthesis , tracing of blocking , or tracing of strata during synthesis , of this lexical entry .( Any such continuations will be more ' surfacy ' than the form represented by this record . )", "label": "", "metadata": {}, "score": "48.59323"}
{"text": "If you click on V , you can see the bad solution in the f - structure window .The f - structure ontology as proposed by Kaplan and Bresnan ( 1982 ) did not include a ' bottom ' element to represent the complete absence of information about the value of an attribute .", "label": "", "metadata": {}, "score": "48.594234"}
{"text": "The dictionary is then the repository of all real ( as opposed to virtual ) lexical entries .Since the dictionary is potentially very large , it may not be stored in the lexical module itself , but may be a separate module ( perhaps a database program ) .", "label": "", "metadata": {}, "score": "48.656708"}
{"text": "The translation of the string representing an input word into a phonetic sequence , defined in this section , is unambiguous .The phrase \" exit with error , returning X \" means return an error message containing X. Error messages for this translation process are listed under the command morph_and_lookup_word .", "label": "", "metadata": {}, "score": "48.67624"}
{"text": "As such they do not specify an Input Part of Speech , nor do they specify morphosyntactic properties of their output .The specification of a stratum for a Realizational Rule is redundant , inasmuch as the assignment of an Affix Template to a Stratum carries it with it the names of the realizational rules which will be applied .", "label": "", "metadata": {}, "score": "48.683968"}
{"text": "Errors in translation between strings and phonetic sequences return the same error messages as morph_and_lookup_word .lex - entry or lex - id ( obligatory ) : a lexical entry record , or a string designating a lexical entry in the current lexicon ; . morph - rules ( obligatory ) : a list of lists of rule names of morphological rules to be applied .", "label": "", "metadata": {}, "score": "48.693985"}
{"text": "If the property being set is the ordering of phonological rules , either message hc6553 \"Morpher : Phonological rule ordering for stratum set to simultaneous . \" or hc6555 \" Morpher : Phonological rule ordering for stratum set to linear .", "label": "", "metadata": {}, "score": "48.72278"}
{"text": "Further details with regard to obtaining derivation information are provided in flow charts illustrated in FIGS . 2 and 3 .As shown in FIG .1 , subsequent to applying the derivation information to the entry as indicated at step 110 , all derived entries are returned as shown at step 112 .", "label": "", "metadata": {}, "score": "48.733776"}
{"text": "This shows that a template can be invoked in a position where an ordinary schema might otherwise appear simply by writing the name of the template preceded by the character @ .Other common nouns can also share the schemata included in the template definition .", "label": "", "metadata": {}, "score": "48.744003"}
{"text": "For instance , the same person marking affix might be used for both subjects and objects , but the subject and object slots would be distinct .Purpose : This defines the parts of speech that the lexical entry which is the input to the rules of this template must belong to .", "label": "", "metadata": {}, "score": "48.79861"}
{"text": "This paper develops a graph - theoretical model of text representation based on lexical chaining .Other than present approaches to chaining , this model reflects the logical document structure of texts as well as semantic relations of their lexical constituents in order to compute text similarity valu ... \" .", "label": "", "metadata": {}, "score": "48.91053"}
{"text": "Such idioms and compound nouns must be handled syntactically ( for instance by selecting one word as the head , and having that word subcategorize a special syntactic idiom rule ) .Lexical entries represent words , stems , or roots , including their phonological , morphological and syntactic properties ( plus any additional information added by the linguist ) .", "label": "", "metadata": {}, "score": "48.953163"}
{"text": "Using the formatting feature can help to ensure that the rule you typed is a legitimate rule , e.g. , that there are enough ; and : .Let 's play around a bit with the rule format .Remove the semicolon after the NOM symbol and type M - q .", "label": "", "metadata": {}, "score": "49.07338"}
{"text": "A thrown exception may also exit one or more execution contexts .When control enters an execution context , the execution context 's ThisBinding is set , its VariableEnvironment and initial LexicalEnvironment are defined , and declaration binding instantiation ( 10.5 ) is performed .", "label": "", "metadata": {}, "score": "49.078934"}
{"text": "7 , bidirectional breadth - first search is performed starting from the first input sentence on one side and the second input sentence on the other .FIG .8 is an example of the bidirectional processing using rules such as those of .", "label": "", "metadata": {}, "score": "49.122223"}
{"text": "If the binding does not exist return true .ImplicitThisValue ( ) .Returns the value to use as the this value on calls to function objects that are obtained as binding values from this environment record .10.2.1.1 Declarative Environment Records .", "label": "", "metadata": {}, "score": "49.128777"}
{"text": "Upon reaching MAXPATHLEN , the search is terminated and the results are returned .The invention is useful for computer applications , such as online and standalone applications , that incorporate natural language interactions with a user .The invention enables bridging and predictive inferences to be made that are useful for understanding the customer 's situation in order to provide useful responses such as retrieved information or recommended products , services , and solutions .", "label": "", "metadata": {}, "score": "49.132042"}
{"text": "Feature structures can be infinitely nested in this manner .Portions of a feature structure can be referred to using the \" path \" notation .For example , consider this feature structure : .[ agreement : [ number : singular case : nominative ] ] .", "label": "", "metadata": {}, "score": "49.145836"}
{"text": "The Slots are scanned in order .Rules are then applied in disjunctive order , that is : the Head Features of R1 are checked against RzF .If the Realizational Features of R1 are a subset of RzF , and not also a subset of the Head Features of LE ' , the rule is applied , and if the Stratum is cyclic , the phonological rules of the Stratum are then applied .", "label": "", "metadata": {}, "score": "49.167606"}
{"text": "The grammar writer may assign other default values to any feature names by use of the function assign_default_morpher_feature_value ( see section 6.1.11 ) .There is no provision for making default feature assignment dependent on part of speech or on the values of other features , although this is a possible future enhancement .", "label": "", "metadata": {}, "score": "49.16797"}
{"text": "These numbers are used in the output of the rule to represent the corresponding elements of the input .( Note that the use of sublists allows a single number to correspond to a sequence of boundary markers , simple contexts , and optional segment sequences , thereby potentially standing for some hierarchical structure , such as a syllable . ) a list of length two whose first member is an integer and whose second member is a Simple Context , or .", "label": "", "metadata": {}, "score": "49.1819"}
{"text": "The translation between a string and its representation as a Phonetic Sequence makes use of the Character Definition Table ( defined below ) .The translation from string to phonetic sequence is unambiguous ; the reverse translation may be ambiguous .The translations are defined here in algorithmic form for convenience .", "label": "", "metadata": {}, "score": "49.22132"}
{"text": "If S is false , return the value undefined , otherwise throw a ReferenceError exception .Return the result of calling the [ [ Get ] ] internal method of bindings , passing N for the argument .10.2.1.2.5 DeleteBinding(N ) .", "label": "", "metadata": {}, "score": "49.24792"}
{"text": "Each transform has a description of the transform and an example derivative .If the transform is relevant to only a few affixes , then those affixes are listed in parentheses .The affixes which use these transforms are listed in Appendices I and II .", "label": "", "metadata": {}, "score": "49.254612"}
{"text": "The function code for a particular instantiation of a Function does not include any source text that is parsed as part of a nested FunctionBody . 10.1.1Strict Mode Code .An ECMAScript Program syntactic unit may be processed using either unrestricted or strict mode syntax and semantics .", "label": "", "metadata": {}, "score": "49.31413"}
{"text": "The head - driven variant of the left - corner algorithm can be adapted to the class of grammars under consideration .Again , the first step of the algorithm consists of the prediction step : which lexical entry is the head corner of the phrase ?", "label": "", "metadata": {}, "score": "49.328262"}
{"text": "Implementation note : It is not considered an error to reset an empty dictionary , i.e. calling this function twice will not cause an error .This command can be called even if the strata have not been assigned character definition tables , even though in that case there can be no valid lexicon ( because lexical entries can not be loaded until the strata have been assigned character definition tables ) .", "label": "", "metadata": {}, "score": "49.333862"}
{"text": "The first member of the sublist is a string , whose characters define the external representation of a segment .The other member of the sublist is an atomic - valued feature list , which defines the features of the segment .", "label": "", "metadata": {}, "score": "49.348427"}
{"text": "Using this heuristic , the analyzer \" looks ahead \" to determine if an analysis ( or path ) is promising , and if not , terminates it .For example , if the analyzer has accessed the entries of one known root , the other possible roots are only considered if they do not require recursive derivation .", "label": "", "metadata": {}, "score": "49.40133"}
{"text": "It contains both individual entries containing phraseological information and super entries linking quasi - synonyms and writing assistance .The dictionary provides the environment which can link phraseological patterns to the corpus data so as to limit the information retrieval process whilst providing real examples of language in use in specialised contexts .", "label": "", "metadata": {}, "score": "49.40722"}
{"text": "The parsing category determines which rules to apply in a particular analysis ( only those necessary to build constituents of that type ) and what kind of structures to show in the c - structure window .You will see below how to override the default root category when you temporarily want to focus on the rules for other types of constituents .", "label": "", "metadata": {}, "score": "49.443794"}
{"text": "AFAIK , closure was never raised as a requested capability in the OCL specification .Perhaps we should raise an enhancement issue ?Hi , Ed , .Good point about the helper operation : I had n't considered that the formal definition of the closure ( ) iterator could include additional operations .", "label": "", "metadata": {}, "score": "49.4825"}
{"text": "Collect the body-_expression _ values on the original source collection S into a new set R ' .For new elements added to R in the previous pass ( previous R ' set ) , collect the body-_expression _ values into a new set R ' .", "label": "", "metadata": {}, "score": "49.52884"}
{"text": "If the resulting surface form is identical to the input word , the path which produced it represents a successful analysis .The result is a set of lexical entries representing the analysis of the input word .Normal output : If there is at least one morphing , a list whose first element is the atom word_analyses , and whose remaining members are lexical entries , one for each successful analysis .", "label": "", "metadata": {}, "score": "49.537663"}
{"text": "Within each stratum , morphological rules may be specified as being ordered in a linear fashion , or as being unordered ( i.e. as potentially applying whenever their structural description is met ) .Similarly , phonological rules may be specified as being linearly ordered , as applying whenever their structural description is met , or as applying simultaneously ( the latter option being unique to phonological rules ) .", "label": "", "metadata": {}, "score": "49.584427"}
{"text": "Since it had to have been defined when the rule was loaded ( see load_morpher_rule , section 6.2.1 ) , it must have been removed by remove_nat_class . )Normal output : A list consisting of the identifier ( atom ) phonological_rules plus a list of rule structures matching the template .", "label": "", "metadata": {}, "score": "49.59223"}
{"text": "The last element of the path is tostring disambiguated as to part of speech , word sense , and coreference .The path is the bridging inference chain .An invocation of bridge 401 on fromstring and tostring starts by setting the result to the empty list .", "label": "", "metadata": {}, "score": "49.63191"}
{"text": "However , the root itself could be a derivative of some other word , and thus the analyzer must recursively derive the entries for this root .For example , the word \" acquisitions \" has an immediate root \" acquisition \" , which is a derivative of the word \" acquire \" .", "label": "", "metadata": {}, "score": "49.652176"}
{"text": "This feature is what takes you through the elements of a set ( which appear within curly brackets ) in an f - structure .The in_set notation can be slightly confusing because the arguments are ordered so that the first argument is the set element , while the second is the set itself .", "label": "", "metadata": {}, "score": "49.66974"}
{"text": "This will cause the morpher to generate further forms in which the deletion rule has been unapplied to its own output , and should generate the forms from which iterative application of the deletion rule can later generate the surface form .", "label": "", "metadata": {}, "score": "49.71016"}
{"text": "For example , suppose you wanted to see more of the details of the boxed NP 's f - structure analysis .If you click on that NP with the middle button , the F - structure Window changes to indicate that there is one solution to the f - description at that node but that it is inconsistent .", "label": "", "metadata": {}, "score": "49.71677"}
{"text": "Only one can be permitted .I think the \" iterate \" syntax uses a semicolon to separate the accumulator from the iterator variables , which are usually separated by commas .The accumulator is n't an iterator variable , so it needs to be set apart .", "label": "", "metadata": {}, "score": "49.7591"}
{"text": "To do this , create a shell in emacs ( M - x shell ) and type ' xle ' at the prompt to start XLE .Then run the following commands : .These commands will call transfer , create a parser from the relevant grammar , and then load your transfer rule file .", "label": "", "metadata": {}, "score": "49.80986"}
{"text": "Implementation note : The translation of the phonetic sequence of a virtual lexical entry into a string may be ambiguous ; see Translation from Phonetic Sequence to Regular Expression , section 4.1.1.2 .Purpose : To allow blocking of derivations by irregular forms listed in the lexicon .", "label": "", "metadata": {}, "score": "49.812275"}
{"text": "See comments under Phonological Rule Analysis Trace Record -- Rule Input ( section 5.8.3.2 ) concerning optional or ambiguous segments .This record contains a real lexical entry found during traced lexical lookup resulting from the application of the function morph_and_lookup_word , together with any traces continuing from it .", "label": "", "metadata": {}, "score": "49.864502"}
{"text": "The SCC does not imply that cyclic rules can not apply to non - derived environmnets .However , in such environment , they can only add information .For instance , since syllabification rules and stress rules only add prosodic information , they can apply on the first cycle .", "label": "", "metadata": {}, "score": "49.9144"}
{"text": "Unfortunately , this would entail physically duplicating the entire adjective sublexicon -- not a very practical solution .The better solution is to let the lexicon recognize a verbal suffix wherever it can and let the word grammar filter out the incorrect results .", "label": "", "metadata": {}, "score": "49.920097"}
{"text": "All saved derivative information is then returned as indicated at step 210 .Operations then end as indicated at step 212 .FIG .3 is a flowchart 300 illustrating a sequence of method steps for applying derivative information to an entry .", "label": "", "metadata": {}, "score": "49.939865"}
{"text": "The general strategy is to balance the morphotactic description between the two components without making either one overly complex .The lexicon has a strictly \" beads on a string \" view of morphotactics .Its main job is to decompose a word into a sequence of morphemes using a simple positional analysis ( see pp .", "label": "", "metadata": {}, "score": "49.95203"}
{"text": "Note that all of the facts on the left - hand side of the rule are preceded by + .This means that they will not be deleted when the rule applies .There are two new parts of the rule .", "label": "", "metadata": {}, "score": "50.04889"}
{"text": "The Prefix alternation stands for the Prefix slot in figure 3.1 , the first possible slot in a complex word .Recall that a PC - KIMMO lexicon must start with an INITIAL sublexicon .Figure 3.5 shows that the INITIAL sublexicon in Englex contains just two null entries , one for the Particle alternation and one for the Prefix alternation .", "label": "", "metadata": {}, "score": "50.06152"}
{"text": "Instead , one of its projections is incomplete or inconsistent , and XLE does not distinguish between the different projections when determining that a solution is bad .We usually think in terms of parsing sentences , and S is thus commonly specified as the ROOT component of the configuration .", "label": "", "metadata": {}, "score": "50.06984"}
{"text": "This two - dimensional layout is difficult to type and also difficult for XLE to interpret .Thus rules are typed into XLE linearly , using punctuation marks to indicate how categories and schemata are grouped : .Note that ^ is used for the LFG up - arrow and ! is used for the LFG down - arrow .", "label": "", "metadata": {}, "score": "50.07346"}
{"text": "An Affix Template represents a sequence of Affix Slots which apply to a stem with a given part of speech in a given Stratum .The normal use will be to model inflectional morphology , particularly in inflecting languages which lend themselves to position class analysis .", "label": "", "metadata": {}, "score": "50.077217"}
{"text": "A more straightforward way of assigning orders to affixes is by linearly ordering the morphological rules that attach the affixes .A rule attaching a first order suffix would be ordered before the rule attaching a second order suffix , etc . .", "label": "", "metadata": {}, "score": "50.111023"}
{"text": "We will not be making crucial use of this here but there are situations in which multiple grammars are used , in which case they must be named .Basic Rules .Our first rule will rewrite the f - structure feature NUM to NUMBER .", "label": "", "metadata": {}, "score": "50.113037"}
{"text": "Let LE be a lexical entry of stratum S1 to which no morphological or phonological rules have applied , and let RzHF be a set of Head Features which are to be realized on LE .The data input to the morpher module for the commands morph_and_lookup_word and morph_and_lookup_list is the output of the Preprocessor module ( see chapter five ) , and contains the data to be morphed .", "label": "", "metadata": {}, "score": "50.132576"}
{"text": "closure would require some form of allInstances to discover a & gt;&gt ; domain over which to evaluate a predicate .So the new iterator should & gt;&gt ; probably be called transitiveClosure ( ) .& gt ; & gt ; That sounds more clear ; good .", "label": "", "metadata": {}, "score": "50.190002"}
{"text": "More precisely , lexical entry X is a superentry of a ( possibly partially specified ) lexical entry Template iff : .( 1 )If Template specifies a Phonetic Shape , then the Phonetic Shape of Template is a substring of X .", "label": "", "metadata": {}, "score": "50.21122"}
{"text": "( 4 ) If the current stratum is cyclic , apply the phonological rules of the current stratum to InterLE , and set InterLE equal to the result .( 5 ) If NumApplics is less than the Multiple Application Field of CurRule , optionally go to step ( 3 ) .", "label": "", "metadata": {}, "score": "50.224766"}
{"text": "If D is true record that the newly created binding may be deleted by a subsequent DeleteBinding call .10.2.1.1.3 SetMutableBinding ( N , V , S ) .The concrete Environment Record method SetMutableBinding for declarative environment records attempts to change the bound value of the current binding of the identifier whose name is the value of the argument N to the value of argument V .", "label": "", "metadata": {}, "score": "50.233902"}
{"text": "Here we propose an e ... \" .As large on - line corpora become more prewlent , a number of attempts have been made to automatically extract thesaurus - like relations directly from text using knowledge poor methods .In the absence of any specific application , comparing the results of these attempts is difficult .", "label": "", "metadata": {}, "score": "50.27645"}
{"text": "The invocation .The accumulator is n't an iterator variable , so it needs to be set apart .roots-&gt;uniqueNameXxx(&lt;acc - init&gt ; ) .where the synthesized uniqueNameXxx is one of .Introduction of the optional & lt;acc - init&gt ; allows an ' object ' iteration to include itself in the initialiser for transitiveClosure of its elements .", "label": "", "metadata": {}, "score": "50.310753"}
{"text": "The assumption is that some morphing algorithms may require control information which other algorithms do not use , that this information will be passed by fields not described in this specification , and that this information can be safely ignored by a version of the morpher using another algorithm .", "label": "", "metadata": {}, "score": "50.32621"}
{"text": "As mentioned above , besides establishing bridging inferences between two or more sentences , the invention also produces predictive inferences from a single sentence .For example , .FIG .6 shows an example of the predictive inference process using rules such as those shown in .", "label": "", "metadata": {}, "score": "50.344"}
{"text": "This is convenient when hunting for a particular tree when there are a large number of solutions .You can get the next subtree of a node by clicking on it with the left mouse button .You can get the previous subtree via shift - left mouse button .", "label": "", "metadata": {}, "score": "50.40954"}
{"text": "Since they are disjunctively ordered , it is up to the user to ensure that they are in the correct order .Morphological rules are of three types : \" ordinary \" morphological rules ( which attach an affixal morpheme ) , realizational rules ( which realize a set of morphosyntactic features , and are typically inflectional rules ) , and compounding rules ( including incorporation rules ) .", "label": "", "metadata": {}, "score": "50.434753"}
{"text": "( Note that an uninstantiated Head Feature on the lexical entry is considered to unify with these features , unless the feature has a default value which does not unify ; see above Definition of Feature Unification , section 4.2.2 . )", "label": "", "metadata": {}, "score": "50.437424"}
{"text": "[ number : singular case : nominative ] .Feature structures can have either simple values , such as the example above , or complex values , such as this : .[ agreement : [ number : singular ] ] .", "label": "", "metadata": {}, "score": "50.452858"}
{"text": "Morpher error : Unknown rule in an Affix Template for the Stratum . \"( The named realizational rule appears in one of the slots of one of the Affix Templates , but the rule itself is not currently loaded . )", "label": "", "metadata": {}, "score": "50.46325"}
{"text": "Note also that disjunction only applies at the level of equations ; you ca n't say .Our inventory of words will need a determiner , so enter a definition for the : .The lexical entry the is not a predicate in our toy lexicon , just an entity that has a positive value for the feature of definiteness ( however that might be interpreted ) .", "label": "", "metadata": {}, "score": "50.495087"}
{"text": "If S is false , return the value undefined , otherwise throw a ReferenceError exception .10.2.1.1.5 DeleteBinding ( N ) .The concrete Environment Record method DeleteBinding for declarative environment records can only delete bindings that have been explicitly designated as being subject to deletion .", "label": "", "metadata": {}, "score": "50.508995"}
{"text": "10.4 Establishing an Execution Context .Evaluation of global code or code using the eval function ( 15.1.2.1 ) establishes and enters a new execution context .Every invocation of an ECMAScript code function ( 13.2.1 ) also establishes and enters a new execution context , even if a function is calling itself recursively .", "label": "", "metadata": {}, "score": "50.5447"}
{"text": "Purpose : The rule will apply to a lexical entry as head only if the lexical entry subcategorizes at least one of the rules in this list .This is useful for instance for an incorporation rule that requires that the verb be transitive .", "label": "", "metadata": {}, "score": "50.55814"}
{"text": "Conversion between this format and other formats ( e.g. standard format markers ) should be trivial .The dictionary may or may not be internal to the morpher .If it is internal , the morpher is responsible for the execution of these commands .", "label": "", "metadata": {}, "score": "50.597023"}
{"text": "Another benefit of the invention is that input text is disambiguated as to part of speech , word sense , and coreference .The first inferred tagged sentence in the briding inference path is the particular first inferred tagged sentence that resulted from application of a first rule to the first input tagged sentence .", "label": "", "metadata": {}, "score": "50.709396"}
{"text": "It does so by selecting a rule of which the leftmost daughter unifies with the category of the word .It then parses other daughters of the rule recursively and then continues by connecting the mother category of that rule upwards , recursively .", "label": "", "metadata": {}, "score": "50.736973"}
{"text": "This form indicates that the predicate WALK takes one grammatical argument , a subject ( SUBJ ) .The predicate in a semantic form must be a designator in the f - description language , usually a symbol without internal spaces .", "label": "", "metadata": {}, "score": "50.793217"}
{"text": "These are documented in more detail in the XLE transfer documentation .First choose \" Transfer \" .This will result in the result of the transfer rules appearing at the XLE command line : .This is a prolog format representation of the output , similar to the prolog format representation of the f - structure that is produced by XLE using commands such as print - fs - as - prolog .", "label": "", "metadata": {}, "score": "50.807762"}
{"text": "If the value of isMapped is undefined , then .Let v be the result of calling the default [ [ Get ] ] internal method ( 8.12.3 ) on the arguments object passing P as the argument .If P is \" caller \" and v is a strict mode Function object , throw a TypeError exception .", "label": "", "metadata": {}, "score": "50.811836"}
{"text": "Let bindings be the binding object for envRec .Call the [ [ Put ] ] internal method of bindings with arguments N , V , and S .10.2.1.2.4 GetBindingValue(N , S ) .The concrete Environment Record method GetBindingValue for object environment records returns the value of its associated binding object 's property whose name is the String value of the argument identifier N .", "label": "", "metadata": {}, "score": "50.833466"}
{"text": "If a sentence has both valid and invalid trees ( this one does not ) , the invalid trees will be displayed after all of the valid ones and can be viewed by clicking the next button until the invalid trees are displayed .", "label": "", "metadata": {}, "score": "50.894012"}
{"text": "Unlike all other rules , deletion rules are always unapplied as if they had been applied simultaneously .That is , during unapplication to a form X , X is scanned for all places where the deletion rule could be unapplied , and the rule is unapplied to those places , resulting in the new form X ' .", "label": "", "metadata": {}, "score": "50.895233"}
{"text": "The solutions in the F - structure window also have several display features , most of which were described above .As with the c - structure window , the valid and then invalid f - structures can be scrolled through using the \" next \" and \" prev \" buttons .", "label": "", "metadata": {}, "score": "50.92239"}
{"text": "Purpose : This contains the list of subrules to be applied disjunctively .Each subrule is tried beginning with the first rule .At most one subrule may apply to each segment ( even if it only applies vacuously ) .The Phonological Subrule structure includes the environment in which the rule applies ( broadly construed to include any restrictions due to rule features , part of speech etc . , in addition to the left and right phonetic environments ) , as well as its output ( structural change ) .", "label": "", "metadata": {}, "score": "51.000156"}
{"text": "Purpose : This function outputs all active morphological rules which match the template .A morphological rule matches the template if : .The template 's Rule Name ( if any ) is the same as the rule 's Rule Name .", "label": "", "metadata": {}, "score": "51.089348"}
{"text": "It guides you through the process of entering a new grammar into XLE .It also describes how to use the system to parse sentences or other strings and to evaluate and edit your linguistic descriptions .It assumes some familiarity with the operating system ( including window and mouse manipulation ) , the Emacs text - editor , and the linguistic principles of Lexical Functional Grammar .", "label": "", "metadata": {}, "score": "51.097694"}
{"text": "This additional restriction is accomplished , for example , by modifying continuebridge to return an empty result if the proposed connective is not one of the above connective sequences .With the invention a maximum path length is imposed to filter out inferences that are probably unlikely given a speaker 's likelihood not to leave such remote connections unstated .", "label": "", "metadata": {}, "score": "51.114784"}
{"text": "First , it requires that a great many prefixes have two lexical entries .And second , a deletion correspondence such as -:0 is costly , since the Recognizer will spend a lot of time trying it everywhere .The present solution is to posit a single lexical entry for prefixes without a hyphen , for instance re+ , and to replace the -:0 pair with + : - .", "label": "", "metadata": {}, "score": "51.13964"}
{"text": "Let Sj be a stratum of cyclic rules .Then the application to a storable lexical entry from stratum Sj of one or more cycles is also a storable lexical entry of stratum Sj .( A \" cycle \" is defined as the application of one morphological rule of the stratum , followed by the application of all phonological rules of that stratum , followed by the erasure of any boundary markers . )", "label": "", "metadata": {}, "score": "51.159714"}
{"text": "( If each Fi is sufficiently instantiated to be unambiguously translated into a segment , RegExpr will represent a single string . )If the segment(s ) is / are marked as optional , enclose the segment or the bracketed list of segments in ASCII 2", "label": "", "metadata": {}, "score": "51.177567"}
{"text": "Note that the gloss field of a null entries must be empty .The Prefix slot can be filled by zero or more prefixes from the PREFIX sublexicon .Figure 3.6 shows three sample prefix entries .The first is a null entry whose alternation field names the Root alternation ; this permits the prefix slot to be optional .", "label": "", "metadata": {}, "score": "51.2035"}
{"text": "Return obj .The abstract operation MakeArgGetter called with String name and environment record env creates a function object that when executed returns the value bound for name in env .It performs the following steps : .Let body be the result of concatenating the Strings \" return \" , name , and \" ; \" .", "label": "", "metadata": {}, "score": "51.20598"}
{"text": "Each Real Lexical Entry may specify a Family Name .The set of all real lexical entries which have the same Family Name are referred to as a Family of Lexical Entries , and the individual members of that family are each other 's Relative Lexical Entries .", "label": "", "metadata": {}, "score": "51.229897"}
{"text": "A declarative environment record binds the set of identifiers defined by the declarations contained within its scope .In addition to the mutable bindings supported by all Environment Records , declarative environment records also provide for immutable bindings .An immutable binding is one where the association between an identifier and a value may not be modified once it has been established .", "label": "", "metadata": {}, "score": "51.266388"}
{"text": "What is specified is the form of the lexical entries which the lexicon contains .Lexical entries may be classified as real ( listed in the user 's lexicon ) or virtual ( constructed from other lexical entries on the basis of morphological and phonological rules ) .", "label": "", "metadata": {}, "score": "51.276077"}
{"text": "Therefore we use the bag of words as a ' guide ' [ 18 ] as in a left - corner parser , but we change the way in which lexical entries ' consume the guide ' .For the moment I assume that the bag of words is simply represented by the string , but I introduce a better data - structure for bags later in this chapter .", "label": "", "metadata": {}, "score": "51.354362"}
{"text": "( 6 )For all i , BMi is a list of zero or more boundary markers .( Boundary markers in the lexical sequence need not be accounted for by the template ; this corresponds to the generally accepted notion that phonological rules can apply freely across morpheme boundaries .", "label": "", "metadata": {}, "score": "51.389168"}
{"text": "The following subsections further describe this classification of lexical entries .For a definition of lexical entries as data structures , see section 5.2 .A Real Lexical Entry is a lexical entry which is listed in the lexicon .A Real Lexical Entry must be Storable Lexical Entry ( as defined below ) .", "label": "", "metadata": {}, "score": "51.39273"}
{"text": "Purpose : This lists the alpha variables which may appear in the rule , and assigns a feature name to each .There is no provision for using the same alpha variable name with different features in different parts of the rule .", "label": "", "metadata": {}, "score": "51.41867"}
{"text": "Paths are used in feature templates and feature constraints , described below .Feature structures are manupilated using an operation called unification .Two feature structures can unify if none of their constituent features have conflicting values ; the resulting structure is a union of all their features .", "label": "", "metadata": {}, "score": "51.436996"}
{"text": "( String characters are defined in chapter two . )( 1 ) Set PS equal to the empty list .Cj beginning at the left of Str and matching a Character Sequence in the Character Definition Table .( 3 ) If sequence C matches the Character Sequence of a Segment Definition Record , append the Phonetic Features field of that Segment Definition Record to the right end of PS .", "label": "", "metadata": {}, "score": "51.4466"}
{"text": "Purpose : The character representation of segments is used in lexical entries and in input tokens .They may also be used in the Phonetic Output field of morphological rules to represent affixal material .If this field does not appear , the character definition table does not define any segments ( such a table is unlikely to be of much use ) .", "label": "", "metadata": {}, "score": "51.45777"}
{"text": "It sets i to 0 .It returns SUCCESS and bd .In other words , in this process match 411 determines whether a pattern matches a tagged sentence and returns the bindings that enabled the match to succeed .An invocation of instant 413 on pattern p and bindings bd starts by setting result to the empty list .", "label": "", "metadata": {}, "score": "51.508873"}
{"text": "For the intial c - structure display , XLE chooses one particular tree from the set of valid tress ( if there are any ) , and that tree 's f - structure solutions are shown in the f - structure window .", "label": "", "metadata": {}, "score": "51.513184"}
{"text": "A lexical entry represents a unique combination of word or phrase , part of speech , and sense as defined by a corresponding concept .A part of speech can be , for example : Adjective , Adverb , Conjunction , Determiner , Interjection , Noun , Preposition , Pronoun , Verb , etc .", "label": "", "metadata": {}, "score": "51.51861"}
{"text": "Without the semicolon , the system assumes that what follows NOM is part of a functional schema , not a new category .So it treats each successive item as a designator in the f - description language , and lines the VP up under the NP constraints .", "label": "", "metadata": {}, "score": "51.67945"}
{"text": "This will display the constraints which the f - structure must satisfy to be ( ultimately ) well formed .In this case , for example , both the SUBJ and the OBJ will need a PRED value : .Click on the \" constraints \" menu item again with the left mouse button to toggle it off ; the constraints will no longer be displayed .", "label": "", "metadata": {}, "score": "51.696297"}
{"text": "The shell should therefore present the output selectively .For instance , the application of a phonological rule to a lexical entry only changes the latter 's Phonetic Shape field , and therefore only the rule 's name and this field should be displayed .", "label": "", "metadata": {}, "score": "51.7015"}
{"text": "A head - corner chart - parser for context - free grammars is defined in [ 88 ] .They show that the worst - case complexity of the algorithm is the same as for conventional context - free parsing algorithms such as [ 19 ] .", "label": "", "metadata": {}, "score": "51.703423"}
{"text": "This function can be very slow if the lexicon is large , and the template highly uninstantiated .Purpose : The morpher has no built - in provision for editing a lexical entry , since editing involves interaction between the shell and the user .", "label": "", "metadata": {}, "score": "51.737244"}
{"text": "This specification has little to say about the structure of the dictionary , except that the lexicon must be derivable from the dictionary .( The dictionary might be used as the lexicon , except that changes would be stored only in the main memory until saved . )", "label": "", "metadata": {}, "score": "51.771812"}
{"text": "Which stratum ( or strata ) a given rule applies in is designated by the user , as is the order of application of the various strata .Linguistic theories may vary in the number of strata they assume .A structuralist theory , for instance , might have a stratum of allophonic phonological rules and another stratum of morphological and morphophonemic rules .", "label": "", "metadata": {}, "score": "51.813316"}
{"text": "( The number of sublists in the morph - rules argument must equal the number of strata to be applied to the lexical entry .hc6026\"Morpher error : Unknown morphological rule for stratum specified in list of morphological rules to be applied . \" , where is the name of the rule in the morph - rules list argument to this function , and is the name of the stratum .", "label": "", "metadata": {}, "score": "51.819252"}
{"text": "In reality , it defines the input as the rule is used for synthesis , and the output as the rule is used for analysis .Purpose : This represents what a linguist would think of as the output of the rule .", "label": "", "metadata": {}, "score": "51.827618"}
{"text": "A list of rules can be obtained from the LFG menu bar option ( with only three rules you can see them all at once , but this is convenient for large grammars ) : .lfg files referenced in config information Display comments from .", "label": "", "metadata": {}, "score": "51.912346"}
{"text": "Cyclic phonological rules apply once at the beginning of a cyclic stratum , and once after each application of a cyclic morphological rule ; they are ordered among themselves as specified by the user .The morpher further constrains the application of cyclic phonological rules on all but the first cycle by Kiparsky 's ( 1982 ) Strict Cycle Condition , given below : .", "label": "", "metadata": {}, "score": "51.930534"}
{"text": "Starting with subcategorised surface syntactic structures which give valuable information abo ... \" .This paper describes performed research into the feasibility of creating computer - aided methods for knowledge extraction from an English corpus with the aid of existing lexical resources and analysis tools .", "label": "", "metadata": {}, "score": "51.980618"}
{"text": "The result is an f - structure that is annotated with choices to show where alternatives are possible .The other window indexes the solutions by choices .The result is a tree of choices with their corresponding constraints .The choices in both windows are active .", "label": "", "metadata": {}, "score": "51.992302"}
{"text": "( The specified language has not already been opened by the command open_language ; the current language remains whatever it was before . )Summary : Loads a file of morpher commands .Commands are taken from the named file until end of file , bypassing any upstream modules ( e.g. the preprocessor ) .", "label": "", "metadata": {}, "score": "52.009304"}
{"text": "The unification of these features with those of the input lexical entry is available for percolation to the output lexical entry .Purpose : This lists the Head Features which the morphological rule adds to the lexical entry output by the rule .", "label": "", "metadata": {}, "score": "52.036484"}
{"text": "See Phonological Rule Analysis Trace Record ( section 5.8.3 ) for the use of regular expressions to encode information which is ambiguous in the shape field of virtual lexical entries .Purpose : This field represents the virtual lexical entry which was the output ( in the analysis sense ) of the application of the rule being traced .", "label": "", "metadata": {}, "score": "52.049976"}
{"text": "Entering Function Code .The following steps are performed when control enters the execution context for function code contained in function object F , a caller provided thisArg , and a caller provided argumentList : .If the function code is strict code , set the ThisBinding to thisArg .", "label": "", "metadata": {}, "score": "52.081882"}
{"text": "\" All values will be instantiated , including any default values not explicitly set by the user .( But see below concerning error message hc6048 . )The editing of rules is to be provided by the shell ; no rule editing facilities , only rule loading functions , are provided in the morpher itself .", "label": "", "metadata": {}, "score": "52.116684"}
{"text": "Further documentation provides formal characterizations of the notations used for the various linguistic specifications , and provides reference material on the various windows and menus that are used to interact with the system .This section presents a tutorial introduction to the procedures for typing in syntactic rules , lexical entries , and morphological rules , the linguistic specifications that are necessary for sentence analysis .", "label": "", "metadata": {}, "score": "52.175053"}
{"text": "This rule stipulates that the PRED of the ADJUNCT element must be either IN or WITH .If this is the case , then ADJUNCT - TYPE PP is assigned to it .To see this , reload the rules and then run the following in the XLE window : .", "label": "", "metadata": {}, "score": "52.18911"}
{"text": "Purpose : For each feature - name listed , some value must be assigned to that feature by the end of the derivation ( in the synthesis sense , i.e. to the complete word ) .This feature value will usually be supplied by an affix yet to be attached to the stem represented by this lexical entry .", "label": "", "metadata": {}, "score": "52.202366"}
{"text": "10.2.3The Global Environment .The global environment is a unique Lexical Environment which is created before any ECMAScript code is executed .The global environment 's Environment Record is an object environment record whose binding object is the global object ( 15.1 ) .", "label": "", "metadata": {}, "score": "52.21265"}
{"text": "Else , map contains a formal parameter mapping for P so , .Return the result of calling the [ [ Get ] ] internal method of map passing P as the argument .The [ [ GetOwnProperty ] ] internal method of an arguments object for a non - strict mode function with formal parameters when called with a property name P performs the following steps : .", "label": "", "metadata": {}, "score": "52.280437"}
{"text": "Simple Context : A member of the Phonetic Output list which is a simple context is inserted into the output phonetic sequence at this position .The simple context given in this rule may underspecify the segment , so long as the segment is not underspecified when the simple context must have been translated into a character string when the derivation is complete ( in the generation sense ) .", "label": "", "metadata": {}, "score": "52.312874"}
{"text": "An outer Lexical Environment may , of course , have its own outer Lexical Environment .A Lexical Environment may serve as the outer environment for multiple inner Lexical Environments .For example , if a FunctionDeclaration contains two nested FunctionDeclarations then the Lexical Environments of each of the nested functions will have as their outer Lexical Environment the Lexical Environment of the current execution of the surrounding function .", "label": "", "metadata": {}, "score": "52.372917"}
{"text": "( FS ) to the left and ASCII 30( RS ) to the right .If a feature bundle is both optional and ambiguous , the parentheses are outermost .Purpose : This field represents the virtual lexical entry which was the output ( in the analysis sense ) of the application of the rule being traced .", "label": "", "metadata": {}, "score": "52.42626"}
{"text": "In this display the symbol - valued features are shown on a single line separated by commas so that more information can be shown in a given amount of screen space .The numeric indices play the role of the variables f1 , f2 , etc . that are sometimes used to annotate f - structures in published presentations of LFG .", "label": "", "metadata": {}, "score": "52.482483"}
{"text": "The above definition is couched in terms of simultaneous ( un-)application of the deletion rule .Morphological/ phonological rule features ( abbreviated as MPR features ) and syntactic features are arbitrary features assigned by the user .MPR features govern the application of morphological and phonological rules , while syntactic features govern the application of morphological and syntactic rules .", "label": "", "metadata": {}, "score": "52.48255"}
{"text": "These and other objects of the present invention , together with further features and advantages thereof , will become apparent from the following detailed specification when read together with the accompanying drawings , in which : .FIG .1 is a flowchart illustrating a sequence of method steps for performing morphological analysis in accordance with the present invention ; .", "label": "", "metadata": {}, "score": "52.50764"}
{"text": "There is no provision for specifying properties other than the phonetic form of the following word .A morphological analysis method is described .Method for automated morphological analysis of word structure US 5251129 A .Abstract .A morphological analysis method is described .", "label": "", "metadata": {}, "score": "52.540405"}
{"text": "By default , the value of provideThis is false for any object environment record .The behaviour of the concrete specification methods for Object Environment Records is defined by the following algorithms .10.2.1.2.1 HasBinding(N ) .The concrete Environment Record method HasBinding for object environment records determines if its associated binding object has a property whose name is the value of the argument N : .", "label": "", "metadata": {}, "score": "52.55377"}
{"text": "For example , derivatives involving the prefix un- are assumed for all adjectives , nouns and verbs , and furthermore , the derivative entry is the same for all of them .The handling of prefixes can , of course , be identical to that of suffixes , and their derivative entry structures may be encoded explicitly in the lexical entries .", "label": "", "metadata": {}, "score": "52.573433"}
{"text": "The next task is to combine this verb phrase with the lexical entry ' dat ' , by means of the ' cp ' predicate .The verb phrase is selected by ' dat ' , with rule feature ' right ' .", "label": "", "metadata": {}, "score": "52.578377"}
{"text": "As ECMAScript code is executed , additional properties may be added to the global object and the initial properties may be modified .10.3 Execution Contexts .When control is transferred to ECMAScript executable code , control is entering an execution context .", "label": "", "metadata": {}, "score": "52.58054"}
{"text": "Furthermore , only one subrule of the disjunctive list may apply to that segment .( Note that \" ordinary \" phonological rules are modeled by disjunctive rules with a single subrule . )Let disjunctive rule R be a list of subrules ( R1 ...", "label": "", "metadata": {}, "score": "52.59011"}
{"text": "[ [ Writable ] ] is present and its value is false , then .Call the [ [ Delete ] ] internal method of map passing P and false as arguments .Return true .The [ [ Delete ] ] internal method of an arguments object for a non - strict mode function with formal parameters when called with a property name P and Boolean flag Throw performs the following steps : .", "label": "", "metadata": {}, "score": "52.590828"}
{"text": "I can think of a few arguments against the object iterator construct : . - it would be the first instance of its kind , a new language construct .It probably needs to be able to show that it can not be implemented by any other mechanism ( such as collection iterator ) to justify that .", "label": "", "metadata": {}, "score": "52.60595"}
{"text": "However , overrecognition is by no means innocuous ; it can result in spurious parses that seriously degrade the performance of an NLP system .For instance , consider what would happen if we relax the constraint that the comparative -er suffix only attaches to adjectives and permit it after any word .", "label": "", "metadata": {}, "score": "52.61463"}
{"text": "In order to optimize the process , lexical targets may be used .A lexical target is a desired part of speech to be derived at a certain stage of analysis .The targets are determined depending on the current suffix it is processing .", "label": "", "metadata": {}, "score": "52.614826"}
{"text": "1 is a block diagram illustrating the method of the invention .FIG .2 is a drawing of a sample portion of a Lexicon and Ontology .FIG .3 is a drawing of a sample rule in a Rule Base .", "label": "", "metadata": {}, "score": "52.618263"}
{"text": "After successfully recognizing readable , it again comes to the End sublexicon , where it terminates .If you do not want Englex to attempt to decompose hyphenated compounds , then simply comment out the hyphen entry in the End sublexicon .", "label": "", "metadata": {}, "score": "52.629494"}
{"text": "However , this approach will quickly result in a grammar with a great many confusing rules which still may not adequately handle the data .PC - KIMMO remedies this problem by augmenting the context - free rules with feature structures .", "label": "", "metadata": {}, "score": "52.752502"}
{"text": "Alternatively , from the XLE menu : . choose the \" Create a parser \" option .And when prompted in the echo area mini - buffer , type : . toy - eng .lfg .Followed by a carriage return .", "label": "", "metadata": {}, "score": "52.791107"}
{"text": "The process is complicated by three sources of ambiguity : word to base , base to root , and root to entry .The word may have several possible breakdowns , the base may have several possible roots , and the root may have several entries .", "label": "", "metadata": {}, "score": "52.795937"}
{"text": "Immutable bindings do not exist for object environment records .Object environment records can be configured to provide their binding object as an implicit this value for use in function calls .This capability is used to specify the behaviour of With Statement ( 12.10 ) induced bindings .", "label": "", "metadata": {}, "score": "52.830963"}
{"text": "The functions discussed in the following subsections serve as the interface between the dictionary and other applications programs , enabling the user to convert the dictionary to or from a standard format ( e.g. ASCII text ) .Because of the wide variety of formats an external program might use , no attempt is made to convert between the internal dictionary format and some \" standard \" format .", "label": "", "metadata": {}, "score": "52.83499"}
{"text": "Let names be the value of func 's [ [ FormalParameters ] ] internal property .Let argCount be the number of elements in args .Let n be the number 0 .For each String argName in names , in list order do .", "label": "", "metadata": {}, "score": "52.869522"}
{"text": "The natural language sentences are disambiguated as to part of speech , word sense and coreference of lexical entries within one sentence or across the two sentences .Referring to .FIG .1 , the invention includes a Lexicon and Ontology 101 , Rule Base 103 , Tagger 105 , and Inferencer 107 .", "label": "", "metadata": {}, "score": "52.876244"}
{"text": "This definition applies to PRSet if the value of the p_rule_order field of the current stratum is linear .Let PR1 ... PRn be the list of phonological rules in PRSet in order of application .Let Si be a noncyclic stratum .", "label": "", "metadata": {}, "score": "52.89048"}
{"text": "Utilizing only the word root , however , limits the accuracy of these known morphological analysis systems .For example , for two separate words having a common root , identical lexical entries will be generated .The two words , in their entirety , however , may have totally different meanings .", "label": "", "metadata": {}, "score": "52.894253"}
{"text": "Figure 3.3 shows these alternations , while figure 3.4 is a key to the abbreviations for the sublexicon names used in the alternations .The alternation name stands for a positional slot ( as in figure 3.1 ) , while the sublexicon names stand for the classes of lexical items that can fill that slot .", "label": "", "metadata": {}, "score": "52.896893"}
{"text": "The ParameterMap object and the objects that are the values of its properties are not directly accessible from ECMAScript code .An ECMAScript implementation does not need to actually create or use such objects to implement the specified semantics .NOTE 3", "label": "", "metadata": {}, "score": "52.90132"}
{"text": "In another embodiment , the invention performs a bidirectional breadth - first search .More specifically , as shown in .FIG .7 , ibridge 701 generates bridging inferences .Ibridge 701 invokes tag 417 , ibridgestep 702 , and intersect 703 .", "label": "", "metadata": {}, "score": "52.91913"}
{"text": "If this field is omitted , there are no required Foot Features for the head lexical entry .A Compounding Subrule has a Head record , a Non - Head record , and an Output Side record .The Non - Head record 's Required Phonetic Input field is implicitly numbered beginning with the next integer following the last number of the Head record 's Required Phonetic Input field .", "label": "", "metadata": {}, "score": "52.928513"}
{"text": "Argument labels should not be omitted ; if they are , the corresponding arguments will appear at the end of the message .If no message file is loaded , the messages will be printed out in the form .This format will also be used for any messages not listed in the most recently loaded message file .", "label": "", "metadata": {}, "score": "53.016"}
{"text": "Morpher error : Unknown word(s ) : . \" , where are the printforms of any unknown words , each separated by a space .( One or more words in the input could not be morphed ; analysis of any words which were successfully morphed are not output . )", "label": "", "metadata": {}, "score": "53.030365"}
{"text": "The Template Analysis Trace Record structure is used to output information resulting from the tracing of templates during analysis .One such record is produced at the beginning of a template , and another at the end of the template , after all slots of the template have been unapplied ; the two records are marked to distinguish them .", "label": "", "metadata": {}, "score": "53.03387"}
{"text": "( It is assumed the shell will provide a means of deleting files if it is desired instead to overwrite them . )If output is currently to a file ( not standard output ) , that file is closed .( Thus , only one file can be open for output at a time .", "label": "", "metadata": {}, "score": "53.04912"}
{"text": "lfg .The file demo - eng .lfg , which is supplied along with the XLE software , contains a grammar more suitable for experimenting with the system 's testing and debugging facilities .This grammar contains rules , lexical entries , and some templates .", "label": "", "metadata": {}, "score": "53.058937"}
{"text": "This message is sent to whatever the output is being sent to before the command takes effect .( There is no message when a file is closed . )Operating system errors ( such as invalid file name ) should be trapped and the error message sent to standard output ( not to the file ) .", "label": "", "metadata": {}, "score": "53.072327"}
{"text": "Entering Eval Code .The following steps are performed when control enters the execution context for eval code : .If there is no calling context or if the eval code is not being evaluated by a direct call ( 15.1.2.1.1 ) to the eval function then , .", "label": "", "metadata": {}, "score": "53.08969"}
{"text": "These reveal information about the conceptual relations between the verbal arguments and the predicate that exist in the semantic domain under consideration .A semantic characterisation of the theta roles themselves will be supplied by using the lexical information of WordNet ( [ 9 ] ) .", "label": "", "metadata": {}, "score": "53.11393"}
{"text": "And I wonder whether OCL really wants to have another iterator as complex as the \" iterate \" expression , with accumulators and such .Do n't get me wrong , I like this idea of iterate - like syntax because it solves both of these problems , but I wonder whether it 's not over - kill .", "label": "", "metadata": {}, "score": "53.12153"}
{"text": "If tracing of blocking is turned on , a Blocking trace record is also produced for each storable lexical entry produced .Finally , a lexical entry record is produced for the output word , if such a word is successfully generated ; this lexical entry is identical to that produced by the function generate_word when tracing is not turned on .", "label": "", "metadata": {}, "score": "53.15737"}
{"text": "If the output is null ( i.e. a rule of deletion ) , the output sequence is represented by the empty list .Purpose : This field represents the left - hand phonetic environment of the subrule .It is identical in form to the right environment field .", "label": "", "metadata": {}, "score": "53.190086"}
{"text": "The first sublist is the list of rules being traced in analysis mode , and the second is the list of rules being traced in synthesis mode .Summary : Turns on or off the tracing of lexical lookup ; all the storable lexical entries into which the morpher analyzes the input word will appear in the trace data structure output by the function morph_and_lookup_word .", "label": "", "metadata": {}, "score": "53.218792"}
{"text": "For example , the \" issuer \" in this case would play the actor role of sense one of the verb issue .The lexicon may also include a substantial number of common collocations , such as verb - particle and verb - complement combinations .", "label": "", "metadata": {}, "score": "53.296394"}
{"text": "( Note that may have been intended to associate with the preceding or following character . )hc6024 , \" Morpher error : Lexical entry with lexical i d assigned to unknown stratum .\" , where is the Phonetic Shape of the lexical entry , and is the name of the unknown stratum .", "label": "", "metadata": {}, "score": "53.37812"}
{"text": "( ETX ) to the left an right respectively .If there is no Segment Definition Record whose features are a superset of Fi , exit with error , returning Fi .Else exit with success , returning RegExpr .( 1 ) If INIT is true , the left - most segment of the left - most non - empty Parti in PART is PSL1 ( i.e. PSTSeq must match PSLSeq beginning at the left - most segment of PSLSeq ) ; .", "label": "", "metadata": {}, "score": "53.387527"}
{"text": "The top execution context on this logical stack is the running execution context .A new execution context is created whenever control is transferred from the executable code associated with the currently running execution context to executable code that is not associated with .", "label": "", "metadata": {}, "score": "53.39962"}
{"text": "( a ) [ a : P b : Q ] ( b ) [ b : Q c : R ] ( c ) [ a : P b : Q c : R ] .But feature structures ( d ) and ( e ) fail to unify because they have conflicting values for the q feature : .", "label": "", "metadata": {}, "score": "53.401848"}
{"text": "S is used to identify strict mode references .If S is true and the binding does not exist or is uninitialized throw a ReferenceError exception .DeleteBinding(N ) .Delete a binding from an environment record .The String value N is the text of the bound name If a binding for N exists , remove the binding and return true .", "label": "", "metadata": {}, "score": "53.418182"}
{"text": "\" Morpher : Morphological rule ordering for stratum set to unordered . \"or hc6556 \" Morpher : Morphological rule ordering for stratum set to linear .\" If the property being set is the Affix Templates of the Stratum , message hc6565 \" Morpher : The affix templates for stratum have been loaded . \"", "label": "", "metadata": {}, "score": "53.4275"}
{"text": "The classic version of Lexical Phonology , as outlined above , also implies that phonological rules may apply before morphological rules .This seems to be correct , since word formation rules may require information about the ( rule - derived ) stress patterns of their input words .", "label": "", "metadata": {}, "score": "53.438446"}
{"text": "You can click again on the \" node numbers \" item to turn back on the node - number display .Typing \" n \" in the window has the same effect , as shown by the accelerator at the right of the menu item .", "label": "", "metadata": {}, "score": "53.49919"}
{"text": "The left - hand side of the rule looks for a feature NUM of an f - structure % Fstr ; this feature has a value % Num .The % indicates a variable name .Multiple instances of a variable in a rule must refer to the same fact ( e.g. , f - structure or f - structure feature / value ) .", "label": "", "metadata": {}, "score": "53.50672"}
{"text": "( Note that this may not be an actual lexical entry in the lexicon , if the user has supplied a lexical entry as the argument of generate_word . )( A duplicate analysis is one which represents an identical successful lexical lookup with identical morphological rule applications to one found elsewhere in the analysis .", "label": "", "metadata": {}, "score": "53.511993"}
{"text": "Perform Declaration Binding Instantiation using the function code code and argumentList as described in 10.5 .10.5 Declaration Binding Instantiation .Every execution context has an associated VariableEnvironment .Variables and functions declared in ECMAScript code evaluated in an execution context are added as bindings in that VariableEnvironment 's Environment Record .", "label": "", "metadata": {}, "score": "53.556152"}
{"text": "Contents : A string which represents the phonological form of the lexical entry .For lexical entries which represent entire tokens in the input , this field is copied from the field of the same name in the input Token Record data structure ; in the case of lexical entries in the lexicon , it is the result of lexical lookup .", "label": "", "metadata": {}, "score": "53.57663"}
{"text": "A method in accordance with claim 3 wherein the affix is a prefix .A method in accordance with claim 3 wherein the affix is a suffix .A method of operating a computer for performing morphological analysis of word structure comprising the steps of : . breaking a word into possible base - affix pairs ; . modifying the base of each base - affix pair into possible roots ; . retrieving each lexical entry of each root in a lexicon ; . deriving a lexical entry for a root if a lexical entry is not provided in the lexicon ; . storing a derivative and a sense under a lexical target for each sense of the entry and for each sense level derivative of a suffix wherein , said derivative results in said lexical target ; . storing a derivative with each sense of the entry under a lexical target for each entry - level derivative of a suffix , wherein said derivative results in said lexical target ; . storing a derivative with each sense of the entry under a lexical target for each part - of - speech default derivative of a suffix , wherein said derivative results in a lexical target not yet derived ; and .", "label": "", "metadata": {}, "score": "53.594078"}
{"text": "In undoing the application of such a rule , i.e. applying it in an analysis manner , one does n't know what feature values the vowel had prior to the rule 's application , at least until lexical lookup .The rule may have applied by changing the feature values in question , but it is equally possible the rule applied vacuously .", "label": "", "metadata": {}, "score": "53.639114"}
{"text": "The invention eventually finds a series of rules and inferred sentences that result in the desired second sentence 509 .The invention conducts a depth - first search , limited by a maximum path length , in order to find all valid bridging inference chains from the first input sentence to the second input sentence .", "label": "", "metadata": {}, "score": "53.748055"}
{"text": "Note that this is the only way that you can express a disjunction of lexical categories in XLE ; the following specification , with the disjunction brackets around the categories and morphcodes , does not work : .When you type M - q in a lexical entry , XLE checks the format and punctuation of your definition to see if it makes sense .", "label": "", "metadata": {}, "score": "53.79699"}
{"text": "If the mult_applic variable for the rule has the value simultaneous , the following describes the application of a phonological rule to a phonetic sequence .Note 3 : The input stretch of SSi should not overlap the input stretch of SSi+1 .", "label": "", "metadata": {}, "score": "53.79898"}
{"text": "The hypothesized head - corner , the lexical entry ' dat ' , has to be matched with the head of a rule .Notice that ' dat ' subcategorizes for a sign with syntactic category V , hence the next goal ( 3 ) is to parse the V ; the guide is instantiated as the bag ' jan , ontwaakt ' : .", "label": "", "metadata": {}, "score": "53.808968"}
{"text": "Phonological rules are those rules which modify the phonological structure of a lexical entry without changing its meaning or grammatical features .In a structuralist grammar , they would include both morphophonemic and allophonic rules .( If the input to the morpher is in a true phonemic orthography , there would be no need for allophonic rules in the morpher . )", "label": "", "metadata": {}, "score": "53.819572"}
{"text": "The resultant F - structure # 2 is marked ( EVENTUALLY BAD ) : .If the grammar defines additional projection structures to be in correspondence with the f - structure , then they will be indicated by a button in the f - structure window , even if they are a projection off of the c - structure .", "label": "", "metadata": {}, "score": "53.94036"}
{"text": "A continuation is another trace record , and represents the tracing of rules , lexical lookup , or blocking of the input word .The Stratum Analysis Trace Record structure is used to output information resulting from the tracing of strata during analysis .", "label": "", "metadata": {}, "score": "53.960716"}
{"text": "However , if a real lexical entry represents a stem , rather than a root , it may be desirable to indicate the morphological rules which \" would have \" applied , in order to prevent their applying .Purpose : These rule features govern which morphological or phonological rules a lexical entry will exceptionally undergo or not undergo .", "label": "", "metadata": {}, "score": "53.96288"}
{"text": "If just object closure existed , the interaction with implicit collect for collections would be nearly as confusing , so the collection wins for lexical ergonomic reasons .The implicit collect is a very good point !The transitiveClosure iterator signature is very similar to iterate . where .", "label": "", "metadata": {}, "score": "54.00725"}
{"text": "The \" callee \" property has a more specific meaning for nonstrict mode functions and a \" caller \" property has historically been provided as an implementation - defined extension by some ECMAScript implementations .The strict mode definition of these properties exists to ensure that neither of them is defined in any other manner by conforming ECMAScript implementations .", "label": "", "metadata": {}, "score": "54.03333"}
{"text": "For example , click on the a:1 .A new window should pop up entitled \" F - structures for Slected transfer result \" .You can left click on a:2 to see the other result .This walkthough has provided a basic introduction to the XLE transfer system .", "label": "", "metadata": {}, "score": "54.035595"}
{"text": "The Clitic slot is filled by a form from the CLITIC sublexicon .Figure 3.10 shows three sample clitic entries .The first is a null entry whose alternation field names the End alternation ; this permits the Clitic slot to be optional .", "label": "", "metadata": {}, "score": "54.127422"}
{"text": "This time XLE prints : .Without the colon in this case , XLE does not interpret what follows NP as a schema .Instead , it is interpreted as a category , and lined up under the NP .You can revert to the original correct form by re - inserting the colon ( and typing M - q to reformat if you wish ) .", "label": "", "metadata": {}, "score": "54.13727"}
{"text": "\" Morpher error : Unknown feature used in character definition table .\" Warning : There is no guarantee that the segment and boundary definitions in the output table will be in the same order as the input definitions , nor that the features in each segment definition will be in the original order .", "label": "", "metadata": {}, "score": "54.153313"}
{"text": "The relation simply calls the parse predicate , for each element of a list of daughters .The predicates predicts for a given goal , a possible head - corner .It is defined as follows : .Instead of selecting the first word from the current input string , the parser selects a lexical entry dominating a subbag of the words occurring in the input string , provided this lexical entry can be the head - corner of the current goal .", "label": "", "metadata": {}, "score": "54.168438"}
{"text": "I suspect the underlying recursive iterator should be called recurse with transitiveClosure a simple invocation thereof .Imagine that both were available .Only one can be permitted .The implicit collect is a very good point !Really , quite a different beast .", "label": "", "metadata": {}, "score": "54.23551"}
{"text": "If S is true and the binding can not be set throw a TypeError exception .S is used to identify strict mode references .GetBindingValue(N , S ) .Returns the value of an already existing binding from an environment record .", "label": "", "metadata": {}, "score": "54.27507"}
{"text": "The following subsections define the application of a phonological rule PR to an input lexical entry ILE , resulting in the output lexical entry OLE .( ILE may be a Real or a Virtual Lexical Entry , and OLE will be a Virtual Lexical Entry . )", "label": "", "metadata": {}, "score": "54.27714"}
{"text": "hc6042\" Morpher error : Unknown natural class used in rule . \"( The specified natural class name appears in one of the phonetic sequences of the named rule , but it is not defined .Since it had to have been defined when the rule was loaded ( see load_morpher_rule , section 6.2.1 ) , it must have been removed by remove_nat_class . )", "label": "", "metadata": {}, "score": "54.28962"}
{"text": "However , this distinction is essentially invisible to the Morpher Module ; morphological rules can assign features as either Head- or Foot - features in their output , but make no use of the distinction .( The distinction is , however , visible to the Parser Module . )", "label": "", "metadata": {}, "score": "54.29551"}
{"text": "If at the end of the derivation ( in the synthesis sense ) , no value has been assigned to such a feature , the derivation is ruled out .( This field only requires that some value for a feature be assigned by the end of the derivation , whereas the Required Syntactic Features field requires that a specific value ( or values ) be present in the lexical entry to which this rule applies . )", "label": "", "metadata": {}, "score": "54.29677"}
{"text": "Apart from these system - specific items , the usual paper - and - pencil punctuation for rule - writing is used .Symbols and categories must be separated from each other by white - space , which can be indicated by any number of spaces , carriage - returns , or tabs .", "label": "", "metadata": {}, "score": "54.30996"}
{"text": "We will see the + feature several more times in these rules .The second is the special variable % % .Variables beginning with % % are called anonymous variables ; they are essentially wildcards that will match any value .", "label": "", "metadata": {}, "score": "54.329987"}
{"text": "( It is mentioned here only for completeness . )Contents : The names ( atoms ) of the morphological rules ( if any ) which have applied to form this lexical entry ; left - to - right order of this list represents the order in which morpher rules applied to produce this lexical entry ( in the synthesis sense ) .", "label": "", "metadata": {}, "score": "54.387577"}
{"text": "New projections are usually used to describe major sub - systems of linguistic theory .For instance , there could be a sigma projection to handle the semantics , a rho projection to encode selectional restrictions , and a delta projection for a discourse structure .", "label": "", "metadata": {}, "score": "54.458977"}
{"text": "This is because one such trace record is produced every time a slot is unapplied .The Template Synthesis Trace Record structure is used to output information resulting from the tracing of templates during synthesis .One such record is produced at the beginning of a template , and another at the end of the template , after all slots of the template have been unapplied ; the two records are marked to distinguish them .", "label": "", "metadata": {}, "score": "54.55043"}
{"text": "LFNn ) , let the set intersection of RFV and the value of RFN in the Head ( Foot ) Features of the Lexical Entry be OFV .If OFV is non - empty , unification succeeds with the value ( RFN OFV ) ; otherwise , unification fails ; . else ( if RFN is not included in ( LFN1 ...", "label": "", "metadata": {}, "score": "54.6145"}
{"text": "Note that when a parameterized template is invoked , the template name and the values for its parameters are both enclosed in parentheses after the @ .A template can be invoked in any position where an ordinary schema might otherwise appear .", "label": "", "metadata": {}, "score": "54.63761"}
{"text": "Purpose : This defines the realizational inflectional rules which may apply to a stem of the given part of speech .The first realizational rule whose realizational features are a subset of the features to be realized of the derivation will be applied to the input lexical entry ( see Definition of Application of an Affix Template , section 4.3 ) .", "label": "", "metadata": {}, "score": "54.66204"}
{"text": "Thus , to prove a given goal , the parser selects a lexical entry ( the head ) .Then the parser continues to prove that this lexical entry indeed is the head of the goal , by selecting a rule of which this lexical entry can be head .", "label": "", "metadata": {}, "score": "54.682182"}
{"text": "( 1 ) Cycle 1 : Root ( taken from the lexicon ) .Cycle 2 : [ Root]Y ] word formation rule 1 .The interspersing of word - formation rules and cyclic phonological rules predicts that we may find word - formation rules whose application is conditioned by the prior application of a phonological rule .", "label": "", "metadata": {}, "score": "54.711563"}
{"text": "Note that some features in PS may be uninstantiated for some segments .In the following definition of the translation from phonetic sequence to a regular expression , no translation is defined for a Phonetic Sequence which contains an Optional Segment Sequence record .", "label": "", "metadata": {}, "score": "54.72461"}
{"text": "If the syntactic production that is being evaluated is contained in a strict mode code , then let strict be true , else let strict be false .Return the result of calling GetIdentifierReference function passing env , Identifier , and strict as arguments .", "label": "", "metadata": {}, "score": "54.799637"}
{"text": "Also , they may not be overwritten by features assigned by affixes .( Normally , each sublist will contain the name of a single feature value , so that an atomic - valued feature list would suffice ; the list - valued feature list is an extension , since a list can always contain a single value .", "label": "", "metadata": {}, "score": "54.80983"}
{"text": "And I wonder whether OCL really wants to have another iterator as complex as the & quot;iterate&quot ; expression , with accumulators and such .Do n't get me wrong , I like this idea of iterate - like syntax because it solves both of these problems , but I wonder whether it 's not over - kill .", "label": "", "metadata": {}, "score": "54.82228"}
{"text": "In such cases , it is usually better to compromise and simply list all the attested words with the unproductive suffix in the lexicon .The decomposition approach to derivational morphology engenders several other problems .Many morphologically derived forms can not be decomposed due to phonological or morphological irregularity .", "label": "", "metadata": {}, "score": "54.83841"}
{"text": "This definition applies if the value of the m_rule_order field of the current stratum is linear .Then ILE is related to OLE by the following algorithm : .Otherwise set CurRule to one of the rules in MRList , and remove CurRule and all rules preceding it from MRList .", "label": "", "metadata": {}, "score": "54.852287"}
{"text": "Else , .Call env 's CreateMutableBinding concrete method passing the String \" arguments \" as the argument .Call env 's SetMutableBinding concrete method passing \" arguments \" , argsObj , and false as arguments .For each VariableDeclaration and VariableDeclarationNoIn d in code , in source text order do .", "label": "", "metadata": {}, "score": "54.878647"}
{"text": "( 1 ) PETemp partitions PLSeq ( section 4.1.2 , Definition of Partition of a Phonetic Sequence by a Phonetic Template ) ; .( In a rule of epenthesis , the epenthesized segment(s ) is ( arbitrarily ) attached to the right of a boundary marker not specifically mentioned in the rule ) ; and .", "label": "", "metadata": {}, "score": "54.90188"}
{"text": "One is by the use of features .If a third order suffix could attach outside either a second order suffix or a first order suffix , such a rule could require the presence of either a ( level ( two ) ) or a ( level ( one ) ) feature .", "label": "", "metadata": {}, "score": "54.954155"}
{"text": "The binding must already exist .If S is true and the binding is an uninitialized immutable binding throw a ReferenceError exception .Let envRec be the declarative environment record for which the method was invoked .Assert : envRec has a binding for N .", "label": "", "metadata": {}, "score": "55.028976"}
{"text": "On this view , phonological rules fall into two classes : .( 1 ) Lexical Rules : which may interact with morphological rules .( 2 ) Postlexical Rules , which may not interact with morphological rules .This organizing principle is expressed by placing all lexical phonological rules in the lexicon , and all postlexical rules in a separate phonological component that is ordered after the rules of syntax .", "label": "", "metadata": {}, "score": "55.049488"}
{"text": "maps from said concepts to said concepts .A method of automatically producing bridging inferences that join two related input phrases , said method comprising : . applying a lexicon and ontology data structure to a first input phrase to produce a first tagged input phrase and applying said lexicon and ontology data structure to a second input phrase to produce a second tagged input phrase ; . matching said first tagged input phrase to first rules and matching said second tagged input phrase to second rules ; . generating first inferred phrases from said first rules and generating second inferred phrases from said second rules ; . matching said first inferred phrases to third rules and matching said second inferred phrases to fourth rules ; . selecting a first rule of said first rules and a second rule of said second rules that cause said third rule to match said fourth rule ; and .", "label": "", "metadata": {}, "score": "55.053947"}
{"text": "( XLE 's notation is also more expressive in many ways , as detailed in the documentation on Grammatical Notations . )You might write a simple S rule on paper by putting the schemata under the category , like this : .", "label": "", "metadata": {}, "score": "55.076675"}
{"text": "Morphological and phonological rules are discussed in this specification from the viewpoint of the linguist .That is , the \" input \" and \" output \" of rules are seen from the viewpoint of the generation of surface forms from underlying forms .", "label": "", "metadata": {}, "score": "55.16285"}
{"text": "If the binding for N in envRec is a mutable binding , change its bound value to V .Else this must be an attempt to change the value of an immutable binding so throw a TypeError exception . 10.2.1.1.4 GetBindingValue ( N , S ) .", "label": "", "metadata": {}, "score": "55.16483"}
{"text": "For the analysis , the entry \" t \" must be removed .The spelling rules of English are somewhat arbitrary , with many exceptions .Thus , each base may produce several possible roots .As indicated at 108 , for each root , its lexical entries must accessed .", "label": "", "metadata": {}, "score": "55.18367"}
{"text": "If PSTi is an Optional Segment Sequence , let MIN and MAX be the values of the Minimum Occurrence and Maximum Occurrence fields of PSTi ( default 0 and 1 , respectively ) , and let PSTSeq be the Optional Sequence of PSTi .", "label": "", "metadata": {}, "score": "55.183804"}
{"text": "Purpose : This list gives the Features with which the Head Features of the head lexical entry must be unifiable in order for it to undergo the rule .The unification of these features with those of the input lexical entry is available for percolation to the output lexical entry .", "label": "", "metadata": {}, "score": "55.325367"}
{"text": "The template 's Rule Stratum ( if any ) is the same as the rule 's Rule Stratum .The template 's Blockability ( if given ) is the same as the rule 's Blockability .( A value of true ( the default ) in the template matches an empty field in a rule . )", "label": "", "metadata": {}, "score": "55.381607"}
{"text": "Figure 3.9 shows three sample INFL entries .The first is a null entry whose alternation field names the Clitic alternation ; this permits the Infl slot to be optional .The other three entries also specify the Clitic alternation ; thus in contrast with the Prefix and Suffix slots , only one inflectional suffix is allowed .", "label": "", "metadata": {}, "score": "55.395515"}
{"text": "In the f - structure window , click on the \" abbreviate attributes \" menu item under the Views menu and the \" node numbers \" menu item with the left mouse button .This will display only the PRED features and their values ; this can be extremely useful for viewing large f - structures to determine their basic structure .", "label": "", "metadata": {}, "score": "55.480896"}
{"text": "The interpretation of a list value whose length is greater than one is that the feature in question is ambiguous between ( or among ) the values listed .Typical examples of features are tense ( past present ) ( a syntactic feature - name feature - value pair ) and verb_class_3 ( an MPR feature ) .", "label": "", "metadata": {}, "score": "55.528343"}
{"text": "Expressions of functional uncertainty can be used in XLE to encode constraints on various sorts of nonlocal f - structure dependencies .The following NP rule , for example , uses this mechanism to form topicalised structures : .The functional uncertainty equation on the TOPIC NP identifies that NP 's f - structure with the OBJ or OBJ2 , possibly of a nested XCOMP .", "label": "", "metadata": {}, "score": "55.52973"}
{"text": "Note that , in spite of the equals sign , unification is not the same thing as saying that the values must be the same .For example , a feature constraint that referred to the feature structures in ( a ) and ( b ) in the section above would succeed , since they unify -- even though they are not identical .", "label": "", "metadata": {}, "score": "55.565426"}
{"text": "A pattern element comprises a lexical entry 321 and an optional variable 323 .The optional variable of a first pattern element is a character string that uniquely identifies what other pattern elements contained in either or both of the patterns of the rule exhibit coreference with the first pattern element , that is , refer to the same world entity .", "label": "", "metadata": {}, "score": "55.586227"}
{"text": "Which Environment Record is used to bind a declaration and its kind depends upon the type of ECMAScript code executed by the execution context , but the remainder of the behaviour is generic .On entering an execution context , bindings are created in the VariableEnvironment as follows using the caller provided code and , if it is function code , argument List args : .", "label": "", "metadata": {}, "score": "55.637897"}
{"text": "After trying to use the closure iterator , I think that an object iterator form of closure is more fundamental than the collection iterator .This allows the start object to be included in the results , so a root and all its kids would be returned by .", "label": "", "metadata": {}, "score": "55.646427"}
{"text": "After trying to use the closure iterator , I think that an object iterator form of closure is more fundamental than the collection iterator .This allows the start object to be included in the results , so a root and all its kids would be returned by .", "label": "", "metadata": {}, "score": "55.646427"}
{"text": "To install the rules , an XLE process must be started with the grammar containing the rules in question .This can be done via the menu bar .Under LFG there is : .lfg files referenced in config information Display comments from .", "label": "", "metadata": {}, "score": "55.648518"}
{"text": "This sentence has two different c - structures , depending on how the prepositional phrases are attached .The title of the c - structure display reports that there are two valid c - structures , but only one is displayed .", "label": "", "metadata": {}, "score": "55.676105"}
{"text": "Upon finding the appropriate series of rules and inferred sentences , the invention combines the rules and inferred sentences as a bridging inference path .This is done progressively by continuebridge 405 .Specifically , each time continue bridge is invoked it makes a copy of the path and adds the current bridgefrom to the path .", "label": "", "metadata": {}, "score": "55.746178"}
{"text": "Boundary markers in the phonetic shape of a lexical entry are ignored when matching that lexical entry against a phonological rule , unless the rule explicitly requires the boundary .Boundary markers are erased at the end of each cycle and stratum .", "label": "", "metadata": {}, "score": "55.75936"}
{"text": "Suppose the morpher is analyzing some surface form .Once a real lexical entry has been looked up in the course of analysis , its Family Name ( if any ) is known .If any relative lexical entry has the same Part of Speech , Subcategorization , Head and Foot Features as one of the storable lexical entries in the derivation , then that Relative Lexical Entry represents an irregular form which blocks the derivation .", "label": "", "metadata": {}, "score": "55.76999"}
{"text": "The result is a slightly larger left - corner ( 2 ) .This process repeats itself until a left - corner is constructed which dominates the whole string ( 3 ) .The string is recognized from left to right .", "label": "", "metadata": {}, "score": "55.908188"}
{"text": "The rule may also require the presence or absence of specified MPR feature names .A phonological rule may require the presence or absence of designated MPR features ; syntactic features are invisible to phonological rules .There are three ways in which features can become attached to a lexical entry .", "label": "", "metadata": {}, "score": "55.91233"}
{"text": "Purpose : This defines the Foot Features which the morphological rule adds to the lexical entry output by the rule .If this field is omitted , the rule does not assign any additional Foot Features to the lexical entry output by the rule .", "label": "", "metadata": {}, "score": "55.944878"}
{"text": "Notice that the OBJ f - structure is identical to that of the TOPIC .If you click on the constraints button , then the path that the functional uncertainty took will be indicated by the value of FU_ATTR relation , which is constrained to be OBJ in this case .", "label": "", "metadata": {}, "score": "55.986893"}
{"text": "List of integer plus Simple Context : the integer corresponds to one of the members of the Required Phonetic Input list ( in the same way as an integer member of this field , see above ) .If the member of the Required Phonetic Input of the rule to which this member of the Phonetic Output list corresponds is an optional segment sequence , it may match multiple segments in the phonetic input ; the features are assigned to all such segments .", "label": "", "metadata": {}, "score": "56.01711"}
{"text": "Moreover , most systems have been evaluated using Choi 's data set [ 1 ] which is biased for systems using mostly lexical repetition .As a consequence , these systems are not tested in real - world environments and their application may prove worst results than presented in the literature .", "label": "", "metadata": {}, "score": "56.043606"}
{"text": "The positional analysis used in Englex 's lexicon is very simple .First , some words are particles that never bear affixes ; these include pronouns , prepositions , and conjunctions .Second , words that may bear affixes have this structure shown in figure 3.1 .", "label": "", "metadata": {}, "score": "56.11006"}
{"text": "2 is a flowchart illustrating a sequence of method steps for retrieving derivation information of an entry for a suffix ; and .FIG .3 is a flowchart illustrating a sequence of method steps for applying derivation information to an entry .", "label": "", "metadata": {}, "score": "56.167755"}
{"text": "4 ) .Next , the invention generates first inferred tagged sentences 504 from the rules 503 as shown above under continuebridge , which recursively invokes itself until a maximum path length is reached or no rules apply .In a similar manner to that shown above , the invention then matches the first inferred tagged sentences 504 to second rules 505 and generates second inferred tagged sentences 506 from the second rules 505 .", "label": "", "metadata": {}, "score": "56.167973"}
{"text": "Else , .Set the ThisBinding to the same value as the ThisBinding of the calling execution context .Set the LexicalEnvironment to the same value as the LexicalEnvironment of the calling execution context .Set the VariableEnvironment to the same value as the VariableEnvironment of the calling execution context .", "label": "", "metadata": {}, "score": "56.17237"}
{"text": "The title - bar of the F - structure window also indicates the number of solutions displayed in the window and the overall number of f - structures .For this example , the single solution meets all the grammaticality conditions and is displayed in the window .", "label": "", "metadata": {}, "score": "56.18541"}
{"text": "The user is free to provide lexical entries for roots , stems , or partially or completely inflected/ derived words .Because of this freedom on the part of the user to provide both inflected and uninflected lexical entries , the lexical entries into which the morpher module analyzes input words are of one of two types : real entries , and virtual entries .", "label": "", "metadata": {}, "score": "56.188843"}
{"text": "Let isMapped be the result of calling the [ [ GetOwnProperty ] ] internal method of map passing P as the argument .Let result be the result of calling the default [ [ Delete ] ] internal method ( 8.12.7 ) on the arguments object passing P and Throw as the arguments .", "label": "", "metadata": {}, "score": "56.31848"}
{"text": "This template says that N - V is expanded into instances of both the N and V categories .Thus when a root from the N - V sublexicon such as spy is used by the word grammar , two instances of it are created -- one with the features specified by the N template above and another with the features specified by the V template .", "label": "", "metadata": {}, "score": "56.34295"}
{"text": "A feature constraint consists of two feature paths separated by an equals sign .( Note that subscripts are used to distinguish multiple instances of a symbol in a rule ( for instance , Word_1 and Word_2 in the first rule ) .", "label": "", "metadata": {}, "score": "56.357872"}
{"text": "Implementation notes : It is not an error for tracing to be turned on for a rule which was already being traced , or off for a rule which is not being traced .It is not an error to turn tracing of all rules on or off when there are no rules .", "label": "", "metadata": {}, "score": "56.47329"}
{"text": "Using this ewluation method , we compare two semantic extraction techniques which produce similar word lists , one using syntactic context of words , and the'other using windows of heuristiclly tagged words .The two techniques are very similar except that in one case selective natural language processing , a partial syntactic analysis , is performed .", "label": "", "metadata": {}, "score": "56.474754"}
{"text": "If the binding is an immutable binding , a TypeError is always thrown .The S argument is ignored because strict mode does not change the meaning of setting bindings in declarative environment records .Let envRec be the declarative environment record for which the method was invoked .", "label": "", "metadata": {}, "score": "56.506943"}
{"text": "The lexicon module is a \" dictionary \" , or database , containing words and semantic knowledge related to each word .The processing module typically includes a plurality of analyzer modules which operate upon the input text and the lexicon module in order to process the text and generate the computer - understandable semantic representation .", "label": "", "metadata": {}, "score": "56.512478"}
{"text": "Declarative environment records support the methods listed in Table 18 in addition to the Environment Record .Table 18 - Additional Methods of Declarative Environment Records .Method .Purpose .CreateImmutableBinding(N ) .Create a new but uninitialized immutable binding in an environment record .", "label": "", "metadata": {}, "score": "56.559105"}
{"text": "Purpose : By default , the morpher assigns a default value of ( ) ( the empty set ) to all morphosyntactic feature names .This default value is used as the value of the feature in the absence of a specified value in a Lexical Entry data structure .", "label": "", "metadata": {}, "score": "56.575348"}
{"text": "These sequences can not include any segments of morphemes which have not yet been attached by a morphological rule , i.e. which are outside of the \" current \" stem .The application of phonological rules may also be restricted by requiring the presence or absence of specified MPR features and/ or part of speech .", "label": "", "metadata": {}, "score": "56.6167"}
{"text": "Pollard , Carl and Ivan A. Sag .Head - Driven Phrase Structure Grammar .The University of Chicago Press , Chicago .Lexical Phonology is a theory about the organization of grammar .In particular , it deals with the relationship among phonology , morphology , and the lexicon .", "label": "", "metadata": {}, "score": "56.623047"}
{"text": "The predictive inference is 604 .In this embodiment , the invention chooses all matching rules .This is different than in the bridge case , because there is no second input sentence to constrain the results .However , this is mitigated by the fact that only one level of rule application is performed in predictive inference , so not many inferences will be generated .", "label": "", "metadata": {}, "score": "56.634598"}
{"text": "A morphological rule may also change the syntactic feature content , part of speech , etc . of a lexical entry .Morphological Rules have one or more subrules , which apply disjunctively to a given form : the first subrule to match a given form is the only subrule which can apply .", "label": "", "metadata": {}, "score": "56.644165"}
{"text": "Whenever you wish to install a new rule , you must restart XLE using the \" Restart \" option under the XLE window and then create the parser again .Before you can use your rules to analyze a sentence , you have to define a few words --- a toy lexicon .", "label": "", "metadata": {}, "score": "56.65086"}
{"text": "Thus a word consists of an obligatory root ( or indivisible stem ) preceded by zero or more prefixes and followed by zero or more suffixes .This accounts for all derivational structure .Following a derivational stem is an optional slot for an inflectional suffix and an optional slot for a clitic .", "label": "", "metadata": {}, "score": "56.6775"}
{"text": "If desc is undefined then return desc .Let map be the value of the [ [ ParameterMap ] ] internal property of the arguments object .Let isMapped be the result of calling the [ [ GetOwnProperty ] ] internal method of map passing P as the argument .", "label": "", "metadata": {}, "score": "56.68635"}
{"text": "The description of each semantic transformation rule is provided in Appendix III .Appendix II shows the prefixes and their transformations for each part of speech .Prefix derivatives are not encoded in the derivative fields of the lexical entry structure .", "label": "", "metadata": {}, "score": "56.728264"}
{"text": "( Some generative phonologists would propose a stratum of precyclic rules as well . )Within each stratum , the user ( or the shell ) may define several types of rule interaction , including cyclic and non - cyclic application .", "label": "", "metadata": {}, "score": "56.804993"}
{"text": "You then add the generalized PRED schema to the body of the template definition .The result is the following definition : .Having installed this definition , you must then change all of the common - noun entries so that they no longer specify their idiosyncratic PRED schema and instead supply their particular predicate as an argument to the CN template .", "label": "", "metadata": {}, "score": "56.80552"}
{"text": "For instance , if a morphological rule produces [ + subjunctive ] verbs , it is possible to deduce that the input of this rule ( if it is derivable at all ) must have the feature [ + subjunctive ] , and a part of speech of verb .", "label": "", "metadata": {}, "score": "56.81376"}
{"text": "The boxed nodes in the tree along with the empty f - structure window may be enough information to confirm that your grammar correctly classifies unacceptable strings as ungrammatical .In some cases , however , it may be important to examine the analysis results in more detail to make sure that the bad strings are bad for the right reasons .", "label": "", "metadata": {}, "score": "56.90048"}
{"text": "An \" ocl \" prefix could help , but then it still looks like an operation , not an iterator .- I 'm not sure that it 's a good idea to always include the initial object in the closure .", "label": "", "metadata": {}, "score": "56.921806"}
{"text": "An Environment Record records the identifier bindings that are created within the scope of its associated Lexical Environment .The outer environment reference is used to model the logical nesting of Lexical Environment values .The outer reference of a ( inner )", "label": "", "metadata": {}, "score": "56.938095"}
{"text": "We have successfully applied these techniques to over twenty corpora ranging from 1 to 6 megabytes .Results from the thesaurus produced from a collection of medical abstracts will also be presented here . by Branimir K. Boguraev , Mary S. Neff - In RIAO-2000 , Content - Based Multimedia Information Access , 2000 . \" ... Summaries automatically derived by sentence extraction are known to exhibit some coherence degradation , readability deterioration , and topical under - representation .", "label": "", "metadata": {}, "score": "56.98181"}
{"text": "The parser selects the left - most element of the string ( 1 ) , and proves that this element is the left - corner of the goal .To this end , a rule is selected of which this lexical entry is the left - most daughter .", "label": "", "metadata": {}, "score": "56.98422"}
{"text": "There are two ways to designate the category to be parsed .This first is to type that category as a prefix to the string to be parsed .XLE will parse the string as that category no matter what the current default parse category is set to .", "label": "", "metadata": {}, "score": "57.054153"}
{"text": "If there is no equation mentioning !Type this in before the period and the rule for S becomes .As mentioned , the semi - colon is used to indicate where the annotations for a particular category end .But it is not needed after the annotations on the VP since the closing period is sufficient to show where the annotations end .", "label": "", "metadata": {}, "score": "57.104084"}
{"text": "Let envRec be the object environment record for which the method was invoked .Let bindings be the binding object for envRec .Let value be the result of calling the [ [ HasProperty ] ] internal method of bindings , passing N as the property name .", "label": "", "metadata": {}, "score": "57.18683"}
{"text": "If n is greater than argCount , let v be undefined otherwise let v be the value of the n ' th element of args .Let argAlreadyDeclared be the result of calling env 's HasBinding concrete method passing argName as the argument .", "label": "", "metadata": {}, "score": "57.221977"}
{"text": "However , the use of phonological rules to insert or alter boundary markers ( i.e. readjustment rules ) is discouraged , as it may lead to computational intractability .In the absence of other restrictions , the fact that phonological rules can delete segments puts phonology into the domain of an unrestricted rewrite grammar .", "label": "", "metadata": {}, "score": "57.225338"}
{"text": "If this field is absent , the attempted application of the morphological rule being traced failed .( If the rule being traced is a phonological rule , this field will always be present , since a phonological rule can not fail , although it may leave its input unchanged . )", "label": "", "metadata": {}, "score": "57.28904"}
{"text": "Thus , the only possible parts of speech for a root entry of a word ending in the -s suffix are noun and verb .Noun and verb are thus the lexical targets for -s .The analyzer system \" knows \" this about -s , and therefore will not access ( or derive ) root entries which are not nouns or verbs .", "label": "", "metadata": {}, "score": "57.294865"}
{"text": "The internal structure of a word refers to lexical constituents , i.e. , root and any affixes , that make up the word .Known morphological analysis systems utilize affix stripping methods to obtain a word root .The affixes of the word are discarded .", "label": "", "metadata": {}, "score": "57.34285"}
{"text": "Morpher error : Lexical entry assigned to unknown stratum .\" , where is the value of the Lexical Entry ID field of the offending lexical entry , and is the name of the unknown stratum .This error message may also be generated by the function load_lexical_entry , which should prevent such a lexical entry from being added in the first place .", "label": "", "metadata": {}, "score": "57.355034"}
{"text": "Such a regular form will be found at lexical lookup , and will block its own derivation by rule from some other real lexical entry , which at least prevents duplicate analyses of a given word .One situation where it might be desirable to list productive forms is the case where tow forms of a given word exist ( due to historical change or dialectal variation ) .", "label": "", "metadata": {}, "score": "57.398087"}
{"text": "The abstract operation MakeArgSetter called with String name and environment record env creates a function object that when executed sets the value bound for name in env .It performs the following steps : .Let param be the String name concatenated with the String \" _ arg \" .", "label": "", "metadata": {}, "score": "57.46249"}
{"text": "ILE may be a real or virtual lexical entry ; OLE will be a virtual lexical entry .( The terms \" input \" and \" output \" are here used in the synthesis sense . )A morphological rule may be blocked under certain circumstances .", "label": "", "metadata": {}, "score": "57.463215"}
{"text": "The interesting predicate is the parse predicate .This predicate predicts , for a given goal , its possible head - corner , and then shows that this predicted head - corner , indeed is the head - corner of the goal .", "label": "", "metadata": {}, "score": "57.469383"}
{"text": "A storable lexical entry is one which is a candidate for entry in the user 's dictionary .In most cases , economy of storage ( and the patience of the user ) will dictate that only roots and irregular forms will actually be stored in the lexicon .", "label": "", "metadata": {}, "score": "57.474182"}
{"text": "If anything follows , it must be the beginning of a new rule . 'Any string of alphanumeric characters can serve as a category name , and a few punctuation marks such as ' ( single - quote ) are also allowed .", "label": "", "metadata": {}, "score": "57.521233"}
{"text": "The lexicon is contained in the following files : .At the beginning of each file is a table of contents .In the noun , verb , and adjective files , irregular forms are listed in the first part of the file followed by regular forms .", "label": "", "metadata": {}, "score": "57.569504"}
{"text": "At this point , no determination has been made on the validity of these breakdowns .For each pair , the next step , as indicated at 106 , is to determine what the true root is , since the base may include a spelling change .", "label": "", "metadata": {}, "score": "57.575924"}
{"text": "Thus the words compute , computer , computerize , recompute , recomputerize , and so on are related by derivation since they are different words ( lexemes ) , though based on the same root compute .Derivational affixes often change the part - of - speech of a word ( compute is a verb , computer is a noun ) .", "label": "", "metadata": {}, "score": "57.602127"}
{"text": "It is identical in form to the Previous Word field .If this field is omitted , there is no constraint on the following word .This field is intended for sandhi rules , in which the phonetic form of the following word is relevant to the application of a phonological rule .", "label": "", "metadata": {}, "score": "57.67974"}
{"text": "A further property of lexical rules is that their application is governed by the S[TRICT ] C[YCLE ] C[ONDITION ] , one of the most important principles of Lexical Phonology .The essence of the SCC is that feature - changing ( applications of ) cyclic phonological rules apply only in derived environments .", "label": "", "metadata": {}, "score": "57.689613"}
{"text": "Imagine that both were available .Then we have ample opportunity for . typos and confusion .Only one can be permitted .If just object closure existed , the interaction with implicit collect for collections would be nearly as confusing , so the collection wins for lexical ergonomic reasons .", "label": "", "metadata": {}, "score": "57.738693"}
{"text": "Structurally , a Phonetic Template is the record structure described below .Trace structures are record structures used to output information resulting from the tracing of one or more phonological and/or morphological rules during analysis ( unapplication ) or synthesis ( application ) , blocking , or from the tracing of lexical lookup .", "label": "", "metadata": {}, "score": "57.75345"}
{"text": "However , it is unwise to do such cross - type rule replacement . ) hc6009 \"Morpher error : Failure to translate character of string of item into a phonetic sequence using character table . \" , where is the character which could not be translated , is the string in the ( morphological ) rule which could not be translated , is the rule name , and is the name of the character table to which the string belongs .", "label": "", "metadata": {}, "score": "57.7584"}
{"text": "The rules of the first such sublist must belong to the stratum of the lexical entry , the rules of the next sublist must belong to the next ( more surface ) stratum , etc . realizational - features ( obligatory ) : A List - Valued Features list .", "label": "", "metadata": {}, "score": "57.77877"}
{"text": "( There was a translation , but it was ambiguous ; the final translation into a surface form can not be ambiguous . )hc6022 \" Morpher error : No strata defined . \" hc6033 'Morpher error : Stratum must be assigned a character definition table . '", "label": "", "metadata": {}, "score": "57.790886"}
{"text": "Let isMapped be the result of calling the [ [ GetOwnProperty ] ] internal method of map passing P as the argument .Let allowed be the result of calling the default [ [ DefineOwnProperty ] ] internal method ( 8.12.9 ) on the arguments object passing P , Desc , and false as the arguments .", "label": "", "metadata": {}, "score": "57.82229"}
{"text": "If you prefer to use the s- deletion rule , it is located in the file ENGLISH.RUL after the END keyword .Simply move it into the main body of rules and comment out the + ' lexical entry in the file AFFIX.LEX .", "label": "", "metadata": {}, "score": "57.846294"}
{"text": "The morpher/ lexical lookup module is also referred to as the \" morpher module \" in this specification .Its function is analyze each word of the input into a stem plus possible affixes .Conceptually , this is done by applying morphological and ( morpho-)phonological rules in analysis order ( i.e. the reverse of the order linguists usually think of ) until the morpher discovers a string matching the lexical entry of some stem in the user 's dictionary .", "label": "", "metadata": {}, "score": "57.850437"}
{"text": "\" The first portion and the second portion are disambiguated as to part of speech , word sense and coreference .The lexicon and ontology data structure has one or more lexical entries , concepts , and character strings .The lexicon and ontology data structure has one - to - many maps from character strings to lexical entries , one - to - one maps from lexical entries to concepts , one - to - many maps from concepts to lexical entries , and one - to - many maps from concepts to parent concepts .", "label": "", "metadata": {}, "score": "57.858818"}
{"text": "Property names that are not an IdentifierName are not included in the set of bound identifiers .Both own and inherited properties are included in the set regardless of the setting of their [ [ Enumerable ] ] attribute .Because properties can be dynamically added and deleted from objects , the set of identifiers bound by an object environment record may potentially change as a side - effect of any operation that adds or deletes properties .", "label": "", "metadata": {}, "score": "57.86821"}
{"text": "The s- deletion and i : y- spelling rules described in appendix A of Antworth 1990 are not used in Englex .This was done to achieve better processing performance .Because deletions are computationally expensive for the recognizer function , removing the s - deletion rule resulted in nearly a 20 % speed increase .", "label": "", "metadata": {}, "score": "57.898182"}
{"text": "a second portion .The method according to .claim 4 , all the limitations of which are incorporated herein by reference , further comprising providing connectors comprising one of \" causes , \" \" triggers , \" and \" has - plan .", "label": "", "metadata": {}, "score": "57.914864"}
{"text": "Set desc .[ [ Value ] ] to the result of calling the [ [ Get ] ] internal method of map passing P as the argument .Return desc .The [ [ DefineOwnProperty ] ] internal method of an arguments object for a non - strict mode function with formal parameters when called with a property name P , Property Descriptor Desc , and Boolean flag Throw performs the following steps : .", "label": "", "metadata": {}, "score": "57.926582"}
{"text": "Else if Type ( thisArg ) is not Object , set the ThisBinding to ToObject ( thisArg ) .Else set the ThisBinding to thisArg .Let localEnv be the result of calling NewDeclarativeEnvironment passing the value of the [ [ Scope ] ] internal property of F as the argument .", "label": "", "metadata": {}, "score": "57.96335"}
{"text": "As with the rules ( and templates ) , a given lexical item can be chosen via the LFG menu option \" Rules , templates , lexicon menus \" which will now read : .( toy - eng .lfg ) .", "label": "", "metadata": {}, "score": "57.97934"}
{"text": "There is also the undesirable possibility of inadvertently deleting boundary markers during synthesis .The following definition is written in the synthesis sense : rule MR attaches an affix to ILE to produce OLE .Note also that this defines a single application of MR ; in some cases , a morphological rule may apply more than once ( see section 4.2.8 , Definition of Application of a Set of Non - Realizational Morphological Rules ) .", "label": "", "metadata": {}, "score": "57.980118"}
{"text": "( An empty environment can simply be omitted from a phonological rule . )A Variable - Free Phonetic Sequence is defined as a Phonetic Sequence which does not contain any Optional Segment Sequences .Variable - free phonetic sequences are used internally to the morpher to represent sequences of segments in stems and words , and in certain parts of some rules .", "label": "", "metadata": {}, "score": "57.98522"}
{"text": "In other words , in this process tagpossibilities 421 creates all possible tagged sentences given a list of tokens from tagtokens 419 .Tagpossibilities 421 returns possible lists of lexical entries corresponding to all possible lists of contiguous tokens .Given character strings fromstring and tostring , bridge(fromstring , tostring ) 401 returns a list of bridges , where each bridge comprises a bridgefrom , bridgeto , and path .", "label": "", "metadata": {}, "score": "58.00111"}
{"text": "But for the moment , let 's enter walks as a separate word .Copy the entry for walk in toy - eng .lfg .Now append an s on walk and , at the same time , you might as well give the schemata for person , number , and tense : .", "label": "", "metadata": {}, "score": "58.01104"}
{"text": "Then save the file .The result will look like this : .Now let 's consider a transitive verb .Edit the verb definition of walk into kick by copying the lexical entry for walk and then replacing walk with kick , adding in an ( ^ OBJ ) and deleting the N part of the entry .", "label": "", "metadata": {}, "score": "58.101074"}
{"text": "Let envRec be the object environment record for which the method was invoked .Let bindings be the binding object for envRec .Return the result of calling the [ [ Delete ] ] internal method of bindings , passing N and false as arguments .", "label": "", "metadata": {}, "score": "58.105247"}
{"text": "An invocation of applyrules 409 on tagged sentence s starts by setting result to the empty list .For each rule in the rule base , it sets retcode and bd to the result of invoking match 411 on the left pattern of rule and s. If retcode equals SUCCESS , then it appends to result ( a ) the result of invoking instan 413 on the right pattern of rule and bd , and ( b ) the connective of rule .", "label": "", "metadata": {}, "score": "58.13566"}
{"text": "If tracing is turned on for lexical lookup , a Lexical Lookup trace record is produced for each attempted lexical lookup ; and if tracing of blocking is turned on , a Blocking Trace record is produced for each storable lexical entry built during the synthesis phase .", "label": "", "metadata": {}, "score": "58.168655"}
{"text": "maps from said concepts to said concepts .A program storage device readable by machine , tangibly embodying a program of instructions executable by the machine to perform a method of automatically producing bridging inferences that join two related input phrases , said method comprising : . applying a lexicon and ontology data structure to a first input phrase to produce a first tagged input phrase and applying said lexicon and ontology data structure to a second input phrase to produce a second tagged input phrase ; . matching said first tagged input phrase to first rules and matching said second tagged input phrase to second rules ; . generating first inferred phrases from said first rules and generating second inferred phrases from said second rules ; . matching said first inferred phrases to third rules and matching said second inferred phrases to fourth rules ; . selecting a first rule of said first rules and a second rule of said second rules that cause said third rule to match said fourth rule ; and .", "label": "", "metadata": {}, "score": "58.197647"}
{"text": "The tracing of morpher rules produces additional output in the form of a call to pretty_print plus a root trace structure ; see the discussion in section 5.8 of the Trace Record Structure .hc6006 \" Morpher error : Unknown word : . \" , where is the string which represents the ( internal ) printform of the word .", "label": "", "metadata": {}, "score": "58.231846"}
{"text": "Note that the Prefix and Suffix loops permit any number of prefixes or suffixes .This obviously is a rather coarse analysis of morphotactic structure , and as such greatly overrecognizes .While it enforces the relative order of prefixes , roots , and suffixes , it does not enforce any order among prefixes or suffixes .", "label": "", "metadata": {}, "score": "58.2984"}
{"text": "( More than one Template matched ; all matching names are shown . ) hc6056 \" Morpher error : field is missing from lexical entry with shape . \"( The user forgot to specify some obligatory field ; note that for this command , the lex_id is not obligatory . )", "label": "", "metadata": {}, "score": "58.298836"}
{"text": "Purpose : When this variable is true , the input field of each rule application and unapplication is output for all rules for which tracing is turned on .When this variable is false , the input fields of rule applications and unapplications are not shown .", "label": "", "metadata": {}, "score": "58.309326"}
{"text": "A compounding rule is a morphological rule with two input fields : one Head field and one Non - head field .Such a rule analyzes a word into two lexical entries ; for computational reasons , the Non - head field is required to be a Real Lexical Entry .", "label": "", "metadata": {}, "score": "58.309402"}
{"text": "To see the output of the new rule , do : .Note that the topicalized object a banana does not have a case feature and hence should trigger the rule .Before running the transfer , choose \" Debug Transfer \" under \" Commands \" in the f - structure window .", "label": "", "metadata": {}, "score": "58.320557"}
{"text": "Note that you can omit the semi - colon after the schemata for the NP and PP since the parentheses and final period are sufficient for XLE to infer where the schemata end . instantiated differently for each PP .Finally , type in a rule for simple noun phrases . schema .", "label": "", "metadata": {}, "score": "58.355167"}
{"text": "To provide an interface to syntactic parsing .For each input word , Englex should return its part - of - speech and all syntactically relevant inflectional catetories ( such as number and tense ) .Morphological processes are traditionally divided into two types : inflection and derivation .", "label": "", "metadata": {}, "score": "58.432487"}
{"text": "Support for Bags and Sequences is more dubious .The definitions above give useful results for trees and invalid for graphs .The number of occurrences of any object would only be useful if the result could indicate where they were found , which it does n't .", "label": "", "metadata": {}, "score": "58.485184"}
{"text": "The match operation 411 invokes an isa operation 415 .For example , given a character string s , tag(s ) 417 would be defined as tagpossibilities ( tagtokens(s ) ) .Given a character string s , tagtokens(s ) 419 returns a list of tokens , where a token comprises a lexical entry , start index , and an end index .", "label": "", "metadata": {}, "score": "58.495003"}
{"text": "The problem is in handling prefixes such as re which can optionally be followed by a hyphen , as in retry or re - try .Formerly , this prefix was given two lexical entries : re+ and re-+ .This required that -:0 be admitted as a feasible pair ( an unrestricted deletion of a lexical hyphen ) .", "label": "", "metadata": {}, "score": "58.507244"}
{"text": "The title bar of the C - Structure window tells you how many valid trees that the sentence had .For this simple sentence there is only one c - structure whose f - structure constraints have at least one valid solution .", "label": "", "metadata": {}, "score": "58.514534"}
{"text": "Kaplan , Ronald M. and Annie Zaenen .Long - distance dependencies , constituent structure , and functional uncertainty .In Mark Baltin and Anthony Kroch , editors , Alternative Conceptions of Phrase Structure .Chicago University Press , Chicago , pages 17 - -42 .", "label": "", "metadata": {}, "score": "58.665607"}
{"text": "Experience has suggested a refinement to this definition , and XLE marks a governable function as incoherent if a local predicate exists and it does not sanction the function .For example , this allows an f - structure corresponding to a prepositional phrase to have an OBJ even though the preposition itself serves as a semantically vacuous case - marker .", "label": "", "metadata": {}, "score": "58.7206"}
{"text": "If this field is absent , the lexical entry has no MPR features .If membership in a conjugation class or gender class is important in the syntax , the class membership should be indicated as a Head Feature , since syntactic rules make reference only to Head and Foot Features .", "label": "", "metadata": {}, "score": "58.74424"}
{"text": "ILEH and ILENH must each be partitionable by SRH and SRNH respectively , as defined above ( section 4.2.4 , Definition of Match between the Input Side of a Morphological Subrule and a Lexical Entry ) .( Given the specification of compounding rules given later , SRNH can not contain a Multiple Application field . )", "label": "", "metadata": {}, "score": "58.751915"}
{"text": "Middle - click on VP to display its f - structures .The f - structure window indicates that there is one solution , but it is incoherent .Notice that OBJ has been highlighted to show that it is the ungoverned attribute : .", "label": "", "metadata": {}, "score": "58.774048"}
{"text": "( In the case of a disjunctive rule of epenthesis , since there is no input segment , each possible position of epenthesis acts in the same manner , although it would be unusual for a rule of epenthesis to have more than one subrule . )", "label": "", "metadata": {}, "score": "58.77973"}
{"text": "Notice that the word walk is entered in lower - case , as it would appear in ordinary text .When analyzing words in an input sentence , XLE first attempts to match lexicon headings against the characters just as they appear in the input .", "label": "", "metadata": {}, "score": "58.78989"}
{"text": "For each suffix , the base part of speech ( POS ) is shown to the left of the arrow and the derived part of speech ( or lexical subcategory ) is to the right .This part of the table represents the syntactic transformation caused by adding the suffix to a root entry .", "label": "", "metadata": {}, "score": "58.80291"}
{"text": "This means you can test the NP subgrammar without typing in complete sentences , and XLE will not spend as much time exploring grammatical possibilities that are irrelevant to your current concerns .Also , XLE will automatically display in the C - Structure Window any trees spanning the string that are labeled with the current parse category .", "label": "", "metadata": {}, "score": "58.908127"}
{"text": "The semantic structure window is very similar to the f - structure window .If there is more than one projection defined for f - structures , then more than one button will appear in the f - structure window .Each button will have the letter prefix of that projection .", "label": "", "metadata": {}, "score": "58.928986"}
{"text": "A binding must not already exist in this environment record for N .Let envRec be the declarative environment record for which the method was invoked .Assert : envRec does not already have a binding for N .Create an immutable binding in envRec for N and record that it is uninitialized .", "label": "", "metadata": {}, "score": "58.95623"}
{"text": "If a rule is deleted from the rulebase by the function remove_morpher_rule , tracing of that rule is automatically turned off ( and will remain off until explicitly turned on , even if another rule of the same name is later added ) .", "label": "", "metadata": {}, "score": "58.98249"}
{"text": "Sequences of phonetic segments in a morphological rule are specified in terms of their phonetic features .A morphological rule may require or prohibit the presence of Morphological Rule Features or syntactic features ; may require that the input belong to a certain part of speech ; and may require that the input have certain syntactic subcategorization properties .", "label": "", "metadata": {}, "score": "59.00619"}
{"text": "To do this , we need a way to identify nouns .In the case of the grammar being used here , we can assume that everything with a number feature is a noun .Remember that our previous rule rewrote NUM to NUMBER .", "label": "", "metadata": {}, "score": "59.03405"}
{"text": "The present invention is specifically directed to a morphological analysis system and method .It is contemplated that the present invention could be utilized in a larger automated natural language text processing system which includes other modules which provide other types of semantic knowledge .", "label": "", "metadata": {}, "score": "59.128487"}
{"text": "The Root alternation stands for the Root slot in figure 3.1 which can be filled by a root sublexicon such as noun , verb , or adjective .Figure 3.7 shows several sample lexical entries for roots .The Root slot is obligatory , so there are no null entries in any of the root sublexicons .", "label": "", "metadata": {}, "score": "59.134632"}
{"text": "The invention enables the user 's goals to be inferred that allow an application to retrieve information and suggest products useful for satisfying those goals .BRIEF DESCRIPTION OF THE DRAWINGS .The foregoing and other objects , aspects and advantages will be better understood from the following detailed description of a preferred embodiment(s ) of the invention with reference to the drawings , in which : .", "label": "", "metadata": {}, "score": "59.146008"}
{"text": "This process can be applied iteratively , until the head dominates all words in the string .This is illustrated in figure 4.15 .The parser selects the head of the string ( 1 ) , and proves that this element is the head - corner of the goal .", "label": "", "metadata": {}, "score": "59.23674"}
{"text": "However , care should be taken in writing null affixation rules , lest they cause the morpher to loop infinitely .For instance , if a language had a null affixation rule that derived nouns from verbs , and another null affixation rule that derived verbs from nouns , with no further stipulation the morpher could enter an infinite regress of deriving nouns from verbs and vice versa .", "label": "", "metadata": {}, "score": "59.242226"}
{"text": "( Chart)4f79f8 % .The strings you then type into XLE window will be analyzed with respect to the new grammar .Request a parse by typing the following string into XLE : .At this point the parser uses the rules , lexicon , and morphology of the DEMO ENGLISH configuration to analyze the sentence .", "label": "", "metadata": {}, "score": "59.265137"}
{"text": "If Template specifies a Subcategorization , its Subcategorization list is a subset of the Subcategorization list of X .( 6 )If Template specifies a Morphological Rules field , it is a subset of the Morphological Rules list specified for X .", "label": "", "metadata": {}, "score": "59.285774"}
{"text": "Pinstanmany 706 takes a path of tagged sentences and bindings from imatch and produces a new path of tagged sentences .Pinstan 707 takes a tagged sentence and bindings and produces a new tagged sentence .In .FIG .4 , unidirectional depth - first search starting from the first input sentence is performed , while in .", "label": "", "metadata": {}, "score": "59.346718"}
{"text": "Warnings : The morpher enforces uniqueness of phonological / morphological rule names : if two rules of the same name are loaded , the first one will be deleted .( This allows rules to be changed by loading a new version with the same rule name . )", "label": "", "metadata": {}, "score": "59.36332"}
{"text": "For the purposes of this discussion , a deletion rule is any rule which deletes part of its input , i.e. where the number of segments in the output of the rule is less than the number of segments in its input .", "label": "", "metadata": {}, "score": "59.396145"}
{"text": "Then the invention applies rules to second input tagged sentences , producing more tagged sentences .Then the invention applies rules to the tagged sentences resulting from applying rules to first input tagged sentences .Then the invention applies rules to the tagged sentences resulting from applying rules to the second input tagged sentences , and so on .", "label": "", "metadata": {}, "score": "59.44161"}
{"text": "The rules in figure 3.12 define a simple and familiar word structure .A Word may be ( 1 ) a Word plus a CLITIC ; ( 2 ) a PARTICLE ( an unaffixable word ) ; or ( 3 ) a Stem plus an optional INFL ( inflection ) element .", "label": "", "metadata": {}, "score": "59.457325"}
{"text": "For each e in result , ( a ) it sets result 3 to the empty list , ( b ) for each f in e , it appends to result 3 the lexical entry of f , and ( c ) it appends result 3 to result 2 .", "label": "", "metadata": {}, "score": "59.466713"}
{"text": "Templates is scanned for an Affix Template whose Required Part of Speech matches the Part of Speech and LE ' , and whose Required Subcategorized Rules are a ( possibly improper ) subset of the Subcategorized Rules of LE ' .( It is not an error if no Affix Template matches against LE ' , but an error will occur if more than one Template matches . )", "label": "", "metadata": {}, "score": "59.58686"}
{"text": "& lt;elem&gt ; is the name an optional iterator variable for use in & lt;expression - with - elem&gt ; .& lt;acc&gt ; is the optional name of a result variable of type C(T ) .& lt;acc - init&gt ; is the optional initial value for & lt;acc&gt;.", "label": "", "metadata": {}, "score": "59.590782"}
{"text": "Affix slots allow disjunctive application based on the morphosyntactic properties of the stem , not on its phonological properties .Each morphological rule may have subrules to enforce phonologically - based allomorphy .The assumption is that it is never necessary to distinguish between two affixes on the basis of both their morphosyntactic and their phonological properties .", "label": "", "metadata": {}, "score": "59.66004"}
{"text": "This section walks you through the creation of a set of transfer rules .It uses demo - eng .lfg as a basis .The transfer rules that we will create map the f - structures of the grammar onto new f - structures .", "label": "", "metadata": {}, "score": "59.701416"}
{"text": "Note that the boundary marker itself can not be printed out , because its character definition table is unknown to the lexical entry . ) hc6051 \" Morpher error : Deletion rule deleted all segments and/or boundaries from phonetic sequence of lexical entry . \" hc6052 \"", "label": "", "metadata": {}, "score": "59.702316"}
{"text": "For example , with the parents and siblings of the two senses of the noun \" issue \" , word senses are given by a root followed by a sense number , with conceptual categories designated by any atom beginning with c- .", "label": "", "metadata": {}, "score": "59.75021"}
{"text": "Since the grammar can not parse post verbal PPs , no c - structure is produced and instead the following morphology appears : .The best way to debug this sort of problem is to try parsing subparts of the sentence , e.g. .", "label": "", "metadata": {}, "score": "59.750267"}
{"text": "The next step is to notify XLE that you have finished formulating the rule , and that the rule should be ' installed ' , that is , loaded into XLE .Save the file using C - x C - s ( the standard Emacs save command ) .", "label": "", "metadata": {}, "score": "59.8105"}
{"text": "Unapply all phonological rules of the top - most stratum and zero or more morphological rules of that stratum , and attempt lexical lookup of all storable lexical entries produced , saving any lexical entries found on lookup .Repeat the previous step for each lower stratum .", "label": "", "metadata": {}, "score": "59.930164"}
{"text": "Predict 403 invokes tag 417 on the input sentence to produce input tagged sentences and then applies rules to those tagged sentences to produce new tagged sentences representing predictive inferences .Applyrules 409 determines which rules match a tagged sentence , applies those rules to the tagged sentence , and returns the new tagged sentences that result from the application of those rules .", "label": "", "metadata": {}, "score": "60.001312"}
{"text": "These check boxes help you to keep track of what is being displayed .Comparing these node - numbers with the indices on the f - structure , it is easy to see that the outermost f - structure corresponds not only to the root S node , but also to the VP and V nodes .", "label": "", "metadata": {}, "score": "60.05237"}
{"text": "The PP adjunct now has an ADJUNCT - TYPE .Templates and Macros .As with writing XLE grammars , the XLE transfer system allows you to define templates and macros for commonly used combinations of facts .We will now add a template and macro and calls to them in our rules .", "label": "", "metadata": {}, "score": "60.108593"}
{"text": "Add the following rule to your file , making sure that it occurs after the NUM - NUMBER rule .There are two additional things to notice about this rule .The plus sign ( + ) in front of the NUMBER feature means that it will not be consumed ( i.e. , will not to be deleted ) by the rule .", "label": "", "metadata": {}, "score": "60.146667"}
{"text": "lfg which contains the lexical items for SIGDEMO ENGLISH .These are called in the configuration by FILES ; the order of the files reflects the order in which they override one another , with the last one overriding all the previous ones .", "label": "", "metadata": {}, "score": "60.158012"}
{"text": "On a new line type : .This gives the desired pattern of categories , but we also need some schemata to define the functional structures associated with these nodes .Since V is the head , and NP the object , the rule with the appropriate category - schemata pairs should read : . $ ( ^ ADJUNCT ) .", "label": "", "metadata": {}, "score": "60.16034"}
{"text": "The lexicon entry includes only the coarsest distinctions among word senses .Thus , the financial sense of \" issue \" ( e.g. , a new security ) falls under the same core sense as the latest \" issue \" of a magazine .", "label": "", "metadata": {}, "score": "60.171677"}
{"text": "Lexical Entries are record structures ; as described above ( see Lexical Entries , section 3 ) , each lexical entry represents a root , stem or word .The Lexical Entry data structure is used in the lexicon and in the output of the morpher .", "label": "", "metadata": {}, "score": "60.22254"}
{"text": "If Boolean argument D is provided and has the value true the new binding is marked as being subject to deletion .Let envRec be the declarative environment record for which the method was invoked .Assert : envRec does not already have a binding for N .", "label": "", "metadata": {}, "score": "60.33277"}
{"text": "When control enters an execution context for function code , an arguments object is created unless ( as specified in 10.5 ) the identifier arguments occurs as an Identifier in the function 's FormalParameterList or occurs as the Identifier of a VariableDeclaration or FunctionDeclaration contained in the function code .", "label": "", "metadata": {}, "score": "60.355667"}
{"text": "3 is a detail of rule 503 .The bridging inferences are 504 and 506 .The disambiguated inputs are 502 and 508 .In other words , .FIG .5 illustrates one example of how the invention [ 0001 ] applies the Lexicon and Ontology 101 ( as shown in .", "label": "", "metadata": {}, "score": "60.363297"}
{"text": "If Throw is true then throw a TypeError exception , otherwise return false .Call the [ [ Put ] ] internal method of map passing P , Desc .[ [ Value ] ] , and Throw as the arguments .", "label": "", "metadata": {}, "score": "60.423042"}
{"text": "That is , the morpher may serve as the front end to the dictionary .Dictionary commands are therefore listed together with other morpher commands in the following specification .This section describes the linguistic characteristics of the morpher module in general terms .", "label": "", "metadata": {}, "score": "60.434746"}
{"text": "A sample graph is : refrigerator - GLOSSt appliance rLOCATION - store - OBJECTt food which was parsed out of the gloss for refrigerator : \" an appliance where food is stored . \"( e.g. see , Harabagiu , Sanda M. , & Moldovan , Dan I. ( 1998 ) .", "label": "", "metadata": {}, "score": "60.44426"}
{"text": "This may be useful to reduce the amount of text output if full tracing is turned on , since the input of each rule application or unapplication is redundant ( being shown in the previous application or unapplication , or in the input to the stratum ) .", "label": "", "metadata": {}, "score": "60.471245"}
{"text": "( 7 )If Template specifies a Stratum , it is identical to the Stratum of X .( 8) If Template specifies lists of MPR Features , Head Features , Foot Features , and/or Obligatory Head Features , each such list is a subset ( not necessarily in the same order ) of the corresponding list of X .", "label": "", "metadata": {}, "score": "60.48174"}
{"text": "Function code that is supplied as the last argument to the built - in Function constructor is strict function code if the last argument is a String that when processed as a FunctionBody begins with a Directive Prologue that contains a Use Strict Directive .", "label": "", "metadata": {}, "score": "60.501846"}
{"text": "The better solution is simply to list derived forms such as reception in the lexicon , even though the morphological relationship between receive and reception is no longer captured by the lexicon .However , the derivational source of a word such as reception can be recorded in the lexicon by giving it a gloss such as V(re'ceive)+NR .", "label": "", "metadata": {}, "score": "60.530365"}
{"text": "Only these characters can be used in the lexical form part of a lexical entry .The gloss part of a lexical entry is not restricted to these characters .Accented characters and punctuation in input data must be handled by preprocessing software .", "label": "", "metadata": {}, "score": "60.555126"}
{"text": "The positional analysis need only go far enough to ensure that all correct parses are produced but not too many incorrect parses ( what counts as \" too many \" is left to the judgment of the analyst and the practical behavior of the system ) .", "label": "", "metadata": {}, "score": "60.604103"}
{"text": "In the default case , sublexicon names constitute the terminal categories used in the word grammar rules .As was shown above , the value of the cat feature of a lexical item is its sublexicon name ; thus mice belongs to the category N. The category N can then be used as a terminal category in the grammar rules .", "label": "", "metadata": {}, "score": "60.71123"}
{"text": "Morpher error : Unknown alpha variable used in a context of rule . \"( The specified alpha variable appears in the alpha_vars field of a simple context of the named rule , but it is not defined in the var_fs field of that rule . )", "label": "", "metadata": {}, "score": "60.72146"}
{"text": "hc6040 \"Morpher error : Unknown feature used in declaration of variable in rule . \" hc6042 \" Morpher error : Unknown natural class used in rule . \"( The specified natural class name appears in one of the phonetic sequences of the named rule , but it has not been defined ; see load_nat_class , section 6.1.6 . )", "label": "", "metadata": {}, "score": "60.842937"}
{"text": "However , Phonetic Sequences used for certain purposes must not contain Optional Segment Sequences ; see section 5.7.2.6 , Definition of Variable - Free Phonetic Sequences .A phonetic sequence which is an empty list matches any single segment or boundary marker .", "label": "", "metadata": {}, "score": "60.854412"}
{"text": "Calls to the template @CN can also be added to the N entry of walk , ensuring that all of the count nouns in the lexicon call the same template .The advantage of this approach is that if at some point in the future you want to extend or modify how common nouns behave , you can edit just the definition of the template and the change will affect all of the lexical entries that invoke it .", "label": "", "metadata": {}, "score": "60.8754"}
{"text": "There is no provision for \" wildcards . \"However , the special character # ( ASCII 35 ) at the beginning or end of the string representing the Phonetic Shape of Template must correspond to the respective terminus of the string representing the Phonetic Shape of X .", "label": "", "metadata": {}, "score": "60.89324"}
{"text": "2 ) to a first input sentence 501 to produce a first input tagged sentence 502 .The invention then matches the first input tagged sentence 502 to first rule 503 ( as shown in .FIG .3 ) from the rule base 103 using applyrules 409 which is invoked by continuebridge 405 ( as shown in .", "label": "", "metadata": {}, "score": "60.941933"}
{"text": "claim 16 , all the limitations of which are incorporated herein by reference , wherein said method further comprises providing disambiguated natual language rules .The program according to .claim 16 , all the limitations of which are incorporated herein by reference , wherein said method further comprises providing rules that are disambiguated as to part of speech , word sense , and coreference .", "label": "", "metadata": {}, "score": "61.008278"}
{"text": "It is impossible for an ECMAScript program to directly access or manipulate such values . 10.2.1Environment Records .There are two kinds of Environment Record values used in this specification : declarative environment records and object environment records .Declarative environment records are used to define the effect of ECMAScript language syntactic elements such as FunctionDeclarations , VariableDeclarations , and Catch clauses that directly associate identifier bindings with ECMAScript language values .", "label": "", "metadata": {}, "score": "61.104618"}
{"text": "XWN does not support representations of plans ( Harabagiu & Moldovan , 1998 , p. 399 ) , which are essential for natural language understanding and XWN does not support representation of causal rules , which are also essential for natural language understanding .", "label": "", "metadata": {}, "score": "61.11768"}
{"text": "The classic view ( Booij 1981 , Kiparsky 1982 ) is that morphology and phonology apply in tandem .After every word - formation rule , lexical phonological rules re - apply .The effect of this is tha lexical phonological rules apply cyclically .", "label": "", "metadata": {}, "score": "61.165882"}
{"text": "Englex consists of the three basic components that make up any PC - KIMMO description : a set of phonological ( or orthographic ) rules , a lexicon , and a word grammar .These components are described in detail in this chapter .", "label": "", "metadata": {}, "score": "61.18402"}
{"text": "First , it does not tell us the part - of - speech of a word ; note that the tree in figure 3.14 does not reveal that the word enlargement is a noun .Second , it still does not adequately characterize important morphotactic constraints .", "label": "", "metadata": {}, "score": "61.200924"}
{"text": "Add name as an element of the list mappedName s. .Let g be the result of calling the MakeArgGetter abstract operation with arguments name and env .Let p be the result of calling the MakeArgSetter abstract operation with arguments name and env .", "label": "", "metadata": {}, "score": "61.212566"}
{"text": "In fact , the motivation for this approach to parsing discontinuous constituency is already hinted at by Mark Johnson [ 38 ] : .My own feeling is that the approach that would bring the most immediate results would be to adopt some of the ' ' head driven ' ' aspects of Pollard 's ( 1984 ) Head Grammars .", "label": "", "metadata": {}, "score": "61.27587"}
{"text": "The eval code for a particular invocation of eval is the global code portion of that Program .Function code is source text that is parsed as part of a FunctionBody .The function code of a particular FunctionBody does not include any source text that is parsed as part of a nested FunctionBody .", "label": "", "metadata": {}, "score": "61.335693"}
{"text": "Should the default ( 0 ) prove too low , the user may set this variable to a higher value , although that will probably slow parsing . hc6009 , \" Morpher error : Failure to translate character of string of item into a phonetic sequence using character table .", "label": "", "metadata": {}, "score": "61.378056"}
{"text": "Contents : A list of atoms , each one of which is the name of a syntactic ( parser ) rule which the lexical item subcategorizes .If this field is absent , the lexical item does not subcategorize any rules .", "label": "", "metadata": {}, "score": "61.385067"}
{"text": "If envRec does not have a binding for the name that is the value of N , return true .10.2.1.1.6ImplicitThisValue ( ) .Declarative Environment Records always return undefined as their ImplicitThisValue .Return undefined .10.2.1.1.7 CreateImmutableBinding ( N ) .", "label": "", "metadata": {}, "score": "61.39542"}
{"text": "Let outer be the value of lex 's outer environment reference .Return the result of calling GetIdentifierReference passing outer , name , and strict as arguments .10.2.2.2 NewDeclarativeEnvironment ( E ) .When the abstract operation NewDeclarativeEnvironment is called with either a Lexical Environment or null as argument E the following steps are performed : .", "label": "", "metadata": {}, "score": "61.505188"}
{"text": "The method according to . claim 9 , all the limitations of which are incorporated herein by reference , further comprising providing rules that are disambiguated as to part of speech , word sense , and coreference .The method according to . claim 9 , all the limitations of which are incorporated herein by reference , further comprising providing connectors comprising one of \" causes , \" \" triggers , \" and \" has - plan .", "label": "", "metadata": {}, "score": "61.55887"}
{"text": "The accumulator is n't an iterator variable , so it needs to be & gt ; set apart .& gt;&gt ; & gt;&gt ; Introduction of the optional & lt;acc - init&gt ; allows the collection type to be & gt;&gt ; defined .", "label": "", "metadata": {}, "score": "61.561775"}
{"text": "claim 16 , all the limitations of which are incorporated herein by reference , wherein said method further comprises providing rules having : . a first portion ; . a connector ; and .a second portion .Description .CROSS - REFERENCE TO RELATED APPLICATIONS .", "label": "", "metadata": {}, "score": "61.56698"}
{"text": "The first constraint refers to categories which are both on the right side of the rule ( PREFIX and Stem_1 ) ; its effect is to either permit or block the application of the rule .The distinction between these two types of constraints is subtle but extremely important .", "label": "", "metadata": {}, "score": "61.609592"}
{"text": "Note that many of our previous rules have also applied : NUM has become NUMBER and GIRL has ANIM + .Optional Rules .Our final transfer rule is an optional rule that passivizes transitive verbs .To do this , we want to find f - structures with an object and a subject .", "label": "", "metadata": {}, "score": "61.692654"}
{"text": "The other daughters of the rule are parsed recursively .The result is a slightly larger head - corner ( 2 ) .This process repeats itself until a head - corner is constructed which dominates the whole string ( 3 ) .", "label": "", "metadata": {}, "score": "61.79325"}
{"text": "But that is less likely to be true as your grammars become more complex and cover a larger fragment of a natural language .XLE 's grammar - debugging facilities can help you explore the linguistic consequences of your grammatical formulations so that you can detect and correct both conceptual errors and errors of specification .", "label": "", "metadata": {}, "score": "61.80835"}
{"text": "Default : The default is the order in which the rules were loaded ; if no morphological rules have been loaded , the value is the empty list .Any new morphological rules which are loaded after this variable has been set will be appended to the end of the list of morphological rules .", "label": "", "metadata": {}, "score": "61.815704"}
{"text": "Let exists be the result of calling the HasBinding ( N ) concrete method of envRec passing name as the argument N .If exists is true , then .Return a value of type Reference whose base value is envRec , whose referenced name is name , and whose strict mode flag is strict .", "label": "", "metadata": {}, "score": "61.827038"}
{"text": "This distinction between inflection and derivation has several ramifications for building a morphological parsing system such as Englex .First , for Englex to interface with a syntactic parser , it must provide all the inflectional categories of a word as well as its part - of - speech .", "label": "", "metadata": {}, "score": "61.92884"}
{"text": "The schemata in lexical entries are identical in form and interpretation to the schemata that appear in c - structure rules , although they are not preceded by a colon .Begin the TOY ENGLISH lexicon by entering the definition for walk .", "label": "", "metadata": {}, "score": "61.975185"}
{"text": "For example , the S - DERIV constraint allows \" issuance \" to derive from either of the first two senses of the verb , with \" issuer \" and \" issuable \" deriving only from the \" giving \" sense .", "label": "", "metadata": {}, "score": "61.985985"}
{"text": "The inference produces disambiguated versions of the input sentences and inferences 113 as output .Referring to .FIG .2 , the Lexicon and Ontology 101 contains one or more lexical entries 201 , 203 , 205 , 207 ; one or more concepts 211 , 213 , 215 , 217 , 219 , 221 ; and one or more character strings 231 , 233 , 235 .", "label": "", "metadata": {}, "score": "62.017788"}
{"text": "( 3 ) If PSTi is a Simple Context , then Parti contains a single segment Seg such that PSTi is a subset of Seg ( i.e. every feature in PSTi has that same value in Seg ) ; .( 4 ) If PSTi is a string of one or more boundary markers , then Parti is that same string of boundary markers ; .", "label": "", "metadata": {}, "score": "62.030464"}
{"text": "By specifying morphological or phonological rules which only apply to ( or which fail to apply to ) forms marked with specified features ( see section 2.4 , Syntactic and Phonological/ Morphological Rule Features ) ; and .( 2 )By listing irregular forms in the lexicon .", "label": "", "metadata": {}, "score": "62.064224"}
{"text": "To parse the sentence ' dat jan ontwaakt ' , the head corner parser will proceed as indicated in figure 4.16 .Each of the steps will now be clarified as follows .The integers associated with the arrows indicate the order of the steps of the parsing process .", "label": "", "metadata": {}, "score": "62.066826"}
{"text": "In ( hopefully ! )An Ordinary ( non - realizational )Morphological Rule R applies to a Lexical Entry ILE if : .( 1 ) If a Part of Speech is specified on the input side of R , it is identical to the Part of Speech of ILE ; .", "label": "", "metadata": {}, "score": "62.092728"}
{"text": "So the new iterator should probably be called transitiveClosure ( ) .Whether transitive closure on objects or collections is more fundamental is a chicken and egg argument .Both are useful and beauty is in the eye of the beholder .", "label": "", "metadata": {}, "score": "62.09793"}
{"text": "The morphology --- all possible morphological analyses of each lexical item .Functional - structures --- including display of inconsistencies , incompletenesses , and incoherencies .XLE was originally written in the 1990 's and implements some of the recent additions to the LFG formalism .", "label": "", "metadata": {}, "score": "62.12321"}
{"text": "Usually incompleteness is detected at the top - level S , when it is known that there is no more information to be had .However , in this case the sentence is marked bad at the V constituent .This global analysis permits better localization of the source of the difficulty --- it enables the box to be drawn at the V instead of the S .", "label": "", "metadata": {}, "score": "62.14391"}
{"text": "For example , when you click on the S node with the right mouse button , XLE states : .In this section , you will go through some of the more common features used by the grammar writer .Additional documentation on the windows can be found in the XLE interface documentation .", "label": "", "metadata": {}, "score": "62.161858"}
{"text": "Englex can handle hyphenated compounds .If it recognizes a whole word and then encounters a hyphen , it will recurse and attempt to recognize the part after the hyphen as another word .It will even handle phrasal compounds this way , such as his come - what - may attitude .", "label": "", "metadata": {}, "score": "62.162537"}
{"text": "Multi - paragraph subtopic segmentation should be useful for many text analysis tasks , including information retrieval and summarization . \" ...As large on - line corpora become more prewlent , a number of attempts have been made to automatically extract thesaurus - like relations directly from text using knowledge poor methods .", "label": "", "metadata": {}, "score": "62.19401"}
{"text": "In other words , in this process applyrules 409 determines which rules apply to a tagged sentence , applies them , and returns the new tagged sentences resulting from the application of the rules .An invocation of match 411 on pattern p and tagged sentence s proceeds as follows , if the length of s is less than the length of p , then it returns FAILURE .", "label": "", "metadata": {}, "score": "62.239403"}
{"text": "The template 's ( output ) Subcategorization , Head Features , Foot Features , MPR Features , and Obligatory Features ( if any ) are subsets of the corresponding fields of the rule .The template 's Gloss String and Morphemic Representation ( if any ) are the same as the corresponding fields of the rule .", "label": "", "metadata": {}, "score": "62.250366"}
{"text": "Let strictVarEnv be the result of calling NewDeclarativeEnvironment passing the LexicalEnvironment as the argument .Set the LexicalEnvironment to strictVarEnv .Perform Declaration Binding Instantiation as described in 10.5 using the eval code .10.4.2.1 Strict Mode Restrictions .The eval code can not instantiate variable or function bindings in the variable environment of the calling context that invoked the eval if either the code of the calling context or the eval code is strict code .", "label": "", "metadata": {}, "score": "62.317497"}
{"text": "What we really want the N template to say is this : noun stems are singular and regular by default unless they are explicitly marked as plural or irregular .This is accomplished by placing an exclamation sign before the feature values in the template : .", "label": "", "metadata": {}, "score": "62.572525"}
{"text": "XLE takes the sequence of characters up to the next white - space as the spelling of the lexical entry .Of course walk can also be used as a noun .To express this alternative , add an entry for walk as a noun before the final period , using a semi - colon to separate the new entry from the pre - existing one : .", "label": "", "metadata": {}, "score": "62.58944"}
{"text": "\"Phonological rules \" , as here defined , encompass the allophonic and morpho - phonemic rules of structuralist linguistics , as well as the phonological rules of generative phonology .As mentioned above , phonological rules are allowed to apply at one or more strata .", "label": "", "metadata": {}, "score": "62.891495"}
{"text": "A feature structure consists of a feature name and a value .The notation used for feature structures looks like this : .[ number : singular ] .where number is the feature name and singular is the value , separated by a colon .", "label": "", "metadata": {}, "score": "62.94191"}
{"text": "A Stem may be ( 1 ) a PREFIX plus a Stem ; or ( 3 ) a Stem plus a SUFFIX ; or ( 3 ) a ROOT .Notice the congruence between this analysis and the positional analysis used in the lexicon ( see figures 3.1 and 3.2 above ) .", "label": "", "metadata": {}, "score": "62.997925"}
{"text": "The interface between phrasal and functional constraints .Computational Linguistics , 19(4):571 - -590 .Reprinted in Mary Dalrymple , Ronald M. Kaplan , John Maxwell , and Annie Zaenen , eds . , Formal Issues in Lexical - Functional Grammar , 403 - -429 .", "label": "", "metadata": {}, "score": "63.0093"}
{"text": "The alphabet of word - forming characters is declared in the file ENGLISH.RUL .It consists of these characters : .b c d f g h j k l m n p q r s t v w x y z a e i o u ' - ' + .", "label": "", "metadata": {}, "score": "63.035942"}
{"text": "The features field of these three entries contains feature abbreviations that will convey morphotactic information about the inflectional suffixes to the word grammar .Clitics are distinguished from affixes .Affixes are constrained in what word classes they can attach to ; for instance , the plural suffix + s can only attach to a noun .", "label": "", "metadata": {}, "score": "63.06543"}
{"text": "When features which have become uninstantiated are referred to by another rule , Hermit Crab assumes the rule applies without actually instantiating the features in question to all possible combinations of values .As mentioned above , a morphological rule may be assigned to any one stratum .", "label": "", "metadata": {}, "score": "63.066887"}
{"text": "hc6011 \" Morpher error : Failure to translate the set of phonetic features into a character using character table . \" , where is the set of features which could not be translated , and is the name of the character table which was being used .", "label": "", "metadata": {}, "score": "63.068363"}
{"text": "The object will become the subject .Finally , a PASSIVE + feature is introduced .Add the following rule to your grammar : .SUBJ(%Fstr,%Subj ) , OBJ(%Fstr,%Obj ) ?In this rule , the SUBJ and OBJ are not preceded by + signs because they will be deleted by the rule application ( and replaced by OBL - AG and a new SUBJ ) .", "label": "", "metadata": {}, "score": "63.219868"}
{"text": "If this field is omitted , there are no required Head Features for the head lexical entry .Purpose : This list gives the Foot Features with which the Foot Features of the head lexical entry must be unifiable in order to undergo the rule .", "label": "", "metadata": {}, "score": "63.24684"}
{"text": "Normal output : If each word in the input list is successfully morphed , the output is a list whose first element is the atom word_analyses , and whose second element is a list of lists .Each sublist is a list of lexical entries , one for each successful morphing of an input word .", "label": "", "metadata": {}, "score": "63.37928"}
{"text": "There are two kinds of Rule Analysis Trace Record , depending on whether the rule being traced is a morphological or a phonological rule .They differ only in the Record Label ( mrule_app or prule_app ) .A Rule Synthesis Trace Record does not have an explicit continuation ; the trace record immediately following it , if any , is its continuation .", "label": "", "metadata": {}, "score": "63.41493"}
{"text": "Englex does not handle these cases ; they must be handled with preprocessing .Englex 's lexicon contains approximately 20,000 lexical entries .These entries are affixes , roots , indivisible stems and solid compounds .Of these , there are approximately 11,000 nouns , 4,000 verbs , and 3,400 adjectives .", "label": "", "metadata": {}, "score": "63.437176"}
{"text": "( If tracing is turned on , a trace record is output before the normal output ; see Trace Record Structure , section 5.8 . )Abnormal output : Any of the error messages which may be output by morph_and_lookup_word , except for hc6006 .", "label": "", "metadata": {}, "score": "63.44633"}
{"text": "An attempt might be : . pour - OBJECTt water - DESTINATIONt fire .-CAUSEt fire - ATTRIBUTEt extinguished .However , this fails to capture the fact that both fires are the same .( Furthermore , CAUSE and DESTINATION are not relations derived from the WordNet glosses . )", "label": "", "metadata": {}, "score": "63.499214"}
{"text": "The value of the lex feature is taken from the lexical form field ( \\lf ) .The value of the gloss feature is taken from the gloss field ( \\gl ) .The features number and reg , however , are user - defined features taken from the abbreviations pl and irreg in the features field ( \\fea ) .", "label": "", "metadata": {}, "score": "63.506763"}
{"text": "However , XLE does include a bottom element in the f - structure subsumption lattice , and that element provides for unique minimal solutions for f - descriptions of this sort .If an attribute has bottom as its value , then neither the attribute nor the value is shown in the f - structure display , just as if no assertion about the attribute had been made .", "label": "", "metadata": {}, "score": "63.510975"}
{"text": "Component .Purpose .LexicalEnvironment .Identifies the Lexical Environment used to resolve identifier references made by code within this execution context .VariableEnvironment .Identifies the Lexical Environment whose environment record holds bindings created by VariableStatements and FunctionDeclarations within this execution context .", "label": "", "metadata": {}, "score": "63.523342"}
{"text": "10.1 Types of Executable Code .Global code is source text that is treated as an ECMAScript Program .The global code of a particular Program does not include any source text that is parsed as part of a FunctionBody .Eval code is the source text supplied to the built - in eval function .", "label": "", "metadata": {}, "score": "63.604176"}
{"text": "( However , traces of rule unapplication may contain optional segments resulting from the unapplication of epenthesis or deletion rules ( see section 5.8.3.2 Phonological Rule Analysis Trace Record -- Rule Input . )Fn ) be a Phonetic Sequence .This list may be translated into the Regular Expression RegExpr consisting of the terms C1 .", "label": "", "metadata": {}, "score": "63.696724"}
{"text": "hc6019 \" Morpher error : Rules can not be loaded , because strata have not been defined . \" hc6037 \" Morpher error : Segment or boundary marker used in rule is not defined in character definition table . \"( The segment is not defined in the character definition table specified in the segment record . )", "label": "", "metadata": {}, "score": "63.743927"}
{"text": "Let envRec be a new declarative environment record containing no bindings .Set env 's environment record to be envRec .Set the outer lexical environment reference of env to E .Return env .10.2.2.3 NewObjectEnvironment ( O , E ) .", "label": "", "metadata": {}, "score": "63.74782"}
{"text": "Ed Willink .------------------------------------------------------------ ---------On Mon , 14 Jul 2008 15:59:16 -0400 , Christian W. Damus wrote : .Hi , Neil , .Actually , the closure iterator is n't really syntactic sugar .The OCL specification suggests ( requires ? )", "label": "", "metadata": {}, "score": "63.782066"}
{"text": "Rules are entered into XLE by editing the rule file ( toy - eng .lfg for this tutorial ) .The Version and Language are the two parts of the rule file that were introduced above .The format for a single simple rule is the following : .", "label": "", "metadata": {}, "score": "63.880726"}
{"text": "Consider again the example of the previous paragraph , but assuming past tense affixation was handled by an inflectional template .Prior to the application of the template , the relative lexical entries of the stem run would be checked to see if any were identical to the lexical entry for run except for bearing the realizational feature [ past tense].", "label": "", "metadata": {}, "score": "63.925377"}
{"text": "Englex steers a middle course between these purposes , but ultimately it is up to the user to determine the behavior of the system .In terms of its coverage of English , Englex has these goals : .To account for all major spelling rules of English .", "label": "", "metadata": {}, "score": "63.980625"}
{"text": "Assert : The result of calling the [ [ HasProperty ] ] internal method of bindings , passing N as the property name , is false .If D is true then let configValue be true otherwise let configValue be false .", "label": "", "metadata": {}, "score": "64.04678"}
{"text": "Default : The default is the order in which the rules were loaded ; if no phonological rules have been loaded , the value is the empty list .Any new phonological rules which are loaded after this variable has been set will be appended to the end of the list of phonological rules .", "label": "", "metadata": {}, "score": "64.10074"}
{"text": "Clicking on the \" prev \" button will redisplay the first tree .You may need to scroll the window horizontally , using the bottom scroll - bar , to see all of the tree ( or toggle the node numbers to off ) .", "label": "", "metadata": {}, "score": "64.11728"}
{"text": "When called , the following steps are performed : .If lex is the value null , then .Return a value of type Reference whose base value is undefined , whose referenced name is name , and whose strict mode flag is strict .", "label": "", "metadata": {}, "score": "64.43808"}
{"text": "The method according to . claim 1 , all the limitations of which are incorporated herein by reference , further comprising providing disambiguated natual language rules .The method according to . claim 1 , all the limitations of which are incorporated herein by reference , further comprising providing rules that are disambiguated as to part of speech , word sense , and coreference .", "label": "", "metadata": {}, "score": "64.47733"}
{"text": "A word belonging to the N - V sublexicon is expanded into both a noun and a verb by the word grammar .For example , here is the Recognizer results for the input word hope ( trees are not shown ) : . ' hope ' hope [ head : [ finite:- pos : V ] ] [ clitic:- head : [ number : SG pos : N ] ] .", "label": "", "metadata": {}, "score": "64.47763"}
{"text": "The present article deals with a situation that lies between the needs of an advanced learner 's dictionary and those of a specialised dictionary in attempting to build a pattern dictionary for verbs which are being used in scientific research papers .", "label": "", "metadata": {}, "score": "64.49542"}
{"text": "The present article deals with a situation that lies between the needs of an advanced learner 's dictionary and those of a specialised dictionary in attempting to build a pattern dictionary for verbs which are being used in scientific research papers .", "label": "", "metadata": {}, "score": "64.49542"}
{"text": "An empty list as output is not considered an error , but implies that there are no lexical entries which are superentries of the given lexical entry .Warnings : The morpher is not guaranteed to remember the Lexical Entry ID field of the lexical entries returned by this function from one Hermit Crab session to another .", "label": "", "metadata": {}, "score": "64.5228"}
{"text": "In contrast , the words compute , computes , computing , and computed are related by inflection since they are all forms of the same word ( lexeme ) compute .Inflection typically encodes categories such as number , tense , gender , and case which are relevant to syntax .", "label": "", "metadata": {}, "score": "64.57327"}
{"text": "No .10/228,122 , filed Aug. 26 , 2002 now U.S. Pat .No .7,136,807 , hereby incorporated by reference .BACKGROUND OF THE INVENTION .Field of the Invention .The invention relates to natural language processing , commonsense reasoning , and knowledge representation .", "label": "", "metadata": {}, "score": "64.617584"}
{"text": "This field is intended for the sandhi rules , in which the phonetic form of the preceding word is relevant to the application of a phonological rule .There is no provision for specifying properties other than the phonetic form of the preceding word ( which is probably inadequate , but it is not clear from linguistic theory what would be adequate ) .", "label": "", "metadata": {}, "score": "64.69217"}
{"text": "The rules file ( which had its origins in Karttunen and Wittenburg 1983 ) is largely the same , but some differences are noted in section 3.4 .The lexicon described in appendix A is only a small toy lexicon and is superseded by Englex .", "label": "", "metadata": {}, "score": "64.774826"}
{"text": "If PROSeq is the empty list ( a rule of deletion ) , PLOSeq is the empty list ; .If its structural description is met more than once in a given input , a phonological rule will apply to that sequence multiple times ( cf .", "label": "", "metadata": {}, "score": "64.79382"}
{"text": "The trade - off is that there is some loss in linguistic felicity .The s- deletion rule deletes a possessive suffix s when it follows an s , for example lexical boy+s+ 's to surface boys ' .In order to do away with this rule , it is necessary to add the allomorph + ' to the GENITIVE sublexicon ( in the file english.lex ) .", "label": "", "metadata": {}, "score": "64.80379"}
{"text": "The Stratum of ILE must be included in the Rule Strata of PR .The sub - sequence PLISeq of PLSeq which matches against the Input Sequence of PR is referred to as the \" input stretch \" of PLSeq .( There may be more than one input stretch in a given lexical entry . )", "label": "", "metadata": {}, "score": "64.80597"}
{"text": "( Boundary markers are not associated with any phonetic features , hence the character(s ) which represent them in Str are also used to represent them in PS . )( 4 ) If Str is non - empty , go to step ( 2 ) .", "label": "", "metadata": {}, "score": "64.82422"}
{"text": "Fields : All fields are the same as those of the Stratum Analysis Trace Record , except that there is no explicit continuation field .The trace record immediately following the Stratum Analysis Trace Record , if any , will be its continuation .", "label": "", "metadata": {}, "score": "64.840805"}
{"text": "4 is a drawing of the procedures in an embodiment of the invention .FIG .5 is a drawing of sample data structures involved in a bridging inference .FIG .6 is a drawing of sample data structures involved in a predictive inference .", "label": "", "metadata": {}, "score": "64.85362"}
{"text": "Assert : envRec must have an uninitialized immutable binding for N .Set the bound value for N in envRec to V .Record that the immutable binding for N in envRec has been initialized .10.2.1.2 Object Environment Records .Each object environment record is associated with an object called its binding object .", "label": "", "metadata": {}, "score": "64.88185"}
{"text": "( This should be a unique lexical entry ; if there are more than one lexical entries matching this description , an error results .If RzF is empty , this step is skipped . )If there is no such lexical entry in StemSet , then set LE ' to LE .", "label": "", "metadata": {}, "score": "64.900894"}
{"text": "In this case , you do not need to restart XLE , since you have only changed the lexicon .XLE notices that you have changed the lexicon and automatically re - installs it .This only works for lexical entries : if you change a file with other types of grammatical resources , then XLE will warn you that the grammar has changed .", "label": "", "metadata": {}, "score": "64.9864"}
{"text": "Compounding rules are applied in the same way as other morphological rules , except for the differences specified in the following subsections .For these subsections , SRH and SRNH refer to the Head and Non - head fields respectively of SR , and ILEH and ILENH refer to the corresponding input lexical entries .", "label": "", "metadata": {}, "score": "65.00959"}
{"text": "\" Morpher error : Lexical entry with phonetic shape must have a lexical ID . \"hc6057 \" Morpher error : field is missing from lexical entry . \"( An obligatory field is missing . )Warnings : The lexical entry is not automatically saved ( see section 6.5.1 , dump_dictionary_to_file ) .", "label": "", "metadata": {}, "score": "65.018654"}
{"text": "Note that the top part of the main transfer documentation provides a detailed description of how transfer rules work , especially as regards f - structure facts , and a sample set of translation rules .Create a file called demo-eng-xfr.pl .", "label": "", "metadata": {}, "score": "65.04565"}
{"text": "Both the linguist and NLP researcher would insist that the first goal be met ( though even here the NLP researcher might be more forgiving ) .But with regard to the second goal , only the linguist would require that it be fully met in order for the description to be adequate .", "label": "", "metadata": {}, "score": "65.097946"}
{"text": "( Message hc6051 should be used if the deletion rule which caused this error can be determined ; message hc6052 may be used otherwise , e.g. if the error only became apparent at the end of the stratum , when boundary markers are erased . )", "label": "", "metadata": {}, "score": "65.19359"}
{"text": "The displays in the C - Structure and F - Structure windows give access to additional information about the analysis .Whenever you click on a button with the right mouse button , a description of that button will appear in the XLE window .", "label": "", "metadata": {}, "score": "65.21823"}
{"text": "If a rule_name is provided as an argument , tracing is turned on for that rule in analysis mode if analysis_mode is true , and off for analysis mode otherwise ; and it is turned on for generate mode if generate_mode is true , and off otherwise .", "label": "", "metadata": {}, "score": "65.243195"}
{"text": "Normal output : A list consisting of the identifier ( atom ) morphological_rules plus a list of rule structures matching the template .If the pattern does not match any rules , this sublist will be empty .This is not considered an error .", "label": "", "metadata": {}, "score": "65.243225"}
{"text": "p. 73 ) .Thus , the problems with FAUSTUS are that knowledge entry is time consuming and that knowledge entry must be performed by knowledge representation experts .XWN is a knowledge base designed around WordNet glosses .It is a knowledge base of ways of expanding or rewriting concepts .", "label": "", "metadata": {}, "score": "65.37128"}
{"text": "Also let LE be a Lexical Entry to which the Stratum is being applied , and let RzF be the set of features to be realized in the derivation .Then a stem LE ' is selected as follows : Let StemSet be the set of lexical entries in the family of LE .", "label": "", "metadata": {}, "score": "65.396774"}
{"text": "It is identical in form to the left environment field .If this field is omitted , there is no constraint on the right environment of the subrule .The right environment can not extend across a word boundary ( i.e. white space ) .", "label": "", "metadata": {}, "score": "65.49324"}
{"text": "The nodes represent ( some of ) the information available at the moment this step is performed .The left - most daughter of each local tree corresponds to the head daughter .The next goal is to show that this lexical entry is the head corner of the top goal ; furthermore the words that still have to be covered are now jan , ontwaakt .", "label": "", "metadata": {}, "score": "65.57037"}
{"text": "Tagtokens 419 identifies sequences of words in a character string that match lexical entries in the Lexicon and Ontology 101 .Tagpossibilities 421 creates all possible tagged sentences given a list of lexical entries collected by tagtokens 419 .The tagtokens operation 419 invokes getwords 423 and join 425 operations .", "label": "", "metadata": {}, "score": "65.57524"}
{"text": "The present invention relates generally to natural language processing , and more particularly , relates to a system for automated morphological analysis of word structure .RELATED APPLICATIONS .The present application is related to commonly assigned and copending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "65.64386"}
{"text": "However , tracing is not turned on for any new rules with new names which may be loaded after trace_morpher_rule is called , even if tracing had been turned on globally .( This is because trace_morpher_rule may be called to turn off tracing on individual rules , even if tracing had previously been turned on globally . )", "label": "", "metadata": {}, "score": "65.656166"}
{"text": "In addition to the determiner / number interaction already expressed in the CN template , all common nouns also include a schema defining their particular PRED .By providing the semantic predicate as a parameter of the common - noun template , you can also factor out the details of even the PRED specification from individual entries .", "label": "", "metadata": {}, "score": "65.73497"}
{"text": "( 5 )The Rule Stratum of R is one deeper than or the same as the Morphological Stratum of ILE .( See section 3.3 , Storable Lexical Entries for a more detailed definition of when a morphological rule may apply to a lexical entry of a given stratum . )", "label": "", "metadata": {}, "score": "65.79843"}
{"text": "After the successful parse of the NP , this NP is combined with the V , with the cp predicate .Note that the verb selected an NP with rule - feature ' left ' , and hence the phonology of the NP is appended to the left of ' ontwaakt ' .", "label": "", "metadata": {}, "score": "65.7988"}
{"text": "This is in part because there is no widely accepted theoretical explanation for this phenomenon .Morphological rules may be written in Hermit Crab for compounding and incorporation processes , i.e. processes which combine two lexical entries to form a derived word , provided that the word is written solid ( i.e. with no internal white space ) .", "label": "", "metadata": {}, "score": "65.876656"}
{"text": "When tracing of blocking is turned on , a blocking record is produced for each application ( but not unapplication ) of a morphological rule whose output is blocked .A blocking record is also produced when one stem is substituted for another immediately prior to the application of a template .", "label": "", "metadata": {}, "score": "65.91019"}
{"text": "Any messages resulting from processing of the morpher commands in the file will follow this message .Operating system errors ( such as invalid file name ) should be trapped and output as errors .Summary : Redirects all output ( including error output ) produced by processing morpher commands to a file or to standard output .", "label": "", "metadata": {}, "score": "65.99792"}
{"text": "A method in accordance with claim 7 wherein the affix is a prefix .A method in accordance with claim 7 wherein the affix is a suffix .Description .A portion of this disclosure of this patent document contains material which is subject to copyright protection .", "label": "", "metadata": {}, "score": "66.06526"}
{"text": "With Englex and PC - KIMMO ( or programs using the PC - KIMMO parser ) , you can morphologically parse English words and text .Practical applications include morphologically preprocessing text for a syntactic parser and producing morphologically tagged text .", "label": "", "metadata": {}, "score": "66.0802"}
{"text": "Let val be the element of args at 0-origined list position indx .If indx is less than the number of elements in names , then .Let name be the element of names at 0-origined list position indx .", "label": "", "metadata": {}, "score": "66.10596"}
{"text": "Morpher error : Boundary marker in phonetic representation is unknown in character definition table . \"( This may occur when a rule is traced , if a boundary marker is introduced by a morphological rule , which marker does not belong to the stratum of the lexical entry .", "label": "", "metadata": {}, "score": "66.12578"}
{"text": "Create an XLE buffer via the LFG menu and then create a parser by typing : . create - parser toy - eng .lfg .At the % type ( the string to be parsed must be enclosed by double quotes or by curly brackets ) : .", "label": "", "metadata": {}, "score": "66.2079"}
{"text": "The template 's Required Part of Speech ( if any ) is the same as the rule 's Required Part of Speech .The template 's Required Subcategorized Rules , Required Head Features , Required Foot Features , Required Morphological Rule Features , and Excluded Morphological Rule Features ( if any ) are subsets of the corresponding fields of the rule .", "label": "", "metadata": {}, "score": "66.20825"}
{"text": "If OFV is non - empty , unification succeeds with the value ( RFN OFV ) ; otherwise ( if OFV is empty ) , unification fails ; . else ( if RFN does not appear among the Head ( Foot ) Features of the Lexical Entry , and it does not have a default value ) , unification succeeds with the value ( RFN RFV ) .", "label": "", "metadata": {}, "score": "66.240364"}
{"text": "SEMANTICFUNCTIONS ADJUNCT TOPIC FOCUS POSS STANDARD .NONDISTRIBUTIVES NUM PERS CONJ - FORM .EPSILON e. OPTIMALITYORDER NOGOOD .Note that SIGDEMO ENGLISH uses the lexicon ( LEXENTRIES ) , rules ( RULES ) , and templates ( TEMPLATES ) of DEMO ENGLISH .", "label": "", "metadata": {}, "score": "66.34532"}
{"text": "However , there is such a small number of words that exhibit this alternation that it is more economical to list them in the lexicon .If you want to restore the i : y- spelling rule , it is located in the file ENGLISH.RUL after the END keyword .", "label": "", "metadata": {}, "score": "66.37148"}
{"text": "Then the rule attaching the present tense suffix should contain the feature name person in its Obligatory Features list .Purpose : The subrules apply disjunctively ; each subrule is tried beginning with the first rule of the list until one applies or the end of the list is reached .", "label": "", "metadata": {}, "score": "66.45152"}
{"text": "The subrules are intended to represent allomorphy .The Morphological Subrule defines the specific phonological environment in which the morphological rule applies ( including any restrictions due to rule features ) , and the output of the rule .If a morphological rule has more than one subrule , the subrules apply to a stem disjunctively , that is the first subrule whose structural description is met applies , and no others do .", "label": "", "metadata": {}, "score": "66.53178"}
{"text": "The plural suffix + s , then , is represented in the word grammar as this feature structure : .[ cat : INFL lex : + s gloss : + PL from_pos : N pos : N number : PL reg : + ] .", "label": "", "metadata": {}, "score": "66.69165"}
{"text": "Increment applics(MRi ) ; if the result is equal to the Multiple Application Field of CurRule , remove CurRule from MRSub .( 3 ) Apply CurRule to InterLE , and set InterLE equal to the result .( 4 ) If the current stratum is cyclic , apply the phonological rules of the current stratum to InterLE , and set InterLE equal to the result .", "label": "", "metadata": {}, "score": "66.81601"}
{"text": "Englex does not require the analyst to decide the direction of conversion .In the results above for the word hope , there is nothing that indicates whether hope is basically a verb or a noun .However , the lexical entry for hope is found in the file containing verbs , reflecting the analyst 's decision that it is basically a verb .", "label": "", "metadata": {}, "score": "66.91315"}
{"text": "The abbreviation n / n expands into two features : [ from_pos : N ] and [ pos : N].This is the same mechanism as described above for controlling the input and output categories of affixes .Note the scheme used by the abbreviations : prefix abbreviations have the form pos\\from_pos while suffix abbreviations have the form from_pos / pos .", "label": "", "metadata": {}, "score": "66.96953"}
{"text": "7 is a drawing of the procedures in the bidirectional search embodiment of the invention .FIG .8 is a drawing of sample data structures involved in a bridging inference in the bidirectional search embodiment of the invention .DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS OF THE INVENTION .", "label": "", "metadata": {}, "score": "66.99285"}
{"text": "\" it is ambiguous as to whether it refers to garbage truck or garbage .The third problem is that the same type of rule can be expressed in many ways in English , so generation of inferences using English sentences is a difficult problem .", "label": "", "metadata": {}, "score": "67.15222"}
{"text": "The problem then becomes deciding which derived words to list and which not to list .A great many nominalized verbs in English have both a transparent meaning and an extended meaning ; for instance , government can mean \" the act of governing \" or it can refer to a particular political institution .", "label": "", "metadata": {}, "score": "67.2446"}
{"text": "lfg file , type a first stab at a rule for Sentence in the rules section , i.e. , after TOY ENGLISH RULES ( 1.0 ) and before the ---- ending the rules section .Make sure that at least one space or carriage return separates its category from the word ENGLISH : .", "label": "", "metadata": {}, "score": "67.32944"}
{"text": "For strict mode functions , the values of the arguments object 's properties are simply a copy of the arguments passed to the function and there is no dynamic linkage between the property values and the formal parameter values .NOTE 2", "label": "", "metadata": {}, "score": "67.333786"}
{"text": "HasBinding ( N ) .The concrete environment record method HasBinding for declarative environment records simply determines if the argument identifier is one of the identifiers bound by the record : .Let envRec be the declarative environment record for which the method was invoked .", "label": "", "metadata": {}, "score": "67.41899"}
{"text": "The mechanism of blocking is detailed below ( see section 3.6 , Analyzable Word ) .A Complete Lexical Entry potentially represents a fully inflected word , as opposed to an Incomplete Lexical Entry , which represents a form that is not fully inflected , i.e. a stem or root .", "label": "", "metadata": {}, "score": "67.444275"}
{"text": "The Phonetic Shape field of those records is visible to the morpher , while the Orthographic Shape field is invisible to the morpher rules ( although the morpher module passes it on to downstream modules in the Orthographic Shape field of Lexical Entry records ) .", "label": "", "metadata": {}, "score": "67.48419"}
{"text": "In this case there is only one valid f - structure because the determiner a is not compatible with a plural noun phrase .When you click on the subject NP node to see the solutions for the f - description at that node , only the SG solution appears .", "label": "", "metadata": {}, "score": "67.53083"}
{"text": "That is , not only can SIGDEMO ENGLISH provide additional rules , such as the ROOT rule which allows for punctuation , but it also allows the grammar writer to write new versions of rules , such as the VP rule which allows optional post object PPs .", "label": "", "metadata": {}, "score": "67.538635"}
{"text": "Englex treats solid hyphens as if they were indivisible stems ; they are simply listed in the lexicon .It should be possible to cause Englex to decompose solid compounds by using a null lexical entry in the End sublexicon .However , a large number of spurious parses would likely result .", "label": "", "metadata": {}, "score": "67.53946"}
{"text": "The trace record is embedded in a call to the function pretty_print ( see chapter four ) , and is output before the normal command + data , for instance : .( pretty_print .A Rule Analysis Trace Record is produced for each unapplication of each rule being traced in analysis mode , and a Rule Synthesis Trace Record is produced for each application of each rule being traced in synthesis mode .", "label": "", "metadata": {}, "score": "67.556076"}
{"text": "Both are useful and beauty is in the eye of the beholder .The clinching argument to me for which is best is to examine the lexical consequences .Imagine that both were available .Then we have ample opportunity for . elems.transitiveClosure ( ) elems-&gt;transitiveClosure ( ) . typos and confusion .", "label": "", "metadata": {}, "score": "67.560135"}
{"text": "The reason for requiring that the Realizational Features of R1 are not a subset of the Head Features of LE ' , is to allow blocking of inflectional affixation if the stem is inherently specified for all the features which the inflectional affix would realize .", "label": "", "metadata": {}, "score": "67.6862"}
{"text": "Then R maps applies to LESeq by the following algorithm : .( 3 ) Test CurRule for a match beginning with CurSeg in LESeq .( 4 ) If CurRule matches LESeq beginning with CurSeg , let InStretch be the input stretch of LESeq beginning with CurSeg .", "label": "", "metadata": {}, "score": "67.75835"}
{"text": "Let argsObj be the result of calling the abstract operation CreateArgumentsObject ( 10.6 ) passing func , names , args , env and strict as arguments .If strict is true , then .Call env 's CreateImmutableBinding concrete method passing the String \" arguments \" as the argument .", "label": "", "metadata": {}, "score": "67.77073"}
{"text": "The abbreviations are defined by feature templates in the word grammar file ( see also section 4.7.3 ): .This kind of feature template is called a feature definition .As another example , here is the lexical entry for the regular plural suffix + s : . \\lf + s \\lx INFL \\alt Clitic \\fea n / n pl reg \\gl + PL .", "label": "", "metadata": {}, "score": "67.88855"}
{"text": "BASE .Category templates provide a good solution to the problem of handling roots that belong to more than one part - of - speech .First , such roots are placed in special sublexicons in the lexicon .For example , the N - V sublexicon contains roots that can be either a noun or a verb , such as hope and spy .", "label": "", "metadata": {}, "score": "67.93101"}
{"text": "It appends bridgefrom to the end of path 1 .If the length of path 1 is greater than MAXPATHLEN , then it returns an empty list .It sets result to the empty list .It returns result .MAXPATHLEN is set to 4 .", "label": "", "metadata": {}, "score": "68.04611"}
{"text": "This involves stripping off the suffixes which could end the word , including no suffix at all .For example , the word \" quickly \" would generate three pairs : ( quickly - null ) , ( quickly - y ) , and ( quick - ly ) .", "label": "", "metadata": {}, "score": "68.20917"}
{"text": "If tracing is turned on , a trace record is produced regardless of whether the word was successfully analyzed .hc6016 \" Morpher error : Failure to translate character of word to be parsed into a phonetic sequence using character table . \" , where is the character which could not be translated , is the printform of the lexical entry which could not be translated , and is the name of the character table of the lexical entry which could not be translated .", "label": "", "metadata": {}, "score": "68.21601"}
{"text": "For example , the \" progeny \" sense of issue as well as the \" exit \" sense are omitted from the lexicon .This preserves , in the core lexicon the common coarsest distinctions among senses .More particularly , each lexical entry has a part of speech : POS and a set of set of core : SENSES .", "label": "", "metadata": {}, "score": "68.23555"}
{"text": "The invention is useful in computer applications for disambiguating part of speech and word sense in a natural language interaction with a user to understand what particular item the user is requesting .The invention is useful in computer applications for disambiguating coreference in a natural language interaction with a user to determine what the user is referring to when the user employs anaphoric references such as \" it \" and \" they . \" While the invention has been described in terms of preferred embodiments , those skilled in the art will recognize that the invention can be practiced with modification within the spirit and scope of the appended claims .", "label": "", "metadata": {}, "score": "68.31506"}
{"text": "A weaker claim about the interaction between phonology and morphology is that this interaction is only indirect .That is , all word - formation rules apply first , and the cyclic phonological rules than apply .IV .Cyclicity : .", "label": "", "metadata": {}, "score": "68.45271"}
{"text": "( e.g. , see , Norvig , Peter ( 1987 ) .Unified theory of inference for text understanding ( Report No .UCB / CSD 87/339 ) .Berkeley , Calif. : University of California , Computer Science Division ) .", "label": "", "metadata": {}, "score": "68.47543"}
{"text": "In this kind of template , the symbol being defined must be a sublexicon name .Thus this template will add the feature structure [ number : SG ] to all lexical items belonging to the N sublexicon .Similarly , to capture the fact that by default nouns form regular plurals ( for instance , fox ) , we add another feature specification to the N template : .", "label": "", "metadata": {}, "score": "68.47845"}
{"text": "That inconsistency is detected as the article and noun are being combined , and solutions for all conjunction - sets containing that inconsistency are not presented .However , if you click on the N node above sheep with the middle mouse button , the f - structure window will state that there are two f - structures , but only one is valid .", "label": "", "metadata": {}, "score": "68.49846"}
{"text": "ImplicitThisValue ( ) .Object Environment Records return undefined as their ImplicitThisValue unless their provideThis flag is true .Let envRec be the object environment record for which the method was invoked .If the provideThis flag of envRec is true , return the binding object for envRec . 10.2.2", "label": "", "metadata": {}, "score": "68.531845"}
{"text": "Join 425 concatenates specified adjacent words in a list of words .A continuebridge 405 operation invokes tomatch 407 and applyrules 409 operations .Tomatch 407 determines whether two tagged sentences match each other .Applyrules 409 determines which rules apply to a tagged sentence , applies them , and returns the new tagged sentences resulting from the application of the rules .", "label": "", "metadata": {}, "score": "68.73817"}
{"text": "Once nouns can be identified , we need to make sure that they do not already have a case feature .This is done by prefixing the CASE feature with a minus sign ( - ) to form a negated pattern .", "label": "", "metadata": {}, "score": "68.83101"}
{"text": "lfg .XLE will respond with a message that it is loading the grammar .The cursor will appear on the prompt .% create - parser demo - eng .lfg loading demo - eng .lfg ... grammar has 16 rules with 16 states , 15 arcs , and 15 disjuncts ( re)Indexing lexicon section ( DEMO ENGLISH ) for parse Morph transducer files relative to /project / xle / solaris / bin/ 0.05 CPU seconds demo - eng .", "label": "", "metadata": {}, "score": "68.89383"}
{"text": "The larger issue is how to incorporate semantic information in a PC - KIMMO lexicon .While PC - KIMMO does n't support a semantics field in lexical entries , there are other ways you can include semantic information in entries .", "label": "", "metadata": {}, "score": "69.03019"}
{"text": "Like rules , lexical entries end with a period .As with rules , lexical items can be formatted by using M - q .Install the entry by saving the file ( C - x C - s ) .Unlike rules , lexical entries are automatically installed and so you do not have to restart XLE after adding a new lexical item ; saving the file containing the lexical item is enough .", "label": "", "metadata": {}, "score": "69.04784"}
{"text": "In other words , predict 403 invokes tag 417 on the input sentence to produce input tagged sentences and then applies rules to those tagged sentences to produce new tagged sentences representing predictive inferences .FIG .5 is a drawing of sample bridging inference output using rules such as those of .", "label": "", "metadata": {}, "score": "69.06321"}
{"text": "I see this has been raised as OMG Issue 13944 .The RTF committee is so busy that if we want to get this in OCL 2.3 there are better chances if the submission is formatted ready for inclusion in the RTF report .", "label": "", "metadata": {}, "score": "69.12735"}
{"text": "The collection iterator is nonetheless useful allowing the shorter .An object iterator is of course a new concept and so might bypass the specification in terms of iterate ordanance .Do you think it worth appending an update to Issue 13944 along these lines ?", "label": "", "metadata": {}, "score": "69.16969"}
{"text": "The collection iterator is nonetheless useful allowing the shorter .An object iterator is of course a new concept and so might bypass the specification in terms of iterate ordanance .Do you think it worth appending an update to Issue 13944 along these lines ?", "label": "", "metadata": {}, "score": "69.16969"}
{"text": "lfg loading toy - eng .lfg ... grammar has 12 rules with 9 states , 9 arcs , and 9 disjuncts Morph transducer files relative to /project / xle / solaris / bin/ 0.02 CPU seconds toy - eng .lfg loaded Grammar last modified on Jan 06 , 2003 10:52 .", "label": "", "metadata": {}, "score": "69.31957"}
{"text": "This of course is an incorrect analysis since it posits the nonexistent stem largement .The analysis still does not capture the fact that a suffix such as + ment can attach to verb stems only .One way to remedy this problem is to introduce more category symbols into the rules .", "label": "", "metadata": {}, "score": "69.39275"}
{"text": "BACKGROUND OF THE INVENTION .Automated natural language ( NL ) text processing typically refers to text processing , such as text retrieval performed on text by a computer capable of \" reading \" and \" understanding \" the semantics of the text .", "label": "", "metadata": {}, "score": "69.53154"}
{"text": "Only one can be permitted .The implicit collect is a very good point !Really , quite a different beast .It would solve a great many common OCL problems .Looks like a plan !Yes the more general solution is a rather more powerful beast that can do much more than transitive closure .", "label": "", "metadata": {}, "score": "69.63742"}
{"text": "For specification purposes Environment Record values can be thought of as existing in a simple object - oriented hierarchy where Environment Record is an abstract class with two concrete subclasses , declarative environment record and object environment record .The abstract class includes the abstract specification .", "label": "", "metadata": {}, "score": "69.70366"}
{"text": "This is encouraging for a broad pla ... .by Ga\u00ebl Dias - In Proceedings of the ELECTRA Workshop associated to 28th Annual International ACM SIGIR Conference . \" ...Topic Segmentation is the task of breaking documents into topically coherent multi - paragraph subparts .", "label": "", "metadata": {}, "score": "69.71602"}
{"text": "For example , say you find that Englex fails to recognize the inflected verb partied .Before adding party to the file of verb entries , first check to see if party already exists in the file of noun entries .If it does , then you need only to change its sublexicon from N to N - V. Open compounds are not handled by Englex at all .", "label": "", "metadata": {}, "score": "69.8093"}
{"text": "V. Reference : .Bright , William(ed ) .International Encyclopedia of Linguistics .New York : .Oxford U.P. .Kaisse , Ellen M & P. A. Shaw .On the Theory of Lexical Phonology .This chapter is an exposition of a PC - KIMMO description of English called Englex .", "label": "", "metadata": {}, "score": "69.96252"}
{"text": "For every RFNi , OF includes the unification of RFi with LFi ; . and for every LFNi not included in ( RFN1 ...RFNn ) , OF includes ( LFNi LFVi ) ( that is , the features of the Lexical Entry not mentioned in the Required Features of the rule remain unchanged in the output features ) .", "label": "", "metadata": {}, "score": "69.9673"}
{"text": "III .Phonology and Morphology : .With regard to morphology , Lexical Phonology is a strong version of the so - called Lexicalist Hypothesis .It 's because it assumes that all word formation , including inflection , is carried out in the lexicon .", "label": "", "metadata": {}, "score": "70.0063"}
{"text": "It seems interesting .I see this has been raised as OMG Issue 13944 .The RTF committee is so busy that if we want to get this in OCL 2.3 there are better chances if the submission is formatted ready for inclusion in the RTF report .", "label": "", "metadata": {}, "score": "70.00703"}
{"text": "The DEMO ENGLISH grammar defines a sigma projection which is discussed later .So far you have only parsed sentences for which the grammar can construct c - structure trees .If the grammar can not produce a c - structure tree , either because it does not know a lexical item or because it can not fit the known lexical items into a tree , then a morphology window appears showing how the morphology attempted to analyze the string .", "label": "", "metadata": {}, "score": "70.072586"}
{"text": "However , most metho ... \" .Topic Segmentation is the task of breaking documents into topically coherent multi - paragraph subparts .In particular , Topic Segmentation is extensively used in Passage Retrieval and Text Summarization to provide more coherent results by taking into account raw document structure .", "label": "", "metadata": {}, "score": "70.096436"}
{"text": "The following abstract operations are used in this specification to operate upon lexical environments : . 10.2.2.1 GetIdentifierReference ( lex , name , strict ) .The abstract operation GetIdentifierReference is called with a Lexical Environment lex , an identifier String name , and a Boolean flag strict .", "label": "", "metadata": {}, "score": "70.2064"}
{"text": "Top level disjunctions are given the True context .Embedded disjunctions are given the choice that they are embedded under .By default , only f - structure constraints are displayed .If you want to see c - structure constraints , click on the \" subtree \" menu item under the Views menu .", "label": "", "metadata": {}, "score": "70.31938"}
{"text": "is given this feature structure : .[ cat : N lex : ' fox gloss : ' fox number : SG reg : + ] .However , this analysis has a problem .The N template will be applied to all lexical items in the N sublexicon , including items such as mice .", "label": "", "metadata": {}, "score": "70.333466"}
{"text": "If you click on a choice in the fschartchoices window with the left mouse button , the c- and f - structures corresponding to that choice will be displayed .In addition , that choice will be highlighted in the fschart display and appear in red ( instead of blue ) in the fschart window .", "label": "", "metadata": {}, "score": "70.334526"}
{"text": "The Rule Base 103 contains one or more rules , as shown in .FIG .3 .A rule includes a left pattern 301 , a connective 303 , and a right pattern 305 .A connective 303 is a logical link expression such as : causes , triggers , or has - plan .", "label": "", "metadata": {}, "score": "70.34854"}
{"text": "( The feature values specified in FL are inserted in each segment of POq , replacing the values of those same features , if any , in PLISeq .Note that any boundary markers in PIp are simply copied over into POq . )", "label": "", "metadata": {}, "score": "70.38156"}
{"text": "( 2 )If Template specifies a Family , it is identical to the Family of X .( 3 )If Template specifies a Gloss , it is identical to the Gloss of X .( 4 )If Template specifies a Part of Speech , it is identical to the Part of Speech of X .", "label": "", "metadata": {}, "score": "70.444885"}
{"text": "Another optimization involves a look - ahead search strategy which tries to prune derivations which have little hope of succeeding .This strategy is a heuristic based on the fact that it is rare that a word will have two derivations based on different roots , ( e.g. the word \" singer \" could derive from \" single \" and \" sing \" ) .", "label": "", "metadata": {}, "score": "70.48973"}
{"text": "This resembles the f - structure for the dominating S node but some details of the SUBJ and OBJ f - structures are missing .The PERS and NUM are included in the SUBJ , because they are supplied from the verbal inflection , but the PRED does not appear because it is not defined within the V subtree , and no information is present for the OBJ .", "label": "", "metadata": {}, "score": "70.62955"}
{"text": "The original object % Obj is rewritten as the new SUBJ .The original subject % Subj is rewritten as the OBL - AG ; it is also assigned a PFORM BY feature .Finally , the main f - structure % Fstr is assigned a PASSIVE + feature .", "label": "", "metadata": {}, "score": "70.63913"}
{"text": "Now that we have developed a minimal set of grammar rules with feature constraints ( figure3.15 ) , we can look at the interface between the lexicon and the word grammar .For example , here is the lexical entry for mice : . \\lf ' mice \\lx N \\alt Clitic \\fea pl irreg \\gl ' mouse .", "label": "", "metadata": {}, "score": "70.74304"}
{"text": "The first entry is a null entry that simply points to the word boundary symbol # , thus ending the word .The second entry , however , handles hyphenated compounds such as rose - bush , well - formed , fast - acting , moth - eaten , water - repellent , and machine - readable ( see also section 3.3.4 on compounds ) .", "label": "", "metadata": {}, "score": "70.80896"}
{"text": "You can use glosses that encode semantic information .You can include a user - defined semantics field in lexical entries , while it would be ignored by PC - KIMMO , it would be accessible to other software .Many words in English belong to more than one part - of - speech ; for instance , the word ride can be either verb or noun .", "label": "", "metadata": {}, "score": "70.85585"}
{"text": "Hermit Crab will silently ignore such a value in that field .Purpose : This field represents the required ( surface ) Phonetic Shape of the preceding word in the input .It is identical in form to the Next Word field .", "label": "", "metadata": {}, "score": "70.87206"}
{"text": "For example , the word business is a regular nominal derivation of the verb busy , but no longer retains its transparent meaning of \" state of being busy . \"In such cases , it may be desireable to list such words in the lexicon .", "label": "", "metadata": {}, "score": "70.95261"}
{"text": "Appendix IV contains a computer code listing which may be utilized to control operation of a computer in accordance with the present morphological analysis method .The code is written in Lucid Common Lisp and may be run by a Sun Workstation .", "label": "", "metadata": {}, "score": "71.16855"}
{"text": ".. evel syntactic components such as subject - verb , sverb - objects , adjective - noun , and noun - noun relations .See Figure 1 .sAt this stage , the context of each word is the list of wo ... . by Gregory Grefenstette - IN MAKING SENSE OF WORDS .", "label": "", "metadata": {}, "score": "71.182236"}
{"text": "( 4 ) If MROq is a Simple Context , POq is identical to MROq ( i.e. it is a single segment whose features are those of MROq . ; .Finally , SR transforms PLISeq into PLOSeq iff PLOSeq is the phonetic sequence composed by concatenating all the members of the list PartO. Note : It is unwise to have a morphological rule delete optional segment sequences .", "label": "", "metadata": {}, "score": "71.24888"}
{"text": "Caution : Be consistent in use of case when you type in categories and symbol designators .DET is not the same as Det to XLE and Case is not the same as CASE .If you have one of these in a rule and the other in a lexical entry , XLE will assume they are different categories and an analysis will fail for what may seem like a mysterious reason .", "label": "", "metadata": {}, "score": "71.27467"}
{"text": "Let env be a new Lexical Environment .Let envRec be a new object environment record containing O as the binding object .Set env 's environment record to be envRec .Set the outer lexical environment reference of env to E .", "label": "", "metadata": {}, "score": "71.32493"}
{"text": "There is a more convenient way to determine the difference between the two valid f - structures : the fschartchoices window and the fschart window .The f - structure chart windows are used to display two different views of a packed representation of all of the valid solutions .", "label": "", "metadata": {}, "score": "71.39416"}
{"text": "If this moves CurSeg past the end of the word , exit , returning LESeq ; else go to step 2 .If this moves CurSeg past the end of the word , exit , returning LESeq ; else go to step 2 .", "label": "", "metadata": {}, "score": "71.45158"}
{"text": "The term \" phonetic \" is used here as a convenient cover term for sequences which are interpretable in phonetic terms .No theoretical stance is implied as to the existence of a distinction among morphophonemic , phonemic , or systematic phonetic levels .", "label": "", "metadata": {}, "score": "71.54204"}
{"text": "It returns result .In other words , instan 413 takes bindings resulting from match 411 and a pattern , and produces a new tagged sentence .In other words , isa 415 determines whether one concept is a kind of another concept ( e.g. , ALCOHOL 2 219 is a FOOD 215 ) .", "label": "", "metadata": {}, "score": "71.58678"}
{"text": "Reload the rules , parse : . and \" Translate \" this f - structure .The transfered f - structure should have an ANIM + feature for GIRL .Macros are similar to templates except that where templates contain rule applications , macros contain sets of facts only .", "label": "", "metadata": {}, "score": "71.63189"}
{"text": "Notice , however , that the grammar in figure 3.15 above collapses these three rules into one : .N , V , and AJ are declared as instances of the ROOT category with these templates : .Now the cat feature of a noun such as fox will be ROOT , not N. To encode the part - of - speech of N entries , Englex uses the pos feature .", "label": "", "metadata": {}, "score": "71.7709"}
{"text": "Similarly if an optimality constraint has a NOGOOD mark , then it will be printed with a \" NOGOOD OPTIMALITY MARK \" printed after it .Since these constraints are n't instantiated they wo n't appear in the f - structure window ( even among the invalid f - structures ) and so the only way to see them is to use the Constraints Window .", "label": "", "metadata": {}, "score": "71.78488"}
{"text": "The stress marks were placed according to intuition and the authority of Webster 's Ninth New Collegiate Dictionary .Notice that even monosyllabic words require a stress mark because the Gemination rule crucially refers to it ( see the file ENGLISH.RUL and appendix A of Antworth 1990 ) .", "label": "", "metadata": {}, "score": "71.897354"}
{"text": "A morphological rule may require that the stem to which it attaches have a certain phonetic form .However , occasionally affixes will attach to any morpho - phonological form except a certain one .Either of these solutions would fail if the negative condition were purely phonological ( which it is not in this case : cf . baptismal ) .", "label": "", "metadata": {}, "score": "71.9028"}
{"text": "Referring to .FIG .4 , the operations of the tagger 109 and inferencer 107 are shown in greater detail .The operations of the tagger 109 can be seen in items such as tag 417 , tagtokens 419 , etc .", "label": "", "metadata": {}, "score": "72.065155"}
{"text": "To indicate that the NP is the subject and is in the nominative case , type the following immediately after ' NP ' : .Do n't forget the colon and semicolon .The VP is the head of the S , so it should be followed by : .", "label": "", "metadata": {}, "score": "72.12104"}
{"text": "Really , quite a different beast .Yes , repetition of elements does n't seem very useful in a transitive closure , which is really only interested in finding reachable objects .The number of occurrences of any object would only be useful if the result could indicate where they were found , which it does n't .", "label": "", "metadata": {}, "score": "72.12138"}
{"text": "The grammatical knowledge base of the system relates these subcategories to semantic roles .The : G - DERIV and : S - DERIV fields mark morphological derivations .G - DERIV ( NIL in this case to indicate no derivations ) encodes these derivations at the entry , or word , level , while S - DERIV encodes derivations at the sense level .", "label": "", "metadata": {}, "score": "72.621414"}
{"text": "Suppose further that the lexical entry for see and the lexical entry for the verb saw are Relative Lexical Entries , with the entry for saw identical to the lexical entry for see save for its phonetic form , the addition of the head feature tense ( past ) .", "label": "", "metadata": {}, "score": "72.63733"}
{"text": "( Note that LFinal and RInit are ignored .Also , either PRLSeq or PRRSeq may be omitted in PR , and any of the Phonetic Sequences of the environments or of the input of PR may be empty ; in that case , the Phonetic Sequence of PETemp consists of the concatenations of the non - empty fields .", "label": "", "metadata": {}, "score": "72.6494"}
{"text": "Isa 415 determines whether one concept is a kind of another concept ( e.g. , ALCOHOL 2 219 is a FOOD 215 ) .Applyrules 409 invokes match 411 and instan 413 operations .Match 411 determines whether a pattern matches a tagged sentence and returns the bindings that enabled the match to succeed .", "label": "", "metadata": {}, "score": "72.64979"}
{"text": "The SCC now correctly predicts that only the second /s/ palatalizes : [ servi'se].The SCC places a strong restriction on the abstractness of underlying forms .Consequently , an underlying /k/ of /kile/ would surface as a [ k].", "label": "", "metadata": {}, "score": "72.73634"}
{"text": "If funcAlreadyDeclared is false , call env 's CreateMutableBinding concrete method passing fn and configurableBindings as the arguments .Call env 's SetMutableBinding concrete method passing fn , fo , and strict as the arguments .Let argumentsAlreadyDeclared be the result of calling env 's HasBinding concrete method passing \" arguments \" as the argument .", "label": "", "metadata": {}, "score": "72.86298"}
{"text": "The parser is a generalization of Kay 's head - driven parser , which in turn is a modification of a left - corner parser .The parser , which may be called a ' head - corner ' parser , 4.1 proceeds in a bottom - up way .", "label": "", "metadata": {}, "score": "72.87602"}
{"text": "The situation is more complex in the case of length - changing rules ( e.g. deletion rules , epenthesis rules , and diphthongization rules ) .Due to the internal representation used by Hermit Crab , the morpher will need to explore two search paths : one for which the length - changing rule is unapplied , and one for which it is not .", "label": "", "metadata": {}, "score": "72.9323"}
{"text": "Each concept ( e.g. , 211 ) comprises a character string 251 .For example , the character string 251 uniquely identifies a concept node , and the character string may be descriptive of the meaning of the concept for readability .", "label": "", "metadata": {}, "score": "73.05836"}
{"text": "A menu of the currently active templates will pop up : .( TOY ENGLISH Templates ) CN INTRANS OPTTRANS TRANS ( TOY ENGLISHTtemplates ) .You have now learned how to enter a grammar into the system and how to apply it in the analysis of strings typed into XLE .", "label": "", "metadata": {}, "score": "73.14955"}
{"text": "The word grammar is of course new with version 2 of PC - KIMMO .An earlier version of Englex , intended for use with version 1 of PC - KIMMO , was released in 1991 .It is superseded by this version of Englex which accompanies PC - KIMMO version 2 .", "label": "", "metadata": {}, "score": "73.39182"}
{"text": "Purpose : This field has the value false for Real Lexical Entries and for all Storable Lexical Entries which are derived from Real Lexical Entries .Storable Lexical Entries not derived from Real Lexical Entries ( visible to the user only with the function show_morphings ) have the value true for this field .", "label": "", "metadata": {}, "score": "73.579384"}
{"text": "If tracing is turned on , one call to the command pretty_print plus a root trace structure is produced for each word in the input to this command .A trace structure may be prematurely terminated by an error message .hc6012", "label": "", "metadata": {}, "score": "73.845535"}
{"text": "The relevant word - formation rule replaces the suffix -eur with -rice when the stem ends in d or t .The derivation is as follows : .Cycle 3 : [ [ [ ambassad ] ] rice ] -rice suffixation .", "label": "", "metadata": {}, "score": "73.8689"}
{"text": "The right hand one is the output of the transfer rules ; its title bar should say \" F - structure window for Transfer Result \" .If you compare these , you will notice that they are virtually identical except that NUM SG of GIRL is NUMBER SG in the transfer result window .", "label": "", "metadata": {}, "score": "74.05908"}
{"text": "The way multiple application works in Hermit Crab depends on the setting of the field mult_applic for the rule ( section 4.4.1.3 Definition of Phonetics of Multiple Application of a Phonological Rule ) .This field may have the value simultaneous ( section 4.4.1.3.1 ) , lr_iterative ( section 4.4.1.3.2 ) , or rl_iterative ( section 4.4.1.3.3 ) .", "label": "", "metadata": {}, "score": "74.08739"}
{"text": "Support for Bags and Sequences is more dubious .The definitions above give useful results for trees and invalid for graphs .Of course , it can ! operator makes \" closure \" look like a model operation .It seems interesting .", "label": "", "metadata": {}, "score": "74.11696"}
{"text": "A predictfrom is a tagged sentence .A predictto is a tagged sentence .Predictfrom is fromstring disambiguated as to word sense .An invocation of predict 403 on fromstring starts by setting result to the empty list .For each predictfrom in the result of invoking tag 417 on fromstring , for each predictto and connective in the result of invoking applyrules 409 on predictfrom , it appends predictfrom , predictto , and connective to result .", "label": "", "metadata": {}, "score": "74.243095"}
{"text": "Again , theory provides no simple answer , nor does Hermit Crab .Hermit Crab also lacks any direct provision for orders of affixes ( i.e. position classes , such as first order suffixes , second order suffixes , etc . ) .", "label": "", "metadata": {}, "score": "74.29784"}
{"text": "Next , the word ontwaakt has to be shown to be the head corner of the V goal , by the predicate ( 5 ) : .In order to prove this predicate , the next parse goal consists in parsing a NP ( for which ontwaakt subcategorizes , step 6 ) ; the guide is the bag consisting of the element jan .", "label": "", "metadata": {}, "score": "74.31903"}
{"text": "The Stratum Synthesis Trace Record structure is used to output information resulting from the tracing of strata during synthesis .One such record is produced at the beginning of a stratum , and another at the end of the stratum , after all rules of the stratum have been applied ; the two records are marked to distinguish them .", "label": "", "metadata": {}, "score": "74.32969"}
{"text": "Bridge 401 invokes tag 417 on the first input sentence to produce first input tagged sentences , invokes tag 417 on the second input sentence to produce second input tagged sentences , and feeds these first and second input tagged sentences to continuebridge 405 , which returns bridging inferences .", "label": "", "metadata": {}, "score": "74.35091"}
{"text": "Hermit Crab uses a limited form of regular expressions to encode information which is ambiguous in the shape field of virtual lexical entries .If a segment in the shape field has been unepenthesized or undeleted by some rule , it will be marked as optional , meaning that its presence can not be determined until lexical lookup .", "label": "", "metadata": {}, "score": "74.51634"}
{"text": "The arguments in the semantic - form value of the PRED attribute are abbreviated representations for the full f - structures with the same index number shown below .Thus , [ 0:GIRL ] shows that the first argument of DEVOUR is f - structure 0 , which is also the value of the SUBJ attribute .", "label": "", "metadata": {}, "score": "74.55922"}
{"text": "This is a verb which can also be used without an object , as in Horses sometimes kick .It might seem natural to express this fact by surrounding ( ^ OBJ ) with brackets or parentheses to indicate optionality , but XLE does not accept this notation .", "label": "", "metadata": {}, "score": "74.602264"}
{"text": "For each rule MRi in MRSet , applics(MRi ) represents the number of times MRi has applied .Then OLE is derivable from ILE by the following algorithm : .( 1 ) Set MRSub equal to any subset ( including the empty set ) of MRSet .", "label": "", "metadata": {}, "score": "74.665695"}
{"text": "Both are useful and beauty is in the eye & gt;&gt ; of the beholder .The clinching argument to me for which is best is to & gt;&gt ; examine the lexical consequences .Imagine that both were available .Then & gt;&gt ; we have ample opportunity for & gt;&gt ; & gt;&gt ; elems.transitiveClosure ( ) & gt;&gt ; elems-&gt;transitiveClosure ( ) & gt;&gt ; & gt;&gt ; typos and confusion .", "label": "", "metadata": {}, "score": "74.73501"}
{"text": "The Phonetic Sequence of OLE is as defined in the section immediately above ( see 4.2.7.3 , Transformation of Phonetic Sequences by Compounding Rule ) .The Gloss String of OLE is the result of concatenating the Gloss String of ILENH to the right of the Gloss String of ILEH ; the two Gloss Strings are separated by a space ( ASCII 32 ) .", "label": "", "metadata": {}, "score": "74.73834"}
{"text": "The analysis of prefixes cause two major complications for the morphological analyzer .First , prefixes add ambiguity to the determination of the root of words .For example , the prefix pre- is also enveloped in normal words such as \" prefers \" , which would cause the analyzer to attempt wasted derivations for invalid roots .", "label": "", "metadata": {}, "score": "74.78414"}
{"text": "In general , a semantic interpreter utilizing the present lexicon should not consider secondary senses without specific contextual information .For example , the word \" yard \" can mean an enclosed area , a workplace , or a unit of measure , but only the enclosed area sense is considered in the zero - context .", "label": "", "metadata": {}, "score": "74.9048"}
{"text": "& gt ; & gt ; Yes , repetition of elements does n't seem very useful in a transitive & gt ; closure , which is really only interested in finding reachable objects .& gt ; The number of occurrences of any object would only be useful if the & gt ; result could indicate where they were found , which it does n't .", "label": "", "metadata": {}, "score": "74.92682"}
{"text": "An invocation of tomatch 407 on tagged sentences bridgefrom and bridgeto proceeds as follows : If the length of bridgeto is less than the length of bridgefrom , it returns FAILURE .It sets i to 0 .It returns SUCCESS .", "label": "", "metadata": {}, "score": "75.03589"}
{"text": "Let varAlreadyDeclared be the result of calling env 's HasBinding concrete method passing dn as the argument .If varAlreadyDeclared is false , then .Call env 's CreateMutableBinding concrete method passing dn and configurableBindings as the arguments .Call env 's SetMutableBinding concrete method passing dn , undefined , and strict as the arguments .", "label": "", "metadata": {}, "score": "75.13747"}
{"text": "XLE also supports other activities that surround the business of grammar development .These include : analyzing performance , processing testsuites , and saving analyses in a number of formats ( postscript , prolog , and LFG lexical entries ) .XLE is implemented in C , and runs on Solaris , linux , and MacOSX .", "label": "", "metadata": {}, "score": "75.152435"}
{"text": "The major impediment to creation of thesauri has been the cost of their manual creation .We present here a number of automatic techniques that jointly produce a first draft of a thesaurus from any domain - defining collection of text .", "label": "", "metadata": {}, "score": "75.15425"}
{"text": "( 3 )The Head and Foot Features lists of R have been successfully unified with the Required Head/ Foot Features lists of ILE ( as defined above , see section 4.2.2 , Definition of Feature Unification ) ; .( 4 )", "label": "", "metadata": {}, "score": "75.25003"}
{"text": "Stanford : Center for the Study of Language and Information .Kaplan , Ronald M. and Joan Bresnan .Lexical - Functional Grammar : A formal system for grammatical representation .In Joan Bresnan , editor , The Mental Representation of Grammatical Relations .", "label": "", "metadata": {}, "score": "75.33827"}
{"text": "It is not easy to draw a sharp line between productive , synchronic formations and static , diachronic formations .For example , the adjective resilient is actually derived from the verb resile .Even though the semantic relation is perfectly transparent , the fact that resile is no longer in wide currency may put this analysis more in the arena of etymology .", "label": "", "metadata": {}, "score": "75.344284"}
{"text": "The only drawback to this solution is that it causes the Generator to produce spurious forms ; for instance , the lexical form ' fox+s will produce both the correct surface form foxes and the spurious form fox - s .Thus in its present form , Englex is optimized for recognition and is not very useful for generation .", "label": "", "metadata": {}, "score": "75.36653"}
{"text": "Reprinted in Mary Dalrymple , Ronald M. Kaplan , John Maxwell , and Annie Zaenen , eds . , Formal Issues in Lexical - Functional Grammar , 29 - -130 .Stanford : Center for the Study of Language and Information .", "label": "", "metadata": {}, "score": "75.70326"}
{"text": "\" it is not specified whether bills is a noun or a verb , and bills is ambiguous as to whether it refers to statutes , invoices , banknotes , beaks , sending an invoice , and so on .The second problem is that the Open Mind Common Sense sentences are ambiguous as to coreference .", "label": "", "metadata": {}, "score": "75.72711"}
{"text": "Rather than repeat that discussion here , you are referred to that work .However , a few changes in the rules file should be noted here .The environment of the Gemination rule has been relaxed .Formerly , Gemination was not permitted in an unstressed syllable ; for instance , traveling was permitted but not travelling .", "label": "", "metadata": {}, "score": "75.91742"}
{"text": "el in your Emacs .See the documentation in the XLE User 's Manual for more details .If you follow through this tutorial , you will enter a grammar that can analyze simple sentences such as The girl walks .Not very impressive , but going through that procedure should give you the mechanics you need to enter grammars that are substantially more complex .", "label": "", "metadata": {}, "score": "76.27203"}
{"text": "[ cat : N lex : ' mice gloss : ' mouse number : PL reg : - ] .In this structure , the features cat , lex , and gloss are reserved features automatically constructed by the word grammar : .", "label": "", "metadata": {}, "score": "76.341606"}
{"text": "Glad you 're still here .Your comments and an accidentally off - list discussion with Nicolas Rouquette have helped me clarify my thoughts .The practical implementation of closure is not closure ; it is transitive closure .closure would require some form of allInstances to discover a domain over which to evaluate a predicate .", "label": "", "metadata": {}, "score": "76.582184"}
{"text": "Morphcodes determine whether or not a word uses the XLE morphology .If it is anything other than a star ( normally , XLE ) , the XLE morphology is used - i.e. , the word matches morphemes that come out of the XLE morphology .", "label": "", "metadata": {}, "score": "76.63626"}
{"text": "For example , if you click on the subject NP of CS 1 with the left mouse button , the next subtree will be displayed ; this corresponds to the structure in CS 2 .To get back to the structure in CS 1 , click on the subject NP with shift - left mouse button .", "label": "", "metadata": {}, "score": "76.8651"}
{"text": "A real lexical entry 's lex ID remains valid during a single session of Hermit Crab ; a virtual lexical entry 's lex ID remains valid only until the next time either the function morph_and_lookup_word or the function morph_and_lookup_list is called .", "label": "", "metadata": {}, "score": "76.876335"}
{"text": "For example , this is the positional analysis of the word enlargement : .The tree structure shows that the word enlargement is composed of the stem enlarge plus the suffix + ment , and the stem enlarge in turn is composed of the prefix en+ plus the root large .", "label": "", "metadata": {}, "score": "76.99137"}
{"text": "Morpher : For stratum , the character table is , the stratum is noncyclic , phonological rules are simultaneously ordered , morphological rules are linearly ordered , and the affix templates are .\" hc6563 \" Morpher : For stratum , the character table is , the stratum is cyclic , phonological and morphological rules are linearly ordered , and the affix templates are .", "label": "", "metadata": {}, "score": "77.12725"}
{"text": "Hermit Crab also does not check that all the parts of speech of the Affix Template are actually the part of speech of some lexical entry ( or the output of some morphological rule ) .However , this should not result in an error message during parsing .", "label": "", "metadata": {}, "score": "77.19603"}
{"text": "SEMANTICFUNCTIONS ADJUNCT TOPIC FOCUS POSS STANDARD .NONDISTRIBUTIVES NUM PERS CONJ - FORM .EPSILON e. OPTIMALITYORDER NOGOOD .DEMO ENGLISH CONFIG ( 1.0 ) ROOTCAT S. FILES .LEXENTRIES ( DEMO ENGLISH ) .RULES ( DEMO ENGLISH ) .TEMPLATES ( DEMO ENGLISH ) .", "label": "", "metadata": {}, "score": "77.27721"}
{"text": "Each section is terminated with four dashes ( ---- ) .Here is an explanation of the different parts : .TOY ENGLISH CONFIG ( 1.0 ) : TOY is the version of the grammar ; ENGLISH is the language ; CONFIG states that this is the configuration for the version and grammar ; ( 1.0 ) is the XLE version number .", "label": "", "metadata": {}, "score": "77.290344"}
{"text": "Purpose : To allow the user to load in an entirely new dictionary without dropping out of Hermit Crab .Immediately after performing this command , the morpher has no lexical entries ; in other words , all lexical lookups will fail .", "label": "", "metadata": {}, "score": "77.35687"}
{"text": "Stems and roots have a pos feature standing for part - of - speech , such as N ( noun ) , V ( verb ) , AJ ( adjective ) and so on .Affixes have a from_pos feature and a pos feature .", "label": "", "metadata": {}, "score": "77.3578"}
{"text": "As you can see by looking at the configuration display , it is specified in the TEMPLATES part of the configuration .The lexical entry for girl now can be simplified by making use of the CN template .Go to the lexical entry for girl and add @CN in place of the explicit disjunction .", "label": "", "metadata": {}, "score": "77.64349"}
{"text": "To see an example of how projections can be used , restart XLE with : . create - parser demo - eng - sigma .lfg .This will install a new configuration , activating new rules and templates .You can examine this configuration by looking at the top of demo - eng - sigma .", "label": "", "metadata": {}, "score": "77.679794"}
{"text": "For example , the word \" undoable \" has to distinct meanings : \" not doable \" or \" able to be undone \" .For the analyzer to accurately derive the lexical entries for such words , all orders of attachments must be applied .", "label": "", "metadata": {}, "score": "77.76289"}
{"text": "Halvorsen , Per - Kristian and Ronald M. Kaplan .Projections and semantic description in Lexical - Functional Grammar .In Proceedings of the International Conference on Fifth Generation Computer Systems ( FGCS-88 ) , pages 1116 - -1122 , Tokyo , Japan , November .", "label": "", "metadata": {}, "score": "77.8288"}
{"text": "Since the presuppositions , interests , and goals of linguists and NLP researchers do not necessarily coincide , Englex is by necessity a bundle of compromises .Englex is natural language processing ( NLP ) tool based on generally - accepted linguistic principles and analyses of English morphology .", "label": "", "metadata": {}, "score": "78.01239"}
{"text": "For instance , the possessive clitic + 's normally attaches to nouns as in the man 's hat , but can attach to other word classes such as adjectives in a phrase such as the president elect 's hat .Also handled as clitics in Englex are contracted forms such as + 'll for will , + 'd for would , and + ' ve for have . \\lf + 's \\lx GEN \\alt End \\fea gen \\gl + GEN \\lf + ' d've \\lx CNTR \\alt End \\fea modal -3sg \\gl + would+have .", "label": "", "metadata": {}, "score": "78.08994"}
{"text": "Tag 417 takes input sentences and produces tagged sentences .Continuebridge 405 applies rules to first input or inferred tagged sentences to produce new tagged sentences and recursively invokes itself 405 on those new tagged sentences until tagged sentences match tagged second input sentences .", "label": "", "metadata": {}, "score": "78.211464"}
{"text": "And I & gt ; wonder whether OCL really wants to have another iterator as complex as & gt ; the & quot;iterate&quot ; expression , with accumulators and such .Do n't get me & gt ; wrong , I like this idea of iterate - like syntax because it solves both of & gt ; these problems , but I wonder whether it 's not over - kill .", "label": "", "metadata": {}, "score": "78.2529"}
{"text": "The definitions below refer to application of phonological rules .Because of the difficulty of parsing forms to which deletion rules have been applied , Hermit Crab imposes an arbitrary restriction on the unapplication of deletion rules .( A deletion rule is one whose Phonetic Output Sequence is the empty list . )", "label": "", "metadata": {}, "score": "78.26281"}
{"text": "( STX ) to the left and an ASCII 3( ETX ) to the right ( see Translation from Phonetic Sequence to Regular Expression , section 4.1.1.2 ) .If a feature bundle is ambiguous between two or more segments , these segments will be separated by a an ASCII 29", "label": "", "metadata": {}, "score": "78.26562"}
{"text": "Although XLE usually does not display them , invalid solutions are available for inspection after all of the good solutions .If there are no good solutions , then XLE displays bad solutions in the following order : unoptimal first , then incomplete , then inconsistent , then various combinations of unoptimal , incomplete , and inconsistent .", "label": "", "metadata": {}, "score": "78.347336"}
{"text": "For example , here are the Recognizer results returned for the words fox , ( a singular noun ) , foxes ( a regular plural ) , mice ( an irregular plural ) , and computer ( a noun derived from a verb ) : . '", "label": "", "metadata": {}, "score": "78.36943"}
{"text": "Center for Computational Linguistics , University of Manchester , Institute of Science and Technology , Manchester .Reprinted in Mary Dalrymple , Ronald M. Kaplan , John Maxwell , and Annie Zaenen , eds . , Formal Issues in Lexical - Functional Grammar , 337 - -367 .", "label": "", "metadata": {}, "score": "78.449234"}
{"text": "Stanford : Center for the Study of Language and Information .Kaplan , Ronald M. , Klaus Netter , Jurgen Wedekind , and Annie Zaenen .Translation by structural correspondences .In Proceedings of the 4th Meeting of the European Association for Computational Linguistics , pages 272 - -281 , University of Manchester .", "label": "", "metadata": {}, "score": "78.45903"}
{"text": "The Lexical Entry ID of OLE is the same as the Lexical Entry ID of ILE ; .( 3 )The Stratum of OLE is the same as the Rule Stratum of MR ; .( 4 )The Gloss String of OLE is the result of concatenating the Gloss String of SR to the right of the Gloss String of ILE , with a space separating the two ; .", "label": "", "metadata": {}, "score": "78.469955"}
{"text": "Description of the Related Art .People are most comfortable communicating in a natural language such as English , yet natural language is notoriously ambiguous and thus difficult for computers to understand .FAUSTUS ( Norvig , 1987 ) is computer program implementing a unified approach to natural language inference .", "label": "", "metadata": {}, "score": "78.67563"}
{"text": "Choose the \" Rules , templates , lexicon menus \" option .This will ask you whether you want : .( toy - eng .lfg ) .Choose the \" TOY ENGLISH Rules \" option ( there are not yet any macros or templates ) : .", "label": "", "metadata": {}, "score": "78.80487"}
{"text": "The relation between them is often described as zero derivation or conversion .In contrast , the verb shed and the noun shed have unrelated senses and thus are not derivationally related , by merely homonyms .Clearly homonyms such as verb shed and noun shed should receive separate lexical entries since they have no lexical relation to each other .", "label": "", "metadata": {}, "score": "78.83589"}
{"text": "While PC - KIMMO can handle eight - bit accented characters such as \u00ef and \u00e9 , every character added to the alphabet slightly increases processing time .Also , the ASCII code for the character \u00e9 on an IBM - compatible PC is not the same code on the Macintosh ; thus you would have to maintain several versions of the rules file for different computing platforms .", "label": "", "metadata": {}, "score": "78.94156"}
{"text": "5 , discussed below ) .The path is automatically generated by the invention .Bridgefrom is the first input sentence ( fromstring ) disambiguated as to word sense .Bridgeto is the second input sentence ( tostring ) disambiguated as to word sense .", "label": "", "metadata": {}, "score": "79.00386"}
{"text": "More specifically , the procedure bridge 401 generates bridging inferences ( as shown in .FIG .5 ) and the predict 403 generates predictive inferences ( as shown in .FIG .6 ) .The bridge operation 401 invokes the tag 417 and continuebridge 405 operations .", "label": "", "metadata": {}, "score": "79.0782"}
{"text": "( 1 )The phonetic sequence representing the Phonetic Shape of ILE has been transformed into the Phonetic Sequence of OLE by the application of SR ( as defined above , see section 4.2.5 , Definition of Transformation of a Phonetic Sequence by a Morphological Rule ) ; .", "label": "", "metadata": {}, "score": "79.40712"}
{"text": "Otherwise , if you prefer to use accented characters directly , then add them to the alphabet in ENGLISH.RUL and use them in the lexical entries .Word stress in full words is indicated with the back quote ( grave accent ) ' .", "label": "", "metadata": {}, "score": "79.59718"}
{"text": "C \u00ae 0 / C__C .If this rule is unapplied to a sequence ...C 1 C 2 ... , it will generate the sequence ...C 1 C 3 C 2 ... , where C 3 is the undeleted consonant .", "label": "", "metadata": {}, "score": "79.8421"}
{"text": "In Proceedings of the AAAI Spring Symposium on Acquiring ( and Using ) Linguistic ( and World ) Knowledge for Information Access .Palo Alto , Calif. : American Association for Artificial Intelligence . )In FAUSTUS , knowledge is represented in a verbose semantic network whose nodes represent concepts .", "label": "", "metadata": {}, "score": "79.96022"}
{"text": "Purpose : To allow the user to load in an entirely new rulebase without dropping out of Hermit Crab .After performing this command , the morpher has no morphological or phonological rules loaded .This may be of use in doing historical linguistic research , when a set of proto - forms are to be transformed into words of two or more daughter languages .", "label": "", "metadata": {}, "score": "79.99037"}
{"text": "Then PR transforms PLISeq into PLOSeq iff : .( 1 ) Rule PR matches LE , with PLISeq being the Input Stretch according to this match ( see definition in section 4.4.1.1 , Match between a Phonological Rule and a Lexical Entry ) ; .", "label": "", "metadata": {}, "score": "80.02934"}
{"text": "The first time you do this , there will be a bunch of warning messages generated in XLE which you can safely ignore ; they occur because demo - eng .lfg does not have a generator version .Instead , look at the two windows that XLE has popped up .", "label": "", "metadata": {}, "score": "80.20775"}
{"text": "For instance , not only must the morpher recognize the English word saw as the past tense of see , it must not morph the English word seed as if it were a regular past tense of see .This situation is treated in terms of the blocking of the analyzed form by an irregular form listed in the lexicon ( see section 3.4 , Families of Lexical Entries ) .", "label": "", "metadata": {}, "score": "80.35248"}
{"text": "One peculiarity of Hermit Crab 's application of phonological rules is due to its operation in analysis mode .Rather than starting with an underlying form and applying phonological and morphological rules to unambiguously synthesize a surface form , Hermit Crab begins with a known surface form , and attempts to analyze it into one or more underlying forms .", "label": "", "metadata": {}, "score": "80.67627"}
{"text": "Ibridge 701 alternates between invoking ibridgestep 702 on tagged sentences resulting from the first input sentence , and invoking ibridgestep 702 on tagged sentences resulting from the second input sentence .Ibridgestep 702 applies rules to tagged sentences to produce new tagged sentences .", "label": "", "metadata": {}, "score": "80.97213"}
{"text": "Three seductions of computational psycholinguistics .In Peter Whitelock , Mary McGee Wood , Harold L. Somers , Rod Johnson , and Paul Bennett , editors , Linguistic Theory and Computer Applications .Academic Press , London , pages 149 - -181 .", "label": "", "metadata": {}, "score": "81.09375"}
{"text": "For instance , consider two rules A \u00ae B /C__D and C \u00ae E /false__G , applying in that ( synthesis ) order , and suppose that there are at least some forms in which both rules will apply .When Hermit Crab undoes the application of the second ( shallower ) rule , it will uninstantiate the features of C. But when Hermit Crab comes to the first rule , the value of those features required by that rule are unknown , so Hermit Crab simply assumes that the rule applies .", "label": "", "metadata": {}, "score": "81.12163"}
{"text": "Type ' help ' for more information ./project / xle / solaris / site.tcl loaded .At this point XLE is running , but there is no parser .That is , your grammar is not installed .To do this , on the line with the % , which will be the line where the cursor is , type : . create - parser toy - eng .", "label": "", "metadata": {}, "score": "81.1952"}
{"text": "This restriction might be encoded with the ad hoc Morphophonemic Rule feature AnimObj .Feature value assignment , together with null affixation rules , allows Hermit Crab to distinguish between true null affixes , such as the plural marker on sheep , and optional affixes .", "label": "", "metadata": {}, "score": "81.41258"}
{"text": "In Fellbaum , Christiane ( Ed . ) , WordNet : An electronic lexical database ( pp .379 - 405 ) .Cambridge , Mass. : MIT Press .The Open Mind Common Sense project ( Singh , 2002 ) is building a database of English sentences that describe commonsense knowledge .", "label": "", "metadata": {}, "score": "81.47055"}
{"text": "He put an ice pack on his head .\" The unstated bridging inference is the user 's friend has a hangover .As explained below , the invention automatically produces such bridging inferences and records paths of rules to form such bridging inferences .", "label": "", "metadata": {}, "score": "81.564865"}
{"text": "This requirement could be imposed in the lexical entry for girl by adding the following constraints : . to produce the extended entry : .The new disjunction asserts that either the number is singular and some value exists for the feature DEF , or the number is plural .", "label": "", "metadata": {}, "score": "81.69281"}
{"text": "Their alternation fields name Suffix , indicating that they may take derivational suffixes .The other three entries , mice , began , and worse , are irregular inflected forms .Their alternation fields name Clitic , the final positional slot shown in figure 3.1 ; this reflects the fact that , as inflected forms , they can not be further affixed .", "label": "", "metadata": {}, "score": "81.76668"}
{"text": "We can then call the template for each predicate that we want it to apply to : .@ANIM(BOY ) .@ANIM(GIRL ) .@ANIM(SHEEP ) .As in the XLE grammars , templates are called with an @. Add the template definition and calls to your grammar .", "label": "", "metadata": {}, "score": "82.108185"}
{"text": "So , the SIGDEMO ENGLISH template section begins with : .SIGDEMO ENGLISH TEMPLATES ( 1.0 ) .Once a grammar has become relatively large , it is often convenient to divide these sections into different files .For example , there might be one file called demo - eng - lex .", "label": "", "metadata": {}, "score": "82.140175"}
{"text": "Really , quite a different beast .& gt ; & gt;&gt ; Support for OrderedSets provides a defined depth first ordering for such & gt;&gt ; transditiveClosures .& gt;&gt ; & gt;&gt ; Support for Bags and Sequences is more dubious .", "label": "", "metadata": {}, "score": "82.26279"}
{"text": "3 .FIG .5 shows a bridging inference produced by bridge 401 given the input character strings \" Bill drank vodka \" 501 and \" He put an ice pack on his head \" 509 .The rules that are used in the inference are 503 , 505 , and 507 .", "label": "", "metadata": {}, "score": "82.45944"}
{"text": "( 1 ) MRISeq matches against PLSeq ; .( 2 )For each atom in SR 's Required Morphological Rule Features list , ILE must contain that same atom in its MPR Features list ; .( 3 )For each atom in SR 's Excluded Morphological Rule Features list , ILE must not contain that atom in its MPR Features list .", "label": "", "metadata": {}, "score": "82.680664"}
{"text": "FILES : a list of files to be included ; these should always end in .lfg ; no file is listed here .LEXENTRIES : a specification of which lexical entries are given precedence ; here ( TOY ENGLISH ) indicates that the lexical entries in the TOY ENGLISH section are to be used .", "label": "", "metadata": {}, "score": "82.682976"}
{"text": "Because the word grammar component is new to PC - KIMMO version 2 , the section in this chapter on Englex 's word grammar serves as a tutorial on writing word grammars .Englex is a description of English morphology and lexicon using the two - level model as it is implemented by PC - KIMMO .", "label": "", "metadata": {}, "score": "82.694084"}
{"text": "In DEMO ENGLISH , this is S .So , if you parse a string with the DEMO ENGLISH parser and do not overtly specify a category , it will try to parse it as an S .In SIGDEMO ENGLISH , the default category is ROOT .", "label": "", "metadata": {}, "score": "82.84852"}
{"text": "For example , a common analysis of English is that rules of the cyclic stratum precede rules of the post - cyclic stratum .In defense of the non - provision for looping back in Hermit Crab , it should be said that there is no clear answer in morphological theory to such ordering paradoxes .", "label": "", "metadata": {}, "score": "83.038765"}
{"text": "Stanford : Center for the Study of Language and Information .Kaplan , Ronald M. and Jurgen Wedekind .Restriction and correspondence - based translation .In Proceedings of the 6th Conference of the Association for Computational Linguistics European Chapter , pages 193 - -202 , Utrecht University .", "label": "", "metadata": {}, "score": "83.050125"}
{"text": "It is a better model of morphological structure .However , the decomposition approach is not without its disadvantages , the main one being that it increases the number of spurious parses .For example , if you posit the suffix + age in order to derive baggage , acreage , voltage , and so on from noun roots , then the system will happily tell you that cabbage is derived from cab .", "label": "", "metadata": {}, "score": "83.151344"}
{"text": "\"Morpher : For stratum , the character table is , the stratum is cyclic , phonological rules are simultaneously ordered , morphological rules are unordered , and the affix templates are . \" hc6558 \" Morpher : For stratum , the character table is , the stratum is noncyclic , phonological rules are simultaneously ordered , morphological rules are unordered , and the affix templates are . \" hc6559 \" Morpher : For stratum , the character table is , the stratum is cyclic , phonological rules are linearly ordered , morphological rules are unordered , and the affix templates are . \"", "label": "", "metadata": {}, "score": "83.34903"}
{"text": "Hermit Crab does not check for this .An alpha variable must be instantiated before it can be used to assign a value to a feature .Normally , this will be accomplished by enforcing agreement between a feature in the input of the rule and one in the output ; they should not be used to enforce agreement between two parts of the output .", "label": "", "metadata": {}, "score": "83.443054"}
{"text": "The lexical entry for the singular noun sheep ( in the user 's lexicon ) would bear the feature number ( singular ) .The surface string sheep would then be ambiguous between two lexical entries , one the singular noun sheep ( listed in the user 's lexicon ) , and the other the plural noun sheep ( derived from the singular form by the rule of null affixation ) .", "label": "", "metadata": {}, "score": "83.66435"}
{"text": "Nasal Assimilation in English specifies that the underlyingly underspecified nasal consonant N has the same place of articulation as the following obstruent , as in damp , end , or thank .Note also that the structure - adding applications of rules do not create derived environments .", "label": "", "metadata": {}, "score": "83.78821"}
{"text": "TEMPLATES : a specification of which templates are given precedence ; here ( TOY ENGLISH ) indicates that the templates in in the TOY ENGLISH section are to be used .GOVERNABLERELATIONS : a list of grammatical relations which must be subcategorized for in order to appear , e.g. , these obey completeness and coherence .", "label": "", "metadata": {}, "score": "83.9434"}
{"text": "3 .FIG .8 shows an output bridging inference produced by ibridge 701 given the input character strings \" Bill drank vodka \" 801 and \" He put an ice pack on his head \" 809 .The rules that are used in the inference are 803 , 805 , and 807 .", "label": "", "metadata": {}, "score": "84.04718"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( issue : POS noun : SENSES ( ( issue1:EXAMPLE ( address important issues):TYPE p : PAR ( c - concern):ASSOC ( subject ) )", "label": "", "metadata": {}, "score": "84.155365"}
{"text": "Example of the use of Obligatory Features : Suppose that in some language , count nouns are obligatorily marked with a number suffix .Then the obligatory_features list of all count noun stems should contain the feature name number .All lexical entries for count nouns which lack a value for the feature number would be incomplete lexical entries .", "label": "", "metadata": {}, "score": "84.45762"}
{"text": "Thus , there may be two versions of the S rule , one in TOY ENGLISH and one in STANDARD ENGLISH .The Config File dictates which version takes precedence .Let 's start by entering some syntactic rules for a simple version of English , called TOY ENGLISH .", "label": "", "metadata": {}, "score": "84.51578"}
{"text": "( 11 )The Obligatory Features list of OLE is the set union of the Obligatory Features lists of ILE and SR . .Note : The Head- and Foot - features fields of OLE bear only values which have been assigned to them by a virtue of percolation from a real lexical entry .", "label": "", "metadata": {}, "score": "84.53546"}
{"text": "When doing lexical lookup of a partially instantiated phonetic feature matrix , Hermit Crab looks for all lexical forms which would match the feature matrix , ignoring unspecified feature values .For instance , suppose a language has both front rounded and front unrounded vowels , and Hermit Crab has undone a rule which rounds vowels in some environment .", "label": "", "metadata": {}, "score": "84.622055"}
{"text": "Bring up demo - eng .lfg in an emacs buffer .The file is stored where this file and the other XLE documentation html files are stored ; you can copy demo - eng .lfg to your own directory if you wish .", "label": "", "metadata": {}, "score": "84.65897"}
{"text": "Theories differ as to the number and kind of boundary markers they countenance .Hermit Crab makes no commitment to any of these theories , save that there is no provision for treating boundary markers as segments with features ( as in Chomsky and Halle 1968 ) .", "label": "", "metadata": {}, "score": "84.84512"}
{"text": "The output action is to display a list of nearby restaurants .For example , with the input : \" I 'm hungry .\" the output predictive inference is that the user wants to eat , and the action is to display a list of nearby restaurants .", "label": "", "metadata": {}, "score": "85.29306"}
{"text": "These points should be noted .Each word has a pos feature standing for part - of - speech .While the part - of - speech of a simple stem such as fox is identical to its gloss , the part - of - speech of the word computer can not be directly extracted from its gloss but must be inferred by the word grammar .", "label": "", "metadata": {}, "score": "85.36879"}
{"text": "Code is interpreted as strict mode code in the following situations : .Global code is strict global code if it begins with a Directive Prologue that contains a Use Strict Directive ( see 14.1 ) .Eval code is strict eval code if it begins with a Directive Prologue that contains a Use Strict Directive or if the call to eval is a direct call ( see 15.1.2.1.1 ) to the eval function that is contained in strict mode code .", "label": "", "metadata": {}, "score": "86.093414"}
{"text": "When a rule specifies a change in the value of some feature ( e.g. that a particular segment in the stem becomes voiced ) , Hermit Crab \" undoes \" this rule by leaving the value for voicing of that segment unspecified .", "label": "", "metadata": {}, "score": "86.35686"}
{"text": "( 7 )The Morphological Rules list field of OLE consists of the Morphological Rules list of ILE appended to ( the left of ) a list containing the Rule Name of MR . .( 8) The MPR Features list of OLE is the set union of the MPR Features list of ILE and the MPR Features list of SR . .", "label": "", "metadata": {}, "score": "86.487785"}
{"text": "The features field of these three entries contains feature abbreviations that will convey morphotactic information about the suffixes to the word grammar .For example , the abbreviation aj / n in the features field for + ness indicates that it attaches to an adjective and produces a noun , such as happiness .", "label": "", "metadata": {}, "score": "86.758675"}
{"text": "The output action is to bring up a complete list of hangover remedies .In another example the input is \" I 'm hungry .I 'm getting my car keys . \"The bridging inference is that the user is eating out .", "label": "", "metadata": {}, "score": "86.77674"}
{"text": "In addition to showing how lexical units are related within a field , domain - specific thesauri give an idea of what subjects are important to that field and are thus useful at many points in an information system .The major impediment to creation of thesauri has been the cost of their manual c ... \" .", "label": "", "metadata": {}, "score": "86.92233"}
{"text": "The left environment can not extend across a word boundary ( i.e. white space ) .This means that this phonetic template should not contain a value of true for the Final Boundary Condition field .Hermit Crab will silently ignore such a value in that field .", "label": "", "metadata": {}, "score": "86.96983"}
{"text": "Warnings : The morpher does not check that the feature - name is used anywhere in the grammar .Hermit crab also does not check that the same default values are assigned to a given feature name in the morpher and parser .", "label": "", "metadata": {}, "score": "87.03181"}
{"text": "But how do we indicate that nouns such as mouse or fox are singular ?We could of course include the feature abbreviation sg in their entries which is defined by this template : .However , this would require us to include the abbreviation sg in the entries for all singular nouns in the lexicon .", "label": "", "metadata": {}, "score": "87.08533"}
{"text": "SIGDEMO ENGLISH CONFIG ( 1.0 ) ROOTCAT ROOT .FILES demo - eng .lfg .LEXENTRIES ( DEMO ENGLISH ) ( SIGDEMO ENGLISH ) .RULES ( DEMO ENGLISH ) ( SIGDEMO ENGLISH ) .TEMPLATES ( DEMO ENGLISH ) ( SIGDEMO ENGLISH ) .", "label": "", "metadata": {}, "score": "87.14055"}
{"text": "The symbols on the right can be either terminal or nonterminal symbols .In figure 3.12 , Word and Stem are nonterminal symbols , while CLITIC , PARTICLE , PREFIX , SUFFIX , and ROOT ( writtin in all caps ) are terminal symbols .", "label": "", "metadata": {}, "score": "87.148384"}
{"text": "The Part of Speech of OLE is the same as the Part of Speech of the output of SR if that field is non - empty ; otherwise it is the same as the Part of Speech of ILE .Otherwise ( if there is no Subcategorization field in the output of SR ) , the Subcategorization field of OLE is the same as the Subcategorization field of ILE .", "label": "", "metadata": {}, "score": "87.25984"}
{"text": "While the number of a regular plural noun such as foxes is overtly marked by a suffix , the number of the other nouns is not .The word grammar is able to provide a default value for the feature number : nouns are singular unless marked otherwise .", "label": "", "metadata": {}, "score": "87.30097"}
{"text": "Using the above example , fromstring would be \" Bill drank vodka \" and tostring would be \" He put an ice pack on his head .\" A path ( e.g. , series of bridging inferences ) is a list of tagged sentences that form a logical connection from the bridgefrom tagged sentence to the bridgeto tagged sentence ( e.g. , see .", "label": "", "metadata": {}, "score": "87.33705"}
{"text": "For example , here are the feature structures for the the root large , the prefix en+ , and the suffix + ment : .Thus the prefix en+ , whose from_pos is AJ , can attach to the root large , whose pos is also AJ , but not with with other categories of roots such as nouns or verbs .", "label": "", "metadata": {}, "score": "88.45747"}
{"text": "XLE loaded from xle .Copyright ( c ) 2002 - 2004 by the Palo Alto Research Center .Copyright ( c ) 1993 - 2001 by the Xerox Corporation .All rights reserved .This software is made available AS IS , and PARC and the Xerox Corporation make no warranty about the software , its performance or its conformity to any specification .", "label": "", "metadata": {}, "score": "88.7744"}
{"text": "Lexical capitalization is distinct from orthographic capitalization .For words such as September and France , capitalization is part of their lexical form .Thus May , the month , can be distinguished from may , the modal .Also , many acronyms have lexical capitalization , such as IBM and NATO .", "label": "", "metadata": {}, "score": "89.50437"}
{"text": "& gt;&gt ; & gt;&gt ; If just object closure existed , the interaction with implicit collect & gt;&gt ; for collections would be nearly as confusing , so the collection wins for & gt;&gt ; lexical ergonomic reasons .& gt ; & gt ; Oh , yes .", "label": "", "metadata": {}, "score": "89.950195"}
{"text": "Save toy - eng .lfg and restart XLE .This definition of the CN template has now been entered into XLE 's internal database , and it has also been activated so that it can be invoked in various lexical entries .", "label": "", "metadata": {}, "score": "89.99339"}
{"text": "Under Hermit Crab , each cycle of phonological rules applies immediately after each morphological rule , not after all the morphological rules of the cyclic stratum have applied .If a morphological rule is sensitive to the phonetic form of the word to which it attaches , this leaves open the possibility that a preceding cycle of phonological rules will feed or bleed that morphological rule . )", "label": "", "metadata": {}, "score": "91.04651"}
{"text": "If code is eval code , then let configurableBindings be true else let configurableBindings be false .If code is strict mode code , then let strict be true else let strict be false .If code is function code , then .", "label": "", "metadata": {}, "score": "91.405205"}
{"text": "\" ; \" Something that might happen as a consequence of having a heart attack is vice Presidency .\" ; \" A machinist can machine parts . \" ; and \" Walking is for relaxation . \"( e.g. , see , Singh , Push ( 2002 ) .", "label": "", "metadata": {}, "score": "91.420586"}
{"text": "A sample of such sentence contributions is : \" One type of book is a calendar book .\" ; \" One of the things you do when you plan a vacation is get out the map .\" ; \" The ice age was long ago .", "label": "", "metadata": {}, "score": "91.45358"}
{"text": "In the former case , a new structure is derived from the operation of a morphological rule .In the latter , it results from a phonological rule .Consider /servis+e/ , the Polish word serwis \" service . \" In contrast to the first sequence /se/ , the second /se/ in this form is derived morphologically : -e is the ending .", "label": "", "metadata": {}, "score": "91.81956"}
{"text": "Tagtokens 419 invokes getwords 423 and join 425 .Ibridgestep 702 invokes iapplyrules 705 .Iapplyrules 705 invokes match 411 and instan 413 .Intersect 703 invokes pinstanmany 706 .Pinstanmany 706 invokes pinstan 707 .Match 411 invokes isa 415 .", "label": "", "metadata": {}, "score": "92.26769"}
{"text": "These strategies also help in making the linguistic representations more comprehensible , but sometimes the results are surprising .To illustrate one effect , enter the sentence : . the sheep devoured a banana .This produces a single c - structure with two f - structure solutions corresponding to whether sheep is singular or plural due to the lexical entry ( make sure that you are not abbreviating attributes at this point ) : .", "label": "", "metadata": {}, "score": "92.35772"}
{"text": "For example , Englex will correctly recognize the comparative and superlative forms of adjectives such as big , bigger , and biggest .But it will also recognize the dubious form aliver as the comparative form of alive .In other words , Englex underspecifies the morphotactic constraints related to adjective inflection ; it assumes that all adjectives can have a comparative form , which of course is not true .", "label": "", "metadata": {}, "score": "92.614975"}
{"text": "Ed Willink .Glad you 're still here .Your comments and an accidentally off - list discussion with Nicolas Rouquette have helped me clarify my thoughts .The practical implementation of closure is not closure ; it is transitive closure .", "label": "", "metadata": {}, "score": "93.00986"}
{"text": "FILES demo - eng - lex .lfg sigdemo - eng - lex .lfg .Now analyze the sentence : . the girl devours a banana .The c - structure window and the f - structure window have essentially the same information as before , although the c - structure now starts with the category ROOT .", "label": "", "metadata": {}, "score": "93.44472"}
{"text": "In this case it can not find a lexical entry for walks .XLE will respond with : .XLE will also display a morphology window which shows how it attempted to analyze the sentence .The problem is that XLE does n't know that walks is the third person singular form of walk because we have n't specified any morphology for the current analysis environment .", "label": "", "metadata": {}, "score": "93.47684"}
{"text": "The direction of lexical conversion can be distinctive .Examples of verb to noun conversion include love , laugh , answer , cover , and walk , while examples of noun to verb conversion include bottle , grease , peel , and father .", "label": "", "metadata": {}, "score": "93.623024"}
{"text": "Now the pos of the prefix en+ is V , but prior to the application of this rule , the Stem category has no pos feature .Thus the effect of the constraint is to add [ pos : V ] to the feature structure for the Stem category ; in other words , the part - of - speech of the derived stem enlarge is V ( verb ) .", "label": "", "metadata": {}, "score": "95.070206"}
{"text": "At any rate , Hermit Crab does not provide for negative phonetic conditions .Rarely languages will have gaps in their paradigms .A paradigm gap occurs when there is no form for a given position of the paradigm .For instance , the English phrasal verb have got lacks a past tense ( J.D. Fodor 1978 ) .", "label": "", "metadata": {}, "score": "95.96138"}
{"text": "Hermit Crab does not check that all the rules named in the Affix Templates are rules which have already been loaded .Hermit Crab intentionally does not check for appearance of a rule name more than once in a given Template .", "label": "", "metadata": {}, "score": "96.13161"}
{"text": "There are also instances of homonyms of the same part - of - speech ; for instance , bat in the sense \" instrument for hitting \" and bat in the sense \" flying mammal . \"Note that these two words have different derivational possibilities : the first can be converted to a verb while the second can not .", "label": "", "metadata": {}, "score": "96.64951"}
{"text": "For instance , consider the English word seed .This word is properly formed as a noun , but not as the past tense of the verb see , since it is blocked by the irregular past tense saw .It would not be sufficient to simply list the irregular form saw in the lexicon , since that would not prevent morphing seed as a past tense verb .", "label": "", "metadata": {}, "score": "96.8573"}
{"text": "Since Open Mind Common Sense is a collection of English sentences describing commonsense knowledge , the database is potentially relevant to many natural language understanding tasks .The first problem with Open Mind Common Sense is that the sentences are ambiguous as to part of speech and word sense .", "label": "", "metadata": {}, "score": "97.75572"}
{"text": "A template is defined and edited in the template section of the grammar file .In the template section , following TOY ENGLISH TEMPLATES ( 1.0 ) , type in the following definition for the CN template : .As with rules , you must save the file and then restart XLE to install the template .", "label": "", "metadata": {}, "score": "98.033875"}
{"text": "This template has a disjunctive definition -- the number feature can have either the value SG or the value PL .The effect of this template is that when the grammar uses the word deer , it creates two instances of it , one with the feature specification [ number : SG ] and another with the feature specification [ number : PL ] .", "label": "", "metadata": {}, "score": "98.99896"}
{"text": "Christian W. Damus wrote : & gt ; Hi , Ed , & gt ; & gt ; See some replies in - line , below .& gt;&gt ; & gt;&gt ; Your comments and an accidentally off - list discussion with Nicolas & gt;&gt ; Rouquette have helped me clarify my thoughts .", "label": "", "metadata": {}, "score": "100.00362"}
{"text": "In general , multiple senses of words are not distinguished .For example , there is only one entry for the adjective fair , ignoring the fact that it has several senses ( including \" not stormy \" , \" impartial \" and \" light - colored \" ) .", "label": "", "metadata": {}, "score": "100.02426"}
{"text": "Some nouns have identical singular and plural forms , such as sheep and deer .Englex uses the feature abbreviation sg - pl to mark such nouns .Here is the lexical entry for deer : . \\lf ' deer \\lx N \\alt Suffix \\fea sg - pl irreg \\gl .", "label": "", "metadata": {}, "score": "101.75159"}
{"text": "( TOY ENGLISH lexicon ) girl kick the walk walks ( TOY ENGLISH lexicon ) .Clicking on a lexical item will move your cursor to that lexical item 's entry .The menu is of all lexical entries either currently active or defined in the selected version / language .", "label": "", "metadata": {}, "score": "103.80403"}
{"text": "( If Hermit Crab is parsing seed , i.e. running the command morph_and_lookup_word , the resulting word saw will not match the input , and the derivation will fail .If Hermit Crab is instead generating the past tense of saw , i.e. it is running the command generate_word , the output will be saw instead of seed . )", "label": "", "metadata": {}, "score": "105.533646"}
{"text": "It sets bridgetos to the result of invoking tag 417 on tostring .For each bridgefrom in bridgefroms , for each bridge in the result of invoking continuebridge 405 on bridgefrom , bridgefrom , bridgetos , the empty list , and the empty list , it appends bridge to result .", "label": "", "metadata": {}, "score": "107.1811"}
{"text": "In addition to NUM now being NUMBER for both noun phrases , the noun phrase for banana has CASE ACC .Note that sheep does not have CASE ACC because the -CASE(%Fstr,%% ) blocked the rule from applying to an f - structure that already had case .", "label": "", "metadata": {}, "score": "108.08222"}
{"text": "3 .FIG .6 shows an output predictive inference produced by the predict process 403 ( discussed above with respect to .FIG .4 ) given the \" Bill drank vodka \" 601 input .The rule that is used in the inference is 603 .", "label": "", "metadata": {}, "score": "110.23393"}
{"text": "English words usually spelled with diacritics are given lexical forms without them .For instance , the word na\u00efvet\u00e9 is usually spelled with a diaeresis over the i and an acute accent over the final e ; but the lexical entry for na\u00efvet\u00e9 is spelled naivete with no diacritics .", "label": "", "metadata": {}, "score": "123.59218"}
