{"text": "An index generator and query expander for use in information retrieval in a corpus .A corpus is provided as an input to an inflectional analyzer , which produces a lemmatized corpus having base forms and associated inflections for each word in the original corpus .", "label": "", "metadata": {}, "score": "43.35172"}
{"text": "A system to generate and interpret customized visual languages in given application areas is presented .The generation is highly automated .The user presents a set of sample visual sentences to the generator .The generator uses inference grammar techniques to produce a grammar that generalizes the initial set of sample sentences , and exploits general semantic information about the application area to determine the meaning of the visual sentences in the inferred language .", "label": "", "metadata": {}, "score": "43.742443"}
{"text": "The metagrammar 504 is used for transforming the complex terms of the lexicon through morphosyntactic transformations including all the content words of the original term or one of their derivatives .The filtering of correct variants results from the exploitation of multiword terms , derivatives of single words , and specific syntactic patterns with slots for derivational links .", "label": "", "metadata": {}, "score": "45.364735"}
{"text": "Hunt and Thomas described in The Pragmatic Programmers the main two types of generators : passive and active .Passive generation is run once to produce a result that is subsequently maintained by hand .Many developers have used passive generators via IDE gestures like \" generate getters / setters \" .", "label": "", "metadata": {}, "score": "45.798767"}
{"text": "A knowledge intensive architecture with a uniform knowledge base allows the revision software to quickly locate referents , choices made in producing the defective text , alternatives to the decisions made at both the conceptual and stylistic levels , and the intent of the text .", "label": "", "metadata": {}, "score": "45.87786"}
{"text": "This means the generated applications reflect whatever best practices are embodied in the generator .These best practices are then continuously encouraged via the normal operation of the generator , as any further code it generates for the user will reflect those same architectural patterns .", "label": "", "metadata": {}, "score": "45.927765"}
{"text": "to select alternatives for improving the text .The Kalos system was implemented to illustrate revision processing in a natural language generation system .It produces advanced draft quality text for a microprocessor users ' guide from a knowledge base describing the microprocessor .", "label": "", "metadata": {}, "score": "46.15703"}
{"text": "FIG .9 is a flowchart illustrating a method 900 of query expansion according to the present invention .At step 902 , a query is introduced consisting of a single - word search term or a multiple - word search term .", "label": "", "metadata": {}, "score": "46.51702"}
{"text": "A code generator based on this approach has been implemented and tested with several machine descriptions .The code generators obtained produce locally optimal code , are faster than comparable ones based on Graham - Glanville techniques , and are significantly faster than other recent proposals that manipulate costs explicitly at code generation time .", "label": "", "metadata": {}, "score": "46.757317"}
{"text": "A code generator based on this approach has been implemented and tested with several machine descriptions .The code generators obtained produce locally optimal code , are faster than comparable ones based on Graham - Glanville techniques , and are significantly faster than other recent proposals that manipulate costs explicitly at code generation time .", "label": "", "metadata": {}, "score": "46.757317"}
{"text": "The list of multiword terms is recycled automatically into the computational grammar while the metagrammar is tuned empirically through large - scale experiments and a manual scanning of the results .The metagrammar takes as input term rules and transforms them into term variant rules through unification .", "label": "", "metadata": {}, "score": "46.836613"}
{"text": "This survey focuses on three related computational problems , each of which is defined with respect to a particular input set I. The problems , given an input ( ; G ) 2 I , are ( 1 ) count the or ... \" .", "label": "", "metadata": {}, "score": "46.970795"}
{"text": "He said that most developers use code generation every day , whether they 're using Eclipse 's \" generate getters / setters \" feature or perhaps copying a fragment of working code from elsewhere .The key motivation is to implement a solution to a particular requirement as quickly as possible and avoid having to rediscover the best approach every time .", "label": "", "metadata": {}, "score": "47.766518"}
{"text": "The feature ' lexicalization ' is a link between the grammar 502 and the single words for a bottom - up filtering during parsing .This assures efficient access to the grammar 502 through the words encountered in the corpus .The metagrammar comprises a list of metarules .", "label": "", "metadata": {}, "score": "47.788677"}
{"text": "a derivational generator for receiving the disambiguated query as an input and producing an expanded query including all possible derivations for each word in the disambiguated query .The query expander of claim 22 , wherein the inflectional analyzer includes a finite - state morphological transducer and a lexicon containing all possible transitions between base and inflected forms , the morphological transducer employing morphological information contained in the lexicon to analyze the query in producing the inflected query .", "label": "", "metadata": {}, "score": "47.989784"}
{"text": "What is important is to generate as many forms as possible so that the variants created on the input expressions can be properly enriched to provide some morphological alternatives .FIG .4 illustrates a derivational generator 400 .Derivational transformations occur with the application of allomorphic , phonological , and morphological rules , and serve to create a maximum term list for inflation .", "label": "", "metadata": {}, "score": "48.01465"}
{"text": "Additionally , most quality generators will have the architecture they generate publicly certified by some reputed organisation ( eg SpringSource certifies Roo architecture as best practice ) .How do other approaches like Grails ( where most of the code is generated behind - the - scenes at execution time ) compare with a traditional code generation framework ?", "label": "", "metadata": {}, "score": "48.912235"}
{"text": "Given the above , code generation will continue to play an important role in software development .Static languages still dominate the overwhelming majority of language use ( source : Tiobe ) and such languages depend on code generation techniques for programmer productivity .", "label": "", "metadata": {}, "score": "49.121235"}
{"text": "And just as with \" generate getters / setters \" , modern day generators are easy to use , emit code that is equivalent to what you 'd have written yourself , and allow you to change the modified code without thinking about it .", "label": "", "metadata": {}, "score": "49.253746"}
{"text": "This was clearly a tipping point for generation , but it does not represent the end state or final estimation of value to be realized .As the industry moves to offer support for a wider set of functional generation options and input formats , we will see a larger number of developers moving to adopt generative techniques .", "label": "", "metadata": {}, "score": "49.366497"}
{"text": "The expanded query is used to search the corpus or corpus index , with each term in the expanded query being used as a candidate match term against the corpus or corpus index .The inflectional analyzer 802 , disambiguator 810 and derivational generator 816 are similar to the inflectional analyzer 200 , disambiguator 300 and derivational generator 400 , respectively , and can be implemented and operated in a similar manner .", "label": "", "metadata": {}, "score": "49.739006"}
{"text": "In the past , code generators were limited to generating one artifact for each \" concept \" that was input to the generation system .With regards to data modeling , this generally meant that the data model could be created using one of a variety of formats , and that the \" Class \" implementation of the data model could be generated .", "label": "", "metadata": {}, "score": "49.912018"}
{"text": "Active generators require a way of storing control information so they can execute later and produce the required result .The control information techniques vary considerably , but are generally a combination of automatically - derived metadata ( eg from source code parsing and binding ) together with user preferences defined via Java annotations , JavaDoc tags , XML files , special GUI configuration systems etc .", "label": "", "metadata": {}, "score": "49.96128"}
{"text": "In particular , a new generator MOLGEN 4.0 is described that aims at highest flexibility in using constraints during the generation process and , thus , meeting the needs of practical applications . ... memory for comparison .It is still a popular technique for many construction problems , e.g. [ 25].", "label": "", "metadata": {}, "score": "50.023296"}
{"text": "The index generator of claim 1 , wherein the inflectional analyzer includes a finite - state morphological transducer and a lexicon containing all possible transitions between base and inflected forms , the morphological transducer employing morphological information contained in the lexicon to analyze the corpus in producing the lemmatized corpus .", "label": "", "metadata": {}, "score": "50.02866"}
{"text": "1122 - 1135 , October 1990 , doi:10.1109/32.60293 TECHNICAL PUBLICATIONS : .Efficient generation from packed input .Intelligent Linguistic Architectures , edited by M. Butt , M. Dalrymple and T. H. King .Kay ( 1996 ) introduces chart generation , a simple and relatively efficient algorithm for generating strings from an unambiguous meaning representation .", "label": "", "metadata": {}, "score": "50.595676"}
{"text": "Regardless of the development methodology used , pattern - based code generation and automation techniques influence all phases of the software development lifecycle ( analysis / design / build / test / deploy ) .Code generation would start with decorating the conceptual elements in analysis , carrying those through to more specificity in pattern - based design , and finally , transforming the design into pattern - based code and test units .", "label": "", "metadata": {}, "score": "50.7716"}
{"text": "Statistical analysis is performed by operation on a restricted training corpus , which enhances the linguistic knowledge available for applying tags .Control is next passed to step 912 and each word of the inflected query is identified with the base - inflection combination tagged with the same part of speech .", "label": "", "metadata": {}, "score": "50.886692"}
{"text": "Indices may be produced through free indexing , where terms are automatically extracted from corpora without referring to a controlled list .Alternatively , controlled indexing may be employed using available terminological data and other resources , such as thesauri , ontologies , or key - word lists .", "label": "", "metadata": {}, "score": "50.947174"}
{"text": "A corpus is provided as an input to an inflectional analyzer , which produces a lemmatized corpus having base forms and associated inflections for each word in the original corpus .Methods and apparatus for information indexing and retrieval as well as query expansion using morpho - syntactic analysis US 6101492 A .", "label": "", "metadata": {}, "score": "51.01924"}
{"text": "The index 508 contains a set of valid term variants .FIG .6 illustrates a computer system 600 suitable for implementing an index generator according to the present invention .The computer 600 provides a processing unit 602 for implementing an inflectional analyzer 604 , disambiguator 606 , derivational generator 608 and transformational analyzer 610 similar to those illustrated in FIGS . 2 - 5 .", "label": "", "metadata": {}, "score": "51.04409"}
{"text": "Control is then passed to step 916 for derivational generation .Derivational generation is the generation of every possible derivative of each word in the disambiguated query .At step 916 , candidate derivatives are generated from stems , prefixes , derivational suffixes and inflectional suffixes .", "label": "", "metadata": {}, "score": "51.088036"}
{"text": "For example , the candidate derivative ' unorganic ' discussed above would appear neither in the dictionary nor in the disambiguated corpus and would be discarded .Control is next passed to step 722 and the expanded corpus is produced .Control is then passed to step 724 for transformational analysis .", "label": "", "metadata": {}, "score": "51.450516"}
{"text": "For example , the candidate derivative ' unorganic ' discussed above would appear neither in the dictionary nor the disambiguated query and would be discarded .Control is next passed to step 922 and the expanded query is produced .While the present invention is disclosed in the context of a presently preferred embodiment , it will be recognized that a wide variety of implementations may be employed by persons of ordinary skill in the art consistent with the above discussion and the claims which follow below .", "label": "", "metadata": {}, "score": "51.48172"}
{"text": "The disambiguated corpus is provided to a derivational analyzer which produces an expanded corpus containing all possible derivatives of the disambiguated corpus .Finally , the expanded corpus is provided to a transformational analyzer which conflates term variants using a grammar and a metagrammar .", "label": "", "metadata": {}, "score": "51.52097"}
{"text": "7 is a flowchart illustrating the steps of a method of index generation according to the present invention .At step 702 a corpus is introduced consisting of a plurality of documents , each document containing a plurality of words organized in standard grammatical fashion .", "label": "", "metadata": {}, "score": "51.687508"}
{"text": "This survey focuses on three related computational problems , each of which is defined with respect to a particular input set I. The problems , given an input ( ; G ) 2 I , are ( 1 ) count the orbits ( exactly ) , ( 2 ) approximately count the orbits , and ( 3 ) choose an orbit uniformly at random .", "label": "", "metadata": {}, "score": "51.803387"}
{"text": "In order to increase the accuracy of an index of multi - word terms and to decrease the work involved in searching the index , it is advantageous to reduce the number of multi - word term variants and join all the multi - word variants under a single index .", "label": "", "metadata": {}, "score": "51.98918"}
{"text": "Statistical analysis is performed by operation on a restricted training corpus , which enhances the linguistic knowledge available for applying tags .Control is next passed to step 712 and each word of a lemmatized corpus is identified with the base - inflection combination tagged with the same part of speech .", "label": "", "metadata": {}, "score": "52.038918"}
{"text": "FIG .1 illustrates an index generator according to the present invention ; .FIG .2 illustrates an inflectional analyzer according to the present invention ; .FIG .3 illustrates a disambiguator according to the present invention ; .FIG .", "label": "", "metadata": {}, "score": "52.09745"}
{"text": "The system performs both conceptual and stylistic revisions .Example output from the system , showing both types of revision , is presented and discussed .Techniques for dealing with the computational problems caused by the system 's uniform knowledge base are described .", "label": "", "metadata": {}, "score": "52.20775"}
{"text": "Each syntactic transformation is associated with a different family of type 1 variation .The second section 504B includes a metagrammar for type 2 variants .In addition to syntactic transformations , type 2 variants have undergone morphological changes from the original term .", "label": "", "metadata": {}, "score": "52.351242"}
{"text": "This is useful when trying to efficiently translate all of the possible meanings of a source sentence into a target language , or when trying to present a user with alternate paraphrases that distinguish the different meanings of a sentence .The new algorithm will typically generate in polynomial time in the size of the packed input when the grammar is context - free , the number of dependencies per semantic variable is bounded , and the disjunctions are relatively independent .", "label": "", "metadata": {}, "score": "52.442497"}
{"text": "Beyond questions you 'd use for an IDE , you should ask some questions specific to code generators : Will this code generator incrementally and automatically maintain my code in the long - term ( ie what round - trip support does it offer ) ?", "label": "", "metadata": {}, "score": "52.472946"}
{"text": "They then perform at runtime ( via a dynamic language or reflective techniques ) what would have been performed by an active generator at development time .There are well - documented advantages and disadvantages to static language compile - time techniques versus dynamic language runtime techniques .", "label": "", "metadata": {}, "score": "52.547333"}
{"text": "As the size of databases continues to increase , the need to reduce the size of indices increases .In conflating term variants under the same index , a system can be built more efficiently , since the term remaining after reduction is able to retrieve all documents which could be retrieved by the original terms .", "label": "", "metadata": {}, "score": "52.55643"}
{"text": "The disambiguated corpus is provided as an input to a derivational generator , which produces an expanded corpus having all possible valid derivatives of each word of the disambiguated corpus .The disambiguated corpus is provided as an input to a transformational analyzer , using a grammar and a metagrammar for analyzing syntactic and morphosyntactic variations to conflate and generate variants , producing an index to the corpus having a minimum of variants .", "label": "", "metadata": {}, "score": "52.654976"}
{"text": "A knowledge base , constructed during the generation of the system , is then consulted to construct the meaning of the visual sentence .The architecture of the system and its use in the application environment of visual text editing ( inspired by the Heidelberg icon set ) enhanced with file management features are reported .", "label": "", "metadata": {}, "score": "52.909443"}
{"text": "Control is then passed to step 910 .At step 910 , disambiguation is begun on the inflected query .It is possible for a word of the inflected query to be related to more than one possible base - inflection combination .", "label": "", "metadata": {}, "score": "52.911224"}
{"text": "Naturally one of the key questions a prospective user should ask is whether the best practices embodied in the generator really do represent best practices .Generators used by multiple users and across multiple projects are usually the best , as a lot of design feedback would have been incorporated into such generators .", "label": "", "metadata": {}, "score": "53.243927"}
{"text": "The options for the types of software assets that can be derived from UML and DSL investments will continue to grow and should include options for generating a greater percentage of application code across a wider set of technology stacks .DSL 's will continue to gain adoption as developers find greater value in the functionality that can be generated in an automated way from these targeted , simplified syntaxes .", "label": "", "metadata": {}, "score": "53.419434"}
{"text": "After part of disambiguation and generation of morphological derived forms have been performed as described above , the expanded corpus 122 is provided to a transformational analyzer 124 to extract occurrences of terms and variants .Two main sources of knowledge are used : a large list of multiword terms ( the grammar ) and a set of syntactic transformations of terms into variants ( the metagrammar ) .", "label": "", "metadata": {}, "score": "53.59848"}
{"text": "The index generator 100 includes an inflectional analyzer 102 .A corpus 104 is provided as an input to the inflectional analyzer 102 .The output of the inflectional analyzer 102 is a lemmatized corpus 108 containing stems and inflectional features . lemmatizations .", "label": "", "metadata": {}, "score": "53.80845"}
{"text": "In addition to conflating terms for an index , it is also advantageous to use techniques according to the present invention for query expansion .A query consisting of one or more search terms can be expanded according to the teachings of the present invention , to yield a set of related terms , all of which can be used to match terms of an index or corpus .", "label": "", "metadata": {}, "score": "53.95139"}
{"text": "Second , it promotes text polishing techniques that benefit from the ability to examine generated text in the context of the underlying knowledge from which it was generated .Third , it provides a mechanism for the integrated handling of conceptual and stylistic decisions .", "label": "", "metadata": {}, "score": "53.96453"}
{"text": "In the prior art , the main trend for the conflation of multi - word terms in information retrieval relies on a combination of three non - linguistic methods : empty word deletion , stemming , and grouping of single words into multi - word phrases based on concurrence information .", "label": "", "metadata": {}, "score": "54.055443"}
{"text": "However , iGen think the internet is like the internet ( a network of interconnected computers that allow one lots of choice , but also the opportunity to broadcast bottom - up ) .In terms of ambition and interaction within an organization , rather than a \" corporate ladder \" , members of iGen think of career paths as multidimensional - moving around and across rather than just \" up \" .", "label": "", "metadata": {}, "score": "54.45734"}
{"text": "However , iGen think the internet is like the internet ( a network of interconnected computers that allow one lots of choice , but also the opportunity to broadcast bottom - up ) .In terms of ambition and interaction within an organization , rather than a \" corporate ladder \" , members of iGen think of career paths as multidimensional - moving around and across rather than just \" up \" .", "label": "", "metadata": {}, "score": "54.45734"}
{"text": "It is known that many free indexing techniques suffer from overgeneration , even though syntactic and semantic filters are applied .The concomitant disadvantage of using a controlled index list is that it must be manually produced , a time - consuming and expensive task .", "label": "", "metadata": {}, "score": "54.60151"}
{"text": "The method of claim 20 , wherein the metagrammar includes type 1 variant metarules extract syntactic transformations which have contributed to the generation of the variant and type 2 variant metarules extract syntactic and morphological transformations which have contributed to the generation of the variant .", "label": "", "metadata": {}, "score": "54.653503"}
{"text": "The primary focus for the near future will likely be the bridging of the gaps that exist between traditional MDD approaches / tooling and the emerging DSL 's for rapid application development .The DSL 's that are currently in use will continue to become more powerful and sophisticated , incorporating security , validation , and application flow .", "label": "", "metadata": {}, "score": "54.737373"}
{"text": "It will be recognized that the present techniques for generating morphosyntactic variance may also be readily applied to query extension as addressed further below .A more complete understanding of the present invention , as well as further features and advantages of the invention , will be apparent from the following Detailed Description and the accompanying drawings .", "label": "", "metadata": {}, "score": "55.155273"}
{"text": "Control is then passed to step 906 , and each base form is combined with each inflection which could serve to generate the original word of the query .Thus the appearance of ' finit ' may be associated with the combination ' fin'+'it ' .", "label": "", "metadata": {}, "score": "55.194935"}
{"text": "The method of claim 16 wherein the step of inflectional analysis includes morphological analysis to determine relationships between base and inflected forms .The method of claim 18 , wherein the step of derivational generation further includes filtering candidate words against a dictionary and placing in the expanded corpus candidate words which appear in the dictionary .", "label": "", "metadata": {}, "score": "55.282192"}
{"text": "The method of claim 34 wherein the step of inflectional analysis includes morphological analysis to determine relationships between base and inflected forms .The method of claim 36 , wherein the step of derivational generation further includes filtering candidate words against a dictionary and placing in the expanded query candidate words which appear in the dictionary .", "label": "", "metadata": {}, "score": "55.41165"}
{"text": "REACHABILITY can be used to solve problems related to the mapping between concrete and abstract syntax trees , to construct a pattern matching algorithm for typed non - local patterns , and to provide algorithms for compiler code generation .A new class of rewrite system called finite bottom - up rewrite system ( finite - BURS ) is introduced for which the REACHABILITY problem can be solved efficiently with a table - driven algorithm .", "label": "", "metadata": {}, "score": "55.970657"}
{"text": "REACHABILITY can be used to solve problems related to the mapping between concrete and abstract syntax trees , to construct a pattern matching algorithm for typed non - local patterns , and to provide algorithms for compiler code generation .A new class of rewrite system called finite bottom - up rewrite system ( finite - BURS ) is introduced for which the REACHABILITY problem can be solved efficiently with a table - driven algorithm .", "label": "", "metadata": {}, "score": "55.970657"}
{"text": "A rewrite system defines a transformation between trees by the repeated application of its rewrite rules .Two research directions are pursued in this dissertation : augmenting the expressive power of individual rewrite rules by using new types of patterns , and analyzing the interaction of the rewrite rules .", "label": "", "metadata": {}, "score": "55.978333"}
{"text": "A rewrite system defines a transformation between trees by the repeated application of its rewrite rules .Two research directions are pursued in this dissertation : augmenting the expressive power of individual rewrite rules by using new types of patterns , and analyzing the interaction of the rewrite rules .", "label": "", "metadata": {}, "score": "55.978333"}
{"text": "As modern methodologies call for continuous integration and demonstrable development iterations , it becomes even more crucial to generate functioning applications with minimal time investments and consistent quality .Scaffolding helps with time , effort , and code quality as most of the application artifacts ( like web , Log4J and Spring configuration files ) are auto - generated .", "label": "", "metadata": {}, "score": "56.14704"}
{"text": "SUMMARY OF THE INVENTION .An index generating system according to an aspect of the present invention combines morphological and syntactic analysis to produce an index from a corpus , term variants in the index being conflated to achieve an index with a minimum of term variants .", "label": "", "metadata": {}, "score": "56.15275"}
{"text": "It also supports model - driven testing ( MDT ) which is a new paradigm that brings the benefits of MDD to the testing process .MDT allows engineers to iteratively simulate a design to locate errors early in the process , automate tedious testing , incorporate requirements - based testing to validate the design against requirements , and use IBM Rational Rhapsody Automatic Test Generation Add On capabilities to automatically create coverage tests from the design .", "label": "", "metadata": {}, "score": "56.382637"}
{"text": "A major point of difference between generation tools remains their DSL approach , with some featuring simple commands ( like \" create - controller \" ) and others offering advanced shells ( with tab completion , contextual awareness , command hiding etc ) .", "label": "", "metadata": {}, "score": "56.38369"}
{"text": "The disambiguated query 814 is provided as an input to a derivational generator 816 , which also draws data from stored productive suffixes 818 and a stored lexicon of lemmas and derivational suffixes 820 .The derivational generator 816 generates all the derivations of each disambiguated lemma , and produces as an output an expanded query 822 having derivational links .", "label": "", "metadata": {}, "score": "56.483192"}
{"text": "A method for expanding a query for use in information retrieval from a corpus , comprising the steps of : . performing inflectional analysis on the query to identify all associated combinations of base form and inflection for each word of the query to produce an inflected query showing relationships between each word of the query and associated combinations of base forms and inflections ; . performing disambiguation on the inflected query applying syntactic knowledge to disambiguate identified multiple inflected base forms in the inflected query representing the same word in the original query to produce a disambiguated query ; and .", "label": "", "metadata": {}, "score": "56.548546"}
{"text": "This algorithm is considerably more efficient than the naive approach , and can be modified to produce a wide variety of combinatorial configurations .Consider the problem of generating all non - isomorphic graphs or digraphs on n vertices .Or that of generating all partitions of an n - set or free trees with n vertices .", "label": "", "metadata": {}, "score": "56.55288"}
{"text": "Developers should evaluate code generators in a similar way as to how they would evaluate a tool like an IDE .I 'd ask questions like will this software make me considerably more productive ?Is it easy to use and learn ?", "label": "", "metadata": {}, "score": "56.58155"}
{"text": "Control is then passed to step 716 for derivational generation .Derivational generation is the generation of every possible derivative of each word in the disambiguated corpus .At step 716 , candidate derivatives are generated from stems , prefixes , derivational suffixes and inflectional suffixes .", "label": "", "metadata": {}, "score": "57.204376"}
{"text": "The disambiguated corpus 402 is introduced to the derivational generator 400 , which then generates acceptable derivatives for each word of the corpus using the transducers 404 , 406 , 408 and 410 .The derivational generator 400 also includes a database of stored productive suffixes 412 and a lexicon 414 of lemmas and derivational suffixes .", "label": "", "metadata": {}, "score": "57.271416"}
{"text": "Trends like higher - level DSLs , more advanced and usable shells , innovative compilation unit separation and very high quality round - trip support are underpinning the next phase of code generation evolution . InfoQ also spoke with Jack Kennedy from Skyway team about the code generation in software development .", "label": "", "metadata": {}, "score": "57.307137"}
{"text": "The subclass extends the machine grammars used by Graham and Glanville for code generation .A code generator based on this approach has been implemented and tested with several machine descriptions .The code generators obtained produce locally optimal code , are faster than comparable ones based on Graham - Glanville techniques , and are significantly faster than other recent proposals that manipulate costs explicitly at code generation time .", "label": "", "metadata": {}, "score": "57.573753"}
{"text": "The subclass extends the machine grammars used by Graham and Glanville for code generation .A code generator based on this approach has been implemented and tested with several machine descriptions .The code generators obtained produce locally optimal code , are faster than comparable ones based on Graham - Glanville techniques , and are significantly faster than other recent proposals that manipulate costs explicitly at code generation time .", "label": "", "metadata": {}, "score": "57.573753"}
{"text": "Although previous research has focused on stylistic revisions only .this paper describes techniques for both stylistic and conceptual revisions .Using revision to produce extended natural language text through a series of drafts provides three significant advantages over a traditional natural language generation system .", "label": "", "metadata": {}, "score": "57.683094"}
{"text": "This allows efficient access to the grammar through the words encountered in the corpus .The following is an example of the implementation of a grammar rule : .The nodes in the syntactic structure ( N1 , N2 , and A3 ) are identified by a part of speech label ( e.g. N for noun , A for adjective ) and an index used for distinguishing them one from another .", "label": "", "metadata": {}, "score": "57.792587"}
{"text": "FIG .8 illustrates a query expander 800 according to the present invention .The query expander 800 uses morphosyntactic analysis to create an expanded query , analyzing the query using morphological and syntactic knowledge to create and expand the query .", "label": "", "metadata": {}, "score": "57.884705"}
{"text": "A new class of rewrite system called finite bottom - up rewrite system ( finite - BURS ) is introduced for which the REACHABILITY problem can be solved efficiently with a table - driven algorithm .The C - REACHABILITY problem is similar to REACHABILITY except that rewrite sequences are assigned costs , and the obtained sequence is required to have minimum cost over all candidates .", "label": "", "metadata": {}, "score": "58.230442"}
{"text": "A new class of rewrite system called finite bottom - up rewrite system ( finite - BURS ) is introduced for which the REACHABILITY problem can be solved efficiently with a table - driven algorithm .The C - REACHABILITY problem is similar to REACHABILITY except that rewrite sequences are assigned costs , and the obtained sequence is required to have minimum cost over all candidates .", "label": "", "metadata": {}, "score": "58.230442"}
{"text": "Two research directions are pursued in this dissertation : augmenting the expressive power of individual rewrite rules by using new types of patterns , and analyzing the interaction of the rewrite rules .The dissertation contains new algorithms for linear and non - linear patterns , for a new type of non - local pattern , and for typed patterns in which the variables are restricted to tree languages .", "label": "", "metadata": {}, "score": "58.521095"}
{"text": "Two research directions are pursued in this dissertation : augmenting the expressive power of individual rewrite rules by using new types of patterns , and analyzing the interaction of the rewrite rules .The dissertation contains new algorithms for linear and non - linear patterns , for a new type of non - local pattern , and for typed patterns in which the variables are restricted to tree languages .", "label": "", "metadata": {}, "score": "58.521095"}
{"text": "An index generator for generation of an index for information retrieval for a corpus , comprising : . an inflectional analyzer for receiving a corpus as an input , the inflectional analyzer producing a lemmatized corpus having an identified base form and associated inflection for each word of the corpus ; . a disambiguator for receiving the lemmatized corpus as an input , the disambiguator applying syntactic knowledge to disambiguate identified multiple inflected base forms in the lemmatized corpus representing the same word in the original corpus to produce a disambiguated corpus ; . a derivational generator for receiving the disambiguated corpus as an input and produce an expanded corpus including all possible derivations for each word in the disambiguated corpus ; and .", "label": "", "metadata": {}, "score": "58.55206"}
{"text": "Each candidate which does not appear in the dictionary is compared against the disambiguated query .Each candidate which does appear in the dictionary is added to an expanded query .Each candidate compared against the disambiguated query which matches a word in the disambiguated query is also added to the expanded query .", "label": "", "metadata": {}, "score": "58.665398"}
{"text": "The tagger 304 also receives input from a linguistic knowledge base 306 to apply linguistic knowledge to the words of the corpus in order to determine the correct tag .This linguistic information is written in a system of negative constraints or negative rules .", "label": "", "metadata": {}, "score": "59.06698"}
{"text": "With the most tools I have seen changing models is somewhere from \" a pain \" to \" impossible \" .Now I found the actifsource code generator tool which supports model and metamodel edition with real - time validation of just everything .", "label": "", "metadata": {}, "score": "59.18734"}
{"text": "Traditional natural language generation systems use a pipelined architecture .Two problems with this architecture are poor task decomposition and the lack of interaction between conceptual and stylistic decisions making .A revision architecture operating in a knowledge intensive environment is proposed as a means to deal with these two problems .", "label": "", "metadata": {}, "score": "59.231205"}
{"text": "Does it work well with my preferred IDE ?Will it work with new versions of my IDE or might it break if I install a new version of the generator or my IDE ?Is the code it generates natural , clean , consistent and efficient ?", "label": "", "metadata": {}, "score": "59.27504"}
{"text": "The metagrammar comprises a list of metarules .Each metarule describes a class of term variations for terms with a specific structure .The metagrammar is used for transforming the complex terms of the corpus through morphosyntactic transformations including all the content words of the original term or one of their derivatives .", "label": "", "metadata": {}, "score": "59.31689"}
{"text": "The lemmatized corpus is the original corpus having each word associated with all possible inflected base forms with which the word could conceivably be identified .A lemmatized corpus 208 may be stored in the memory 209 to be passed to other elements of the index generator as required .", "label": "", "metadata": {}, "score": "59.416164"}
{"text": "Does it work automatically or do I need to remember to do something ?Will new versions of the code generator ( or its plug - ins or add - ons ) potentially break my project ?In most applications , the developers need to hand - code business logic and validation rules that are not easy to auto - generate .", "label": "", "metadata": {}, "score": "59.57592"}
{"text": "A method for generating an index for information retrieval from a corpus , comprising the steps of : . performing inflectional analysis on the corpus to identify all associated combinations of base form and inflection for each word of the corpus to produce a lemmatized corpus showing relationships between each word of the corpus and associated combinations of base forms and inflections ; . performing disambiguation on the lemmatized corpus applying syntactic knowledge to disambiguate identified multiple inflected base forms in the lemmatized corpus representing the same word in the original corpus to produce a disambiguated corpus ; . performing derivational generation on the disambiguated corpus to produce an expanded corpus containing all derivatives which can be produced from each combination of base form and inflection in the lemmatized corpus ; and .", "label": "", "metadata": {}, "score": "59.637196"}
{"text": "Through the use of multi - word searches , it is possible to restrict the number of results retrieved by a search and to increase the likelihood that the results retrieved will be relevant to the search topic being sought .However , because of the different permutations in which multi - word search terms can occur , indices consisting of multi - word terms can become quite large .", "label": "", "metadata": {}, "score": "59.702858"}
{"text": "In this paper , we present Read 's a ... \" .Abstract .Often , it is beneficial to have lists of all representative elements of a set of combinatorial configurations .For instance , one may wish to have a list of all non - isomorphic graphs with n vertices , or a list of non - isomorphic subspaces of a vector space .", "label": "", "metadata": {}, "score": "59.875984"}
{"text": "The memory 411 also serves to store the disambiguated corpus when received by the derivational generator 400 , as well as intermediate values and outputs produced by the derivational generator 400 .Once the derivatives have been generated , they are filtered .", "label": "", "metadata": {}, "score": "59.95929"}
{"text": "A text production cycle consists of two steps .First , the text generators produce initial text .Second , this text is examined for defects by revisors .When defects are found the revisors make suggestions for the regeneration of the text .", "label": "", "metadata": {}, "score": "60.141068"}
{"text": "It also constructs the Spring applications in a standard directory format , manages the build configuration files , helps the developers create domain objects , and provides automatic web tier generation for REST - based web user interfaces .Skyway Builder Community Edition version 6.3 was released last month .", "label": "", "metadata": {}, "score": "60.147064"}
{"text": "With the recent release of code generation tools such as Spring Roo framework from SpringSource , Skyway Builder Community Edition version 6.3 and Blu Age 's M2Spring , there is a renewed focus on the role of code generation in developing enterprise Java applications .", "label": "", "metadata": {}, "score": "60.57763"}
{"text": "In this case however , many teams did not find enough value in the output to warrant the investment in the input .As the implementation technology for creating enterprise applications has simplified and software generation space has matured , the scope of functionality that can be automatically generated has increased tremendously .", "label": "", "metadata": {}, "score": "60.63708"}
{"text": "Rewrite Systems , Pattern Matching , and Code Generation .Eduardo Pelegri - Llopart .EECS Department University of California , Berkeley Technical Report No .UCB / CSD-88 - 423 June 1988 .Trees are convenient representations because of their hierarchical structure , which models many situations , and the ease with which they can be manipulated .", "label": "", "metadata": {}, "score": "60.736954"}
{"text": "Disambiguation examines each word of the query to determine which base - inflection combination it derives from .At step 910 each base - inflection combination is tagged with its part of speech using linguistic knowledge and statistical analysis .Linguistic knowledge is stored in the form of negative constraints or negative rules .", "label": "", "metadata": {}, "score": "60.77592"}
{"text": "M2Spring uses the combination of MagicDraw UML and Blu Age Agile Model Transformation for modeling and automatically generating the application code based on the Spring architecture .It generates Spring based web application classes and artifacts in Service ( Business Rules , application services and web services ) , Presentation ( User interface , user roles and security policies ) , and Persistence layers ( Business Objects , DAO implementation , DAO finder ) .", "label": "", "metadata": {}, "score": "60.776157"}
{"text": "If the cost of a rewrite sequence is defined as the sum of the costs of its rewrite rules , the algorithm for REACHABILITY can be modified for a subclass of finite - BURS to solve C - REACHABILITY in such a way that all cost manipulation is done at table - creation time .", "label": "", "metadata": {}, "score": "61.12947"}
{"text": "If the cost of a rewrite sequence is defined as the sum of the costs of its rewrite rules , the algorithm for REACHABILITY can be modified for a subclass of finite - BURS to solve C - REACHABILITY in such a way that all cost manipulation is done at table - creation time .", "label": "", "metadata": {}, "score": "61.12947"}
{"text": "The index generator of claim 12 , wherein the metagrammar includes a first section for analyzing type 1 variants and a second section for analyzing type 2 variants .The index generator of claim 13 , wherein the first section analyzes syntactic variations between original terms and variants .", "label": "", "metadata": {}, "score": "61.20413"}
{"text": "There is no need to tell systems like Roo you 'd like to write custom code , as this is an expected and normal part of using the system .How do you enforce good architectural and design practices in a scenario where both auto generation and manual coding are part of the application development process ?", "label": "", "metadata": {}, "score": "61.205402"}
{"text": "Each candidate which does not appear in the dictionary is compared against the disambiguated corpus .Each candidate which does appear in the dictionary is added to an expanded corpus .Each candidate compared against the disambiguated corpus which matches a word in the disambiguated corpus is also added to the expanded corpus .", "label": "", "metadata": {}, "score": "61.354507"}
{"text": "FIG .5 illustrates a transformational analyzer according to the present invention ; .FIG .6 illustrates a computer system suitable for implementing an index generator according to the present invention ; .FIG .7 is a flowchart illustrating a method of index generation according to the present invention ; .", "label": "", "metadata": {}, "score": "61.660934"}
{"text": "A lemma is a glossary entry and associated definitions .The lemmatized corpus containing all possible lemmatizations thus includes each word of the original corpus , associated with all possible inflected base forms with which the word could conceivably be identified .", "label": "", "metadata": {}, "score": "61.671818"}
{"text": "Disambiguation examines each word of the corpus to determine which base - inflection combination it derives from .At step 710 each base - inflection combination is tagged with its part of speech using linguistic knowledge and statistical analysis .Linguistic knowledge is stored in the form of negative constraints or negative rules .", "label": "", "metadata": {}, "score": "61.70687"}
{"text": "The parser also draws data from a stored list of productive variations 126 and a stored term list of multiword terms 128 .The transformational analyzer 124 produces a corpus 130 consisting of all possible variants corresponding to multiword terms , as the variants have been conflated during the process of building the corpus 130 .", "label": "", "metadata": {}, "score": "61.743416"}
{"text": "Type 1 variants are syntactic transformations of controlled terms which modify their syntactic structures but which do not involve any derivational change .In order to retrieve these variants , the first section 504A includes a metagrammar for filtering the structures which are expected to be correct modifications .", "label": "", "metadata": {}, "score": "61.806896"}
{"text": "The index generator of claim 3 , wherein the disambiguator further includes a linguistic knowledge base to provide linguistic knowledge to the tagger to determine which tag to apply to a word of the lemmatized corpus .The index generator of claim 4 , wherein the disambiguator further includes a statistical knowledge base to supply statistically determined part of speech information to the tagger for use by the tagger in determining which tag to apply .", "label": "", "metadata": {}, "score": "61.957005"}
{"text": "A typical Java web application includes classes like Data Access Object ( DAO ) , XML to Java mapping files , Spring , Log4J configuration files which are all good candidates for auto - generation .Roo is a round - trip code generator framework that generates most of the artifacts required in Spring based web applications .", "label": "", "metadata": {}, "score": "62.104362"}
{"text": "the variant can be substituted for the original term in a task of information access .Since variants can be substituted for the original term , it is useful to be able to conflate variants so as to reduce the number of variants ( all of which can be substituted for the original term ) which must be dealt with .", "label": "", "metadata": {}, "score": "62.239693"}
{"text": "In order to conflate multiword terms , two steps must be taken .First , the morphological variants of single words composing terms must be conflated .Second , the whole utterances of multiword term variants must be related to the original terms .", "label": "", "metadata": {}, "score": "62.23985"}
{"text": "FIG .3 illustrates a morphosyntactic disambiguator 300 according to an aspect of the present invention .The morphosyntactic disambiguator 300 uses syntax and linguistic knowledge to disambiguate words in the corpus which have identical morphological analyses .The disambiguator 300 receives as an input a lemmatized corpus 302 .", "label": "", "metadata": {}, "score": "62.362564"}
{"text": "automatic visual language generation ; customized visual languages ; inference grammar techniques ; general semantic information ; attribute grammar ; knowledge base ; application environment ; grammars ; inference mechanisms ; knowledge based systems ; visual programming .CITATION .C. Crimi , A. Guercio , G. Pacini , G. Tortora , M. Tucci , \" Automating Visual Language Generation \" , IEEE Transactions on Software Engineering , vol.16 , no .", "label": "", "metadata": {}, "score": "62.47758"}
{"text": "Single - word search terms can be quite ambiguous and are unable both to completely cover and to accurately define a large corpus .Moreover , concept - based searching is becoming more and more popular , and many concepts for which a user might like to search are difficult or impossible to define using single - word terms .", "label": "", "metadata": {}, "score": "62.559864"}
{"text": "The index generator of claim 9 , wherein the derivational generator also includes a list of lemmas and derivational suffixes .The index generator of claim 10 , wherein the derivational generator also includes a dictionary against which the derivatives produced by the set of transducers are filtered , the derivational generator accepting derivatives appearing in the dictionary .", "label": "", "metadata": {}, "score": "62.733276"}
{"text": "Control is then passed to step 710 .At step 710 disambiguation is begun on a lemmatized corpus .It is possible for a word of a lemmatized corpus to be related to more than one possible base - inflection combination .", "label": "", "metadata": {}, "score": "62.878426"}
{"text": "The query expander of claim 27 , wherein the derivational generator includes a set of transducers for producing derivatives of each word of the disambiguated query .The query expander of claim 28 , wherein the set of transducers includes a prefix transducer , a stem transducer , a derivational suffix transducer , and an inflectional suffix transducer .", "label": "", "metadata": {}, "score": "62.977192"}
{"text": "The index generator of claim 6 , wherein the derivational generator includes a set of transducers for producing derivatives of each word of the disambiguated corpus .The index generator of claim 7 , wherein the set of transducers includes a prefix transducer , a stem transducer , a derivational suffix transducer , and an inflectional suffix transducer .", "label": "", "metadata": {}, "score": "63.233803"}
{"text": "You can generates DAO , or simple objects like that , but when it comes to an application , then it 's a total waste of time .You spend more time designing your classes , the relation between them , their behaviors in the tool than writing them in your favorite IDE .", "label": "", "metadata": {}, "score": "63.49435"}
{"text": "The query expander of claim 30 , wherein the derivational generator also includes a list of lemmas and derivational suffixes .The query expander of claim 31 , wherein the derivational generator also includes a dictionary against which the derivatives produced by the set of transducers are filtered , the derivational generator accepting derivatives appearing in the dictionary .", "label": "", "metadata": {}, "score": "63.552006"}
{"text": "In this paper , we study Read 's orderly algorithm to generate all unique combinatorial configurations of a certain type [ Rea78 , CR79b , CR79a].This algorithm improves on the \" classical \" method to generate such lists by introducing techniques to eliminate the need to search through existing configurations when considering a newly generated configuration .", "label": "", "metadata": {}, "score": "63.63471"}
{"text": "The generations interpret the advent of technology in the light of their previous experiences .Thus , the baby boomers all think the internet is like a television , and it 's in the language they use ( \" its in the computer \" , \" electronic gizmothingymajig \" ) .", "label": "", "metadata": {}, "score": "63.688744"}
{"text": "The generations interpret the advent of technology in the light of their previous experiences .Thus , the baby boomers all think the internet is like a television , and it 's in the language they use ( \" its in the computer \" , \" electronic gizmothingymajig \" ) .", "label": "", "metadata": {}, "score": "63.688744"}
{"text": "IBM 's MDD tool , called Rational Rhapsody , supports UML2 and SysML , requirements traceability , application code generation , and design for testing ( DFT ) features .Rhapsody is a round - trip model driven solution and supports capturing the project requirements using requirements diagrams , use - case diagrams , sequence diagrams , activity diagrams and state charts .", "label": "", "metadata": {}, "score": "63.696045"}
{"text": "Others do not .I would agree with you that all those things should be built - in to the platform so long as we make the following distinctions : .Those features should not , by being built - in to the platform , be forced onto domains and problems that do not need them .", "label": "", "metadata": {}, "score": "63.813477"}
{"text": "8 illustrates a query expander in accordance with the present invention ; and .FIG .9 illustrates a method of query expansion in accordance with the present invention .DETAILED DESCRIPTION .FIG .1 illustrates an index generator 100 according to the present invention .", "label": "", "metadata": {}, "score": "64.426895"}
{"text": "No attempt has been made to explicitely state and prove the theorems but this overview contains hi ... \" .The generation of molecular graphs by computer programs has undergone some changes .The development is reported with focus on various mathematical methods that are created and employed in this process .", "label": "", "metadata": {}, "score": "64.490845"}
{"text": "The skeleton of these rules represents the syntactic structure of the term , generally a noun phrase .The syntactic rules of the grammar 502 require certain agreements of , and impose certain restrictions on morphological features of the words of a term or the co - occurring words in the corpus .", "label": "", "metadata": {}, "score": "64.70029"}
{"text": "Fundamentally , a software generation platform provides value by automating development tasks while conforming to the implementation requirements of the target deployment environment .Implicit in this approach are the value propositions of consistency , quality , and reuse .This value can be measured by comparing the \" cost \" of the input requirements to the system with the \" value \" of the functional outputs of the system .", "label": "", "metadata": {}, "score": "64.76061"}
{"text": "Type 1 variant metarules extract syntactic transformations which have contributed to the generation of the variant .An example of a type 1 metarule is : .N stands for noun , A for adjective , C for coordinating conjunction , D for determiner .", "label": "", "metadata": {}, "score": "64.76206"}
{"text": "At the training level , words of the training corpus 310 are gathered into classes corresponding to their morphological tags called genotype , and the statistical knowledge is stored from this process in a statistical knowledge base 312 .The part of speech tagger is then able to employ the knowledge stored in the statistical knowledge base 312 in addition to the linguistic knowledge base 306 to determine the part of speech tag to apply .", "label": "", "metadata": {}, "score": "64.884384"}
{"text": "You are referring to this as an indictment to Java application development in general , and then suggest that all those things should be built - in to the platform .This does not compute .There is Java as a general purpose language ( that 's what it 's always been ) , and then there are Java - based platforms .", "label": "", "metadata": {}, "score": "64.91421"}
{"text": "2 illustrates an inflectional analyzer 200 according to the present invention .The inflectional analyzer 200 includes a finite - state morphological transducer 202 .The finite state transducer 202 receives inputs from a corpus 204 .Each entry of the corpus 204 is provided to the transducer as a string representing a unit to be analyzed , each string consisting of the word base form , along with features , and inflectional and derivational affixes .", "label": "", "metadata": {}, "score": "65.07502"}
{"text": "Control is then passed to step 706 , and each base form is combined with each inflection which could serve to generate the original word of the corpus .Thus the appearance of ' finit ' may be associated with the combination ' fin'+'it ' .", "label": "", "metadata": {}, "score": "65.16681"}
{"text": "All frequent subgraph miners require such a component [ 14 , 5 , 1 , 6 ] , but also other ... \" .Of many graph mining algorithms an essential component is its procedure for enumerating graphs such that no two enumerated graphs are isomorphic .", "label": "", "metadata": {}, "score": "65.28409"}
{"text": "Today , Read 's orderly method still stands as the best method to generate all combinatorial configurations .Others , such as Goldberg , have added refinements , but no one has discovered a better method ... . \" ...The generation of molecular graphs by computer programs has undergone some changes .", "label": "", "metadata": {}, "score": "65.32203"}
{"text": "Information retrieval and query expansion systems are becoming more and more important and ubiquitous .The demands on such systems are growing steadily greater .A search corpus may contain millions of words which may be spread over hundreds of thousands of documents .", "label": "", "metadata": {}, "score": "65.72891"}
{"text": "This standard is good , and for sure , it will be very important to support it for MD users .You do n't need to be an MDD expert to create your own generator .- it 's the only MDD tool which manage model / code synchronisation and traceability information , whatever template you uses - it 's OpenSource .", "label": "", "metadata": {}, "score": "65.90243"}
{"text": ".. blem of graph enumeration has not only been studied in the graph mining literature .We will provide more details about this algorithm in Section 3 , where we will show that this algorithm can not be used to list graphs that satisfy a monotonic predicate , as required in a graph minin ... . \" ...", "label": "", "metadata": {}, "score": "65.906044"}
{"text": "In this article we ... \" .Algorithms that list graphs such that no two listed graphs are isomorphic , are important building blocks of systems for mining and learning in graphs .Algorithms are already known that solve this problem efficiently for many classes of graphs of restricted topology , such as trees .", "label": "", "metadata": {}, "score": "65.92539"}
{"text": "The derivational generator 400 includes first , second , third and fourth transducers 404 , 406 , 408 and 410 operating sequentially to perform the generation of derivationally related words .The derivational generator 400 also includes a processor 411 for use by the transducers 404 , 406 , 408 and 410 .", "label": "", "metadata": {}, "score": "65.952934"}
{"text": "Some studies on automatic analysis of derivational morphology have also been performed .There also exists work on automatic analysis of inflectional morphology and part of speech tagging through the combination of linguistic and statistical knowledge .In the prior art , morphology has been applied only to single word terms , or has been used in natural language processing applications not involving information retrieval .", "label": "", "metadata": {}, "score": "66.06976"}
{"text": "This paper surveys work on the problem of eciently sampling unlabelled combinatorial structures from a uniform distribution .1 Introduction Most of the experimental work described in this volume involves rst randomly sampling combinatorial structures and second using the randomly - chosen structures as inputs to computational experiments .", "label": "", "metadata": {}, "score": "66.5849"}
{"text": "The query expander of claim 24 , wherein the disambiguator further includes a linguistic knowledge base to provide linguistic knowledge to the tagger to determine which tag to apply to a word of the inflected query .The query expander of claim 25 , wherein the disambiguator further includes a statistical knowledge base to supply statistically determined part of speech information to the tagger for use by the tagger in determining which tag to apply .", "label": "", "metadata": {}, "score": "66.78509"}
{"text": "SpringSource has both Roo and Grails so end users can choose the paradigm they prefer and still enjoy tremendous productivity and the same quality Spring underpinnings .What do you see as the future of Model Driven Software Development ( MDSD ) in general and Code Generation in particular ?", "label": "", "metadata": {}, "score": "66.9558"}
{"text": "In order for the experiments to be computationally feasible , the random - sampling algorithms must be ecient .This survey is devoted to the ... . ... iently sampling unlabelled combinatorial structures from a uniform distribution . by Jan Ramon , Siegfried Nijssen - In Proceedings of the Workshop on Machine Learning and Graphs ( MLG'07 , 2007 . \" ...", "label": "", "metadata": {}, "score": "67.129364"}
{"text": "The REACHABILITY problem for a rewrite system R is , given an input tree T and a fixed goal tree G , to determine whether there exists a rewrite sequence in R , rewriting T into G and , if so , to obtain one such sequence .", "label": "", "metadata": {}, "score": "67.21328"}
{"text": "The REACHABILITY problem for a rewrite system R is , given an input tree T and a fixed goal tree G , to determine whether there exists a rewrite sequence in R , rewriting T into G and , if so , to obtain one such sequence .", "label": "", "metadata": {}, "score": "67.21328"}
{"text": "Further , while most of the specific examples relate to the French language , it will be recognized that the present invention is language independent and can be adapted to other languages utilizing an appropriate finite state transducer morphological processor , and an appropriate metagrammar .", "label": "", "metadata": {}, "score": "67.21591"}
{"text": "The example chosen in t ... \" .The generation of discrete structures up to isomorphism is interesting as well for theoretical as for practical purposes .Mathematicians want to look at and analyse structures and for example chemical industry uses mathematical generators of isomers for structure elucidation .", "label": "", "metadata": {}, "score": "67.44957"}
{"text": "The memory 318 may also be used for storage of a lemmatized corpus 302 , as well as for storage of the disambiguated corpus 314 for passage to subsequent elements of the index generator .Once the words of the corpus are disambiguated , the corpus is in a state to be enriched with word derivatives .", "label": "", "metadata": {}, "score": "67.72125"}
{"text": "A single - word search term may not sufficiently limit the field of search , with the result that a search may retrieve too many results .Moreover , as the size of corpora increase , single - word terms appear in more and more unrelated portions of a corpus , so that a single - word search is likely to retrieve numerous results having nothing to do with the desired topic .", "label": "", "metadata": {}, "score": "67.92116"}
{"text": "In particular , we would like to know for which input sets I the problems are tractable . by Jan Ramon , Siegfried Nijssen , Stefan Wrobel - Journal of Machine Learning Research . \" ...Algorithms that list graphs such that no two listed graphs are isomorphic , are important building blocks of systems for mining and learning in graphs .", "label": "", "metadata": {}, "score": "67.93512"}
{"text": "Although quite successful for relatively small projects , a key challenge for the wider adoption of these development methodologies within the software industry is the ability to scale to large , distributed , and complex delivery requirements .Most of the concern centers on the need for highly skilled developers and the perceived lack of predictable large work effort estimations .", "label": "", "metadata": {}, "score": "67.93515"}
{"text": "If a word appears neither in the dictionary 416 nor in the disambiguated corpus 402 , it is rejected .After all words and derivatives have been filtered , an expanded corpus 418 is produced as an output .The next step in producing the indexed corpus is to conflate term variants .", "label": "", "metadata": {}, "score": "68.01924"}
{"text": "That is , for each word in the corpus 204 , the transducer 202 identifies all possible inflected base forms which could be represented by that word .Each of an inflected base forms is identified with the corpus word and this process is called lemmatization .", "label": "", "metadata": {}, "score": "68.053154"}
{"text": "The exposition is based on graph theoretic concepts to give an easy explanation of data structures for group actions . \" ... Abstract .Often , it is beneficial to have lists of all representative elements of a set of combinatorial configurations .", "label": "", "metadata": {}, "score": "68.23799"}
{"text": "The transformational analyzer 500 includes a processor 505 for implementing the rules of the grammar and the metagrammar , and memory 507 for storing inputs , outputs and intermediate values produced by the transformational analyzer 500 .The transformational analyzer 500 receives as an input an expanded corpus 506 .", "label": "", "metadata": {}, "score": "68.68532"}
{"text": "For example , the feature structure of the noun ' production ' ( label N 2 ) is given by the third , fourth and seventh equations .This feature structure describes the string of the lemma ( third equation ) , its reference ( fourth equation ) , and it constrains the noun to agree in gender and number with the adjective ( seventh equation ) .", "label": "", "metadata": {}, "score": "68.73189"}
{"text": "The skeleton of the term rules represent the syntactic structure of the term , generally a noun phrase .The feature structures associated with the nodes of the syntactic structure , also called the ' domain of information ' , indicate that in a noun phrase , the noun and the adjective must agree in gender and number .", "label": "", "metadata": {}, "score": "68.76166"}
{"text": "We use the social networking infrastructure available to us to build strong , resilient , vibrant and passionate virtual communities - this allows us to collaborate and create , produce and ship .Our tribe is where we grow , our tribe is where we feel we belong , our tribe is who we are . iGen Tribe Manifesto . \"", "label": "", "metadata": {}, "score": "69.11835"}
{"text": "Speech tagger 304 may suitably consist of a set of finite - state transducers 308A-308D and uses a combination of linguistic knowledge and statistical learning to disambiguate words in the sentence context .The disambiguator 300 preferably employs statistical knowledge for disambiguation .", "label": "", "metadata": {}, "score": "69.31662"}
{"text": "A query 804 is provided as an input to the inflectional analyzer 802 .The output of the inflectional analyzer 802 is an inflected query 808 containing all possible lemmatizations .An inflected query 808 is provided as an input to a part of speech disambiguator 810 .", "label": "", "metadata": {}, "score": "69.34863"}
{"text": "I was a user of J , AndroMDA , and Jet , and now , I really like and promote this tool to my friends and colleagues ) .One of the most important things to note is that software architectures need to evolve with the time .", "label": "", "metadata": {}, "score": "69.35363"}
{"text": "\" Why ?If I 'm developing a custom comm . protocol stack in Java ( using that language for a variety of valid reasons ) , why would I need all that crap built - in to the platform ?", "label": "", "metadata": {}, "score": "69.480774"}
{"text": "The constitution of derivational links is connected to the issue of word sense disambiguation .Various approaches to stemming have been undertaken and evaluated .For the task of information retrieval , the use of a rich morphological stemmer enhances recall but degrades precision when compared with a minimal 's ' removal stemmer .", "label": "", "metadata": {}, "score": "69.69276"}
{"text": "It has integration with Spring DSL and also has the feature to do code generation for generating Spring MVC and Spring Web Flow solutions .Skyway Builder Enterprise Edition ( EE ) 6.3 , the commercial edition of Skyway Builder , has integration with IBM Rational Software Architect to transform UML into working Spring applications .", "label": "", "metadata": {}, "score": "70.03627"}
{"text": "And if you do n't get that , forget succession - planning ! iGen are not loyal to a hive , but to a tribe .You may see this as a weakness of the new generation .However , this is the strongest feature of iGen .", "label": "", "metadata": {}, "score": "70.36229"}
{"text": "And if you do n't get that , forget succession - planning ! iGen are not loyal to a hive , but to a tribe .You may see this as a weakness of the new generation .However , this is the strongest feature of iGen .", "label": "", "metadata": {}, "score": "70.36229"}
{"text": "5 illustrates a transformational analyzer 500 according to the present invention .The transformational analyzer 500 employs linguistic knowledge to conflate term variants .The linguistic knowledge of the transformational analyzer 500 is divided into two databases , a grammar 502 and a metagrammar 504 .", "label": "", "metadata": {}, "score": "70.65594"}
{"text": "In this paper , we address this problem .We show that there is a .. by Thomas Gr\u00fcner , Reinhard Laue , Markus Meringer - OF DIMACS SERIES IN DISCRETE MATHEMATICS AND THEORETICAL COMPUTER SCIENCE , 1996 . \" ...The generation of discrete structures up to isomorphism is interesting as well for theoretical as for practical purposes .", "label": "", "metadata": {}, "score": "70.87344"}
{"text": "Intermediate in complexity between truncation and morphological analysis is stemming , which removes endings according to a reference list and may change the resulting strings with recoding functions .The recoding functions are in charge of accounting for allomorphic alternations between the different derivatives within a derivational family .", "label": "", "metadata": {}, "score": "71.08398"}
{"text": "I do n't understand why you do n't add to your list of MDD tools the Acceleo project ?For me , this is now the most famous generator tool and you ca n't speak about MD world without speaking about it .", "label": "", "metadata": {}, "score": "71.1597"}
{"text": "We never asked to be called Millenials ( that is so 1999 ) , or Gen Y ( do n't even get me started on that ) , or Echo Boomers ( what is an Echo Boomer ? ) or First Digitals ( Sounds like a camera company ) .", "label": "", "metadata": {}, "score": "71.25949"}
{"text": "Description .FIELD OF THE INVENTION .The present invention relates generally to improvements to information retrieval systems .More particularly , the invention relates to techniques for reducing index searches by conflating multi - word term variants or expanding a search term in information retrieval systems .", "label": "", "metadata": {}, "score": "71.477554"}
{"text": "Or even Generation F .Um , no .Fail .Our apologies for that , but keep trying !Why ?Well , 2004 saw the launch of Facebook as a social network .In 2010 , Facebook has 500 million users , and is starting to bump up against the G - giant .", "label": "", "metadata": {}, "score": "71.516075"}
{"text": "Or even Generation F .Um , no .Fail .Our apologies for that , but keep trying !Why ?Well , 2004 saw the launch of Facebook as a social network .In 2010 , Facebook has 500 million users , and is starting to bump up against the G - giant .", "label": "", "metadata": {}, "score": "71.516075"}
{"text": "Some writers will have you believe that anyone who uses social media to any degree is part of iGen .But that is incorrect .Social networking and technology has become so pervasive , that everyone is emailing , texting , Facebooking , Tweeting , BBMing , sharing albums online , using Google Earth , emailing etc .", "label": "", "metadata": {}, "score": "71.97914"}
{"text": "Some writers will have you believe that anyone who uses social media to any degree is part of iGen .But that is incorrect .Social networking and technology has become so pervasive , that everyone is emailing , texting , Facebooking , Tweeting , BBMing , sharing albums online , using Google Earth , emailing etc .", "label": "", "metadata": {}, "score": "71.97914"}
{"text": "An example of a type 2 metarule is as follows : .The above metarule identifies ' chimie des precipitations ' ( chemistry of precipitations ) with the term ' precipitation chimique ' ( chemical precipitation ) .It can be seen that a morphological change from ' chimie ' to ' chimique ' must be accounted for in identifying the variant with the original term .", "label": "", "metadata": {}, "score": "72.14154"}
{"text": "Computational experiments such as those described in ... \" .Informally , an \\unlabelled combinatorial structure \" is an object such as an unlabelled graph ( in which the vertices are indistinguishable ) or a structural isomer in chemistry ( in which dierent atoms of the same type are indistinguishable ) .", "label": "", "metadata": {}, "score": "72.15875"}
{"text": "It overlooks the integration of technology into our everyday life that has marked an epoch in the way the world is .So what would we like to be called ?We are the iGeneration .The first letter \" i \" has a nest of intrinsic meanings : it could stand for Internet ( as it does in iMac and iPod ) or for the first person singular that stands for the individual .", "label": "", "metadata": {}, "score": "73.53749"}
{"text": "It overlooks the integration of technology into our everyday life that has marked an epoch in the way the world is .So what would we like to be called ?We are the iGeneration .The first letter \" i \" has a nest of intrinsic meanings : it could stand for Internet ( as it does in iMac and iPod ) or for the first person singular that stands for the individual .", "label": "", "metadata": {}, "score": "73.53749"}
{"text": "Maxwell , J. T. Efficient generation from packed input .In Intelligent linguistic architectures , edited by M. Butt , M. Dalrymple and T. H. King .Stanford , CA : CSLI Publications ; 2006 ; 19 - 34 .Tools . \" ...", "label": "", "metadata": {}, "score": "73.914"}
{"text": "The preceding metarule identifies the variant ' plante et extraits aromatiques ' ( aromatic extracts and plants ) with the term ' plante aromatique ' ( aromatic plant ) .Type 2 variant metarules extract syntactic and morphological transformations which have contributed to the generation of the variant .", "label": "", "metadata": {}, "score": "74.12361"}
{"text": "Thus , ' translational or transcriptional inhibition ' is a type 2 variant of ' translation inhibitor ' which is not a type 1 variant because both content words of the original term have undergone derivational morphologic changes .A more precise definition is as follows : .", "label": "", "metadata": {}, "score": "74.56556"}
{"text": "But once the generation matures , and finds itself with responsibility , self - awareness and the realization that once you post to the cloud , it resides in the cloud forever - you will see a \" Facebook backlash \" .", "label": "", "metadata": {}, "score": "74.91847"}
{"text": "But once the generation matures , and finds itself with responsibility , self - awareness and the realization that once you post to the cloud , it resides in the cloud forever - you will see a \" Facebook backlash \" .", "label": "", "metadata": {}, "score": "74.91847"}
{"text": "d of orderly generation of which we will present our subset oriented version below .This was a successful attempt to use structure information in the orderly genera ... . \" ...Isomorphism problems often can be solved by determining orbits of a group acting on the set of all objects to be classified .", "label": "", "metadata": {}, "score": "75.06517"}
{"text": "Each word in a query is capable of being expressed as an inflection of a base form .For example , the French verb ' finir ' ( to finish ) can be expressed as a combination of the base form , or stem , ' fin ' , combined with an appropriate inflectional affix .", "label": "", "metadata": {}, "score": "75.49108"}
{"text": "The coarsest and easiest one is truncation , a nonlinguistic method .Truncation removes the endings of the words ( generally a fixed length of n characters ) .A more precise method is morphological analysis , which is knowledge - expensive .", "label": "", "metadata": {}, "score": "75.81372"}
{"text": "Stemming reduces words to a stem , which is thought to be identical for all the words linguistically and often conceptually related .For example , ' magnesia ' , ' magnesium ' , ' magnet ' , ' magnetic ' , etc . , can be conflated by a stemming algorithm and reduced to the common stem ' magnes ' , thus grouping together words of different meanings .", "label": "", "metadata": {}, "score": "75.8583"}
{"text": "Prior - art linguistic techniques for reducing multi - word term variants have focused on syntactic transformations .A technique has been developed and implemented for the simplification of syntactic variants in English .Prior - art techniques for morphological analysis have been mainly applied to natural language processing tasks .", "label": "", "metadata": {}, "score": "75.97583"}
{"text": "Other java development tools that support code generation are Lombok and Spoon .Project Lombok offers the features like auto - generation of the default getter / setter methods , automatic resource management ( using @Cleanup annotation ) and annotation driven exception handling .", "label": "", "metadata": {}, "score": "76.75"}
{"text": "First , it can be used for indexing .In this case , the corpus 130 is represented by an index entry for which the variants have been conflated during the process of building the indexed corpus 130 .Secondly , corpus 130 can be used for query expansion where a query term is expanded by generating corpus 130 and then all variants in the corpus 130 are utilized to search .", "label": "", "metadata": {}, "score": "77.11849"}
{"text": "It is convenient to consider variants as belonging to one of two types .A type 1 variant results from the inflection of individual words and from modification of the syntactic structure of the original term .For example , ' diseases of the lower urinary tract ' is a type 1 variant of ' urinary tract disease . '", "label": "", "metadata": {}, "score": "77.899605"}
{"text": "Do n't confuse the stamp with the impression it leaves .Some may say we are Generation Me , as studies show we are the most narcissistic generation .However , that description does not take account of the technological shift in society that has accompanied our generation 's development .", "label": "", "metadata": {}, "score": "78.01048"}
{"text": "Do n't confuse the stamp with the impression it leaves .Some may say we are Generation Me , as studies show we are the most narcissistic generation .However , that description does not take account of the technological shift in society that has accompanied our generation 's development .", "label": "", "metadata": {}, "score": "78.01048"}
{"text": "Model Driven Development ( MDD ) , which includes code generation , is gaining more interest now because there are several artifacts in a typical Java application that can be auto - generated .A typical Java web application includes classes like Data Access Object ( DAO ) , XML to Java mapping files , Spring , Log4J configuration files which are all good candidates for auto - generation . \" \" Model Driven Development ( MDD ) , which includes code generation , is gaining more interest now because there are several artifacts in a typical Java application that can be auto - generated .", "label": "", "metadata": {}, "score": "78.21248"}
{"text": "Am I locked in or can I stop using it easily ?Is this software likely to be actively maintained ?Is there a community around this software ?Does it seem of high quality ( number of unresolved defects , end user blogs , architectural clarity etc ) ?", "label": "", "metadata": {}, "score": "78.611885"}
{"text": "The trouble with passive generators is you must maintain the code by hand forever more , as a passive generator will not update the generated code .This is a particular problem if you change something the generated code relies on , as the generated code will go into error and users will generally delete the code and re - run the generator .", "label": "", "metadata": {}, "score": "78.79349"}
{"text": "Men resemble the times more than they resemble their fathers .\" - Old Arabian Proverb .Millennials , Gen Y , Echo Boomers , First Digitals - these are just a few of the names that describe the next generation to enter the workforce .", "label": "", "metadata": {}, "score": "78.821945"}
{"text": "The derivatives generated by the transducers 404 - 410 are checked against the dictionary 416 .If a derivative exists in the dictionary 416 , it is validated .If a derivative does not exist in the dictionary , it is checked against the disambiguated corpus 402 .", "label": "", "metadata": {}, "score": "79.23298"}
{"text": "The computer 600 includes storage 612 for storing various inputs , outputs and intermediate results produced by the processing unit , and an input interface such as a keyboard 614 and an output interface such as a display 616 to provide operator access to the computer 600 .", "label": "", "metadata": {}, "score": "79.74658"}
{"text": "Most words in a corpus are capable of being expressed as an inflection of a base form .For example , the French verb ' finir ' ( to finish ) can be expressed as a combination of the base form , or stem , ' fin ' , combined with an appropriate inflectional affix .", "label": "", "metadata": {}, "score": "79.93036"}
{"text": "The inflectional analyzer 200 includes a processor 207 for performing processing required , and also includes memory 209 .The memory 209 may be used to store the lexicon 206 , or other data required by the transducer 202 and processor 207 .", "label": "", "metadata": {}, "score": "80.20945"}
{"text": "We use the social networking infrastructure available to us to build strong , resilient , vibrant and passionate virtual communities - this allows us to collaborate and create , produce and ship .Our tribe is where we grow , our tribe is where we feel we belong , our tribe is who we are .", "label": "", "metadata": {}, "score": "80.756836"}
{"text": "Do n't get me wrong , I 've been using Java for quite a while , it 's my main programming tool , and there are a lot of things I do n't like about it .It 's more than 20 years I 'm in the IT , every 6 months there are some companies announcing that their last wonderful tool will generate code and this will be the end of the developers problems .", "label": "", "metadata": {}, "score": "81.292694"}
{"text": "Eduardo Pelegri - Llopart .EECS Department University of California , Berkeley Technical Report No .UCB / CSD-88 - 423 June 1988 .Trees are convenient representations because of their hierarchical structure , which models many situations , and the ease with which they can be manipulated .", "label": "", "metadata": {}, "score": "82.9323"}
{"text": "Visit the ADP website if you want to know more .Why Auto Generate Code for Things that Should Be Built Into the Platform by Glenn Johnon .I guess I just see this as an indictment of Java Application Development in general .", "label": "", "metadata": {}, "score": "83.52728"}
{"text": "The part of speech disambiguator 110 produces as an output a disambiguated corpus 112 , the disambiguated corpus 112 having a disambiguated lemmatization .The disambiguated corpus 114 is provided as an input to a derivational generator 116 , which also draws data from stored productive suffixes 118 and a stored lexicon of lemmas and derivational suffixes 120 .", "label": "", "metadata": {}, "score": "83.7952"}
{"text": "The string resulting from a stemming procedure is called a stem .It is not necessarily equal to the linguistic root , but will serve as a minimal and hopefully unambiguous denotation of the term .The two main errors that can occur while stemming are understemming and overstemming .", "label": "", "metadata": {}, "score": "84.2248"}
{"text": "Its pronunciation also appropriately suggests vision , because this is a visionary and optimistic generation too .These young people want to shape a new world .It 's an appropriate name for a generation raised with on - demand \" iMedia \" like TiVo , the Internet , and the ever - present iPod .", "label": "", "metadata": {}, "score": "84.336075"}
{"text": "Its pronunciation also appropriately suggests vision , because this is a visionary and optimistic generation too .These young people want to shape a new world .It 's an appropriate name for a generation raised with on - demand \" iMedia \" like TiVo , the Internet , and the ever - present iPod .", "label": "", "metadata": {}, "score": "84.336075"}
{"text": "Good on yer , Bruce .As of this year , I do n't have a personal Facebook profile .Why ?Because I choose not to .We are not the Facebook Generation , just as the Baby Boomers were n't the Television Generation .", "label": "", "metadata": {}, "score": "85.47708"}
{"text": "Good on yer , Bruce .As of this year , I do n't have a personal Facebook profile .Why ?Because I choose not to .We are not the Facebook Generation , just as the Baby Boomers were n't the Television Generation .", "label": "", "metadata": {}, "score": "85.47708"}
{"text": "\" - Old Arabian Proverb .Millennials , Gen Y , Echo Boomers , First Digitals - these are just a few of the names that describe the next generation to enter the workforce .However , stop the bus !We never asked to be called Millenials ( that is so 1999 ) , or Gen Y ( do n't even get me started on that ) , or Echo Boomers ( what is an Echo Boomer ? ) or First Digitals ( Sounds like a camera company ) .", "label": "", "metadata": {}, "score": "85.87903"}
{"text": "The disambiguator 300 produces as its output a disambiguated corpus 314 .The disambiguator 300 may include a processor 316 and memory 318 .The memory 318 may be used for storing the linguistic knowledge base 306 and the statistical knowledge base 312 .", "label": "", "metadata": {}, "score": "86.11488"}
{"text": "The only small benefit is that it can be used to expose some high level design to your client ( somehow ) .To me , such announcements are very like presidential candidate proposals : you 'll see tax cut , better health care system , more growth , more jobs , peace on earth , and the end of global warming ... Peace in middle east ?", "label": "", "metadata": {}, "score": "86.26978"}
{"text": "Understemming is reduction of words to different stems , when the reduction should be to the same stem : for example , ' acquiring ' to ' acquir ' and ' acquisition ' to ' acquis ' .Correct linguistic stemming is not necessarily semantically relevant and , furthermore , semantically correct stemming may be useless or even detrimental to information retrieval .", "label": "", "metadata": {}, "score": "86.73706"}
{"text": "The prefix ' in ' may also be added to the derivative ' organic ' to produce the further derivative ' inorganic ' .Alternatively , the prefix ' un ' may be added to the derivative ' organic ' to produce the further derivative ' unorganic ' .", "label": "", "metadata": {}, "score": "88.374176"}
{"text": "The prefix ' in ' may also be added to the derivative ' organic ' to produce the further derivative ' inorganic ' .Alternatively , the prefix ' un ' may be added to the derivative ' organic ' to produce the further derivative ' unorganic ' .", "label": "", "metadata": {}, "score": "88.374176"}
{"text": "Especially it is shown that forming Sims chains , u ... \" .Isomorphism problems often can be solved by determining orbits of a group acting on the set of all objects to be classified .The paper centers around algorithms for this topic and shows how to base them on the same idea , the homomorphism principle .", "label": "", "metadata": {}, "score": "89.00527"}
{"text": "One of the allures of Facebook is that everyone can be a celebrity .We are stars of our very own People Magazine .That might be important , maybe even critical , when popularity is the only currency we have .", "label": "", "metadata": {}, "score": "91.551346"}
{"text": "One of the allures of Facebook is that everyone can be a celebrity .We are stars of our very own People Magazine .That might be important , maybe even critical , when popularity is the only currency we have .", "label": "", "metadata": {}, "score": "91.551346"}
{"text": "We would expect that eventually software vendors will compete on their ability to generate and run optimized deployments of DSL - based applications .The ADP describes a pragmatic way to use smart use cases and DDD to generate code for your own favorite language using user defined templates and a code generator named Tobago .", "label": "", "metadata": {}, "score": "102.03266"}
