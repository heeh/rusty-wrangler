{"text": "When restricted to local features , cube summing reduces to a novel semiring ( k - best+residual ) that generalizes many of the semirings of Goodman ( 1999 ) .When non - local features are included , cube summing does not reduce to any semiring , but is compatible with generic techniques for solving dynamic programming equations . ... onal inference ( Jordan et al . , 1999 ; MacKay , 1997 ; Kurihara and Sato , 2006 ) .", "label": "", "metadata": {}, "score": "37.24665"}
{"text": "Deterministic parsing algorithms for building labeled dependency graphs ( Kudo and Matsumoto,2002 ; Yamada and Matsumoto , 2003 ; Nivre,2003 ) .History - based models for predicting the next parser action at nondeterministic choice points ( Black et al . , 1992 ; Magerman , 1995 ; Ratnaparkhi , 1997 ; Collins , 1999 ) .", "label": "", "metadata": {}, "score": "39.800148"}
{"text": "It is inspired by cube pruning ( Chiang , 2007 ; ... \" .We introduce cube summing , a technique that permits dynamic programming algorithms for summing over structures ( like the forward and inside algorithms ) to be extended with non - local features that violate the classical structural independence assumptions .", "label": "", "metadata": {}, "score": "40.717457"}
{"text": "There has been a long history in combinatorial optimization of methods that exploit structure in complex problems , using methods such as dual decomposition or Lagrangian relaxation ( Lemar\u00e9chal , 200 ... . \" ...We formulate the problem of nonprojective dependency parsing as a polynomial - sized integer linear program .", "label": "", "metadata": {}, "score": "42.876766"}
{"text": "A typical approach in graph - based dependency parsing has been to assume a factorized model , where local features are used but a global function is optimized ( McDonald et al ., 2005b ) .Recently ... \" .We explore a stacked framework for learning to predict dependency structures for natural language sentences .", "label": "", "metadata": {}, "score": "42.90574"}
{"text": "We present an effective training algorithm for linearly - scored dependency parsers that implements online largemargin multi - class training ( Crammer and Singer , 2003 ; Crammer et al . , 2003 ) on top of efficient parsing techniques for dependency trees ( Eisner , 1996 ) .", "label": "", "metadata": {}, "score": "43.022003"}
{"text": "We present an effective training algorithm for linearly - scored dependency parsers that implements online largemargin multi - class training ( Crammer and Singer , 2003 ; Crammer et al . , 2003 ) on top of efficient parsing techniques for dependency trees ( Eisner , 1996 ) .", "label": "", "metadata": {}, "score": "43.022003"}
{"text": "LIBLINEAR --A Library for Large Linear Classification ( Fan et al . , 2008 ) .MaltParser can also be turned into a phrase structure parser that recovers both continuous and discontinuous phrases with both phrase labels and grammatical functions ( Hall and Nivre , 2008a ; Hall and Nivre , 2008b ) .", "label": "", "metadata": {}, "score": "43.048103"}
{"text": "Recently ... \" .We explore a stacked framework for learning to predict dependency structures for natural language sentences .A typical approach in graph - based dependency parsing has been to assume a factorized model , where local features are used but a global function is optimized ( McDonald et al .", "label": "", "metadata": {}, "score": "43.835724"}
{"text": "A Fundamental Algorithm for Dependency Parsing .In Proceedings of the 39th Annual ACM Southeast Conference , pp .95 - 102 .Fan , R.-E. , Chang , K.-W. , Hsieh , C.-J. , Wang , X.-R. and Lin , C.-J. LIBLINEAR :", "label": "", "metadata": {}, "score": "44.30786"}
{"text": "Hall , J. , J. Nivre and J. Nilsson ( 2006 ) .Discriminative Classifiers for Deterministic Dependency Parsing .In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics , pp .", "label": "", "metadata": {}, "score": "45.324093"}
{"text": "Nivre , J. ( 2006 ) Inductive Dependency Parsing .Springer .Nivre , J. , Hall , J. and Nilsson , J. ( 2004 )Memory - Based Dependency Parsing .In Ng , H. T. and Riloff , E. ( eds . )", "label": "", "metadata": {}, "score": "45.335014"}
{"text": "Covington 's algorithm ( Covington 2001 ) is a quadratic - time algorithm for unrestricted dependency structures , which proceeds by trying to link each new token to each preceding token .It can be run in a projective ( -a covproj ) mode , where the linking operation is restricted to projective dependency structures , or in a non - projective ( -a covnonproj ) mode , allowing non - projective ( but acyclic ) dependency structures .", "label": "", "metadata": {}, "score": "46.59289"}
{"text": "Nivre , J. : Incrementality in deterministic dependency parsing .In : Keller , F. , Clark , S. , Crocker , M. , Steedman , M. ( eds . )Proc . of the Workshop on Incremental Parsing : Bringing Engineering and Cognition Together ( ACL ) , pp .", "label": "", "metadata": {}, "score": "46.943756"}
{"text": "Saers , M. , Nivre , J. and Wu , D. ( 2010 )Linear Inversion Transduction Grammar Alignments as a Second Translation Path .Proceedings of the Joint Fifth Workshop on Statistical Machine Translation and MetricsMATR , 167 - 171 .", "label": "", "metadata": {}, "score": "47.03946"}
{"text": "Kudo , T. and Y. Matsumoto ( 2002 ) .Japanese Dependency Analysis Using Cascaded Chunking .In Proceedings of the Sixth Workshop on Computational Language Learning ( CoNLL ) , pp .63 - 69 .Magerman , D. M. ( 1995 ) .", "label": "", "metadata": {}, "score": "47.280014"}
{"text": "Nordisk sprogteknologi .Museum Tusculanums Forlag , 199 - 206 .Nivre , J. , Hall , J. and Nilsson , J. ( 2004 )Memory - Based Dependency Parsing .In Ng , H. T. and Riloff , E. ( eds . )", "label": "", "metadata": {}, "score": "47.29544"}
{"text": "31 - 37 ( 1992 ) .Veenstra , J. , Daelemans , W. : A memory - based alternative for connectionist shift - reduce parsing .Technical Report ILK-0012 , Tilburg University ( 2000 ) .Nivre , J. : Inductive Dependency Parsing .", "label": "", "metadata": {}, "score": "47.528057"}
{"text": "Recently Nivre and McDonald ( 2008 ) used the output of one dependency parser to provide features for another .We show that this is an example of stacked learning , in which a second predictor is trained to improve the performance of the first .", "label": "", "metadata": {}, "score": "47.71283"}
{"text": "While discriminative methods , such as those presented in McDonald et al .( 2005b ) , obtain very high accuracy on standard dependency parsing tasks and can be trained and applied without marginalization , \" summing trees \" permits some alternative techniques of interest .", "label": "", "metadata": {}, "score": "47.819977"}
{"text": "We sidestep that difficulty by adopting an augmented Lagrangian method that accelerates model consensus by regularizing towards the averaged votes .We show how first - order logical constraints can be handled efficiently , even though the corresponding subproblems are no longer combinatorial , and report experiments in dependency parsing , with state - of - the - art results . \" ...", "label": "", "metadata": {}, "score": "48.24688"}
{"text": "In order to replicate the behavior of older versions , use the following settings : . Covington .Covington 's algorithm ( Covington 2001 ) is a quadratic - time algorithm for unrestricted dependency structures , which proceeds by trying to link each new token to each preceding token .", "label": "", "metadata": {}, "score": "48.354477"}
{"text": "You can start to optimize the feature model by using this file examples / covnonproj_ps.xml .We use the Covington non - projective parsing algorithm , because it is capable of parsing non - projective dependency graphs ( a discontinuous phrase structure will result in a non - projective dependency graph ) .", "label": "", "metadata": {}, "score": "48.39305"}
{"text": "New Trends in Parsing Technology : Dependency Parsing , Domain Adaptation and Deep Parsing .Springer , 19 - 33 .Nivre , J. ( 2011 ) Bare - Bones Dependency Parsing .In Bouvry , P. , Klopotek , M.A. , Leprevost , F. , Marciniak , M. , Mykowiecka , A. , Rybinski , H. ( eds . )", "label": "", "metadata": {}, "score": "48.50152"}
{"text": "[ pdf ] .Nilsson J. , J. Nivre and J. Hall .( 2007 )Generalizing Graph Transformations in Data - Driven Dependency Parsing .In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics ( ACL ) , Prauge , Czech Republic , pp .", "label": "", "metadata": {}, "score": "48.57115"}
{"text": "However , in cases where lightweight decompositions are not readily available ( e.g. , due to the presence of rich features or logical constraints ) , the original subgradient algor ... \" .Dual decomposition has been recently proposed as a way of combining complementary models , with a boost in predictive power .", "label": "", "metadata": {}, "score": "48.83267"}
{"text": "Based on such TPs , ... \" .We present a simple and effective framework for exploiting multiple monolingual treebanks with different annotation guidelines for pars - ing .Several types of transformation patterns ( TP ) are designed to capture the systematic an - notation inconsistencies among different tree - banks .", "label": "", "metadata": {}, "score": "48.870987"}
{"text": "In : Abeille , A. ( ed . )Building and Exploiting Syntactically - annotated Corpora .Kluwer Academic Publishers , Dordrecht ( 2003 ) .Oflazer , K. : Dependency parsing with an extended finite - state approach .Computational Linguistics 29(4 ) ( 2003 ) .", "label": "", "metadata": {}, "score": "49.087242"}
{"text": "Moreover , an indirect comparison indicates that our approach also outperforms previous work based on treebank conversion .However , the SL framework trains two parsers on the same treebank and therefore does not need to consider the problem of annotation inconsistencies . \" ...", "label": "", "metadata": {}, "score": "49.17458"}
{"text": "We compare our approach to other semisupervised learning algorithms . ... strengths of diverse learning algorithms .Nivre and McDonald ( 2008 ) were first to introduce stacking in the context of dependency parsing .Semi - supervised learning is typically motivated ...", "label": "", "metadata": {}, "score": "49.294693"}
{"text": "Documentation .Resources .Contact .Publications .Nivre , J. ( 2003 ) .An Efficient Algorithm for Projective Dependency Parsing .In Proceedings of the 8th International Workshop on Parsing Technologies ( IWPT 03 ) , Nancy , France , 23 - 25 April 2003 , pp .", "label": "", "metadata": {}, "score": "49.302273"}
{"text": "64 - 70 ( 2004 ) .Nivre , J. , Hall , J. , Nilsson , J. : Memory - based dependency parsing .In : Proc . of Conll 2004 , pp .49 - 56 ( 2004 ) .", "label": "", "metadata": {}, "score": "49.41499"}
{"text": ", 2005b ) .Recently Nivre and McDonald ( 2008 ) used the output of one dependency parser to provide features for another .We show that this is an example of stacked learning , in which a second predictor is trained to improve the performance of the first .", "label": "", "metadata": {}, "score": "49.429394"}
{"text": "Black , E. , F. Jelinek , J. D. Lafferty , D. M. Magerman , R. L. Mercer and S. Roukos ( 1992 ) .Towards history - based grammars : Using richer models for probabilistic parsing .In Proceedings of the 5th DARPA Speech and Natural Language Workshop , pp .", "label": "", "metadata": {}, "score": "49.4595"}
{"text": "We exploit the Matrix Tree Theorem ( Tutte , 1984 ) to derive an algorithm that efficiently sums the scores of all nonprojective trees i ... \" .A notable gap in research on statistical dependency parsing is a proper conditional probability distribution over nonprojective dependency trees for a given sentence .", "label": "", "metadata": {}, "score": "49.642117"}
{"text": "( 2008 ) can label unlabeled data for each other in a way similar to co - training and produce end parsers that are significantly better than any of the stacked input parsers .We evaluate our system on five datasets from the CONLL - X Shared Task and obtain 10 - 20 % error reductions , incl .", "label": "", "metadata": {}, "score": "49.684387"}
{"text": "In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics ( ACL ) , pp .276 - 283 .Nivre , J. ( 2003 ) .An Efficient Algorithm for Projective Dependency Parsing .In Proceedings of the 8th International Workshop on Parsing Technologies ( IWPT 03 ) , pp .", "label": "", "metadata": {}, "score": "49.739285"}
{"text": "99 - 106 .[ pdf ] .Nivre , J. , J. Hall , J. Nilsson , G. Eryigit and S. Marinov ( 2006 ) .Labeled Pseudo - Projective Dependency Parsing with Support Vector Machines .In Proceedings of the Tenth Conference on Computational Natural Language Learning ( CoNLL ) .", "label": "", "metadata": {}, "score": "50.261276"}
{"text": "In this paper , we introduce a supervised learning approach to RE ... . \" ...In recent years tree kernels have been proposed for the automatic learning of natural language applications .Unfortunately , they show ( a ) an inherent super linear complexity and ( b ) a lower accuracy than traditional attribute / value methods .", "label": "", "metadata": {}, "score": "50.366116"}
{"text": "In Proceedings of the 21stInternational Conference on the Computer Processing of Oriental Languages , 498 - 507 .Pettersson , N. , L\u00f6we , W. , and Nivre , J. ( 2006 )On Evaluation of Accuracy in Pattern Detection .", "label": "", "metadata": {}, "score": "50.736675"}
{"text": "Springer .Nilsson , J. , L\u00f6we W. , Hall , J. and Nivre , J. ( 2009 )Natural Language Parsing for Fact Extraction from Source Code .In Proceedings of 17th IEEE International Conference on Program Comprehension , Vancouver , Canada , pp .", "label": "", "metadata": {}, "score": "50.82457"}
{"text": "We formulate the problem of nonprojective dependency parsing as a polynomial - sized integer linear program .Our formulation is able to handle non - local output features in an efficient manner ; not only is it compatible with prior knowledge encoded as hard constraints , it can also learn soft constraints from data .", "label": "", "metadata": {}, "score": "51.01322"}
{"text": "Pettersson , E. , Megyesi , B. and Nivre , J. ( 2012 ) Rule - Based Normalisation of Historical Text - a Diachronic Study .In Empirical Methods in Natural Language Processing : Proceedings of the Conference on Natural Language Processing 2012 ( KONVENS 2012 ) , 333 - 341 .", "label": "", "metadata": {}, "score": "51.167686"}
{"text": "505 - 518 ( 1999 ) .Bikel , D. , Chiang , D. : Two statistical parsing models applied to the Chinese treebank .In : Proc . of the Second Chinese Language Processing Workshop , pp . 1 - 6 ( 2000 ) .", "label": "", "metadata": {}, "score": "51.198517"}
{"text": "Using this representation , the parsing algorithm of Eisner ( 1996 ) is sufficient for searching over all projective trees in O(n 3 ) time .More surprisingly , the representation is extended natura ... \" .We formalize weighted dependency parsing as searching for maximum spanning trees ( MSTs ) in directed graphs .", "label": "", "metadata": {}, "score": "51.51104"}
{"text": "We formulate the problem of nonprojective dependency parsing as a polynomial - sized integer linear program .Our formulation is able to handle non - local output features in an efficient manner ; not only is it compatible with prior knowledge encoded as hard constraints , it can also learn soft constraint ... \" .", "label": "", "metadata": {}, "score": "51.58294"}
{"text": "We formulate the problem of nonprojective dependency parsing as a polynomial - sized integer linear program .Our formulation is able to handle non - local output features in an efficient manner ; not only is it compatible with prior knowledge encoded as hard constraints , it can also learn soft constraint ... \" .", "label": "", "metadata": {}, "score": "51.58294"}
{"text": "Using these observations , we present an integrated system based on a stacking learning framework and show that such a system can learn to overcome the shortcomings of each non - integrated system . \" ...Martins et al .( 2008 ) presented what to the best of our knowledge still ranks as the best overall result on the CONLL - X Shared Task datasets .", "label": "", "metadata": {}, "score": "51.727524"}
{"text": "[ pdf ] .Hall , J. and Nivre , J. ( 2008 )Parsing Discontinuous Phrase Structure with Grammatical Functions .In Ranta , A. and Nordstr\u00f6m , B. ( eds . )In Proceedings of the 6th International Conference on Natural Language Processing ( GoTAL 2008 ) , LNAI 5221 , Springer - Verlag , August 25 - 27 , 2008 , Gothenburg , Sweden , pp . 169 - 180 .", "label": "", "metadata": {}, "score": "51.820633"}
{"text": "2-Planar .The 2-Planar algorithm ( G\u00f3mez - Rodr\u00edguez and Nivre , 2010 ) is a linear - time algorithm that can be used to parse 2-planar dependency structures , i.e. , those whose links may be coloured with two colours in such a way that no two same - coloured links cross .", "label": "", "metadata": {}, "score": "51.912247"}
{"text": "2-Planar .The 2-Planar algorithm ( G\u00f3mez - Rodr\u00edguez and Nivre , 2010 ) is a linear - time algorithm that can be used to parse 2-planar dependency structures , i.e. , those whose links may be coloured with two colours in such a way that no two same - coloured links cross .", "label": "", "metadata": {}, "score": "51.912247"}
{"text": "[ ps ] .Nivre , J. , J. Hall and J. Nilsson ( 2004 ) .Memory - Based Dependency Parsing .In Ng , H. T. and Riloff , E. ( eds . )Proceedings of the Eighth Conference on Computational Natural Language Learning ( CoNLL ) , May 6 - 7 , 2004 , Boston , Massachusetts , pp .", "label": "", "metadata": {}, "score": "51.993637"}
{"text": "Nivre , J. , Hall , J. , K\u00fcbler , S. , McDonald , R. , Nilsson , J. , Riedel , S. and Yuret , D. ( eds . )( 2007 ) Proceedings of the CoNLL Shared Task Session of EMNLP - CoNLL 2007 , Prag , Tjeckien .", "label": "", "metadata": {}, "score": "52.172775"}
{"text": "Nivre , J. and Nilsson , J. ( 2004 ) Multiword Units in Syntactic Parsing .In Dias , G. , Lopes , J. G. P. and Vintar , S. ( eds . )MEMURA 2004 - Methodologies and Evaluation of Multiword Units in Real - World Applications , Workshop at LREC 2004 , May 25 , 2004 , Lisbon , Portugal , 39 - 46 .", "label": "", "metadata": {}, "score": "52.203773"}
{"text": "An Improved Oracle for Dependency Parsing with Online Reordering .In Proceedings of 11th International Conference on Parsing Technologies ( IWPT ) , Paris , France , pp . to appear .Nivre , J. ( 2009 ) Non - Projective Dependency Parsing in Expected Linear Time .", "label": "", "metadata": {}, "score": "52.273857"}
{"text": "This paper describes an empirical study of high - performance dependency parsers based on a semi - supervised learning approach .We describe an extension of semisupervised structured conditional models ( SS - SCMs ) to the dependency parsing problem , whose framework is originally proposed in ( Suzuki and Isozaki , 2008 ) .", "label": "", "metadata": {}, "score": "52.310066"}
{"text": "More surprisingly , the representation is extended naturally to non - projective parsing using Chu - Liu - Edmonds ( Chu and Liu , 1965 ; Edmonds , 1967 ) MST algorithm , yielding an O(n 2 ) parsing algorithm .We evaluate these methods on the Prague Dependency Treebank using online large - margin learning techniques ( Crammer et al . , 2003 ; McDonald et al . , 2005 ) and show that MST parsing increases efficiency and accuracy for languages with non - projective dependencies . by Ryan Mcdonald , Koby Crammer , Fernando Pereira - In Proc .", "label": "", "metadata": {}, "score": "52.324303"}
{"text": "Hall , J. and J. Nivre ( 2008b )Parsing Discontinuous Phrase Structure with Grammatical Functions .In Ranta , A. and Nordstr\u00f6m , B. ( eds . )In Proceedings of the 6th International Conference on Natural Language Processing ( GoTAL 2008 ) , LNAI 5221 , Springer - Verlag , August 25 - 27 , 2008 , Gothenburg , Sweden , pp . 169 - 180 .", "label": "", "metadata": {}, "score": "52.34261"}
{"text": "Klein , D. , Manning , C.D. : Accurate unlexicalized parsing .In : Proc . of ACL 2003 , pp .423 - 430 ( 2003 ) .Arun , A. , Keller , F. : Lexicalization in crosslinguistic probabilistic parsing : The case of French .", "label": "", "metadata": {}, "score": "52.34263"}
{"text": "In Bunt , H. , Merlo , P. and Nivre , J. ( eds . )New Trends in Parsing Technology .Springer .Nivre , J. ( 2009 ) Non - Projective Dependency Parsing in Expected Linear Time .In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP , 351 - 359 .", "label": "", "metadata": {}, "score": "52.34537"}
{"text": "We show how it can efficiently handle problems with ( possibly global ) structural constraints via simple sort operations .Experiments on synthetic and real - world data show that our approach compares favorably with the state - of - the - art .", "label": "", "metadata": {}, "score": "52.358807"}
{"text": "Nivre , J. ( 2007 )Incremental Non - Projective Dependency Parsing .In Proceedings of Human Language Technologies : The Annual Conference of the North American Chapter of the Association for Computational Linguistics ( NAACL - HLT ) , 396 - 403 .", "label": "", "metadata": {}, "score": "52.479965"}
{"text": "In : Proc . of IWPT 2003 , pp .149 - 160 ( 2003 ) .Black , E. , Jelinek , F. , Lafferty , J.D. , Magerman , D.M. , Mercer , R.L. , Roukos , S. : Towards history - based grammars : Using richer models for probabilistic parsing .", "label": "", "metadata": {}, "score": "52.64025"}
{"text": "We show how partition functions and marginals for directed spanning trees can be computed by an adaptation of Kirchhoff 's Matrix - Tree ... \" .This paper provides an algorithmic framework for learning statistical models involving directed spanning trees , or equivalently non - projective dependency structures .", "label": "", "metadata": {}, "score": "52.7125"}
{"text": "However , in certain applications , such as non - projective dependency parsing and machine translation , the complete formulation of the decoding problem as an integ ... \" .Integer Linear Programming has recently been used for decoding in a number of probabilistic models in order to enforce global constraints .", "label": "", "metadata": {}, "score": "52.94976"}
{"text": "( 2008 ) can label unlabeled data for each other in a way similar to co - tra ... \" .Martins et al .( 2008 ) presented what to the best of our knowledge still ranks as the best overall result on the CONLL - X Shared Task datasets .", "label": "", "metadata": {}, "score": "53.04603"}
{"text": "Nilsson , J. , L\u00f6we W. , Hall , J. and Nivre , J. ( 2009 )Parsing Formal Languages using Natural Language Parsing Techniques .In Proceedings of 11th International Conference on Parsing Technologies ( IWPT ) , Paris , France , pp . to appear .", "label": "", "metadata": {}, "score": "53.047596"}
{"text": "In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics ( COLING - ACL ) Main ConferencePoster Sessions , 507 - 514 .Eryigit , G. , Nivre , J. and Oflazer , K. ( 2006 )", "label": "", "metadata": {}, "score": "53.095818"}
{"text": "Hall , J. and J. Nivre ( 2008b )Parsing Discontinuous Phrase Structure with Grammatical Functions .In Ranta , A. and Nordst\u00f6m , B. ( eds . )In Proceedings of the 6th International Conference on Natural Language Processing ( GoTAL 2008 ) , LNAI 5221 , Springer - Verlag , August 25 - 27 , 2008 , Gothenburg , Sweden , pp . 169 - 180 .", "label": "", "metadata": {}, "score": "53.214348"}
{"text": "Covington 's algorithm uses four data structures : .A list Left of partially processed tokens , where Left[i ] is the i+1th token in the list , with the first token being Left[0 ] .A list Right of remaining input tokens , where Right[i ] is the i+1th token in the list , with the first token being Right[0 ] .", "label": "", "metadata": {}, "score": "53.216476"}
{"text": "For example , identifying protein interactio ... . \" ...We explore a stacked framework for learning to predict dependency structures for natural language sentences .A typical approach in graph - based dependency parsing has been to assume a factorized model , where local features are used but a global function is optimized ( McDonald et al .", "label": "", "metadata": {}, "score": "53.305084"}
{"text": "In this article , our aim is to take a step back and analyze the progress that has been made through an analysis of the two predominant paradigms for data - driven dependency parsing , which are often called graph - based and transition - based dependency parsing .", "label": "", "metadata": {}, "score": "53.48462"}
{"text": "Finally , we demonstrate the efficacy of a semi - supervised extension .The key idea that enables this is an application of the predict - self idea for unsupervised learning . \" ...This paper describes an empirical study of high - performance dependency parsers based on a semi - supervised learning approach .", "label": "", "metadata": {}, "score": "53.72352"}
{"text": "49 - 56 .Ratnaparkhi , A. ( 1997 ) .A linear observed time statistical parser based on maximum entropy models .In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing ( EMNLP ) , pp . 1 - 10 .", "label": "", "metadata": {}, "score": "54.003494"}
{"text": "Vapnik , V.N. : The Nature of Statistical Learning Theory .Springer , Heidelberg ( 1995 ) MATH .Sagae , K. , Lavie , A. : A classifier - based parser with linear run - time complexity .In : Proc . of IWPT 2005 , pp .", "label": "", "metadata": {}, "score": "54.357544"}
{"text": "It is possible to projectivize an input file , with or without involving parsing .All non - projective arcs in the input file are replaced by projective arcs by applying a lifting operation .The lifts are encoded in the dependency labels of the lifted arcs .", "label": "", "metadata": {}, "score": "54.369675"}
{"text": "In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics ( COLING - ACL ) Main ConferencePoster Sessions , 316 - 323 .Kuhlmann , M. and Nivre , J. ( 2006 )", "label": "", "metadata": {}, "score": "54.766556"}
{"text": "Unfortunately , they show ( a ) an inherent super linear complexity and ( b ) a lower accuracy than traditional attribute / value methods . by Alessandro Moschitti - In European Conference on Machine Learning ( ECML , 2006 . \" ... Abstract .", "label": "", "metadata": {}, "score": "54.865635"}
{"text": "In addition , there are two options , allow shift and allow root , that controls the behavior of Covington 's algorithm .Covington 's algorithm uses four data structures : .A list Left of partially processed tokens , where Left[i ] is the i+1th token in the list , with the first token being Left[0 ] .", "label": "", "metadata": {}, "score": "54.868885"}
{"text": "To demonstrate an application of the method , we perform experiments which use the algorithm in training both log - linear and max - margin dependency parsers .The new training methods give improvements in accuracy over perceptron - trained models . ... linear and max - margin training to be applied via the framework developed in this paper .", "label": "", "metadata": {}, "score": "54.89193"}
{"text": "In Proceedings of the 11th International Conference on Parsing Technologies ( IWPT'09 ) .Nivre , J. and J. Nilsson ( 2005 )Pseudo - Projective Dependency Parsing .In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics , pp .", "label": "", "metadata": {}, "score": "55.034775"}
{"text": "In Proceedings of the 11th International Conference on Parsing Technologies ( IWPT'09 ) .Nivre , J. and J. Nilsson ( 2005 )Pseudo - Projective Dependency Parsing .In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics , pp .", "label": "", "metadata": {}, "score": "55.034775"}
{"text": "Review of Steedman , M. ( 2000 )The Syntactic Process .Cambridge , MA : MIT Press .Computational Linguistics 27(1 ) , 146 - 148 .Nivre , J. ( 2004 )Review of Abeill\u00e9 , A. ( ed . )", "label": "", "metadata": {}, "score": "55.525528"}
{"text": "( PhD ) .Nivre , J. ( 2005 ) Inductive Dependency Parsing of Natural Language Text .MSI Report 05132 , V\u00e4xj\u00f6 University .( PhD ) .Edited Volumes .Nivre , J. and Hinrichs , E. ( eds . )", "label": "", "metadata": {}, "score": "55.533607"}
{"text": "Our experiments show that unsupervised QG projection improves on parses trained using only highprecision projected annotations and far outperforms , by more than 35 % absolute dependency accuracy , learning an unsupervised parser from raw target - language text alone .When a few target - language parse trees are available , projection gives a boost equivalent to doubling the number of target - language trees . .", "label": "", "metadata": {}, "score": "55.682556"}
{"text": "That is , we score a aligned ... \" .We connect two scenarios in structured learning : adapting a parser trained on one corpus to another annotation style , and projecting syntactic annotations from one language to another .We propose quasisynchronous grammar ( QG ) features for these structured learning tasks .", "label": "", "metadata": {}, "score": "55.773304"}
{"text": "MaltParser 1.1 and MaltParser 1.2 can be turned into a phrase structure parser that recovers both continuous and discontinuous phrases with both phrase labels and grammatical functions .Note : The implementation of phrase structure parsing has been removed in later releases of MaltParser .", "label": "", "metadata": {}, "score": "55.82891"}
{"text": "Experiments on twelve languages show that stacking transition - based and graphbased parsers improves performance over existing state - of - the - art dependency parsers . \" ...We formulate dependency parsing as a graphical model with the novel ingredient of global constraints .", "label": "", "metadata": {}, "score": "55.940025"}
{"text": "The Planar algorithm ( G\u00f3mez - Rodr\u00edguez and Nivre , 2010 ) is a linear - time algorithm limited to planar dependency structures , the set of structures that do not contain any crossing links .It works in a similar way to Nivre 's algorithm in arc - eager mode , but with more fine - grained transitions .", "label": "", "metadata": {}, "score": "55.979244"}
{"text": "The Planar algorithm ( G\u00f3mez - Rodr\u00edguez and Nivre , 2010 ) is a linear - time algorithm limited to planar dependency structures , the set of structures that do not contain any crossing links .It works in a similar way to Nivre 's algorithm in arc - eager mode , but with more fine - grained transitions .", "label": "", "metadata": {}, "score": "55.979244"}
{"text": "We evaluate the performance of our parser on data in several natural languages , achieving improvements over existing state - of - the - art methods . \" ...An important approach to text mining involves the use of natural - language information extraction .", "label": "", "metadata": {}, "score": "56.111774"}
{"text": ", 2004 ; Hall et al . , 2006 ) .MaltParser allows users to define feature models of arbitrary complexity .MaltParser currently includes two machine learning packages ( thanks to Sofia Cassel for her work on LIBLINEAR ) : .", "label": "", "metadata": {}, "score": "56.152233"}
{"text": "Nivre , J. ( 1994 )A Situation Theoretic Analysis of Meaning as Communicative Intention .In Allwood , J. , Ralph , B. , Andersson , P. , K\u00f3s - Dienes , D. and Wengelin , \u00c5. ( eds ) Proceedings of the XIVth Scandinavian Conference of Linguistics and the VIIIth Conference of Nordic and General Linguistics .", "label": "", "metadata": {}, "score": "56.218323"}
{"text": "We evaluate the performance of our parser on data in several natural languages , achieving improvements over existing state - of - the - art methods . \" ...We connect two scenarios in structured learning : adapting a parser trained on one corpus to another annotation style , and projecting syntactic annotations from one language to another .", "label": "", "metadata": {}, "score": "56.23166"}
{"text": "In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics ( COLING - ACL ) , 257 - 264 .Hall , J. , Nivre , J. and Nilsson , J. ( 2006 )", "label": "", "metadata": {}, "score": "56.377323"}
{"text": "63 - 69 ( 2002 ) .Yamada , H. , Matsumoto , Y. : Statistical dependency analysis with support vector machines .In : Proc . of IWPT 2003 , pp .195 - 206 ( 2003 ) .Nivre , J. , Scholz , M. : Deterministic dependency parsing of English text .", "label": "", "metadata": {}, "score": "56.40652"}
{"text": "Our formulation is able to handle non - local output features in an efficient manner ; not only is it compatible with prior knowledge encoded as hard constraints , it can also learn soft constraints from data .In particular , our model is able to learn correlations among neighboring arcs ( siblings and grandparents ) , word valency , and tendencies toward nearly - projective parses .", "label": "", "metadata": {}, "score": "56.52816"}
{"text": "Our formulation is able to handle non - local output features in an efficient manner ; not only is it compatible with prior knowledge encoded as hard constraints , it can also learn soft constraints from data .In particular , our model is able to learn correlations among neighboring arcs ( siblings and grandparents ) , word valency , and tendencies toward nearly - projective parses .", "label": "", "metadata": {}, "score": "56.52816"}
{"text": "We present a new approach to relation extraction that requires only a handful of training examples .Given a few pairs of named entities known to exhibit or not exhibit a particular relation , bags of sentences containing the pairs are extracted from the web .", "label": "", "metadata": {}, "score": "56.64643"}
{"text": "We present a new approach to relation extraction that requires only a handful of training examples .Given a few pairs of named entities known to exhibit or not exhibit a particular relation , bags of sentences containing the pairs are extracted from the web .", "label": "", "metadata": {}, "score": "56.64643"}
{"text": "Returns the proper leftmost descendant of the graph node if defined ; otherwise , a null - value . rdesc .Returns the rightmost descendant of the graph node if defined ; otherwise , a null - value . prdesc .Returns the proper rightmost descendant of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "56.828064"}
{"text": "Returns the proper leftmost descendant of the graph node if defined ; otherwise , a null - value . rdesc .Returns the rightmost descendant of the graph node if defined ; otherwise , a null - value . prdesc .Returns the proper rightmost descendant of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "56.828064"}
{"text": "We present an evaluation of these methods on the 2004 ACE relation detection task , using Support Vector Machines , and show that each level of syntactic processing contributes useful information for this task .When evaluated on the official test data , our approach produced very competitive ACE value scores .", "label": "", "metadata": {}, "score": "56.94777"}
{"text": "Part II : Discourse Model .ESPRIT P5254 PLUS .Internal Report .Nivre , J. ( ed ) ( 1992 ) Corpus Collection and Analysis .ESPRIT P5254 PLUS .Deliverable D2.1 .Nivre , J. ( ed ) , Cavalli , V. , Guessoum , A. , Lager , T. , Meyer , R. and Underwood , N. ( 1992 )", "label": "", "metadata": {}, "score": "57.09224"}
{"text": "Chang , C.-C. and Lin , C.-J. ( 2001 )LIBSVM : a library for support vector machines .Fan , R.-E. , Chang , K.-W. , Hsieh , C.-J. , Wang , X.-R. and Lin , C.-J. ( 2008 )LIBLINEAR :", "label": "", "metadata": {}, "score": "57.107246"}
{"text": "Transition - Based Natural Language Parsing with Dependency and Constituency Representations .Acta Wexionensia , No 152/2008 , Computer Science , V\u00e4xj\u00f6 University ( PhD Thesis ) [ pdf ] .Nivre , J. ( 2008 ) Algorithms for Deterministic Incremental Dependency Parsing .", "label": "", "metadata": {}, "score": "57.10987"}
{"text": "The Projective Stack algorithm uses essentially the same transitions as the arc - standard version of Nivre 's algorithm and is limited to projective dependency trees .The Eager and Lazy Stack algorithms in addition make use of a swap transition , which makes it possible to derive arbitrary non - projective dependency trees .", "label": "", "metadata": {}, "score": "57.417747"}
{"text": "Projectivize input data .It is possible to projectivize an input file , with or without involving parsing .All non - projective arcs in the input file are replaced by projective arcs by applying a lifting operation .The lifts are encoded in the dependency labels of the lifted arcs .", "label": "", "metadata": {}, "score": "57.466568"}
{"text": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics ( Volume 2 : Short Papers ) , 92 - 97 .Dissertations .Nivre , J. ( 1984 )Etude sur la place du compl\u00e9ment circonstanciel dans la phrase fran\u00e7aise .", "label": "", "metadata": {}, "score": "57.490257"}
{"text": "This increase has been driven by the availability of treebanks in a wide variety of languages - due in large part to the CoNLL shared tasks - as well as the straightforward mechanisms by w ... \" .There has been a rapid increase in the volume of research on data - driven dependency parsers in the past five years .", "label": "", "metadata": {}, "score": "57.688934"}
{"text": "Parse data with your parsing model .We have now created a parsing model that we can use for parsing new sentences from the same language .It is important that unparsed sentences are formatted according to the format that was used during training ( except that the output columns for head and dependency relation are missing ) .", "label": "", "metadata": {}, "score": "57.92858"}
{"text": "Parse data with your parsing model .We have now created a parsing model that we can use for parsing new sentences from the same language .It is important that unparsed sentences are formatted according to the format that was used during training ( except that the output columns for head and dependency relation are missing ) .", "label": "", "metadata": {}, "score": "57.92858"}
{"text": "We focus on parsing algorithms for nonprojective head automata , a generalization of head - automata models to non - projective structures .The dual decomposition algorithms are simple and efficient , relying on standa ... \" .This paper introduces algorithms for nonprojective parsing based on dual decomposition .", "label": "", "metadata": {}, "score": "58.102592"}
{"text": "We focus on parsing algorithms for nonprojective head automata , a generalization of head - automata models to non - projective structures .The dual decomposition algorithms are simple and efficient , relying on standa ... \" .This paper introduces algorithms for nonprojective parsing based on dual decomposition .", "label": "", "metadata": {}, "score": "58.102592"}
{"text": "In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics ( COLING - ACL ) Main ConferencePoster Sessions , 316 - 323 .[ pdf ] .Nivre , J. , J. Hall and J. Nilsson ( 2006 )", "label": "", "metadata": {}, "score": "58.127266"}
{"text": "In Proceedings of the Workshop on Partially Automated Techniques for Transcribing Naturally Occurring Speech , COLING - ACL ' 98 , Montreal , Canada .Nivre , J. and Nordg\u00e5rd , T. ( 1998 )Semantic Anchoring of Syntactic Theories .In Haukioja , T. ( ed )", "label": "", "metadata": {}, "score": "58.2583"}
{"text": "Hall , J. and J. Nivre ( 2008b )Parsing Discontinuous Phrase Structure with Grammatical Functions .In Proceedings of the 6th International Conference on Natural Language Processing ( GoTAL 2008 ) , August 25 - 27 , 2008 , Gothenburg , Sweden .", "label": "", "metadata": {}, "score": "58.356518"}
{"text": "Two Ways of Eliminating Empty Categories .Short Paper Presented at the 10th Nordic Conference of Computational Linguistics ( NODALIDA-95 ) , Helsinki , 29 - 30 May 1995 .Compiled by K. Koskenniemi .Nivre , J. , Allwood , J. , Holm , J. , Lopez - K\u00e4sten , D. , Tullgren , K. , Ahls\u00e9n , E. , Gr\u00f6nqvist , L. & Sofkova , S. ( 1998 )", "label": "", "metadata": {}, "score": "58.583748"}
{"text": "Experiments on twelve languages show that stacking transition - based and graphbased parsers improves performance over existing state - of - the - art dependency parsers . by Terry Koo , Amir Globerson , Xavier Carreras , Michael Collins - In EMNLP - CoNLL , 2007 . \" ...", "label": "", "metadata": {}, "score": "58.887886"}
{"text": "Hall , J. ( 2006 )MaltParser : An Architecture for Labeled Inductive Dependency Parsing .Licentiate thesis , V\u00e4xj\u00f6 University .[ pdf ] .Nivre , J. ( 2006 ) Inductive Dependency Parsing .Springer .Nilsson , J. , J. Nivre and J. Hall .", "label": "", "metadata": {}, "score": "59.05671"}
{"text": "The model parameters are learned in a max - margin framework by employing a linear programming relaxation .We evaluate the performance of our parser on data in several natural languages , achieving improvements over existing state - of - the - art methods . \" ...", "label": "", "metadata": {}, "score": "59.086708"}
{"text": "We also propose an efficient algorithm for its computation which is futhermore sped - up by applying the selection of tree nodes with non - null kernel . ... effort and intuition .These studies show that the kernel ability to generate large feature sets is useful to quickly model new and not well understood linguistic phenomena in learning machi ... . \" ...", "label": "", "metadata": {}, "score": "59.32712"}
{"text": "Resourceful Language Technology .A Festschrift in Honor of Anna S\u00e5gvall Hein .Acta Universitatis Upsaliensis .Studia Linguistica Upsaliensia 7 , 111 - 120 .Nivre , J. ( 2008 ) Treebanks .In Kyt\u00f6 , M. and L\u00fcdeling , A. ( eds . )", "label": "", "metadata": {}, "score": "59.47525"}
{"text": "Partial trees .Since MaltParser 1.4 it is possible to parse with partial trees , i.e. , sentences may be input with a partial dependency structure , a subgraph of a complete dependency tree .To parse with partial trees you need to do the following : .", "label": "", "metadata": {}, "score": "59.608955"}
{"text": "Partial trees .Since MaltParser 1.4 it is possible to parse with partial trees , i.e. , sentences may be input with a partial dependency structure , a subgraph of a complete dependency tree .To parse with partial trees you need to do the following : .", "label": "", "metadata": {}, "score": "59.608955"}
{"text": "Nivre 's algorithm uses two data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .A list Input of remaining input tokens , where Input[i ] is the i+1th token in the list , with the first token being Input[0 ] .", "label": "", "metadata": {}, "score": "59.666306"}
{"text": "Nivre 's algorithm uses two data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .A list Input of remaining input tokens , where Input[i ] is the i+1th token in the list , with the first token being Input[0 ] .", "label": "", "metadata": {}, "score": "59.666306"}
{"text": "In Proceedings of the NAACL HLT 2010 First Workshop on Statistical Parsing of Morphologically - Rich Languages , 94 - 102 .Nilsson , M. and Nivre , J. ( 2010 ) Towards a Data - Driven Model of Eye Movement Control in Reading .", "label": "", "metadata": {}, "score": "59.739723"}
{"text": "Our quasi - synchronous model assigns positive probability to any alignment of any trees , in contrast to a synchronous grammar , which would insist on some form of structural parallelism .In monolingual dependency parser adaptation , we achieve high accuracy in translating among multiple annotation styles for the same sentence .", "label": "", "metadata": {}, "score": "59.744118"}
{"text": "We propose a new algorithm for approximate MAP inference on factor graphs , by combining augmented Lagrangian optimization with the dual decomposition method .Each slave subproblem is given a quadratic penalty , which pushes toward faster consensus than in previous subgradient approaches .", "label": "", "metadata": {}, "score": "59.849106"}
{"text": "We propose a new algorithm for approximate MAP inference on factor graphs , by combining augmented Lagrangian optimization with the dual decomposition method .Each slave subproblem is given a quadratic penalty , which pushes toward faster consensus than in previous subgradient approaches .", "label": "", "metadata": {}, "score": "59.849106"}
{"text": "LIBLINEAR :A library for large linear classification .Journal of Machine Learning Research 9 , 1871 - 1874 .Hall , J. ( 2008 )Transition - Based Natural Language Parsing with Dependency and Constituency Representations .Acta Wexionensia , No 152/2008 , Computer Science , V\u00e4xj\u00f6 University ( PhD Thesis ) .", "label": "", "metadata": {}, "score": "60.07567"}
{"text": "In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP , 351 - 359 .Nivre , J. , Kuhlmann , M. and Hall , J. ( 2009 )", "label": "", "metadata": {}, "score": "60.09146"}
{"text": "In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP , 351 - 359 .Nivre , J. , Kuhlmann , M. and Hall , J. ( 2009 )", "label": "", "metadata": {}, "score": "60.09146"}
{"text": "302 - 313 ( 2005 ) .Eryi\u011fit , G. , Oflazer , K. : Statistical dependency parsing of Turkish .In : Proc . of EACL 2006 , pp .89 - 96 ( 2006 ) .Kudo , T. , Matsumoto , Y. : Japanese dependency analysis using cascaded chunking .", "label": "", "metadata": {}, "score": "60.132896"}
{"text": "In Proceedings of the 19th Nordic Conference of Computational Linguistics ( NODALIDA ) , 163 - 180 .Stymne , S. , Tiedemann , J. , Hardmeier , C. and Nivre , J. ( 2013 ) Statistical Machine Translation with Readability Constraints .", "label": "", "metadata": {}, "score": "60.188026"}
{"text": "The projecitivization and deprojectivization ( below ) , including the encoding schemes , are know as pseudo - projective transformations and are described in more detail in Nivre & Nilsson ( 2005 ) .The only difference compared to Nivre & Nilsson is that it is the most deeply nested non - projective arc that is lifted first , not the shortest one .", "label": "", "metadata": {}, "score": "60.249844"}
{"text": "The projecitivization and deprojectivization ( below ) , including the encoding schemes , are know as pseudo - projective transformations and are described in more detail in Nivre & Nilsson ( 2005 ) .The only difference compared to Nivre & Nilsson is that it is the most deeply nested non - projective arc that is lifted first , not the shortest one .", "label": "", "metadata": {}, "score": "60.249844"}
{"text": "For example with the Nivre arc - eager algorithm , it is possible to first predict the transition ; if the transition is SHIFT or REDUCE the nondeterminism is resolved , but if the predicted transition is RIGHT - ARC or LEFT - ARC the parser continues to predict the arc label .", "label": "", "metadata": {}, "score": "60.34781"}
{"text": "The bottom half specifies that DEPREL values should be copied to the VALENCY field of the head , whenever an arc labeled by one of the labels listed in the FOR parameter is created .Provided that these labels denote valency - bound functions , this will have the effect of propagating information about satisfaction of valency constraints to the head .", "label": "", "metadata": {}, "score": "60.70691"}
{"text": "The bottom half specifies that DEPREL values should be copied to the VALENCY field of the head , whenever an arc labeled by one of the labels listed in the FOR parameter is created .Provided that these labels denote valency - bound functions , this will have the effect of propagating information about satisfaction of valency constraints to the head .", "label": "", "metadata": {}, "score": "60.70691"}
{"text": "Returns the next left ( same - side ) sibling of the graph node if defined ; otherwise , a null - value . rsib .Returns the next right ( same - side ) sibling of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "60.708668"}
{"text": "Returns the next left ( same - side ) sibling of the graph node if defined ; otherwise , a null - value . rsib .Returns the next right ( same - side ) sibling of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "60.708668"}
{"text": "This command will create a new directory test containing the following files : .Description .conllx.xml .XML document describing the data format .NivreEager.xml .XML document containing the feature model specification .odm0.libsvm.moo , odm0.libsvm.map .The LIBSVM model that is used for predicting the next parsing action .", "label": "", "metadata": {}, "score": "60.751984"}
{"text": "Oulu University Press , 26 - 44 .Nivre , J. ( 2007 )Dependency Parsing of Spoken Swedish .In Ahls\u00e9n , E. , Henrichsen , P. J. , Hirsch , R. , Nivre , J. , Abelin , \u00c5 , Str\u00f6mqvist , S. , Nicholson , S. and Dorriots , B. ( eds . )", "label": "", "metadata": {}, "score": "60.971733"}
{"text": "V\u00e4xj\u00f6 University Press .K\u00fcbler , S. , Nivre , J. , Hinrichs , E. and Wunsch , H. ( eds . )( 2004 )Proceedings of the Third Workshop on Treebanks and Linguistic Theories .10 - 11 December 2004 , T\u00fcbingen , Germany .", "label": "", "metadata": {}, "score": "61.149902"}
{"text": "In : Proc . of ACL 2003 , pp .96 - 103 ( 2003 ) .Levy , R. , Manning , C. : Is it harder to parse Chinese , or the Chinese treebank ?In : Proc . of ACL 2003 , pp .", "label": "", "metadata": {}, "score": "61.302254"}
{"text": "The English - Swedish - Turkish Parallel Treebank .In Proceedings of the Seventh International Conference on Language Resources and Evaluation ( LREC ) , 3393 - 3397 .Saers , M. , Nivre , J. and Wu , D. ( 2010 ) Word Alignment with Stochastic Bracketing Linear Inversion Transduction Grammar .", "label": "", "metadata": {}, "score": "61.368988"}
{"text": "This paper describes a relation detection approach that combines clues from different levels of syntactic processing using kernel methods .Information from three different levels of processing is considered : tokenization , sentence parsing and deep dependency analysis .Each source of information is represented by kernel functions .", "label": "", "metadata": {}, "score": "61.468697"}
{"text": "In practice , however , this will probably have little impact for the parsing accuracy .Deprojectivize input data .MaltParser can also be used to deprojectivize a projective file containing pseudo - projective encoding , with or without involving parsing , where it is assumed that the configuration pproj contains the same encoding scheme as during projectivization .", "label": "", "metadata": {}, "score": "61.68071"}
{"text": "Maps a feature value onto a new set of values and takes as arguments a feature specification and one or more arguments that control the mapping .There is one feature map function : .Split .Splits the feature value into a set of feature values .", "label": "", "metadata": {}, "score": "61.71328"}
{"text": "Maps a feature value onto a new set of values and takes as arguments a feature specification and one or more arguments that control the mapping .There is one feature map function : .Split .Splits the feature value into a set of feature values .", "label": "", "metadata": {}, "score": "61.71328"}
{"text": "( If one of the address functions is undefined , a null - value is returned . )This feature function can be used to define features over the dependency graph predicted by another parser and given as input to MaltParser .", "label": "", "metadata": {}, "score": "61.89679"}
{"text": "( If one of the address functions is undefined , a null - value is returned . )This feature function can be used to define features over the dependency graph predicted by another parser and given as input to MaltParser .", "label": "", "metadata": {}, "score": "61.89679"}
{"text": "Museum Tusculanums Forlag .Nivre , J. ( 2005 )Two Notions of Parsing .In Arppe , A. , Carlson , L. , Hein\u00e4m\u00e4ki , O. , Lind\u00e9n , K. , Miestamo , M , Piitulainen , J. , Tupakka , J. , Westerlund , H. and Yli - Jyr\u00e4 , A. ( red )", "label": "", "metadata": {}, "score": "61.94849"}
{"text": "which will create a configuration based on the same setting except the parsing algorithm is now nivreeager instead of nivrestandard .If you want to create a configuration that has the same settings as the option file with command - line options , you need to type : .", "label": "", "metadata": {}, "score": "62.02943"}
{"text": "[ ps ] .Nivre , J. ( 2004 ) .Incrementality in Deterministic Dependency Parsing .In Incremental Parsing : Bringing Engineering and Cognition Together .Workshop at ACL-2004 , Barcelona , Spain , July 25 , 2004 .[ pdf ] .", "label": "", "metadata": {}, "score": "62.24344"}
{"text": "There are seven dependency graph address functions : . head .Returns the head of the graph node if defined ; otherwise , a null - value . ldep .Returns the leftmost ( left ) dependent of the graph node if defined ; otherwise , a null - value . rdep .", "label": "", "metadata": {}, "score": "62.307785"}
{"text": "There are seven dependency graph address functions : . head .Returns the head of the graph node if defined ; otherwise , a null - value . ldep .Returns the leftmost ( left ) dependent of the graph node if defined ; otherwise , a null - value . rdep .", "label": "", "metadata": {}, "score": "62.307785"}
{"text": "Theory - Supporting Treebanks .In Nivre , J. and Hinrichs , E. ( eds . )Proceedings of the Second Workshop on Treebanks and Linguistic Theories ( TLT 2003 ) , V\u00e4xj\u00f6 University Press , 117 - 128 .Also in Holmboe , H. ( ed . )", "label": "", "metadata": {}, "score": "62.33234"}
{"text": "We describe an adaptation and application of a search - based structured prediction algorithm \" Searn \" to unsupervised learning problems .We show that it is possible to reduce unsupervised learning to supervised learning and demonstrate a high - quality unsupervised shift - reduce parsing model .", "label": "", "metadata": {}, "score": "62.56652"}
{"text": "We describe an adaptation and application of a search - based structured prediction algorithm \" Searn \" to unsupervised learning problems .We show that it is possible to reduce unsupervised learning to supervised learning and demonstrate a high - quality unsupervised shift - reduce parsing model .", "label": "", "metadata": {}, "score": "62.56652"}
{"text": "Chang , C.-C. and C.-J. Lin ( 2001 ) .LIBSVM : A Library for Support Vector Machines .[ pdf ] .Collins , M. ( 1999 ) .Head - Driven Statistical Models for Natural Language Parsing .Ph . D. thesis , University of Pennsylvania .", "label": "", "metadata": {}, "score": "62.58954"}
{"text": "Manually annotated corpora are valuable but scarce resources , yet for many annotation tasks such as treebanking and sequence labeling there exist multiple corpora with different and incompatible annotation guidelines or standards .This seems to be a great waste of human efforts , and it would be nice to automatically adapt one annotation standard to another .", "label": "", "metadata": {}, "score": "62.594147"}
{"text": "( 2008 )Communication - Action - Meaning .A Festschrift to Jens Allwood .G\u00f6teborg University : Department of Linguistics .Bunt , H. , Merlo , P. and Nivre , J. ( eds . )( 2010 ) Trends in Parsing Technology : Dependency Parsing , Domain Adaptation and Deep Parsing .", "label": "", "metadata": {}, "score": "62.63365"}
{"text": "Book Reviews .Nivre , J. ( 1990 )Review of Herslund , M. ( ed . )( 1989 )Linguistic Data and Linguistic Theory : Three Essays on Linguistic Methodology .Copenhagen : Handelsh\u00f8jskolens Forlag .Moderna Spr\u00e5k LXXXIV , 185 .", "label": "", "metadata": {}, "score": "62.764153"}
{"text": "If no lexical child can be found , then take the rightmost nonterminal child .Another example is CAT : AVP r r[LABEL : HD CAT : AVP ] , which first searches for an outgoing edge label HD if the parent nonterminal is labeled AVP .", "label": "", "metadata": {}, "score": "62.806755"}
{"text": "[ pdf ] .Hall , J. , J. Nilsson , J. Nivre , G. Eryigit , B. Megyesi , M. Nilsson and M. Saers ( 2007 ) .Single Malt or Blended ?A Study in Multilingual Parser Optimization .In Proceedings of the CoNLL Shared Task Session of EMNLP - CoNLL 2007 , 933 - -939 .", "label": "", "metadata": {}, "score": "62.92144"}
{"text": "Nivre , J. ( 1994 ) Dialogue Management through Context Management .In Eklund , R. ( ed ) NODALIDA ' 93 .Proceedings of ' 9:e Nordiska Datalingvistikdagarna ' .Stockholm 3 - 5 June 1993 .Stockholm University : Department of Linguistics , 165 - 174 .", "label": "", "metadata": {}, "score": "62.946568"}
{"text": "Same as DEPENDENCY_EDGE_LABEL , used by MaltParser version 1.0 - 1.1 .PHRASE_STRUCTURE_EDGE_LABEL .Column containing a phrase structure edge label .PHRASE_STRUCTURE_NODE_LABEL .Column containing a phrase category label .SECONDARY_EDGE_LABEL .Column containing a secondary edge label .HEAD .", "label": "", "metadata": {}, "score": "63.0385"}
{"text": "Statistical Dependency Analysis with Support Vector Machines .In Proceedings of the 8th International Workshop on Parsing Technologies ( IWPT ) , pp .195 - 206 .Hall , J. and J. Nivre ( 2008a )A Dependency - Driven Parser for German Dependency and Constituency Representations .", "label": "", "metadata": {}, "score": "63.560303"}
{"text": "Our approach can significantly advance the state - of - the - art pars - ing accuracy on two widely used target tree - banks ( Penn Chinese Treebank 5.1 and 6.0 ) using the Chinese Dependency Treebank as the source treebank .", "label": "", "metadata": {}, "score": "63.56158"}
{"text": "Entity relation detection is a form of information extraction that finds predefined relations between pairs of entities in text .This paper describes a relation detection approach that combines clues from different levels of syntactic processing using kernel methods .Information from three different ... \" .", "label": "", "metadata": {}, "score": "63.597916"}
{"text": "In Proceedings of the 21stInternational Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics ( COLING / ACL ) , Sydney , Australia , pp .257 - 264 .[ pdf ] .Hall , J. , J. Nivre and J. Nilsson ( 2006 )", "label": "", "metadata": {}, "score": "63.605026"}
{"text": "Creates a configuration and projectivizes input data without inducing a parsing model .Get configuration information .Sometimes it is useful to get information about a configuration , for instance , to know which settings have been used when creating the configuration .", "label": "", "metadata": {}, "score": "63.83968"}
{"text": "Creates a configuration and projectivizes input data without inducing a parsing model .Get configuration information .Sometimes it is useful to get information about a configuration , for instance , to know which settings have been used when creating the configuration .", "label": "", "metadata": {}, "score": "63.83968"}
{"text": "FEATURE MODEL .Outputs the content of the feature specification file .INTERFACE .Information about the interface to the learner , in this case LIBSVM .SETTINGS .All settings of specific learner options , in this case LIBSVM .Unpack a configuration .", "label": "", "metadata": {}, "score": "64.02385"}
{"text": "An Improved Oracle for Dependency Parsing with Online Reordering .In Proceedings of the 11th International Conference on Parsing Technologies ( IWPT ) , 73 - 76 .Documentation .Resources .Contact .MaltParser 0.4 in the CoNLL 2007 Shared Task .", "label": "", "metadata": {}, "score": "64.21689"}
{"text": "( 2006 ) .More information is available at : Tools . by Ryan Mcdonald , Fernando Pereira , Kiril Ribarov , Jan Haji\u010d - In Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural Language Processing , 2005 . \" ...", "label": "", "metadata": {}, "score": "64.31908"}
{"text": "Mouton de Gruyter , 225 - 241 .Nivre , J. ( 2010 ) Statistical Parsing .Handbook of Natural Language Processing .Second Edition .CRC Press , Taylor and Francis Group , 237 - 266 .Merlo , P. , Bunt , H. and Nivre , J. ( 2010 ) Current Trends in Parsing Technology .", "label": "", "metadata": {}, "score": "64.536865"}
{"text": "More information is available at : .MaltParser 0.4 in the CoNLL - X Shared Task .In this system , MaltParser was combined with pseudo - projective parsing , which requires preprocessing of training data and post - processing of parser output ( Nivre and Nilsson 2005 ) .", "label": "", "metadata": {}, "score": "64.64226"}
{"text": "Corazza , A. , Lavelli , A. , Satta , G. , Zanoli , R. : Analyzing an Italian treebank with state - of - the - art statistical parsers .In : Proc . of the Third Workshop on Treebanks and Linguistic Theories ( TLT ) , pp .", "label": "", "metadata": {}, "score": "65.19484"}
{"text": "MaltParser 1.1 and later versions can be turned into a phrase structure parser that recovers both continuous and discontinuous phrases with both phrase labels and grammatical functions .Each edge label in the dependency graph is a quadruple consisting of four sublabels ( DEPREL , HEADREL , PHRASE , ATTACH ) .", "label": "", "metadata": {}, "score": "65.267815"}
{"text": "MaltParser can be characterized as a data - driven parser - generator .While a traditional parser - generator constructs a parser given a grammar , a data - driven parser - generator constructs a parser given a treebank .MaltParser is an implementation of inductive dependency parsing , where the syntactic analysis of a sentence amounts to the derivation of a dependency structure , and where inductive machine learning is used to guide the parser at nondeterministic choice points ( Nivre , 2006 ) .", "label": "", "metadata": {}, "score": "65.3461"}
{"text": "Festschrift on the 60th Birthday .CSLI Publications , 111 - 120 .Nivre , J. ( 2006 )Two Strategies for Text Parsing .In Suominen , M. , Arppe , A. , Airola , A. , Hein\u00e4m\u00e4ki , O. , Miestamo , M. , M\u00e4\u00e4tt\u00e4 , U. , Niemi , J. , Pitk\u00e4nen , K. K. and Sinnem\u00e4ki , K. ( eds . )", "label": "", "metadata": {}, "score": "65.36229"}
{"text": "Even with second - order features or latent variables , which would make exact parsing considerably slower or NP - hard , BP needs only O(n3 ) time with a small constant factor .Furthermore , such features significantly improve parse accuracy over exact first - order methods .", "label": "", "metadata": {}, "score": "65.38045"}
{"text": "Even with second - order features or latent variables , which would make exact parsing considerably slower or NP - hard , BP needs only O(n3 ) time with a small constant factor .Furthermore , such features significantly improve parse accuracy over exact first - order methods .", "label": "", "metadata": {}, "score": "65.38045"}
{"text": "In : Proc . of the ACL 2005 , pp .99 - 106 ( 2005 ) .Boz\u015fahin , C. : Gapping and word order in Turkish .In : Proc . of the 10th International Conference on Turkish Linguistics ( 2000 ) .", "label": "", "metadata": {}, "score": "65.441025"}
{"text": "( See Nivre & Nilsson ( 2005 ) for more details concerning the encoding schemes . )A dependency file can be projectivized using the head encoding by typing : .There is one additional option for the projectivization called covered_root , which is mainly used for handling dangling punctuation .", "label": "", "metadata": {}, "score": "65.50163"}
{"text": "( See Nivre & Nilsson ( 2005 ) for more details concerning the encoding schemes . )A dependency file can be projectivized using the head encoding by typing : .There is one additional option for the projectivization called covered_root , which is mainly used for handling dangling punctuation .", "label": "", "metadata": {}, "score": "65.50163"}
{"text": "Information about different options can be found on the LIBLINEAR web site .Prediction strategy .From version 1.1 of MaltParser it is possible to choose different prediction strategies .Previously , MaltParser ( version 1.0.4 and earlier ) combined the prediction of the transition with the prediction of the arc label into one complex prediction with one feature model .", "label": "", "metadata": {}, "score": "65.503395"}
{"text": "Journal of Machine Learning Research 9 , 1871 - 1874 .Hall , J. ( 2008 )Transition - Based Natural Language Parsing with Dependency and Constituency Representations .Acta Wexionensia , No 152/2008 , Computer Science , V\u00e4xj\u00f6 University ( PhD Thesis ) .", "label": "", "metadata": {}, "score": "65.55621"}
{"text": "Hall , J. and J. Nivre ( 2008 )A Dependency - Driven Parser for German Dependency and Constituency Representations .In Proceedings of the ACL Workshop on Parsing German ( PaGe08 ) , June 20 , 2008 , Columbus , Ohio , US , pp .", "label": "", "metadata": {}, "score": "65.57863"}
{"text": "MaltParser can also be used to deprojectivize a projective file containing pseudo - projective encoding , with or without involving parsing , where it is assumed that the configuration pproj contains the same encoding scheme as during projectivization .It could look like this : .", "label": "", "metadata": {}, "score": "65.72121"}
{"text": "With MaltParser 1.1 and later versions it is possible to divide the prediction of the parser action into several predictions .For example with the Nivre arc - eager algorithm , it is possible to first predict the transition ; if the transition is SHIFT or REDUCE the nondeterminism is resolved , but if the predicted transition is RIGHT - ARC or LEFT - ARC the parser continues to predict the arc label .", "label": "", "metadata": {}, "score": "65.76402"}
{"text": "INPUT .Input data in both learning and parsing mode , such as part - of - speech tags or word forms .DEPENDENCY_EDGE_LABEL .Column containing a dependency label .If the parser is to learn to produce labeled dependency graphs , these must be present in learning mode .", "label": "", "metadata": {}, "score": "65.84126"}
{"text": "Propagation .Since MaltParser 1.4 it is possible to propagate column values towards the root of the dependency graph when a labeled transition is performed .The propagation is managed by a propagation specification file formatted in XML with the following attributes : .", "label": "", "metadata": {}, "score": "65.887634"}
{"text": "Propagation .Since MaltParser 1.4 it is possible to propagate column values towards the root of the dependency graph when a labeled transition is performed .The propagation is managed by a propagation specification file formatted in XML with the following attributes : .", "label": "", "metadata": {}, "score": "65.887634"}
{"text": "The reduce on switch option can be used to change the specific behaviour of Switch transitions , while the planar root handling option can be employed to change the algorithm 's behavior with respect to root tokens .The 2-Planar algorithm uses three data structures : .", "label": "", "metadata": {}, "score": "65.899155"}
{"text": "The reduce on switch option can be used to change the specific behaviour of Switch transitions , while the planar root handling option can be employed to change the algorithm 's behavior with respect to root tokens .The 2-Planar algorithm uses three data structures : .", "label": "", "metadata": {}, "score": "65.899155"}
{"text": "The concurrent interface uses a more \" light - weighted \" parser and hopefully supports almost all features .One know exception is feature propagation is not supported in the new \" light - weighted \" parser .To compile the examples in srcex / org / maltparser / examples .", "label": "", "metadata": {}, "score": "66.18924"}
{"text": "A Dependency - Driven Parser for German Dependency and Constituency Representations .In Proceedings of the ACL Workshop on Parsing German ( PaGe08 ) , June 20 , 2008 , Columbus , Ohio , US , pp .x - x .", "label": "", "metadata": {}, "score": "66.20001"}
{"text": "A Dependency - Driven Parser for German Dependency and Constituency Representations .In Proceedings of the ACL Workshop on Parsing German ( PaGe08 ) , June 20 , 2008 , Columbus , Ohio , US , pp .x - x .", "label": "", "metadata": {}, "score": "66.20001"}
{"text": "E ... \" .We formulate dependency parsing as a graphical model with the novel ingredient of global constraints .We show how to apply loopy belief propagation ( BP ) , a simple and effective tool for approximate learning and inference .", "label": "", "metadata": {}, "score": "66.23139"}
{"text": "MaltParser uses history - based feature models for predicting the next action in the deterministic derivation of a dependency structure , which means that it uses features of the partially built dependency structure together with features of the ( tagged ) input string .", "label": "", "metadata": {}, "score": "66.28282"}
{"text": "MaltParser uses history - based feature models for predicting the next action in the deterministic derivation of a dependency structure , which means that it uses features of the partially built dependency structure together with features of the ( tagged ) input string .", "label": "", "metadata": {}, "score": "66.28282"}
{"text": "( 2006 )Proceedings of the Fifth Workshop on Treebanks and Linguistic Theories ( TLT 2006 ) , December , 1 - 2 , 2006 , Prague , Czech Republic .Nivre , J. Kaalep , H.-J. , Muischnek , K. and Koit , M. ( eds . )", "label": "", "metadata": {}, "score": "66.39961"}
{"text": "Same as DEPENDENCY_EDGE_LABEL , used by MaltParser version 1.0 - 1.1 .PHRASE_STRUCTURE_EDGE_LABEL .Denote that the column contain a phrase structure edge label .PHRASE_STRUCTURE_NODE_LABEL .Denote that the column contain a phrase category label .SECONDARY_EDGE_LABEL .Denote that the column contain a secondary edge label .", "label": "", "metadata": {}, "score": "66.40814"}
{"text": "The prediction strategy -gdsT.TRANS;A.DEPREL , A.HEADREL , A.PHRASE , A.ATTACH tells the parser to first predict the transition T.TRANS and if it is a left or right arc transition it continues to predict the sublabels A.DEPREL , A.HEADREL , A.PHRASE and A.ATTACH in that order .", "label": "", "metadata": {}, "score": "66.688614"}
{"text": "Returns the ancestor of the graph node if defined ; otherwise , a null - value .panc .Returns the proper ancestor of the graph node if defined ; otherwise , a null - value .ldesc .Returns the leftmost descendant of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "66.92351"}
{"text": "Returns the ancestor of the graph node if defined ; otherwise , a null - value .panc .Returns the proper ancestor of the graph node if defined ; otherwise , a null - value .ldesc .Returns the leftmost descendant of the graph node if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "66.92351"}
{"text": "IE systems can ... \" .An important approach to text mining involves the use of natural - language information extraction .Information extraction ( IE ) distills structured data or knowledge from unstructured text by identifying references to named entities as well as stated relationships between such entities .", "label": "", "metadata": {}, "score": "66.941025"}
{"text": "In Proceedings of the fifth international conference on Language Resources and Evaluation ( LREC2006 ) , May 24 - 26 , 2006 , Genoa , Italy , pp .2216 - 2219 [ pdf ] .Nivre , J. ( 2007 ) .", "label": "", "metadata": {}, "score": "66.94727"}
{"text": "We test the efficacy of this method in the context of Chinese word segmentation and part - of - speech tagging , where no segmentation and POS tagging standards are widely accepted due to the lack of morphology in Chinese . ... hen it is input into the target classifier with this classification result as additional information to get the final result . by Andr\u00e9 F. T. Martins , Noah A. Smith , Pedro M. Q. Aguiar , M\u00e1rio A. T. Figueiredo , 2011 . \" ...", "label": "", "metadata": {}, "score": "67.08037"}
{"text": "Nivre , J. ( 2004 ) Nordiskt tr\u00e4dbanksn\u00e4tverk .In Holmboe , H. ( ed . )Nordisk sprogteknologi .Museum Tusculanums Forlag , 199 - 206 .Nivre , J. ( 2005 ) Nordic Treebank Network : Interim Report .In Holmboe , H. ( ed . )", "label": "", "metadata": {}, "score": "67.10535"}
{"text": "Such features can help accuracy - as we show .Hence we seek approximations .We will show how BP 's \" message - passing \" discipline offers a principled way for higher - order features to incrementally adjust the numerical edge weights that are fed to ... . by Terry Koo , Alexander M. Rush , Michael Collins , Tommi Jaakkola , David Sontag - In Proc . of EMNLP , 2010 . \" ...", "label": "", "metadata": {}, "score": "67.2268"}
{"text": "Unfortunately , this procedure suffers from severe numerical problems in the low - temperature setting , which prevents its use in DD - Acc where the temperature must be set as O(\u025b/(n log n ) ) .Finally , n .. Start using MaltParser .", "label": "", "metadata": {}, "score": "67.26719"}
{"text": "MaltParser : A language - independent system for data - driven dependency parsing , developed in cooperation with Johan Hall and Jens Nilsson , with auxiliary tools for evaluation ( MaltEval ) and treebank conversion ( MaltConverter , Penn2Malt , Proj ) .", "label": "", "metadata": {}, "score": "67.44572"}
{"text": "In Human Language Technologies 2007 : The Conference of the North American Chapter of the Association for Computational Linguistics ; Proceedings of the Main Conference , pp .396 - 403 [ pdf ] .Nivre , J. , J. Hall , J. Nilsson , A. Chanev , G. Eryigit , S. K\u00fcbler , S. Marinov and E. Marsi ( 2007 ) .", "label": "", "metadata": {}, "score": "67.56141"}
{"text": "Lecture Notes in Computer Science , Volume 7053 , Springer , 20 - 32 .Nivre , J. ( 2012 )Storage in Deterministic Dependency Parsing .In Borin , L. and Larsson , S. ( eds . )From Quantification to Conversation .", "label": "", "metadata": {}, "score": "67.58806"}
{"text": "Hall , J. , Nilsson , J. and Nivre , J. ( 2009 ) Single Malt or Blended ?A Study in Multilingual Parser Optimization .In Bunt , H. , Merlo , P. and Nivre , J. ( eds . )", "label": "", "metadata": {}, "score": "67.84912"}
{"text": "For more information about how to use MaltParserService , please see the examples provided in the directory examples / apiexamples / srcex .References .Chang , C.-C. and Lin , C.-J. ( 2001 )LIBSVM : a library for support vector machines .", "label": "", "metadata": {}, "score": "67.918365"}
{"text": "Stack .The Projective ( -a stackproj )Stack algorithm uses essentially the same transitions as the arc - standard version of Nivre 's algorithm and is limited to projective dependency trees .The Eager ( -a stackeager ) and Lazy ( -a stacklazy ) Stack algorithms in addition make use of a swap transition , which makes it possible to derive arbitrary non - projective dependency trees .", "label": "", "metadata": {}, "score": "67.95322"}
{"text": "In particular , we propose a new convolution kernel , namely the Partial Tree ( PT ) kernel , to fully exploit dependency trees .We also propose an efficient algori ... \" .Abstract .In this paper , we provide a study on the use of tree kernels to encode syntactic parsing information in natural language learning .", "label": "", "metadata": {}, "score": "68.04784"}
{"text": "LIBSVM .LIBSVM ( Chang and Lin 2001 ) is a machine learning package for support vector machines with different kernels .Information about different options can be found on the LIBSVM web site .LIBLINEAR .LIBLINEAR ( Fan et al .", "label": "", "metadata": {}, "score": "68.198296"}
{"text": "New Trends in Parsing Technology : Dependency Parsing , Domain Adaptation and Deep Parsing .Springer , 1 - 17 .Hall , J. , Nilsson , J. and Nivre , J. ( 2010 ) Single Malt or Blended ?A Study in Multilingual Parser Optimization .", "label": "", "metadata": {}, "score": "68.2485"}
{"text": "Pedagogical Texts and Software .One textbook on formal syntax ( with Bj\u00f6rn Beskow and Torbj\u00f6rn Lager ) , one textbook on dependency parsing ( with Sandra K\u00fcbler and Ryan McDonald ) , and several pedagogical texts for courses in general linguistics and computational linguistics .", "label": "", "metadata": {}, "score": "68.33904"}
{"text": "A special supplement to SKY Journal of Linguistics 19 , 440 - 448 .Allwood , J. , Ahls\u00e9n , E. and Nivre , J. ( 2006 ) Feedback in Different Social Activities .In Toivanen , J. and Henrichsen , P. J. ( eds . )", "label": "", "metadata": {}, "score": "68.531815"}
{"text": "The file deprojectivized.conll will contain the deprojectivized data .Note that is is only the encoding schemes head , path and head+path that actively try to recover the non - projective arcs .Input and output format .The format and encoding of the input and output data is controlled by the format , reader , writer and charset options in the input and output option group .", "label": "", "metadata": {}, "score": "68.63736"}
{"text": "College Publications , London .Refereed Conference Papers .In Proceedings of the ESPRIT Conference 1991 .Nivre , J. ( 1991 ) Verb Second in Categorial Grammar .In Sigurdsson , H. A. ( ed . )Papers from the 12th Scandinavian Conference of Linguistics .", "label": "", "metadata": {}, "score": "68.64412"}
{"text": "Collins , M. : Head - Driven Statistical Models for Natural Language Parsing .PhD thesis , University of Pennsylvania ( 1999 ) .Collins , M. , Hajic , J. , Ramshaw , L. , Tillmann , C. : A statistical parser for Czech .", "label": "", "metadata": {}, "score": "68.96267"}
{"text": "We present an approach which solves the problem incrementally , thus we avoid creating intractable integer linear programs .This approach is applied to Dutch dependency parsing and we show how the addition of linguistically motivated constraints can yield a significant improvement over stateof - the - art . ... ges such as German and Czech we also encounter non - projective trees , in these cases the trees contain crossing dependencies .", "label": "", "metadata": {}, "score": "69.14194"}
{"text": "Note that is is only the encoding schemes head , path and head+path that actively try to recover the non - projective arcs .Input and output format .The format and encoding of the input and output data is controlled by the format , reader , writer and charset options in the input and output option group .", "label": "", "metadata": {}, "score": "69.300674"}
{"text": "Unpack a configuration .This command will create a new directory test containing the following files : .File .All distinct symbols in the training data , divided into different columns .For example , the column POSTAG in the CoNLL format has its own symbol table with all distinct values occurring in the training data .", "label": "", "metadata": {}, "score": "69.32061"}
{"text": "Nivre .Nivre 's algorithm ( Nivre 2003 , Nivre 2004 ) is a linear - time algorithm limited to projective dependency structures .It can be run in arc - eager ( -a nivreeager ) or arc - standard ( -a nivrestandard ) mode .", "label": "", "metadata": {}, "score": "69.352135"}
{"text": "Nivre .Nivre 's algorithm ( Nivre 2003 , Nivre 2004 ) is a linear - time algorithm limited to projective dependency structures .It can be run in arc - eager ( -a nivreeager ) or arc - standard ( -a nivrestandard ) mode .", "label": "", "metadata": {}, "score": "69.352135"}
{"text": "By running experiments , which allows other programs to train a parser model or parse with a parser model .IO - handling is done by MaltParser .By first initializing a parser model and then calling the method parse ( ) for each sentence that should be parsed by MaltParser .", "label": "", "metadata": {}, "score": "69.38147"}
{"text": "Below you can see an example of a propagation specification file : .The top half specifies that POSTAG values should be copied to the CJ - POSTAG field of the head , whenever an arc with the label CJ ( for conjunct ) is created .", "label": "", "metadata": {}, "score": "69.563286"}
{"text": "Below you can see an example of a propagation specification file : .The top half specifies that POSTAG values should be copied to the CJ - POSTAG field of the head , whenever an arc with the label CJ ( for conjunct ) is created .", "label": "", "metadata": {}, "score": "69.563286"}
{"text": "Returns the predecessor of the graph node in the linear order of the input string if defined ; otherwise , a null - value . succ .Returns the successor of the graph node in the linear order of the input string if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "69.56923"}
{"text": "Returns the predecessor of the graph node in the linear order of the input string if defined ; otherwise , a null - value . succ .Returns the successor of the graph node in the linear order of the input string if defined ; otherwise , a null - value .", "label": "", "metadata": {}, "score": "69.56923"}
{"text": "In our method , a first - order parser derives such input features from its own previous ... . by Terry Koo , Alexander M. Rush , Michael Collins , Tommi Jaakkola , David Sontag - In Proc . of EMNLP , 2010 . \" ...", "label": "", "metadata": {}, "score": "69.79887"}
{"text": "These include beam search ... . by Zhenghua Li , Ting Liu , Wanxiang Che - In Proceedings of the 50th ACL , pages 675 - 684 , Jeju Island , Korea , 2012 . \" ...We present a simple and effective framework for exploiting multiple monolingual treebanks with different annotation guidelines for pars - ing .", "label": "", "metadata": {}, "score": "69.80072"}
{"text": "Flow chart .MaltParser have seven pre - defined flow charts that describe what tasks MaltPasrer should perform .These seven flow charts are : .Name .Description . learn .Creates a Single Malt configuration and induces a parsing model from input data . parse .", "label": "", "metadata": {}, "score": "69.8333"}
{"text": "It is possible to define your own feature model specification using the description above and using the --guide - features option to specify the feature model specification file .LIBLINEAR .Prediction strategy .From version 1.1 of MaltParser it is possible to choose different prediction strategies .", "label": "", "metadata": {}, "score": "69.97543"}
{"text": "MaltParser have seven pre - defined flow charts that describe what tasks MaltPasrer should perform .These seven flow charts are : .Name .Description . learn .Creates a Single Malt configuration and induces a parsing model from input data . parse .", "label": "", "metadata": {}, "score": "70.04204"}
{"text": "There are two ways to call the MaltParserService : .By running experiments , which allows other programs to train a parser model or parse with a parser model .IO - handling is done by MaltParser .By first initializing a parser model and then calling the method parse ( ) for each sentence that should be parsed by MaltParser .", "label": "", "metadata": {}, "score": "70.195724"}
{"text": "As a parsing algorithm , BP is both asymptotically and empirically efficient .E ... \" .We formulate dependency parsing as a graphical model with the novel ingredient of global constraints .We show how to apply loopy belief propagation ( BP ) , a simple and effective tool for approximate learning and inference .", "label": "", "metadata": {}, "score": "70.2216"}
{"text": "Deterministic Dependency Parsing of English Text .In Proceedings of COLING 2004 , Geneva , Switzerland , August 23 - 27 , 2004 .[ pdf ] .Nivre , J. and J. Nilsson ( 2005 )Pseudo - Projective Dependency Parsing .", "label": "", "metadata": {}, "score": "70.25523"}
{"text": "The dual decomposition algorithms are simple and efficient , relying on standard dynamic programming and minimum spanning tree algorithms .They provably solve an LP relaxation of the non - projective parsing problem .Empirically the LP relaxation is very often tight : for many languages , exact solutions are achieved on over 98 % of test sentences .", "label": "", "metadata": {}, "score": "70.28685"}
{"text": "The dual decomposition algorithms are simple and efficient , relying on standard dynamic programming and minimum spanning tree algorithms .They provably solve an LP relaxation of the non - projective parsing problem .Empirically the LP relaxation is very often tight : for many languages , exact solutions are achieved on over 98 % of test sentences .", "label": "", "metadata": {}, "score": "70.28685"}
{"text": "A list Lookahead , which is a suffix of the buffer containing all nodes that have not been on Stack , where Lookahead[i ] is the i+1th token from the start of Lookahead .Note that it is only the swap transition that can move nodes from Stack back to the buffer , which means that for the Projective Stack algorithm Input will always be empty and Lookahead will always contain all the nodes in the buffer .", "label": "", "metadata": {}, "score": "70.37859"}
{"text": "A list Lookahead , which is a suffix of the buffer containing all nodes that have not been on Stack , where Lookahead[i ] is the i+1th token from the start of Lookahead .Note that it is only the swap transition that can move nodes from Stack back to the buffer , which means that for the Projective Stack algorithm Input will always be empty and Lookahead will always contain all the nodes in the buffer .", "label": "", "metadata": {}, "score": "70.37859"}
{"text": "If you want to create a configuration that has the same settings as the option file with command - line options , you need to type : .To parse using one of the three configurations you simply type : .Configuration .", "label": "", "metadata": {}, "score": "70.4688"}
{"text": "It is possible to define your own input / output format and then supply the data format specification file with the format option .Currently , MaltParser only supports tab - separated data files , which means that a sentence in a data file in the CoNLL data format could look like this : .", "label": "", "metadata": {}, "score": "70.49583"}
{"text": "Example : .This feature function returns the number of words occurring between the token on top of the stack and the first token in the input buffer , with discrete categories 0 , 1 , 2 - 4 and 5- .", "label": "", "metadata": {}, "score": "70.49945"}
{"text": "Example : .This feature function returns the number of words occurring between the token on top of the stack and the first token in the input buffer , with discrete categories 0 , 1 , 2 - 4 and 5- .", "label": "", "metadata": {}, "score": "70.49945"}
{"text": "FOR .A subset of values that can be copied ( other values will not be copied ) .If empty then all values will be copied .OVER .A subset of dependency labels that allow propagation when a labeled transition is performed .", "label": "", "metadata": {}, "score": "70.76659"}
{"text": "FOR .A subset of values that can be copied ( other values will not be copied ) .If empty then all values will be copied .OVER .A subset of dependency labels that allow propagation when a labeled transition is performed .", "label": "", "metadata": {}, "score": "70.76659"}
{"text": "Maho , J. and Nivre , J. ( 1995 )V\u00e4rldens spr\u00e5k .I Allwood , J. and Ahls\u00e9n , E. ( eds ) Om spr\u00e5k och kommunikation .Lund : Studentlitteratur .Nivre , J. ( 1995 ) Communicative Action and Feedback .", "label": "", "metadata": {}, "score": "71.01579"}
{"text": "The previous versions 0.1 - 0.4 of MaltParser were implemented in C. The Java implementation ( version 1.0.0 and later releases ) replaces the C implementation ( version 0 .x ) and MaltParser 0.x will not be supported and updated any more .", "label": "", "metadata": {}, "score": "71.04333"}
{"text": "V\u00e4xj\u00f6 , 11 - 12 November 1999 , 242 - 254 .Nivre , J. ( 2001 )A Scandinavian Perspective on Swedish Indefinite Determiners .In Proceedings of the 18thScandinavian Conference of Linguistics , Volume 2 , Lund University , 81 - 92 .", "label": "", "metadata": {}, "score": "71.09428"}
{"text": "( If the address function is undefined , a null - value is returned . )Example : .OutputColumn(DEPREL , Stack[0 ] ) .InputArc .Takes three arguments , a column name and two address functions , and returns LEFT , RIGHT or NULL depending on whether the column value defines a left - pointing , right - pointing or no arc between the two nodes identified by the address functions .", "label": "", "metadata": {}, "score": "71.27918"}
{"text": "( If the address function is undefined , a null - value is returned . )Example : .OutputColumn(DEPREL , Stack[0 ] ) .InputArc .Takes three arguments , a column name and two address functions , and returns LEFT , RIGHT or NULL depending on whether the column value defines a left - pointing , right - pointing or no arc between the two nodes identified by the address functions .", "label": "", "metadata": {}, "score": "71.27918"}
{"text": "IGNORE .The column value will be ignored and therefore will not be present in the output file . type .Defines the data type of the column and/or its treatment during learning and parsing : .STRING .The column value will be used as a string value in the feature model .", "label": "", "metadata": {}, "score": "71.30701"}
{"text": "Part I : World and Application Model .ESPRIT P5254 PLUS .Internal Report .Allwood , J. and Nivre , J. ( 1994 ) Formalisering .In Allwood and Boyd ( eds ) Lingvistisk metod .G\u00f6teborg University : Department of Linguistics .", "label": "", "metadata": {}, "score": "71.480255"}
{"text": "Swedish - Turkish Parallel Treebank .In Proceedings of the Sixth International Conference on Language Resources and Evaluation ( LREC ) , 470 - 473 .In Proceedings of the Seventh International Conference on Language Resources and Evaluation ( LREC ) , 1794 - 1801 .", "label": "", "metadata": {}, "score": "71.56793"}
{"text": "Maven repository .Since version 1.7 , MaltParser is also available via the official Maven repository . org.maltparser maltparser 1.8.1 .MaltParser optimization .MaltParser is a fairly complex system with many parameters that need to be optimized .Simply using the system out of the box with default settings is therefore likely to result in suboptimal performance .", "label": "", "metadata": {}, "score": "71.57591"}
{"text": "A Systematic Comparison between Inversion Transduction Grammar and Linear Transduction Grammar for Word Alignment .Proceedings of the 4th Workshop on Syntax and Structure in Statistical Translation , 10 - 18 .Nivre , J. ( 2011 ) Bare - Bones Dependency Parsing - A Case for Occam 's Razor ?", "label": "", "metadata": {}, "score": "71.72388"}
{"text": "Just like Nivre 's algorithm , the Planar algorithm uses two data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .", "label": "", "metadata": {}, "score": "71.767105"}
{"text": "Just like Nivre 's algorithm , the Planar algorithm uses two data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .", "label": "", "metadata": {}, "score": "71.767105"}
{"text": "INPUT .Input data in both learning and parsing mode , such as part - of - speech tags or word forms .DEPENDENCY_EDGE_LABEL .Denote that the column contain a dependency label .If the parser is to learn to produce labeled dependency graph , these must be present in learning mode .", "label": "", "metadata": {}, "score": "71.78122"}
{"text": "Abstract .Typological diversity among the natural languages of the world poses interesting challenges for the models and algorithms used in syntactic parsing .In this paper , we apply a data - driven dependency parser to Turkish , a language characterized by rich morphology and flexible constituent order , and study the effect of employing varying amounts of morpholexical information on parsing performance .", "label": "", "metadata": {}, "score": "71.85256"}
{"text": "Version of MaltParser and when it was built .SETTINGS .All option settings divided into several categories .DEPENDENCIES .In some cases the parser self - corrects when an illegal combination of options is specified or some option is missing .", "label": "", "metadata": {}, "score": "71.89742"}
{"text": "Version of MaltParser and when it was built .SETTINGS .All option settings divided into several categories .DEPENDENCIES .In some cases the parser self - corrects when an illegal combination of options is specified or some option is missing .", "label": "", "metadata": {}, "score": "71.89742"}
{"text": "The example data sets are formatted according to the CoNLL data format .Note that these data sets are very small and that you need more training data to create a useful parsing model .To train a default parsing model with MaltParser type the following at the command line prompt : .", "label": "", "metadata": {}, "score": "72.13193"}
{"text": "The example data sets are formatted according to the CoNLL data format .Note that these data sets are very small and that you need more training data to create a useful parsing model .To train a default parsing model with MaltParser type the following at the command line prompt : .", "label": "", "metadata": {}, "score": "72.13193"}
{"text": "Natural Language Engineering , 13(2 ) , 95 - 135 .[ pdf ] .Hall , J. , J. Nivre and J. Nilsson .( 2007 )A hybrid constituency - dependency parser for Swedish .In Proceedings of NODALIDA-2007 , Tartu , Estonia , pp .", "label": "", "metadata": {}, "score": "72.54663"}
{"text": "Finally , the character encoding can be specified with the charset option and this option is used by MaltParser to define the java class Charset .Parsing Algorithm .Any deterministic parsing algorithm compatible with the MaltParser architecture can be implemented in the MaltParser package .", "label": "", "metadata": {}, "score": "72.64757"}
{"text": "The value returned is ( a category corresponding to ) the greatest integer in the normalization string that is smaller than or equal to the exact number .Example : .This feature function returns the number of left dependents of the token on top of the stack , with discrete categories 0 , 1 , 2 - 4 and 5- .", "label": "", "metadata": {}, "score": "72.73491"}
{"text": "The value returned is ( a category corresponding to ) the greatest integer in the normalization string that is smaller than or equal to the exact number .Example : .This feature function returns the number of left dependents of the token on top of the stack , with discrete categories 0 , 1 , 2 - 4 and 5- .", "label": "", "metadata": {}, "score": "72.73491"}
{"text": "It continues with information about the learning models that are created , in this case only one LIBSVM model .It then saves the symbol table and all options ( which can not be changed later during parsing ) and stores everything in a configuration file named test.mco .", "label": "", "metadata": {}, "score": "73.02197"}
{"text": "It continues with information about the learning models that are created , in this case only one LIBSVM model .It then saves the symbol table and all options ( which can not be changed later during parsing ) and stores everything in a configuration file named test.mco .", "label": "", "metadata": {}, "score": "73.02197"}
{"text": "The option --singlemalt - use_partial_tree need to be set to true by using the command line flag -up true .The two data columns should look like these : .Note : To benefit from the partial dependency structure , the parser model should also be trained on partial trees .", "label": "", "metadata": {}, "score": "73.114716"}
{"text": "The option --singlemalt - use_partial_tree need to be set to true by using the command line flag -up true .The two data columns should look like these : .Note : To benefit from the partial dependency structure , the parser model should also be trained on partial trees .", "label": "", "metadata": {}, "score": "73.114716"}
{"text": "In addition , lexicalization and the use of rich morphological features are found to have a positive effect .By combining all these techniques , we obtain the highest reported accuracy for parsing the Turkish Treebank .Other actions .Share .", "label": "", "metadata": {}, "score": "73.26564"}
{"text": "In Moen , I. , Gram Simonsen , H. and L\u00f8drup , H. ( eds )Papers from the XVth Scandinavian Conference of Linguistics , Oslo , January 13 - 15 , 1995 .University of Oslo : Department of Linguistics .", "label": "", "metadata": {}, "score": "73.27325"}
{"text": "It will perform a left - to - right search to find the leftmost lexical child .If no lexical child can be found , the head - child of the phrase will be the leftmost phrase child and the lexical head will be the lexical child of the head child recursively .", "label": "", "metadata": {}, "score": "73.37111"}
{"text": "Resources .Contact .Introduction .MaltParser is a system for data - driven dependency parsing , which can be used to induce a parsing model from treebank data and to parse new data using an induced model .MaltParser is developed by Johan Hall , Jens Nilsson and Joakim Nivre at V\u00e4xj\u00f6 University and Uppsala University , Sweden .", "label": "", "metadata": {}, "score": "73.919685"}
{"text": "The parsing model gets its name from the configuration name , which is specified by the option flag -c without the file suffix .mco .The configuration name is a name of your own choice .The option flag -i tells the parser where to find the input data .", "label": "", "metadata": {}, "score": "73.920456"}
{"text": "The parsing model gets its name from the configuration name , which is specified by the option flag -c without the file suffix .mco .The configuration name is a name of your own choice .The option flag -i tells the parser where to find the input data .", "label": "", "metadata": {}, "score": "73.920456"}
{"text": "To differentiate the feature model when using sequential prediction you can specify two submodels for T.TRANS and A.DEPREL .Here is a truncated example : .When using branching prediction it is possible to use three submodels ( T.TRANS , RA.A.DEPREL and LA.A.DEPREL ) , where RA denotes the right arc model and LA the left arc model : .", "label": "", "metadata": {}, "score": "74.175995"}
{"text": "To differentiate the feature model when using sequential prediction you can specify two submodels for T.TRANS and A.DEPREL .Here is a truncated example : .When using branching prediction it is possible to use three submodels ( T.TRANS , RA.A.DEPREL and LA.A.DEPREL ) , where RA denotes the right arc model and LA the left arc model : .", "label": "", "metadata": {}, "score": "74.175995"}
{"text": "The head column defines the unlabeled structure of a dependency graph and is also output data of the parser in parsing mode . type .Defines the data type of the column and/or its treatment during learning and parsing : .STRING .", "label": "", "metadata": {}, "score": "74.33361"}
{"text": "The --graph - head_rules option ( -ghr flag ) specifies the URL or the path to a file that contains a list of head rules .MaltParser API .Other programs can invoke Maltparser in various ways , but the easiest way is to use the org.maltparser.", "label": "", "metadata": {}, "score": "74.39708"}
{"text": "We discuss methods and implemented systems for both of these approaches and summarize results on mining real text corpora of biomedical abstracts , job announcements , and product descriptions .We also discuss challenges that arise when employing current information extraction technology to discover knowledge in text . . ..", "label": "", "metadata": {}, "score": "74.87456"}
{"text": "Element .Description . experiment .All other elements must be enclosed by an experiment element . optioncontainer .It is possible to have one or more option containers , but MaltParser 1.4.1 only uses the first option container .Later releases may make use of multiple option containers , for instance , to build ensemble systems . optiongroup .", "label": "", "metadata": {}, "score": "74.975586"}
{"text": "On Statistical Methods in Natural Language Processing .In Bubenko , Janis jr and Wangler , Benkt ( eds ) Promote IT .Second Conference for the Promotion of Research in IT at New Universities and University Colleges in Sweden , University of Sk\u00f6vde , 684 - 694 .", "label": "", "metadata": {}, "score": "74.98651"}
{"text": "It is possible to have one or more option containers , but MaltParser 1.8.1 only uses the first option container .Later releases may make use of multiple option containers , for instance , to build ensemble systems . optiongroup .There can be one or more option group elements within an option container .", "label": "", "metadata": {}, "score": "75.10672"}
{"text": "A Festschrift to Jens Allwood .G\u00f6teborg University : Department of Linguistics , 203 - 211 .Nivre , J. , Megyesi , Gustafson - Capkov\u00e1 , S. , Salomonsson , F. and Dahlqvist , B. ( 2008 )Cultivating a Swedish Treebank .", "label": "", "metadata": {}, "score": "75.18211"}
{"text": "The file contains several head - finding rules ( one per row ) .The third column is a priority list of children .For example the first row CAT : AA r r[LABEL : HD ] indicates that the parser should first perform a right - to - left search for an outgoing edge with a label HD if the parent nonterminal is labeled AA .", "label": "", "metadata": {}, "score": "75.20517"}
{"text": "To parse type the following : .Controlling MaltParser .MaltParser can be controlled by specifying values for a range of different options .The values for these option can be specified in different ways : .Method .Description .Example .", "label": "", "metadata": {}, "score": "75.382324"}
{"text": "To parse type the following : .Controlling MaltParser .MaltParser can be controlled by specifying values for a range of different options .The values for these option can be specified in different ways : .Method .Description .Example .", "label": "", "metadata": {}, "score": "75.382324"}
{"text": "The column elements have three attributes : .Attribute .Description . name .The column name .Note that the column name can be used by an option and within a feature model specification as an identifier of the column . category .", "label": "", "metadata": {}, "score": "75.40619"}
{"text": "The column elements have three attributes : .Attribute .Description . name .The column name .Note that the column name can be used by an option and within a feature model specification as an identifier of the column . category .", "label": "", "metadata": {}, "score": "75.40619"}
{"text": "Nordic Conference of Computational Linguistics ( NODALIDA ) , 6 - 11 .Foster , J. , Cetinoglu , O. , Wagner , J. , Le Roux , J. , Hogan , S. , Nivre , J. , Hogan , D. and van Genabith , J. ( 2011 ) # hardtoparse : POS Tagging and Parsing the Twitterverse .", "label": "", "metadata": {}, "score": "75.42513"}
{"text": "It is possible to define your own feature model specification using the description above and using the --guide - features option to specify the feature model specification file .Learner .MaltParser can be used with different learning algorithms to induce classifiers from training data .", "label": "", "metadata": {}, "score": "76.18246"}
{"text": "Takes three arguments , an address function , a relation name , and a normalization string , and returns the number of nodes having the specified relation to the node identified by the address function .Valid relation names are ldeps and rdeps and deps ( for left dependent , right dependent and dependent , respectively ) .", "label": "", "metadata": {}, "score": "76.52756"}
{"text": "During learning , the configuration is created and stored in a configuration file with the file suffix .mco .This configuration file can later be reused whenever the trained model is used to parse new data .Potentially there can be several types of configuration , but MaltParser 1.8.1 only knows one type : the Single Malt configuration ( singlemalt ) .", "label": "", "metadata": {}, "score": "77.121925"}
{"text": "The Stack algorithms are described in Nivre ( 2009 ) and Nivre , Kuhlmann and Hall ( 2009 ) .The Stack algorithms use three data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .", "label": "", "metadata": {}, "score": "77.32251"}
{"text": "The Stack algorithms are described in Nivre ( 2009 ) and Nivre , Kuhlmann and Hall ( 2009 ) .The Stack algorithms use three data structures : .A stack Stack of partially processed tokens , where Stack[i ] is the i+1th token from the top of the stack , with the top being Stack[0 ] .", "label": "", "metadata": {}, "score": "77.32251"}
{"text": "The second extension is to apply the approach to secondorder parsing models , such as those described in ( Carreras , 2007 ) , using a twostage semi - supervised learning approach .We demonstrate the effectiveness of our proposed methods on dependency parsing experiments using two widely used test collections : the Penn Treebank for English , and the Prague Dependency Treebank . \" ...", "label": "", "metadata": {}, "score": "77.69017"}
{"text": "Note that command line option settings override the settings in the option file if options are specified twice .Option file .An option file is useful when you have many options that differ from the default value , as is often the case when you are training a parsing model .", "label": "", "metadata": {}, "score": "78.10664"}
{"text": "Note that command line option settings override the settings in the option file if options are specified twice .Option file .An option file is useful when you have many options that differ from the default value , as is often the case when you are training a parsing model .", "label": "", "metadata": {}, "score": "78.10664"}
{"text": "Heidelberg : Springer , 231 - 240 .Nivre , J. ( 1996 )Virtuella \u00f6vers\u00e4ttare och arbetsl\u00f6sa surfare - om automatisk \u00f6vers\u00e4ttning av platsannonser p\u00e5 Internet .In Tyst , nu talar jag !Tradition , information och humanister .Humanistdag - boken Nr 9 .", "label": "", "metadata": {}, "score": "78.47215"}
{"text": "Publications of the Department of Finnish and General Linguistics of the University of Turku 60 , 320 - 331 .Nivre , J. ( 2000 ) Existential Indefinites in Spoken Swedish .In Byrman , G. , Lindquist , H. and Levin , M. ( eds ) Corpora in Research and Teaching .", "label": "", "metadata": {}, "score": "78.633484"}
{"text": "Takes three arguments , an address function , a relation name , and a normalization string , and returns the number of nodes having the specified relation to the node identified by the address function .Valid relation names are ldep , rdep and dep ( for left dependent , right dependent and dependent , respectively ) .", "label": "", "metadata": {}, "score": "78.67679"}
{"text": "Name .Description . FROM .The data column from which the values are copied .TO .The data column to which the values are copied .This data column should not exist in the data format and the values are interpreted as sets .", "label": "", "metadata": {}, "score": "78.802826"}
{"text": "Name .Description . FROM .The data column from which the values are copied .TO .The data column to which the values are copied .This data column should not exist in the data format and the values are interpreted as sets .", "label": "", "metadata": {}, "score": "78.802826"}
{"text": "Takes three arguments , two address functions and a normalization string , and returns the string distance ( number of intervening words ) between the words identified by the address functions .The list must start with 0 and be sorted in ascending order .", "label": "", "metadata": {}, "score": "78.87251"}
{"text": "Takes three arguments , two address functions and a normalization string , and returns the string distance ( number of intervening words ) between the words identified by the address functions .The list must start with 0 and be sorted in ascending order .", "label": "", "metadata": {}, "score": "78.87251"}
{"text": "Dependency Parsing of Turkish .Computational Linguistics 34(3 ) , 357 - 389 .Nivre , J. ( 2008 ) Algorithms for Deterministic Incremental Dependency Parsing .Computational Linguistics 34(4 ) , 513 - 553 .Hall , J. , Nilsson , J. and Nivre , J. ( 2010 ) Single Malt or Blended ?", "label": "", "metadata": {}, "score": "79.00547"}
{"text": "The information is grouped into different categories : .Category .Description .CONFIGURATION .The name and type of the configuration and the date when it was created .SYSTEM .Information about the system that was used when creating the configuration , such as processor , operating system and version of Java Runtime Environment ( JRE ) .", "label": "", "metadata": {}, "score": "79.14318"}
{"text": "Swedish Treebank : A Swedish treebank , based on material from Talbanken and the Stockholm - Ume\u00e5 Corpus .Research Projects .Participation in 18 externally funded research projects , ten as project leader .Current projects : .Parsing and Multi - Word Expressions ( PARSEME ) .", "label": "", "metadata": {}, "score": "79.16937"}
{"text": "A feature function takes at least one address function as input and returns a feature value defined in terms of the input arguments .There are seven feature functions available : .InputColumn .Takes two arguments , a column name and an address function , and returns the column value for the node identified by the address function .", "label": "", "metadata": {}, "score": "79.17287"}
{"text": "A feature function takes at least one address function as input and returns a feature value defined in terms of the input arguments .There are seven feature functions available : .InputColumn .Takes two arguments , a column name and an address function , and returns the column value for the node identified by the address function .", "label": "", "metadata": {}, "score": "79.17287"}
{"text": "G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1991 ) Situationsteori och situationssemantik .Gothenburg University Linguistics ( GULING ) 21 .G\u00f6teborg University : Department of Linguistics , 1991 .Bunt , H. , Godin , C. , Jokinen , K. , Kraaij , W. , Meyer , R. , Nivre , J. and Pernel , D. ( 1992 )", "label": "", "metadata": {}, "score": "79.20163"}
{"text": "Gothenburg Papers in Theoretical Linguistics S9 .G\u00f6teborg University : Department of Linguistics .( BA ) .Nivre , J. ( 1992 )Situations , Meaning and Communication : A Situation Theoretic Approach to Meaning in Language and Communication .Gothenburg Monographs in Linguistics 11 .", "label": "", "metadata": {}, "score": "79.380974"}
{"text": "Type .Description .Address function .There are two types of address functions : parsing algorithm specific functions and dependency graph functions .The parsing algorithm specific functions have the form Data - structure[i ] , where Data - structure is a data structure used by a specific parsing algorithm and i is an offset from the start position in this data structure .", "label": "", "metadata": {}, "score": "79.43727"}
{"text": "Type .Description .Address function .There are two types of address functions : parsing algorithm specific functions and dependency graph functions .The parsing algorithm specific functions have the form Data - structure[i ] , where Data - structure is a data structure used by a specific parsing algorithm and i is an offset from the start position in this data structure .", "label": "", "metadata": {}, "score": "79.43727"}
{"text": "Here you can see the basic usage and options .To get all available options : .Train a parsing model .Now we are ready to train our first parsing model .In the directory examples / data there are two data files talbanken05_train . conll and talbanken05_test .", "label": "", "metadata": {}, "score": "79.56313"}
{"text": "Here you can see the basic usage and options .To get all available options : .Train a parsing model .Now we are ready to train our first parsing model .In the directory examples / data there are two data files talbanken05_train . conll and talbanken05_test .", "label": "", "metadata": {}, "score": "79.56313"}
{"text": "To parse type the following : .The input file must contain four columns : WORD , LEMMA , POS , MORPH .A test file can look like this : . ''Head - finding rules .It is possible to define your own head - finding rules in a file .", "label": "", "metadata": {}, "score": "79.660446"}
{"text": "Is a shorter version of Command - line option group and option name and can only be used when the option name is unambiguous .Option file .The option settings are specified in a option file , formatted in XML .", "label": "", "metadata": {}, "score": "79.77265"}
{"text": "Is a shorter version of Command - line option group and option name and can only be used when the option name is unambiguous .Option file .The option settings are specified in a option file , formatted in XML .", "label": "", "metadata": {}, "score": "79.77265"}
{"text": "/data / swemalt - mini / swedish - swap . xml .Note that swemalt - mini . swemalt - mini . java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.ParseSentence1 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.ParseSentence2 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.", "label": "", "metadata": {}, "score": "79.82323"}
{"text": "Editorial board member for Transactions of the Association for Computational Linguistics .January 1 , 2012- .32 technical reports and other publications ( 11 pedagogical , 2 popular science ) .Lectures and Seminars .Over 110 contributed papers at national and international conferences ; over 80 invited lectures and seminars in Sweden and elsewhere .", "label": "", "metadata": {}, "score": "80.0029"}
{"text": "The column value will be used as an integer value in the feature model .BOOLEAN .The column value will be used as a boolean value in the feature model .REAL .The column value will be used as a real value in the feature model . default .", "label": "", "metadata": {}, "score": "80.439514"}
{"text": "An inactive stack ( InactiveStack ) of partially processed tokens that may be linked on the other plane , where InactiveStack[i ] is the i+1th token from the top of the stack , with the top being InactiveStack[0 ] .A list Input of remaining input tokens , where Input[i ] is the i+1th token in the list , with the first token being Input[0 ] .", "label": "", "metadata": {}, "score": "80.95961"}
{"text": "An inactive stack ( InactiveStack ) of partially processed tokens that may be linked on the other plane , where InactiveStack[i ] is the i+1th token from the top of the stack , with the top being InactiveStack[0 ] .A list Input of remaining input tokens , where Input[i ] is the i+1th token in the list , with the first token being Input[0 ] .", "label": "", "metadata": {}, "score": "80.95961"}
{"text": "All option settings that can not be changed during parsing . symboltables.sym .All distinct symbols in the training data , divided into different columns .For example , the column POSTAG in the CoNLL format has its own symbol table with all distinct values occurring in the training data . test_singlemalt . info .", "label": "", "metadata": {}, "score": "81.04828"}
{"text": "G\u00f6teborg University : Department of Linguistics . \" ...We formulate dependency parsing as a graphical model with the novel ingredient of global constraints .We show how to apply loopy belief propagation ( BP ) , a simple and effective tool for approximate learning and inference .", "label": "", "metadata": {}, "score": "81.67842"}
{"text": "Example : .InputArcDir(PHEAD , Stack[0 ] ) .InputTable .Takes two arguments , a column name and an address function , and returns the column value for the node identified by the address function .The column name must correspond to a new column defined in a propagation specification and the address function must return a token node in the input string .", "label": "", "metadata": {}, "score": "81.69859"}
{"text": "To run MaltParser with the above option file type : . xml .This command will create a configuration file example1.mco based on the settings in the option file .It is possible to override the options by command - line options , for example : . xml -a nivreeager .", "label": "", "metadata": {}, "score": "81.72763"}
{"text": "Configuration .The purpose of the configuration is to gather information about all settings and files into one file .During learning , the configuration is created and stored in a configuration file with the file suffix .mco .This configuration file can later be reused whenever the trained model is used to parse new data .", "label": "", "metadata": {}, "score": "82.0988"}
{"text": "Merge three feature value into one feature value .The following specification defines a feature the value of which the part - of - speech of the three next input token are merged into one feature value .Merge3(InputColumn(POSTAG , Input[0 ] ) , InputColumn(POSTAG , Input[1 ] ) , InputColumn(POSTAG , Input[2 ] ) ) .", "label": "", "metadata": {}, "score": "82.29849"}
{"text": "Merge three feature value into one feature value .The following specification defines a feature the value of which the part - of - speech of the three next input token are merged into one feature value .Merge3(InputColumn(POSTAG , Input[0 ] ) , InputColumn(POSTAG , Input[1 ] ) , InputColumn(POSTAG , Input[2 ] ) ) .", "label": "", "metadata": {}, "score": "82.29849"}
{"text": "Phrase Structure Grammar Laboratory .Definite Clause Grammar Laboratory .PATR Laboratory .Categorial Grammar Laboratory .Book Chapters .Nivre , J. ( 1991 ) PLUS - ett projekt om datorer , pragmatik och spr\u00e5kf\u00f6rst\u00e5else .In Profiler och projekt .", "label": "", "metadata": {}, "score": "82.396774"}
{"text": "The small training size and overregularization of the QG parser mildly hurts in - domain parsing performance .825 % Dependency Accuracy on Target CoNLL - PrepHead CoNLL - PrepChild Prague - PrepHead Prague ... . \" ...Manually annotated corpora are valuable but scarce resources , yet for many annotation tasks such as treebanking and sequence labeling there exist multiple corpora with different and incompatible annotation guidelines or standards .", "label": "", "metadata": {}, "score": "82.42092"}
{"text": "MaltParser outputs the following information : . 1 0s 5 MB . 10 0s 6 MB 32 0s 8 MB Creating Liblinear model odm0.liblinear.moo - Read all training instances .- Train a parser model using LibLinear .- Optimize the memory usage - Save the Liblinear model odm0.liblinear.moo Learning time : 00:00:01 ( 1290 ms ) Finished : Fri May 02 23:45:19 CEST 2014 .", "label": "", "metadata": {}, "score": "82.49361"}
{"text": "INTEGER .The column value will be stored as an integer value .BOOLEAN .The column value will be stored as a boolean value .ECHO .The column value will be stored as an integer value , but can not be used in the definition of features .", "label": "", "metadata": {}, "score": "82.829834"}
{"text": "Covington projective .Left , Right .Covington non - projective .Left , Right , LeftContext , RightContext .Stack projective .Stack , Input , Lookahead .Planar .Stack , Input . 2-Planar .ActiveStack , InactiveStack , Input .", "label": "", "metadata": {}, "score": "83.096756"}
{"text": "Covington projective .Left , Right .Covington non - projective .Left , Right , LeftContext , RightContext .Stack projective .Stack , Input , Lookahead .Planar .Stack , Input . 2-Planar .ActiveStack , InactiveStack , Input .", "label": "", "metadata": {}, "score": "83.096756"}
{"text": "This , in turn , results in lots of ( unnecessary ) lifts , and can be avoided by using the covered_root flag -pcr .This option has four values : none , left , right and head .For the last three values , tokens like dangling punctuation are then attached to one of the tokens connected by the shortest arc covering the token , either the leftmost ( left ) , rightmost ( right ) , or head ( head ) token of the covering arc .", "label": "", "metadata": {}, "score": "83.469406"}
{"text": "This , in turn , results in lots of ( unnecessary ) lifts , and can be avoided by using the covered_root flag -pcr .This option has four values : none , left , right and head .For the last three values , tokens like dangling punctuation are then attached to one of the tokens connected by the shortest arc covering the token , either the leftmost ( left ) , rightmost ( right ) , or head ( head ) token of the covering arc .", "label": "", "metadata": {}, "score": "83.469406"}
{"text": "First predicts the transition ( T.TRANS ) and if the transition does not require any arc label then the nondeterminism is resolved , but if the predicted transition requires an arc label then the parser continues to predict the arc label .", "label": "", "metadata": {}, "score": "83.58535"}
{"text": "First predicts the transition ( T.TRANS ) and if the transition does not require any arc label then the nondeterminism is resolved , but if the predicted transition requires an arc label then the parser continues to predict the arc label .", "label": "", "metadata": {}, "score": "83.58535"}
{"text": "Combines the prediction of the transition ( T.TRANS ) and the arc label ( A.DEPREL ) .This is the default setting of MaltParser 1.1 and was the only setting available for previous versions of MaltParser .T.TRANS , A.DEPREL .First predicts the transition ( T.TRANS ) and continues to predict the arc label ( A.DEPREL ) if the transition requires an arc label .", "label": "", "metadata": {}, "score": "83.96522"}
{"text": "Combines the prediction of the transition ( T.TRANS ) and the arc label ( A.DEPREL ) .This is the default setting of MaltParser 1.1 and was the only setting available for previous versions of MaltParser .T.TRANS , A.DEPREL .First predicts the transition ( T.TRANS ) and continues to predict the arc label ( A.DEPREL ) if the transition requires an arc label .", "label": "", "metadata": {}, "score": "83.96522"}
{"text": "( BA ) .Nivre , J. ( 1986 )La disjonction du compl\u00e9ment adnominal en fran\u00e7ais moderne .( MA ) G\u00f6teborg University : Department of Romance Languages .Nivre , J. ( 1987 )Jag tror - jag vet - jag beklagar .", "label": "", "metadata": {}, "score": "84.053375"}
{"text": "_ P IP _ 2 IP _ _ .Finally , the character encoding can be specified with the charset option and this option is used by MaltParser to define the java class Charset .Parsing Algorithm .Any deterministic parsing algorithm compatible with the MaltParser architecture can be implemented in the MaltParser package .", "label": "", "metadata": {}, "score": "84.44528"}
{"text": "For more information about how to use MaltParserService , please see the examples provided in the directory examples / apiexamples / srcex / org / maltparser / examples / old .To compile the old examples ( srcex / org / maltparser / examples / old ) used by MaltParser-1.7.2 and previous versions of MaltParser . javac -d classes -cp .", "label": "", "metadata": {}, "score": "84.611115"}
{"text": "Graduate Education . computational linguistics ( Uppsala University , 2007- ; 3 completed , 4 ongoing ) .Assistant supervisors for PhD students in .language technology ( National Swedish Graduate School in Language Technology , 2001- ; 7 completed ) , .", "label": "", "metadata": {}, "score": "84.7903"}
{"text": "Machine Translation 18(4 ) , 373 - 376 .Technical Reports .Nivre , J. ( 1988 )Grammatical Functions in GB .Gothenburg Papers in Theoretical Linguistics 53 .G\u00f6teborg University : Department of Linguistics .Nivre , J. and Richthoff , U. ( 1988 )", "label": "", "metadata": {}, "score": "85.06568"}
{"text": "Description .CONFIGURATION .The name and type of the configuration and the date when it was created .SYSTEM .Information about the system that was used when creating the configuration , such as processor , operating system and version of Java Runtime Environment ( JRE ) .", "label": "", "metadata": {}, "score": "85.32402"}
{"text": "Start using MaltParser .This section contains a short guide to get familiar with MaltParser .We start by running MaltParser without any arguments by typing the following at the command line prompt ( it is important that you are in the maltparser-1.8.1 directory ) : .", "label": "", "metadata": {}, "score": "85.57865"}
{"text": "Suffix .Extract the suffix of a feature value ( only InputColumn ) with a suffix length n .The following specification defines a feature the value of which is the four - character suffix of the word form ( FORM ) of the next input token .", "label": "", "metadata": {}, "score": "85.7506"}
{"text": "Suffix .Extract the suffix of a feature value ( only InputColumn ) with a suffix length n .The following specification defines a feature the value of which is the four - character suffix of the word form ( FORM ) of the next input token .", "label": "", "metadata": {}, "score": "85.7506"}
{"text": "Uses the option flag with a dash ( - ) before the option flag and a blank between the option flag and the value . -c test .Command - line option group and option name .Uses both the option group name and the option name to specify the option , with two dashes ( -- ) before the option group name and one dash ( - ) to separate the option group name and the option name .", "label": "", "metadata": {}, "score": "85.93798"}
{"text": "Uses the option flag with a dash ( - ) before the option flag and a blank between the option flag and the value . -c test .Command - line option group and option name .Uses both the option group name and the option name to specify the option , with two dashes ( -- ) before the option group name and one dash ( - ) to separate the option group name and the option name .", "label": "", "metadata": {}, "score": "85.93798"}
{"text": "Example : .InputArc(PHEAD , Stack[0 ] ) .Exists .Takes an address function as argument and returns TRUE if the address function returns an existing node ( and FALSE otherwise ) .Example : . Exists(ldep(Stack[0 ] ) ) .", "label": "", "metadata": {}, "score": "86.00676"}
{"text": "Prefix .The following specification defines a feature the value of which is the four - character prefix of the word form ( FORM ) of the next input token .Prefix(InputColumn(FORM , Input[0 ] ) , 4 ) .Merge .", "label": "", "metadata": {}, "score": "86.188965"}
{"text": "Prefix .The following specification defines a feature the value of which is the four - character prefix of the word form ( FORM ) of the next input token .Prefix(InputColumn(FORM , Input[0 ] ) , 4 ) .Merge .", "label": "", "metadata": {}, "score": "86.188965"}
{"text": "Example : .InputTable(CJ - POSTAG , Stack[0 ] ) .Exists .Takes an address function as argument and returns TRUE if the address function returns an existing node ( and FALSE otherwise ) .Example : . Exists(ldep(Stack[0 ] ) ) .", "label": "", "metadata": {}, "score": "86.37534"}
{"text": "The column value will be ignored and therefore will not be present in the output file . default .The default output for columns that have the column type IGNORE .It is possible to define your own input / output format and then supply the data format specification file with the format option .", "label": "", "metadata": {}, "score": "86.866745"}
{"text": "G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1991 )Elementa i generativ grammatik .Gothenburg University Linguistics ( GULING ) 16 .G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1991 ) Feedback and Situation Theory .", "label": "", "metadata": {}, "score": "86.87823"}
{"text": "The fifth best system was a single - parser system , called Single Malt , while the top scoring system was an ensemble system , called Blended , incorporating six incarnations of MaltParser .The systems are described in Hall et al .", "label": "", "metadata": {}, "score": "86.90996"}
{"text": "Here is an example ( examples / optionexample . xml ) : .To run MaltParser with the above option file type : . xml .This command will create a configuration file example1.mco based on the settings in the option file .", "label": "", "metadata": {}, "score": "87.04634"}
{"text": "The following specification defines a feature the value of which the part - of - speech of the top token of the stack and the next input token are merged into one feature value .Merge(InputColumn(POSTAG , Stack[0 ] ) , InputColumn(POSTAG , Input[0 ] ) ) .", "label": "", "metadata": {}, "score": "87.59363"}
{"text": "The following specification defines a feature the value of which the part - of - speech of the top token of the stack and the next input token are merged into one feature value .Merge(InputColumn(POSTAG , Stack[0 ] ) , InputColumn(POSTAG , Input[0 ] ) ) .", "label": "", "metadata": {}, "score": "87.59363"}
{"text": "[ pdf ] Member of department board , Department of Linguistics , G\u00f6teborg University , January 1 , 1993 - December 31 , 1999 .Head of department , Department of Linguistics , G\u00f6teborg University , January 1 , 1999 - December 31 , 1999 .", "label": "", "metadata": {}, "score": "87.61421"}
{"text": "The CoNLL data format specification file looks like this : .A data format specification file has two types of XML elements .First , there is the dataformat element with the attribute name , which gives the data format a name .", "label": "", "metadata": {}, "score": "88.1977"}
{"text": "The CoNLL data format specification file looks like this : .A data format specification file has two types of XML elements .First , there is the dataformat element with the attribute name , which gives the data format a name .", "label": "", "metadata": {}, "score": "88.1977"}
{"text": "To run the old examples .java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.ReadWriteCoNLL ./data / talbanken05_test.conll out.conll ./appdata / dataformat / conllx .xml UTF-8 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.CreateDependencyGraph java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.", "label": "", "metadata": {}, "score": "88.60169"}
{"text": "InputArc(PHEAD , Stack[0 ] , Input[0 ] ) .InputArcDir .The column name must correspond to an input column of integer type in the data format and the address function must return a token node in the input string .( If the address function is undefined , a null - value is returned . )", "label": "", "metadata": {}, "score": "89.05778"}
{"text": "InputArc(PHEAD , Stack[0 ] , Input[0 ] ) .InputArcDir .The column name must correspond to an input column of integer type in the data format and the address function must return a token node in the input string .( If the address function is undefined , a null - value is returned . )", "label": "", "metadata": {}, "score": "89.05778"}
{"text": "option .An option group can consist of one or more option .The element option has two attributes : name that corresponds to an option name and value that is the value of the option .Please consult the description of all available options to see all legal option names and values .", "label": "", "metadata": {}, "score": "89.179"}
{"text": "ConcurrentExample1 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.ConcurrentExample2 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.ConcurrentExample3 .Old MaltParserService interface .Before MaltParser-1.8 there was another interface to MaltParser .Note that this interface can only be used in a single - threaded environment and the interface does n't use the light - weighted parser .", "label": "", "metadata": {}, "score": "89.55508"}
{"text": "En j\u00e4mf\u00f6rande studie av samtal ansikte mot ansikte och telefonsamtal .Gothenburg Papers in Theoretical Linguistics S10 .G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1989 )Fr\u00e5n ord till frasstruktur .N\u00e5gra anm\u00e4rkningar om Otto Jespersens grammatiska teori .", "label": "", "metadata": {}, "score": "89.6637"}
{"text": "TrainingExperiment java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.ParsingExperiment java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.ParseSentence1 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.ParseSentence2 java -cp classes : . /maltparser-1.8.1.jar org.maltparser.examples.old.ParseSentence3 .Other programs can invoke Maltparser in various ways , but the easiest way is to use the org.maltparser.", "label": "", "metadata": {}, "score": "90.12669"}
{"text": "/maltparser-1.8.1 . jar : . java .To run the examples you first need to create a Swedish parser model swemalt - mini .mco by using MaltParser : . java -jar . /maltparser-1.8.1.jar -w output -c swemalt - mini -i .", "label": "", "metadata": {}, "score": "90.205444"}
{"text": "Deputy director , Swedish National Graduate School of Language Technology ( GSLT ) , June 1 , 2001 - January 31 , 2011 .Member of university board , V\u00e4xj\u00f6 University , January 1 , 2004 - December 31 , 2006 .", "label": "", "metadata": {}, "score": "90.239655"}
{"text": "In Allwood and Boyd ( eds ) Lingvistisk metod .G\u00f6teborg University : Department of Linguistics .Beskow , B. and Nivre , J. ( 1994 ) Datorsimulering .In Allwood and Boyd ( eds ) Lingvistisk metod .G\u00f6teborg University : Department of Linguistics .", "label": "", "metadata": {}, "score": "90.76973"}
{"text": "Member of departmental board , Department of Linguistics and Philology , Uppsala University , January 1 , 2010 - December 31 , 2012 .Editorial board member for Research on Language and Computation , January 1 , 2007 - 2009 .Editorial board member for Northern European Journal of Language Technology , November 1 , 2008 - December 31 , 2011 .", "label": "", "metadata": {}, "score": "91.11502"}
{"text": "The dependency relation DEPREL is the grammatical function of the highest nonterminal of which the dependent is the lexical head .The attachment ATTACH is a non - negative integer that encodes the attachment level of the highest nonterminal of which it is the lexical head .", "label": "", "metadata": {}, "score": "92.523834"}
{"text": "MaltParser API .From version MaltParser-1.8 there is a new interface to MaltParser located in org.maltparser.concurrent and contains following classes : .org.maltparser.concurrent.ConcurrentMaltParserModel .org.maltparser.concurrent.ConcurrentMaltParserService .org.maltparser.concurrent.ConcurrentUtils .This interface can only be used during parsing time and can hopefully be used in a multi - threaded environment .", "label": "", "metadata": {}, "score": "92.64855"}
{"text": "Secretary , ACL Special Interest Group for Natural Language Learning ( SIGNLL ) , November 1 , 2007 - October 31 , 2009 .Secretary , European Chapter of the Association for Computational Linguistics ( EACL ) , January 1 , 2009 - December 31 , 2012 .", "label": "", "metadata": {}, "score": "93.69643"}
{"text": "Given that you have training data in the file train.negra formatted as above and a feature specification file , type the following at the command line prompt : .This command will create testps.mco containing a parser model for parsing phrase structure .", "label": "", "metadata": {}, "score": "93.69716"}
{"text": "( If the address function is undefined , a null - value is returned . )Example : .InputColumn(POSTAG , Stack[0 ] ) .OutputColumn .Takes two arguments , a column name and an address function , and returns the column value for the node identified by the address function .", "label": "", "metadata": {}, "score": "93.76926"}
{"text": "( If the address function is undefined , a null - value is returned . )Example : .InputColumn(POSTAG , Stack[0 ] ) .OutputColumn .Takes two arguments , a column name and an address function , and returns the column value for the node identified by the address function .", "label": "", "metadata": {}, "score": "93.76926"}
{"text": "The latter specification format should be saved in a text file where the file name must end with the file suffix .par .Below you can see an example of the new XML format ( Nivre arc - eager default feature model ) : .", "label": "", "metadata": {}, "score": "95.750626"}
{"text": "The latter specification format should be saved in a text file where the file name must end with the file suffix .par .Below you can see an example of the new XML format ( Nivre arc - eager default feature model ) : .", "label": "", "metadata": {}, "score": "95.750626"}
{"text": "The attribute groupname specifies the option group name ( see description of all available options ) .option .An option group can consist of one or more option .The element option has two attributes : name that corresponds to an option name and value that is the value of the option .", "label": "", "metadata": {}, "score": "96.515594"}
{"text": "We start by running MaltParser without any arguments by typing the following at the command line prompt ( it is important that you are in the malt-1.4.1 directory ) : .This command will display the following output : . -----------------------------------------------------------------------------MaltParser 1.4.1 ----------------------------------------------------------------------------- MALT ( Models and Algorithms for Language Technology ) Group Vaxjo University and Uppsala University Sweden -----------------------------------------------------------------------------", "label": "", "metadata": {}, "score": "103.71646"}
{"text": "In Allwood and Boyd ( eds ) Lingvistisk metod .G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1994 )Klassificering och kodning .In Allwood and Boyd ( eds ) Lingvistisk metod .G\u00f6teborg University : Department of Linguistics .", "label": "", "metadata": {}, "score": "105.13359"}
{"text": "MaltParser outputs the following information : . -----------------------------------------------------------------------------MaltParser 1.4.1 ----------------------------------------------------------------------------- MALT ( Models and Algorithms for Language Technology ) Group Vaxjo University and Uppsala University Sweden -----------------------------------------------------------------------------Started : Sun Jun 27 15:58:46 CEST 2010 Data Format : file:////home / jha / dev / eclipse / malt / MaltParser / test2/conllx . xml Transition system : Arc - Eager Parser configuration : Nivre with NORMAL root handling Feature model : NivreEager.xml Learner : libsvm Oracle : Arc - Eager . 1 0s 3 MB . 10 1s 2 MB 32 1s 3 MB Creating LIBSVM model odm0.libsvm.mod Learning time : 00:00:03 ( 3500 ms ) Finished : Sun Jun 27 15:58:50 CEST 2010 .", "label": "", "metadata": {}, "score": "106.4384"}
{"text": "CONFIGURATION Configuration name : test Configuration type : singlemalt Created : Sun Jul 15 11:59:37 CEST 2010 SYSTEM Operating system architecture : amd64 Operating system name : Linux JRE vendor name : Sun Microsystems Inc.The information is grouped into different categories : .", "label": "", "metadata": {}, "score": "110.05266"}
{"text": "G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1991 ) Marcus Terentius Varros spr\u00e5kteori .Gothenburg University Linguistics ( GULING ) 17 .G\u00f6teborg University : Department of Linguistics .Nivre , J. ( 1991 ) Semantik i klassisk kategorialgrammatik .", "label": "", "metadata": {}, "score": "113.98004"}
