{"text": "Generative programming aims at modeling and implementing system families in such a way that a given system can be automatically generated from a specification written in a domain - specific language .We will also discuss the relationship between Generative Programming and Model - Driven Architecture .", "label": "", "metadata": {}, "score": "20.833504"}
{"text": "Generative software development aims at modeling and implementing product lines in such a way that a given system can be automatically generated from a specification written in one or more textual or graphical domain - specific languages ( DSLs ) .Available tools for feature modeling and implementing DSLs as well as related approaches such as Software Factories and Model - Driven Architecture will be surveyed and compared .", "label": "", "metadata": {}, "score": "25.46136"}
{"text": "Generative Programming ( developing programs that . synthesize other programs ) , Component Engineering ( raising the level . of modularization and analysis in application design ) , and .Domain - Specific Languages ( elevating program specifications to compact .domain - specific notations that are easier to write , maintain , and .", "label": "", "metadata": {}, "score": "27.514074"}
{"text": "Modern Software Tools in Scientific Computing , chapter A Modern Framework for Portable High Performance Numerical Linear Algebra .Birkhauser , 1999 .J. Stichnoth and T. Gross .Code composition as an implementation language for compilers .In USENIX Conference on Domain - Specific Languages , 1997 .", "label": "", "metadata": {}, "score": "30.105988"}
{"text": "Available tools for feature modeling and implementing DSLs as well as related approaches such as Software Factories and Model - Driven Architecture will be surveyed and compared .The presented concepts and methods will be demonstrated using a sample case study of an e - commerce platform .", "label": "", "metadata": {}, "score": "33.041912"}
{"text": "These DSLs have been validated with real - sized applications and showed measurable benefits compared to applications written in general - purpose languages .His research interests include language design , program analysis , compilation and compiler generation , prototyping , program transformation , and formal specification .", "label": "", "metadata": {}, "score": "33.372517"}
{"text": "However , where software engineering focuses on a single system , domain engineering focuses on a family of systems .[ 6 ] A good domain model serves as a reference to resolve ambiguities later in the process , a repository of knowledge about the domain characteristics and definition , and a specification to developers of products which are part of the domain .", "label": "", "metadata": {}, "score": "33.5418"}
{"text": "He is co - author of the book \" Generative Programming \" ( Addison - Wesley , 2000 ) , which is regarded as founding work of the area and is used as a graduate text at universities around the world .", "label": "", "metadata": {}, "score": "33.550556"}
{"text": "K. Czarnecki and U. Eisenecker .Generative Programming : Methods , Techniques and Applications .Addison - Wesley Longman , 1999 .( to appear ) .O. Danvy , R. Gl\u00fcck , and P. Thiemann , editors .Partial Evaluation , volume 1110 of Lecture Notes in Computer Science .", "label": "", "metadata": {}, "score": "34.33458"}
{"text": "Feature modeling is an important approach to capturing commonalities and variabilities in system families and product lines .In this paper , we propose a cardinality - based notation for feature modeling , which integrates a number of existing extensions of previous approaches .", "label": "", "metadata": {}, "score": "36.17868"}
{"text": "extensions ) .SCOPE .Generative and component approaches are revolutionizing software .development similar to how automation and components revolutionized . manufacturing .Generative Programming ( developing programs that . synthesize other programs ) , Component Engineering ( raising the level . of modularization and analysis in application design ) , and .", "label": "", "metadata": {}, "score": "36.375298"}
{"text": "System family engineering seeks to exploit the commonalities among systems from a given problem domain while managing the variabilities among them in a systematic way .In system family engineering , new system variants can be rapidly created based on a set of reusable assets ( such as a common architecture , components , models , etc . ) .", "label": "", "metadata": {}, "score": "37.682777"}
{"text": "Domain analysis primarily produces a domain model , representing the common and varying properties of systems within the domain .[ 10 ] The domain model assists with the creation of architectures and components in a configurable manner by acting as a foundation upon which to design these components .", "label": "", "metadata": {}, "score": "37.828762"}
{"text": "The first part of this tutorial proposes to structure the development of a DSL on the notion of a program family .We outline the main steps of such a development .Furthermore , we argue that a program family provides a basis to assess a DSL .", "label": "", "metadata": {}, "score": "37.97165"}
{"text": "Multi - stage programming : axiomatization and type - safety .In International Colloquium on Automata , Languages , and Programming , Lecture Notes in Computer Science , Aalborg , Denmark , 1998 .Springer - Verlag .TutorialGPCE7 .Generative Programming and Component Engineering .", "label": "", "metadata": {}, "score": "38.02805"}
{"text": "[ 10 ] [ 14 ] However , unlike requirements engineering , domain analysis does not solely consist of collection and formalization of information ; a creative component exists as well .During the domain analysis process , engineers aim to extend knowledge of the domain beyond what is already known and to categorize the domain into similarities and differences to enhance reconfigurability .", "label": "", "metadata": {}, "score": "38.08796"}
{"text": "This tutorial introduces DSM by emphasizing the differences to modelling languages originating from the semantics of programming languages .This is followed by examples from various fields of software product development .The main part of the tutorial addresses the guidelines for implementing DSM for various application domains : how to identify the necessary language constructs ; what options are available for code generation ; and what are the industry experiences .", "label": "", "metadata": {}, "score": "38.411766"}
{"text": "Through the use of selection of features from developed feature models , consideration of reuse of technology is performed very early and can be adequately applied throughout the development process .[ 13 ] .Domain analysis is derived primarily from artifacts produced past experience in the domain .", "label": "", "metadata": {}, "score": "39.352787"}
{"text": "11 ] Through the use of domain analysis , the development of configurable requirements and architectures , rather than static configurations which would be produced by a traditional application engineering approach , is possible .[ 12 ] .Domain analysis is significantly different from requirements engineering , and as such , traditional approaches to deriving requirements are ineffective for development of configurable requirements as would be present in a domain model .", "label": "", "metadata": {}, "score": "39.50815"}
{"text": "As services may be used in different contexts and hence require different configurations , the design of families of services may benefit from a domain engineering approach .Domain engineering as compared to application engineering .The outputs of each phase of domain engineering feed into both subsequent phases of domain engineering as well as corresponding phases in application engineering .", "label": "", "metadata": {}, "score": "40.283604"}
{"text": "He was General Chair of the 2003 International Conference on Generative Programming and Component Engineering ( GPCE ) and keynote speaker at UML 2004 .His current work focuses on realizing the synergies between generative and model - driven software development .", "label": "", "metadata": {}, "score": "40.325592"}
{"text": "He was General Chair of the 2003 International Conference on Generative Programming and Component Engineering ( GPCE ) and keynote speaker at UML 2004 .His current work focuses on realizing the synergies between generative and model - driven software development .", "label": "", "metadata": {}, "score": "40.325592"}
{"text": "PhD Thesis .Technical University of Ilmenau , Ilmenau , 1998 .K. Czarnecki and U. Eisenecker .Components and generative programming .In O. Nierstrasz , editor , Proceedings of the Joint European Software Engineering Conference and ACM SIGSOFT International Symposium on the Foundations of Software Engineering ( ESEC / FSE 99 , Toulouse , Frankreich , September 1999 ) .", "label": "", "metadata": {}, "score": "40.328133"}
{"text": "The key underlying technology is program generation .In addition , languages designed to support this paradigm ( such as MetaOCaml ) help the programmer avoid many of the difficulties that are traditionally encountered in developing program generators .This tutorial will introduce you to the basics of this paradigm as well as of programming in MetaOCaml .", "label": "", "metadata": {}, "score": "40.349747"}
{"text": "Domain engineering focuses on capturing knowledge gathered during the software engineering process .By developing reusable artifacts , components can be reused in new software systems at low cost and high quality .[5 ] Because this applies to all phases of the software development cycle , domain engineering also focuses on the three primary phases : analysis , design , and implementation , paralleling application engineering .", "label": "", "metadata": {}, "score": "40.551693"}
{"text": "Product - line architectures .Distributed , real - time and embedded systems .Model - driven development and architecture .Reuse , distributed platforms and middleware , distributed systems , . evolution , . patterns , development methods , deployment and configuration .", "label": "", "metadata": {}, "score": "40.66419"}
{"text": "Product - line architectures .Distributed , real - time and embedded systems .Model - driven development and architecture .Reuse , distributed platforms and middleware , distributed systems , . evolution , . patterns , development methods , deployment and configuration .", "label": "", "metadata": {}, "score": "40.66419"}
{"text": "T. Neubert .Anwendung von generativen Programmiertechniken am Beispiel der Matrixalgebra .Technische Universitet Chemnitz , 1998 .Diplomarbeit .M. Poletto , D. R. Engler , and M. F. Kaashoek .tcc : A system for fast , flexible , and high - level dynamic code generation .", "label": "", "metadata": {}, "score": "40.87001"}
{"text": "R. Gl\u00fcck and J. J\u00f8rgensen .An automatic program generator for multi - level specialization .Lisp and Symbolic Computation , 10(2):113 - 158 , 1997 .CrossRef .R. Gl\u00fcck and A. V. Klimov .Metacomputation as a tool for formal linguistic modeling .", "label": "", "metadata": {}, "score": "40.894035"}
{"text": "We then introduce and motivate the novel concept of staged configuration .Staged configuration can be achieved by the stepwise specialization of feature models .This is important because in a realistic development process , different groups and different people eliminate product variability in different stages .", "label": "", "metadata": {}, "score": "41.969467"}
{"text": "Other actions .Share .References .DeBaud , J.M. , Schmid , K. : A systematic approach to derive the scope of software product lines .In : Proceedings of the 21stInternational Conference on Software Engineering ( ICSE ) , pp .", "label": "", "metadata": {}, "score": "42.629154"}
{"text": "multi - level languages , and step - wise refinement .Semantics , type systems , symbolic computation , linking and .explicit . substitution , in - lining and macros , templates , and program .transformation .Runtime code generation , compilation , active libraries , synthesis .", "label": "", "metadata": {}, "score": "42.843124"}
{"text": "multi - level languages , and step - wise refinement .Semantics , type systems , symbolic computation , linking and .explicit . substitution , in - lining and macros , templates , and program .transformation .Runtime code generation , compilation , active libraries , synthesis .", "label": "", "metadata": {}, "score": "42.843124"}
{"text": "Selbig , M. : A feature diagram editor - Analysis , design , and implementation of its core functionality , Diplomarbeit , Fachbereich Informatik , Fachhochschule Kaiserslautern , Standort Zweibr\u00fccken , Germany ( 2000 ) Abstract .Feature modeling is an important approach to capturing commonalities and variabilities in system families and product lines .", "label": "", "metadata": {}, "score": "43.271297"}
{"text": "In R. Gl\u00fcck , and P. Thiemann , editors .Partial Evaluation , volume 1110 of Lecture Notes in Computer Science .Springer - Verlag , 1996 Danvy et al .[ 8 ] , pages 54 - 72 .K. Czarnecki .", "label": "", "metadata": {}, "score": "43.439034"}
{"text": "Batory , D. , Johnson , C. , MacDonald , B. , von Heeder , D. : Achieving extensibility through product - lines and domain - specific languages : A case study .ACM Transactions on Software Engineering and Methodology ( TOSEM ) 11 , 191 - 214 ( 2002 ) CrossRef .", "label": "", "metadata": {}, "score": "43.61066"}
{"text": "Batory , D. , Johnson , C. , MacDonald , B. , von Heeder , D. : Achieving extensibility through product - lines and domain - specific languages : A case study .ACM Transactions on Software Engineering and Methodology ( TOSEM ) 11 , 191 - 214 ( 2002 ) CrossRef .", "label": "", "metadata": {}, "score": "43.61066"}
{"text": "LNCS , vol .2487 , pp .93 - 109 .Springer , Heidelberg ( 2002 ) CrossRef .Czarnecki , K. , Bednasch , T. , Unger , P. , Eisenecker , U.W. : Generative programming for embedded software : An industrial experience report .", "label": "", "metadata": {}, "score": "44.74462"}
{"text": "LNCS , vol .2487 , pp .93 - 109 .Springer , Heidelberg ( 2002 ) CrossRef .Czarnecki , K. , Bednasch , T. , Unger , P. , Eisenecker , U.W. : Generative programming for embedded software : An industrial experience report .", "label": "", "metadata": {}, "score": "44.74462"}
{"text": "This information is captured in models that are used in the domain implementation phase to create artifacts such as reusable components , a domain - specific language , or application generators that can be used to build new systems in the domain .", "label": "", "metadata": {}, "score": "44.825127"}
{"text": "Domain analysis is used to define the domain , collect information about the domain , and produce a domain model .[ 10 ] Through the use of feature models ( initially conceived as part of the feature - oriented domain analysis method ) , domain analysis aims to identify the common points in a domain and the varying points in the domain .", "label": "", "metadata": {}, "score": "45.043175"}
{"text": "[ 10 ] [ 16 ] Feature models decompose concepts into their required and optional features to produce a fully formalized set of configurable requirements .[17 ] .Domain design takes the domain model produced during the domain analysis phase and aims to produce a generic architecture to which all systems within the domain can conform .", "label": "", "metadata": {}, "score": "45.157288"}
{"text": "Czarnecki , K. , Eisenecker , U.W. : Generative Programming : Methods , Tools , and Applications .Addison - Wesley , Reading ( 2000 ) .Bosch , J. : Design and Use of Software Architecture : Adopting and evolving a product - line approach .", "label": "", "metadata": {}, "score": "45.291195"}
{"text": "D. R. Engler , W. C. Hsieh , and M. F. Kaashoek . 'C : A language for high - level , efficient , and machine - independent dynamic code generation .In POPL'96 , pages 131 - 144 , 1996 . A. P. Ershov .", "label": "", "metadata": {}, "score": "45.462303"}
{"text": "With DSM , the models are made up of elements representing concepts that are part of the domain world , not the code world ( like e.g. in UML ) .These languages follow domain abstractions and semantics , allowing developers to perceive themselves as working directly with domain concepts .", "label": "", "metadata": {}, "score": "45.662064"}
{"text": "LNCS , vol .2319 , pp .62 - 77 .Springer , Heidelberg ( 2002 ) CrossRef .Barbeau , M. , Bordeleau , F. : A protocol stack development tool using generative programming .In : Batory , D. , Consel , C. , Taha , W. ( eds . )", "label": "", "metadata": {}, "score": "45.831245"}
{"text": "LNCS , vol .2319 , pp .62 - 77 .Springer , Heidelberg ( 2002 ) CrossRef .Barbeau , M. , Bordeleau , F. : A protocol stack development tool using generative programming .In : Batory , D. , Consel , C. , Taha , W. ( eds . )", "label": "", "metadata": {}, "score": "45.831245"}
{"text": "In E. J. Neuhold , editor , Formal Description of Programming Concepts , pages 391 - 420 .North - Holland , 1978 . Y. Futamura .Partial evaluation of computation process - an approach to a compiler - compiler .Systems , Computers , Controls , 2(5):45 - 50 , 1971 .", "label": "", "metadata": {}, "score": "46.418083"}
{"text": "[ 7 ] .Given the growth of data on the Web and the growth of the Internet of Things , a domain engineering approach is becoming relevant to other disciplines as well .[ 8 ] The emergence of deep chains of Web services highlights that the service concept is relative .", "label": "", "metadata": {}, "score": "46.932068"}
{"text": "[19 ] In addition to the development of patterns during domain design , engineers must also take care to identify the scope of the pattern and the level to which context is relevant to the pattern .Limitation of context is crucial : too much context results in the pattern not being applicable to many systems , and too little context results in the pattern being insufficiently powerful to be useful .", "label": "", "metadata": {}, "score": "47.591915"}
{"text": "Level : The tutorial level is introductory ( requires almost no experience with any specific programming language . )Required experience : Familiarity with a functional language , or generic typing , would be useful , but is not necessary .Expected audience : Software engineers , graduate and undergraduate students , researchers .", "label": "", "metadata": {}, "score": "47.598648"}
{"text": "domain - specific notations that are easier to write , maintain , and .analyze ) are key technologies for automating program development .GPCE provides a venue for researchers and practitioners interested in . foundational techniques for enhancing the productivity , quality , and . time - to - market in software development that stems from deploying . standard componentry and automating program generation .", "label": "", "metadata": {}, "score": "48.140614"}
{"text": "Domain - specific languages ( DSLs ) including visual and UML - based .DSLs .Aspect - oriented and feature - oriented programming , .Intentional programming and multi - dimensional separation of . concerns .Reports on applications of these techniques to real - world . problems are especially encouraged , as are submissions that . relate ideas and concepts from several of these topics , or bridge .", "label": "", "metadata": {}, "score": "48.229248"}
{"text": "Domain - specific languages ( DSLs ) including visual and UML - based .DSLs .Aspect - oriented and feature - oriented programming , .Intentional programming and multi - dimensional separation of . concerns .Reports on applications of these techniques to real - world . problems are especially encouraged , as are submissions that . relate ideas and concepts from several of these topics , or bridge .", "label": "", "metadata": {}, "score": "48.229248"}
{"text": "Domain engineering is designed to improve the quality of developed software products through reuse of software artifacts .[ 1 ] Domain engineering shows that most developed software systems are not new systems but rather variants of other systems within the same field .", "label": "", "metadata": {}, "score": "48.389668"}
{"text": "David , M. , Weiss , D.M. , Lai , C.T.R. : Software Product - Line Engineering : A Family- Based Software Development Process .Addison - Wesley , Reading ( 1999 ) .Cleaveland , C. : Program Generators with XML and Java .", "label": "", "metadata": {}, "score": "48.742393"}
{"text": "David , M. , Weiss , D.M. , Lai , C.T.R. : Software Product - Line Engineering : A Family- Based Software Development Process .Addison - Wesley , Reading ( 1999 ) .Cleaveland , C. : Program Generators with XML and Java .", "label": "", "metadata": {}, "score": "48.742393"}
{"text": "They repeatedly build similar systems within a given domain with variations to meet different customer needs .Rather than building each new system variant from scratch , significant savings may be achieved by reusing portions of previous systems in the domain to build new ones .", "label": "", "metadata": {}, "score": "49.103653"}
{"text": "U. Eisenecker .Generative Programming ( GP ) with C++ .In H. M\u00f6ssenb\u00f6ck , editor , Modular Programming Languages , volume 1024 , pages 351 - 365 .Springer - Verlag , 1997 .D. R. Engler .Incorporating application semantics and control into compilation .", "label": "", "metadata": {}, "score": "49.37243"}
{"text": "World Scientific .B. Grant , M. Mock , M. Philipose , C. Chambers , and S. J. Eggers .Annotation - directed run - time specialization in C. In Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics - Based Program Manipulation ( PEPM'97 ) , pages 163 - 178 .", "label": "", "metadata": {}, "score": "49.410133"}
{"text": "Domain engineering .Domain engineering , also called product line engineering , is the entire process of reusing domain knowledge in the production of new software systems .It is a key concept in systematic software reuse .A key idea in systematic software reuse is the domain .", "label": "", "metadata": {}, "score": "49.642273"}
{"text": "GPCE provides a venue for researchers and practitioners interested in . foundational techniques for enhancing the productivity , quality , and . time - to - market in software development that stems from deploying . standard componentry and automating program generation .", "label": "", "metadata": {}, "score": "49.790657"}
{"text": "20 ] A useful pattern must be both frequently recurring and of high quality .[21 ] .The objective of domain design is to satisfy as many domain requirements as possible while retaining the flexibility offered by the developed feature model .", "label": "", "metadata": {}, "score": "50.20114"}
{"text": "Krzysztof Czarnecki is an Assistant Professor at the University of Waterloo , Canada .Before coming to Waterloo , he spent 8 years at DaimlerChrysler Research working on the practical applications of generative programming ( GP ) .Together with Ulrich Eisenecker , he co - authored the book \" Generative Programming \" ( Addison - Wesley , 2000 ) .", "label": "", "metadata": {}, "score": "50.36114"}
{"text": "[ 22 ] .Czarnecki , Krzysztof ; Eisenecker , Ulrich W. ( 2000 ) .Generative Programming : Methods , Tools , and Applications .Boston : Addison - Wesley .ISBN 0 - 201 - 30977 - 7 .Falbo , Ricardo de Almedia ; Guizzardi , Giancarlo ; Duarte , Katia Cristina ( 2002 ) . \"", "label": "", "metadata": {}, "score": "50.552643"}
{"text": "IEEE Computer Society Press , Los Alamitos ( 1999 ) CrossRef .Czarnecki , K. , Eisenecker , U.W. : Generative Programming : Methods , Tools , and Applications .Addison - Wesley , Reading ( 2000 ) .Bosch , J. : Design and Use of Software Architecture : Adopting and evolving a product - line approach .", "label": "", "metadata": {}, "score": "50.605564"}
{"text": "Software Factories is a generative software development method that focuses on multi - dimensional specification , combining partial and complete generation of framework - completion code from domain - specific models with pattern and framework development .We will also demonstrate tool support for Software Factories , and discuss its relationship to model - driven development and agile development methods .", "label": "", "metadata": {}, "score": "50.67518"}
{"text": "Staged configuration can be achieved by the stepwise specialization of feature models .This is important because in a realistic development process , different groups and different people eliminate product variability in different stages .We also indicate how cardinality - based feature models and their specialization can be given a precise formal semantics .", "label": "", "metadata": {}, "score": "50.688225"}
{"text": "S. Shende , A. D. Malony , J. Cuny , K. Lindlan , P. Beckman , and S. Karmesin .Portable profiling and tracing for parallel , scientific applications using C++ .In Proceedings of SPDT'98 : ACM SIGMETRICS Symposium on Parallel and Distributed Tools , pages 134 - 145 , August , 1998 .", "label": "", "metadata": {}, "score": "50.72036"}
{"text": "Proceedings of the 14th international conference on Software engineering and knowledge engineering ( ACM ): 351 - 358 .doi : 10.1145/568760.568822 .CiteSeerX : 10 .1 .1 .19 .2577 .Stephen J. Mellor is Vice - President and co - founder of Project Technology , Inc. , a company focused on tools to execute and translate UML models .", "label": "", "metadata": {}, "score": "50.742355"}
{"text": "GPCE Workshops provide intensive collaborative environments , where . generative and component technologists meet to discuss and resolve . challenging problems in the field .Tutorial and workshop proposals are due Mar 18 , 2006 .Abstract .We describe generative programming , an approach to generating customized programming components or systems , and active libraries , which are based on this approach .", "label": "", "metadata": {}, "score": "50.895695"}
{"text": "North - Holland , Amsterdam , 1988 .MATH .S. Chiba .A Metaobject Protocol for C++ .In OOPSLA'95 , pages 285 - 299 , 1995 .C. Consel , L. Hornof , F. N\u00f6el , J. Noy\u00e9 , and E. N. Volanschi .", "label": "", "metadata": {}, "score": "51.10333"}
{"text": "Several working examples ( Blitz++ , GMCL , Xroma ) are presented to illustrate the potential of active libraries .We discuss relevant implementation technologies .Other actions .Share .References . D. Bj\u00f8rner , A. P. Ershov , and N. D. Jones , editors .", "label": "", "metadata": {}, "score": "51.65094"}
{"text": "IEEE Computer Society Press , Los Alamitos ( 1998 ) CrossRef .Lee , K. , Kang , K.C. , Lee , J. : Concepts and guidelines of feature modeling for product line software engineering .In : Gacek , C. ( ed . )", "label": "", "metadata": {}, "score": "52.393433"}
{"text": "IEEE Computer Society Press , Los Alamitos ( 1998 ) CrossRef .Lee , K. , Kang , K.C. , Lee , J. : Concepts and guidelines of feature modeling for product line software engineering .In : Gacek , C. ( ed . )", "label": "", "metadata": {}, "score": "52.393433"}
{"text": "Selbig , M. : A feature diagram editor - Analysis , design , and implementation of its core functionality , Diplomarbeit , Fachbereich Informatik , Fachhochschule Kaiserslautern , Standort Zweibr\u00fccken , Germany ( 2000 ) Generative Software Development .Krzysztof Czarnecki , University of Waterloo : Krzysztof Czarnecki is an Assistant Professor at the University of Waterloo , Canada .", "label": "", "metadata": {}, "score": "52.595993"}
{"text": "Mapping software architectures to efficient implementations via partial evaluation .In Conference on Automated Software Engineering , pages 183 - 192 , Lake Tahoe , Nevada , 1997 .IEEE Computer Society . D. Musser and A. Saini .STL Tutorial and Reference Guide : C++ Programming with the Standard Template Library .", "label": "", "metadata": {}, "score": "52.70317"}
{"text": "We particularly encourage . original high - quality reports on applying GPCE technologies to .real - world problems , relating ideas and concepts from several topics , . or bridging the gap between theory and practice .TOPICS .GPCE seeks contributions in software engineering and in programming . languages related ( but not limited ) to : .", "label": "", "metadata": {}, "score": "53.7436"}
{"text": "We particularly encourage . original high - quality reports on applying GPCE technologies to .real - world problems , relating ideas and concepts from several topics , . or bridging the gap between theory and practice .TOPICS .GPCE seeks contributions in software engineering and in programming . languages related ( but not limited ) to : .", "label": "", "metadata": {}, "score": "53.7436"}
{"text": "45 - 55 ( 2001 ) .Riebisch , M. , B\u00f6llert , K. , Streitferdt , D. , Philippow , I. : Extending feature diagrams with UML multiplicities .In : 6th Conference on Integrated Design & Process Technology ( IDPT 2002 ) , Pasadena , California , USA ( 2002 ) .", "label": "", "metadata": {}, "score": "53.836014"}
{"text": "45 - 55 ( 2001 ) .Riebisch , M. , B\u00f6llert , K. , Streitferdt , D. , Philippow , I. : Extending feature diagrams with UML multiplicities .In : 6th Conference on Integrated Design & Process Technology ( IDPT 2002 ) , Pasadena , California , USA ( 2002 ) .", "label": "", "metadata": {}, "score": "53.836037"}
{"text": "Partial computation of programs .In E. Goto , K. Furukawa , R. Nakajima , I. Nakata , and A. Yonezawa , editors , RIMS Symposia on Software Science and Engineering , volume 147 of Lecture Notes in Computer Science , pages 1 - 35 , Kyoto , Japan , 1983 .", "label": "", "metadata": {}, "score": "54.078415"}
{"text": "Ulrich W. Eisenecker is a professor for computer science at the University of Applied Sciences Kaiserslautern , Zweibruecken , where he directs the Institute of Componentware and Window - Interfaces .He has been working on generative programming for more than five years and is responsible for several projects in generative programming research funded by industry and public institutes .", "label": "", "metadata": {}, "score": "54.326767"}
{"text": "[ 1 ] [ 3 ] The reduction in cost is evident even during the implementation phase .One study showed that the use of domain - specific languages allowed code size , in both number of methods and number of symbols , to be reduced by over 50 % , and the total number of lines of code to be reduced by nearly 75 % .", "label": "", "metadata": {}, "score": "54.494812"}
{"text": "Share .References .DeBaud , J.M. , Schmid , K. : A systematic approach to derive the scope of software product lines .In : Proceedings of the 21stInternational Conference on Software Engineering ( ICSE ) , pp .34 - 43 .", "label": "", "metadata": {}, "score": "55.480347"}
{"text": "GPCE 2002 .LNCS , vol .2487 , pp .156 - 172 .Springer , Heidelberg ( 2002 ) CrossRef .Hein , A. , Schlick , M. , Vinga - Martins , R. : Applying feature models in industrial settings .", "label": "", "metadata": {}, "score": "56.289684"}
{"text": "GPCE 2002 .LNCS , vol .2487 , pp .156 - 172 .Springer , Heidelberg ( 2002 ) CrossRef .Hein , A. , Schlick , M. , Vinga - Martins , R. : Applying feature models in industrial settings .", "label": "", "metadata": {}, "score": "56.289684"}
{"text": "Level : Intermediate .Required Knowledge .Basic knowledge of object - oriented programming and modeling .Speaker profile .Krzysztof Czarnecki is an Assistant Professor at the University of Waterloo , Canada .Before coming to Waterloo , he spent 8 years at DaimlerChrysler Research working on the practical applications of generative programming .", "label": "", "metadata": {}, "score": "56.36033"}
{"text": "In Reflection'96 , 1996 .N. D. Jones , C. K. Gomard , and P. Sestoft .Partial Evaluation and Automatic Program Generation .Prentice Hall International , International Series in Computer Science , June 1993 .ISBN number 0 - 13 - 020249 - 5 ( pbk ) .", "label": "", "metadata": {}, "score": "56.946243"}
{"text": "Krzysztof Czarnecki ( University of Waterloo )Ulrich Eisenecker ( University of Applied Sciences Kaiserslautern , Zweibr\u00fccken )Simon Helsen ( University of Waterloo ) .System family engineering seeks to exploit the commonalities among systems from a given problem domain while managing the variabilities among them in a systematic way .", "label": "", "metadata": {}, "score": "57.214317"}
{"text": "His current research focusses on the applicability and viability of MDA in the context of Generative Programming .Before coming to Waterloo , he was a research assistant at the Universities of T\u00fcbingen and Freiburg where he worked with Peter Thiemann on program specialization and partial evaluation .", "label": "", "metadata": {}, "score": "57.443974"}
{"text": "Technical Report CMU / SEI-90TR-21 , Software Engineering Institute , Carnegie Mellon University , Pittsburgh , PA ( 1990 ) .Griss , M. , Favaro , J. , d'Alessandro , M. : Integrating feature modeling with the RSEB .In : Proceedings of the Fifth International Conference on Software Reuse ( ICSR ) , pp .", "label": "", "metadata": {}, "score": "58.910877"}
{"text": "Technical Report CMU / SEI-90TR-21 , Software Engineering Institute , Carnegie Mellon University , Pittsburgh , PA ( 1990 ) .Griss , M. , Favaro , J. , d'Alessandro , M. : Integrating feature modeling with the RSEB .In : Proceedings of the Fifth International Conference on Software Reuse ( ICSR ) , pp .", "label": "", "metadata": {}, "score": "58.910877"}
{"text": "P. Hudak .Building domain - specific embedded languages .ACM Computing Surveys , 28(4es):196 - 196 , Dec. 1996 .CrossRef .Y. Ishikawa , A. Hori , M. Sato , M. Matsuda , J. Nolte , H. Tezuka , H. Konaka , M. Maeda , and K. Kubota .", "label": "", "metadata": {}, "score": "59.352882"}
{"text": "Mr Tolvanen has good presentation skills and experience on organizing workshops and tutorials .Reference information and third - party feedback reports from past presentations are available upon request .Stephen J. Mellor is Vice - President and co - founder of Project Technology , Inc. , a company focused on tools to execute and translate UML models .", "label": "", "metadata": {}, "score": "59.71544"}
{"text": "Expected audience : This tutorial is for experienced developers , architects , team leaders , and those responsible for developing or selecting a methodology for their software product development .Juha - Pekka Tolvanen is the CEO of MetaCase Consulting .He received his Ph.D. in 1998 from the University of Jyv\u00e4skyl\u00e4 , Finland .", "label": "", "metadata": {}, "score": "59.960297"}
{"text": "Expected audience : Participants working in domains where developed programs share a lot of commonalities .Expected benefits : more concise , more robust , easier program development .Charles Consel is a professor of Computer Science at ENSEIRB / University of Bordeaux I. He leads the Compose group at INRIA / LaBRI .", "label": "", "metadata": {}, "score": "59.992493"}
{"text": "Wiley , Chichester ( 2004 ) ( to be published ) .van Deursen , A. , Klint , P. : Domain - specific language design requires feature descriptions .Journal of Computing and Information Technology 10 , 1 - 17 ( 2002 ) MATH CrossRef .", "label": "", "metadata": {}, "score": "60.175278"}
{"text": "Wiley , Chichester ( 2004 ) ( to be published ) .van Deursen , A. , Klint , P. : Domain - specific language design requires feature descriptions .Journal of Computing and Information Technology 10 , 1 - 17 ( 2002 ) MATH CrossRef .", "label": "", "metadata": {}, "score": "60.175278"}
{"text": "The second part of this tutorial presents a case study on a DSL , DynDoc , for the dynamic generation of HTML / XML documents in Web services .Finally , we broaden the scope of this tutorial by presenting a domain , namely communication services , where DSLs can be used as a paradigm for software development .", "label": "", "metadata": {}, "score": "60.477108"}
{"text": "exploring cutting - edge techniques for developing generative and .component - based software , our goal is to foster further .cross - fertilization between the software engineering research . community and the programming languages community .SUBMISSIONS .10 pages in SIGPLAN proceedings style ( sigplanconf.cls ) reporting .", "label": "", "metadata": {}, "score": "61.224045"}
{"text": "exploring cutting - edge techniques for developing generative and .component - based software , our goal is to foster further .cross - fertilization between the software engineering research . community and the programming languages community .SUBMISSIONS .10 pages in SIGPLAN proceedings style ( sigplanconf.cls ) reporting .", "label": "", "metadata": {}, "score": "61.224045"}
{"text": "Proceedings of the Software Product Line Conference ( SPLC1 ) , pp .47 - 70 .Kluwer Academic Publishers , Dordrecht ( 2000 ) .Svahnberg , M. , van Gurp , J. , Bosch , J. : On the notion of variability in software product lines .", "label": "", "metadata": {}, "score": "62.977806"}
{"text": "Proceedings of the Software Product Line Conference ( SPLC1 ) , pp .47 - 70 .Kluwer Academic Publishers , Dordrecht ( 2000 ) .Svahnberg , M. , van Gurp , J. , Bosch , J. : On the notion of variability in software product lines .", "label": "", "metadata": {}, "score": "62.977814"}
{"text": "A well known speaker and writer , he is co - author of the book on Software Factories used in this tutorial .He also contributed to UML , J2EE and related OMG and JSP specifications .He holds a B.S. in Physics from George Mason University .", "label": "", "metadata": {}, "score": "65.15939"}
{"text": "( co - located with OOPSLA'06 ) .Sponsored by ACM SIGPLAN , in cooperation with ACM SIGSOFT .Proceedings to be published by ACM Press .IMPORTANT DATES .extensions ) .SCOPE .Generative and component approaches are revolutionizing software .", "label": "", "metadata": {}, "score": "66.19247"}
{"text": "Walid Taha is an Assistant Professor at Rice University , USA .He played a lead role in development of both the multi - stage programming paradigm and the MetaOCaml implementation .Cristiano Calcagno is a Researcher at Queen Mary University , UK .", "label": "", "metadata": {}, "score": "66.59738"}
{"text": "For additional information , clarification , or questions please feel .free to contact the Program Committee Co - chairs .( Gpce06-chairs - l at mailman.rice.edu ) .GPCE Tutorials and Workshops .GPCE Tutorials , extending over a half or full day , give a deeper or .", "label": "", "metadata": {}, "score": "68.73869"}
{"text": "For additional information , clarification , or questions please feel .free to contact the Program Committee Co - chairs .( Gpce06-chairs - l at mailman.rice.edu ) .GPCE Tutorials and Workshops .GPCE Tutorials , extending over a half or full day , give a deeper or .", "label": "", "metadata": {}, "score": "68.73869"}
{"text": "Krzysztof Czarnecki , University of Waterloo : Krzysztof Czarnecki is an Assistant Professor at the University of Waterloo , Canada .Before coming to Waterloo , he spent 8 years at DaimlerChrysler Research working on the practical applications of generative programming .", "label": "", "metadata": {}, "score": "69.23373"}
{"text": "Program Committee Members : .Giuseppe Attardi ( University of Pisa , Italy ) .Elisa Baniassad ( Chinese University of Hong Kong , China ) .Don Batory ( University of Texas at Austin , USA ) .Ira Baxter ( Semantic Designs , USA ) .", "label": "", "metadata": {}, "score": "70.14918"}
{"text": "Program Committee Members : .Giuseppe Attardi ( University of Pisa , Italy ) .Elisa Baniassad ( Chinese University of Hong Kong , China ) .Don Batory ( University of Texas at Austin , USA ) .Ira Baxter ( Semantic Designs , USA ) .", "label": "", "metadata": {}, "score": "70.14918"}
{"text": "Krzysztof Czarnecki , University of Waterloo Wednesday , Oct 25 , from 13:30 to 17:00 .Abstract .Product - line engineering seeks to exploit the commonalities among systems from a given problem domain while managing the variabilities among them in a systematic way .", "label": "", "metadata": {}, "score": "70.684"}
{"text": "Charles Consel ( INRIA / LaBRI / ENSEIRB ) Claus Brabrand ( INRIA / LaBRI / ENSEIRB ) .An increasing number of domain - specific languages ( DSLs ) are being developed and successfully used in a variety of areas including networking , telecommunications , and financial products .", "label": "", "metadata": {}, "score": "71.196396"}
{"text": "Last year , he completed his latest book \" Executable UML : A Foundation for Model - Driven Architecture . \"He has almost finished his latest book \" MDA Distilled , \" available from Addison Wesley in late 2003 .In his copious spare time , he is a member of the IEEE Software Industrial Advisory Board .", "label": "", "metadata": {}, "score": "71.24309"}
{"text": "Last year , he completed his latest book \" Executable UML : A Foundation for Model - Driven Architecture . \"He has almost finished his latest book \" MDA Distilled , \" available from Addison Wesley in late 2003 .In his copious spare time , he is a member of the IEEE Software Industrial Advisory Board .", "label": "", "metadata": {}, "score": "71.24309"}
{"text": "GPCE Workshops provide intensive collaborative environments , where . generative and component technologists meet to discuss and resolve . challenging problems in the field .Tutorial and workshop proposals are due Mar 18 , 2006 .October 22 - 26 , 2006 .", "label": "", "metadata": {}, "score": "73.71127"}
{"text": "Lightweight run - time code generation .In Proceedings of the 1994 ACM SIGPLAN Workshop on Partial Evaluation and Semantics - Based Program Manipulation , pages 97 - 106 .Technical Report 94/9 , Department of Computer Science , University of Melbourne , June 1994 .", "label": "", "metadata": {}, "score": "74.27762"}
{"text": "His current research focuses on realizing the synergies between generative and model - driven software development .Jack Greenfield , Microsoft Corporation : Jack Greenfield is an Architect for Enterprise Frameworks and Tools at Microsoft .He was previously Chief Architect , Practitioner Desktop Group , at Rational Software Corporation , and Founder and CTO of InLine Software Corporation .", "label": "", "metadata": {}, "score": "74.30937"}
{"text": "Wednesday , Oct 25 , from 13:30 to 17:00 .Product - line engineering seeks to exploit the commonalities among systems from a given problem domain while managing the variabilities among them in a systematic way .In product - line engineering , new system variants can be rapidly created based on a set of reusable assets ( such as a common architecture , components , models , etc . ) .", "label": "", "metadata": {}, "score": "76.42389"}
{"text": "He is currently a research scientist at INRIA and the University of Bordeaux INRIA / LaBRI .Areas of interest and research include : domain specific languages , general purpose languages , program analysis , compilers , and Web technology .Walid Taha ( Rice University ) Cristiano Calcagno ( Imperial College London ) .", "label": "", "metadata": {}, "score": "76.54185"}
{"text": "Eugenio Moggi ( University of Genoa , Italy ) .Greg Morrisett ( Harvard University , USA ) .Frank Pfenning ( Carnegie Mellon University , USA ) .Tim Sheard ( Portland State University , USA ) .Yannis Smaragdakis ( Georgia Tech , USA ) .", "label": "", "metadata": {}, "score": "86.74757"}
{"text": "Eugenio Moggi ( University of Genoa , Italy ) .Greg Morrisett ( Harvard University , USA ) .Frank Pfenning ( Carnegie Mellon University , USA ) .Tim Sheard ( Portland State University , USA ) .Yannis Smaragdakis ( Georgia Tech , USA ) .", "label": "", "metadata": {}, "score": "86.74757"}
{"text": "The program committee is .happy to advise on the appropriateness of a particular subject .General Chair .Stanislaw Jarzabek ( National University of Singapore , Singapore ) .Program Committee .Program Chairs : .Douglas Schmidt ( Vanderbilt University , USA ) .", "label": "", "metadata": {}, "score": "86.94432"}
{"text": "The program committee is .happy to advise on the appropriateness of a particular subject .General Chair .Stanislaw Jarzabek ( National University of Singapore , Singapore ) .Program Committee .Program Chairs : .Douglas Schmidt ( Vanderbilt University , USA ) .", "label": "", "metadata": {}, "score": "86.94432"}
{"text": "H.-Arno Jacobsen ( University of Toronto , Canada ) .Oleg Kiselyov ( FNMOC , USA ) .Fabio Kon ( University of S\u00e3o Paolo , Brazil ) .Karl Lieberherr ( Northeastern University , USA ) .Joe Loyall ( BBN Technologies , USA ) .", "label": "", "metadata": {}, "score": "87.05874"}
{"text": "H.-Arno Jacobsen ( University of Toronto , Canada ) .Oleg Kiselyov ( FNMOC , USA ) .Fabio Kon ( University of S\u00e3o Paolo , Brazil ) .Karl Lieberherr ( Northeastern University , USA ) .Joe Loyall ( BBN Technologies , USA ) .", "label": "", "metadata": {}, "score": "87.05874"}
{"text": "Apologies for multiple / overlapping posts .October 22 - 26 , 2006 .Portland , Oregon .( co - located with OOPSLA'06 ) .Sponsored by ACM SIGPLAN , in cooperation with ACM SIGSOFT .Proceedings to be published by ACM Press .", "label": "", "metadata": {}, "score": "87.56804"}
{"text": "Charles Consel ( INRIA / LaBRI , France ) .Krzysztof Czarnecki ( University of Waterloo , Canada ) .Aniruddha Gokhale ( Vanderbilt University , USA ) .Jeff Gray ( U. of Alabama Birmingham , USA ) .George Heineman ( Worcester Polytechnic Institute , USA ) .", "label": "", "metadata": {}, "score": "89.30348"}
{"text": "Charles Consel ( INRIA / LaBRI , France ) .Krzysztof Czarnecki ( University of Waterloo , Canada ) .Aniruddha Gokhale ( Vanderbilt University , USA ) .Jeff Gray ( U. of Alabama Birmingham , USA ) .George Heineman ( Worcester Polytechnic Institute , USA ) .", "label": "", "metadata": {}, "score": "89.30348"}
{"text": "Peri Tarr ( IBM TJ Watson , USA ) .Peter Thiemann ( Freiburg University , Germany ) .Eelco Visser ( Utrecht University , The Netherlands ) .Workshops / Tutorials chairs : .Christa Schwanninger ( Siemens , Germany ) .", "label": "", "metadata": {}, "score": "92.78135"}
{"text": "Peri Tarr ( IBM TJ Watson , USA ) .Peter Thiemann ( Freiburg University , Germany ) .Eelco Visser ( Utrecht University , The Netherlands ) .Workshops / Tutorials chairs : .Christa Schwanninger ( Siemens , Germany ) .", "label": "", "metadata": {}, "score": "92.78135"}
{"text": "Torben \u00c6. Mogensen ( DIKU , Denmark ) .Emir Pasalic ( Rice University , USA ) .Calton Pu ( Georgia Tech , USA ) .Tim Sheard ( Portland State University , USA ) .Yannis Smaragdakis ( Georgia Tech , USA ) .", "label": "", "metadata": {}, "score": "96.12307"}
{"text": "Torben \u00c6. Mogensen ( DIKU , Denmark ) .Emir Pasalic ( Rice University , USA ) .Calton Pu ( Georgia Tech , USA ) .Tim Sheard ( Portland State University , USA ) .Yannis Smaragdakis ( Georgia Tech , USA ) .", "label": "", "metadata": {}, "score": "96.12307"}
{"text": "Publicity chair : .Emir Pasalic ( Rice University , USA ) .Steering Committee : .Don Batory ( University of Texas at Austin , USA ) .Krzysztof Czarnecki ( University of Waterloo , Canada ) .Ulrich Eisenecker ( University of Leipzig , Germany ) .", "label": "", "metadata": {}, "score": "96.48161"}
{"text": "Publicity chair : .Emir Pasalic ( Rice University , USA ) .Steering Committee : .Don Batory ( University of Texas at Austin , USA ) .Krzysztof Czarnecki ( University of Waterloo , Canada ) .Ulrich Eisenecker ( University of Leipzig , Germany ) .", "label": "", "metadata": {}, "score": "96.48161"}
