{"text": "In practice , it requires that the type of a feature instance is determined before it can be described .The feature model may be instantiated in either a \" strong - typed \" or \" weak - typed \" ( also known as soft - typed ) manner .", "label": "", "metadata": {}, "score": "37.769135"}
{"text": "Comparisons of CG , HPSG and other theories are also welcome .Finally , the workshop is open to papers on the formal and computational properties of typed feature structure grammars , incl .complexity , learnability , and portability .The proceedings are planned to be published in the form of a book .", "label": "", "metadata": {}, "score": "39.018925"}
{"text": "For a particular feature type , the weak - typed model should be isomorphic with the equivalent strong - typed model ( i.e. with the same graph or tree structure ) but the semantics are carried by a slightly different syntax .", "label": "", "metadata": {}, "score": "39.487183"}
{"text": "In common with highly normalised database table schemas , the additional flexibility comes with an attendant processing burden .In the soft - typed pattern the encoding in the data instance is closer to a \" schema - level \" view .", "label": "", "metadata": {}, "score": "39.958908"}
{"text": "This extension addresses these limitations whiIe preserving the desirable properties of FUGs .It is based on the notions of typed features and typed constituents .We show the advantages of this extension in the context of a grammar used for text generation . ...", "label": "", "metadata": {}, "score": "40.995445"}
{"text": "This thesis is an investigation of the representation of lexical semantic information from a computational linguistic perspective .An implemented representation language is described which is not specic to lexical semantics , but is based on the use of typed feature structures augmented with default operations .", "label": "", "metadata": {}, "score": "41.04215"}
{"text": "This thesis is an investigation of the representation of lexical semantic information from a computational linguistic perspective .An implemented representation language is described which is not specic to lexical semantics , but is based on the use of typed feature structures augmented with default operations .", "label": "", "metadata": {}, "score": "41.04216"}
{"text": "the instance would be strong - typed , but .the schemaLocation would refer to an XML Schema generated dynamically , for only this instance .The disadvantage of this full - on just - in - time XML schema approach are .", "label": "", "metadata": {}, "score": "41.08352"}
{"text": "Section 4 gives some examples illustrating this system 's expressive power .Section 5 presents the main results of the paper : a prooftheoretic analysis of F 's subtyping and typechecking relations leading to algorithms for checking subtyping and for synthesizing minimal types for terms .", "label": "", "metadata": {}, "score": "42.05452"}
{"text": "But , just as a \" normalised \" approach is often taken in storing such data , a soft - typed approach , where the observed property is a variable as well as the value , is more scalable and ultimately more practical .", "label": "", "metadata": {}, "score": "42.15406"}
{"text": "The Logic of Typed Feature Structures with Applications to Unification Grammars , Logic Programs and Constraint Resolution_.Cambridge Tracts in Theoretical Computer Science 32 , Cambridge University Press .It also details the completeness results for the description languages .", "label": "", "metadata": {}, "score": "42.733757"}
{"text": "Moreover , additional types of feature values , such as & q ... \" .This paper shows how these structures can be axiomatized in a decidable class of first - order logic , which can also be used to express constraints on these structures .", "label": "", "metadata": {}, "score": "43.444862"}
{"text": "As an application of this general result , we give two proofs of strong normalization for the second - order polymorphic ...Designing a Feature - type catalogue requires that the set of feature types of interest to the community be identified , and content models for these types be agreed .", "label": "", "metadata": {}, "score": "43.49536"}
{"text": "Background . by Robert Harper , Mark Lillibridge - LISP and Symbolic Computation , 1993 . \" ...Meyer and Wand established that the type of a term in the simply typed - calculus may be related in a straightforward manner to the type of its call - by - value CPS transform .", "label": "", "metadata": {}, "score": "43.564407"}
{"text": "Using strong - typing , the feature type is assigned or determined first , then the necessary properties listed and values provided .In a XML implementation , this can result in relatively simple feature instances where the feature - type is given by an XML element name , and the properties are subelements with appropriate names . ...", "label": "", "metadata": {}, "score": "43.920128"}
{"text": "Unlike rule - based theories , in HPSG , immediate dominance and linear precedence conditions ( traditional ... . \" ...This paper discusses an approach to feature logic called the structural approach .The method consists in first viewing feature structures as models ( or relational structures ) in the standard model theoretic sense , and then going on to consider various languages that can be interpeted on these struct ... \" .", "label": "", "metadata": {}, "score": "43.929947"}
{"text": "Refinement of the application multiplies the number of feature types that must be defined and maintained .Versioning must be handled carefully .Weak - typing requires only that a vocabulary of feature - type labels be maintained .Adding an item to a list is easier than creating a complete type definition , so versioning is not so onerous or risky .", "label": "", "metadata": {}, "score": "44.12014"}
{"text": "Highlight all BibTeX Format .This ebook is available for the following devices : . iPad .This book develops the theory of typed feature structures , a data structure that generalizes both first - order terms and feature structures of unification - based grammars to include inheritance , typing , inequality , cycles and intensionality .", "label": "", "metadata": {}, "score": "44.27016"}
{"text": "Features of the logic programming system include negation , disjunction and cuts .It has last call optimization , but does not perform any argument indexing .On the ' naive reverse ' benchmark , it performed at 1000 LI / s on a DEC 5100 running SICStus 2.1 , which is rouglhy 15 % as fast as the SICStus interpreter and 1.5 % as fast as the SICStus compiler .", "label": "", "metadata": {}, "score": "44.333363"}
{"text": "We present a simple extension of typed -calculus where functions can be overloaded by putting different \" branches of code \" together .When the function is applied , the branch to execute is chosen according to a particular selection rule which depends on the type of the argument .", "label": "", "metadata": {}, "score": "44.67812"}
{"text": "We present a simple extension of typed -calculus where functions can be overloaded by putting different \" branches of code \" together .When the function is applied , the branch to execute is chosen according to a particular selection rule which depends on the type of the argument .", "label": "", "metadata": {}, "score": "44.67812"}
{"text": "A second - order type system over these operations supports both subtyping and polymorphism .We provide typechecking algorithms and limited semantic models .Our approach unifies and extends previous notions of records , bounded quantification , record extension , and parametrization by row - variables .", "label": "", "metadata": {}, "score": "44.96461"}
{"text": "A general lexical rule component is provided , including procedural attachment and general methods for orthographic transformations using pattern matching or Prolog .Empty categories are permitted in the grammar .Both the phrase structure and logic programming components of the system allow parametric macros to be defined and freely employed in descriptions .", "label": "", "metadata": {}, "score": "45.15914"}
{"text": "this paper we suggest some strategies for reuniting phonology and the rest of grammar in the context of a uniform constraint formalism .We explain why this is a desirable goal , and we present some conservative extensions to current practice in computational linguistics and in non - linear phonology which we believe are necessary and sufficient for achieving this goal .", "label": "", "metadata": {}, "score": "45.684067"}
{"text": "Moreover , additional types of feature values , such as \" set - valued \" features , can be incorporated into the system simply by axiomatizing their properties . \" ...This thesis is an investigation of the representation of lexical semantic information from a computational linguistic perspective .", "label": "", "metadata": {}, "score": "45.740017"}
{"text": "Meyer and Wand established that the type of a term in the simply typed - calculus may be related in a straightforward manner to the type of its call - by - value CPS transform .This typing property maybe extended to Scheme - like continuation - passing primitives , from which the soundness of these extensions follows .", "label": "", "metadata": {}, "score": "45.860638"}
{"text": "In addition , a formal language for the statement of constraints on categories is provided .The problem ' of checking a category for conformity to constraints is shown to be soivable in linear time .This work provides in effect a unitary class of data structures for the representation of syntactic categories in a range of diverse grammatical frameworks .", "label": "", "metadata": {}, "score": "46.180115"}
{"text": "These criteria ensure that the default unification operation has properties familiar from monotonic unification , such as determinacy , the way information is accumulated , the conditions when unification fails , and order independence .We will justify these assumptions with respect to particular linguistic examples in 4 . \" ... this paper we suggest some strategies for reuniting phonology and the rest of grammar in the context of a uniform constraint formalism .", "label": "", "metadata": {}, "score": "46.391968"}
{"text": "We conclude by examining the questions posed by set - valued features and sharing of values between distinct feature specifications , both of which fall outside the scope of the formal system developed in this paper . \" ...This paper shows how these structures can be axiomatized in a decidable class of first - order logic , which can also be used to express constraints on these structures .", "label": "", "metadata": {}, "score": "46.421623"}
{"text": "Using a type system it is possible to specify , for example , that lexical entries hav ... .by Udo Hahn , Susanne Schacht , Norbert Br\u00f6ker - INTERNATIONAL JOURNAL OF HUMAN - COMPUTER STUDIES , 1994 . \" ...The ParseTalk model of concurrent , object - oriented natural language parsing is introduced .", "label": "", "metadata": {}, "score": "47.19554"}
{"text": "I have also been involved with constraint resolution and constraint logic programming methods over typed feature structures , particularly in the context of Head - driven Phrase Structure Grammar ( HPSG ) development .I am also currently interested in the relationship between feature logic , category theory , constructive type theory and object - oriented programming , which may ultimately lead to a formalism for linguistic theorising that is at once mathematically more mature and computationally more elegant and modular .", "label": "", "metadata": {}, "score": "47.38951"}
{"text": "One advantage the logical perspective confe ... . \" ...This paper gives a simple method for providing categorial brands of feature - based unification grammars with a model - theoretic semantics .The key idea is to apply the paradigm of fibred semantics ( or layered logics , see [ 15 ] ) in order to combine the two components of a featurebased grammar logic .", "label": "", "metadata": {}, "score": "47.667706"}
{"text": "So how \" generic \" should our implemented feature - types be ?The examples shown above are in fact merely positions on what will normally be a continuum of types .For example , the hierarchies : . show sequences in which the set of properties on a sample might be progressively refined .", "label": "", "metadata": {}, "score": "47.929817"}
{"text": "Under weak - typing , the set of properties is not constrained by structural validity .Feature - instance production is described by rules , rather than a grammar .In a strong - typing environment , the consuming software will typically be pre - configured for feature types from the community catalogue .", "label": "", "metadata": {}, "score": "48.022682"}
{"text": "The grammar model integrates d ... \" .The ParseTalk model of concurrent , object - oriented natural language parsing is introduced .It builds upon the complete lexical distribution of grammatical knowledge and incorporates inheritance mechanisms in order to express generalizations over sets of lexical items .", "label": "", "metadata": {}, "score": "48.133804"}
{"text": "processing software must be fully XML schema - aware , and can not be pre - configured for specific feature types .A sensible \" soft - typing \" approach permits limited \" schema \" information at selected positions in an instance .", "label": "", "metadata": {}, "score": "48.43826"}
{"text": "There is less experience in managing strong feature typing regimes .SEEGrid and related projects are directly addressing this issue . \" ...This thesis investigates the impact of the pragmatic situation on surface generation .It presents new surface generation techniques that improve on both aspects of surface generation : ( 1 ) lexical choice , which consists of choosing words and their associated syntactic structures and ( 2 ) syntactic rea ... \" .", "label": "", "metadata": {}, "score": "48.58255"}
{"text": "Papers may address .the linguistic or computational ( dis-)advantages of typed feature structure - based formalisms , incl .CG and HPSG , and comparisons of such formalisms with other linguistic theories , .the comparison of theories and computational implementations of typed feature structures , and .", "label": "", "metadata": {}, "score": "48.67202"}
{"text": "Under strong - typing , the definition of a feature type is reflected directly in the data structure .For example , using XML the feature type is fully described by the XML Schema for the element representing this feature type .", "label": "", "metadata": {}, "score": "48.938683"}
{"text": "The method consists in first viewing feature structures as models ( or relational structures ) in the standard model theoretic sense , and then going on to consider various languages that can be interpeted on these structures and the way these languages are interrelated .", "label": "", "metadata": {}, "score": "49.0512"}
{"text": "Abstract .The LinGO grammar consists of a specification of a type system and of various typed feature structures which are well - formed according to the type system .The typed feature structures function as grammar rules , lexical rules and lexical entries .", "label": "", "metadata": {}, "score": "49.36155"}
{"text": "Weakly - typed features .When applying a full weak - typing pattern , a generic feature has generic properties , and maybe a property that specifies ( or refines ) the \" feature - type \" itself .The value of this feature - type parameter may be selected from a controlled source ( list or authority table ) , but does not directly affect other aspects of the feature description .", "label": "", "metadata": {}, "score": "49.40507"}
{"text": "The linguistics and natural language engineering community , including the Scandinavian one , have regained interestest in typed feature structure grammars in the recent years .In particular , efficient parsing algorithms have stimulated the development of broad - coverage computational grammars for a variety of languages .", "label": "", "metadata": {}, "score": "49.47644"}
{"text": "Copying of structures accounts for a considerable amount of the total processing time .Several methods have been proposed to min ... \" .This paper presents a unification procedure which eliminates the redundant copying of structures by using a lay incremental copying approach to achieve structure sharing .", "label": "", "metadata": {}, "score": "49.60065"}
{"text": "This appendix is necessarily terse , and is only intended to allow a reader who already has a knowledge of typed feature structures to understand the specific formalism used in the LinGO grammar .The definitions given below basically follow Carpenter ( 1992 ) , with the notion of type constraint from Copestake ( 1992 ) .", "label": "", "metadata": {}, "score": "50.156044"}
{"text": "this paper ( Compagnoni , Intersection Types and Bounded Polymorphism 3 1994 ; Compagnoni , 1995 ) has been used in a type - theoretic model of object - oriented multiple inheritance ( Compagnoni & Pierce , 1996 ) .Related calculi combining restricted forms of intersection types with higher - order polymorphism and dependent types have been studied by Pfenning ( Pfenning , 1993 ) .", "label": "", "metadata": {}, "score": "50.187153"}
{"text": "In our work on text generation , we have found that it also has annoying limitations : it is not suited for the expression of simple , yet very common , taxonomic relations and it does not allow the specification of completeness conditions .", "label": "", "metadata": {}, "score": "50.212708"}
{"text": "Pros and Cons .The use of strong- and weak - typing patterns have various advantages and disadvantages .Maintenance of the catalogue .From the point of view of the community responsible for maintaining the catalogue of feature types : .", "label": "", "metadata": {}, "score": "50.44833"}
{"text": "Hence overloading can not be eliminated by a static analysis of code , but is an essential feature to be dealt with during computation .We obtain in this way a type - dependent calculus , which differs from the various -calculi where types do not play any role during computation .", "label": "", "metadata": {}, "score": "50.94227"}
{"text": "In particular , difficulties arise when we try to model simultaneously features such as contravariant function spaces , record types , subtyping , recursive types , and fixpoints .In this paper we describe in detail the type inference rules for Quest , and we give them meaning using a partial equivalence relation model of types .", "label": "", "metadata": {}, "score": "50.97708"}
{"text": "The Workshop on Typed Feature Structure Grammars is a forum in which these questions can be asked and , maybe , answered .Typed feature structure grammars include construction grammar ( CG ) , head - driven phrase structure grammar ( HPSG ) and some versions of categorial grammar .", "label": "", "metadata": {}, "score": "51.21388"}
{"text": "A detailed account of the specific assumptions made here is given in Copestake ( 1999 ) ( See Chapter 4 for an introduction , and Chapter 5 for a semi - formal account . )Note that the LinGO grammar uses a very restricted formalism .", "label": "", "metadata": {}, "score": "51.39338"}
{"text": "Constraint resolution does not require that every type be made maximally specific , and the type inference system is essentially non - recursive .The recursive power necessary in grammars is explicitly encoded via rules , which are expressed as typed feature structures , but interpreted as phrase structure rules .", "label": "", "metadata": {}, "score": "51.781803"}
{"text": "The strategy I have adopted to pursue this goal consists of several related threads of research activity in specialised logics for computational linguistics , other means of grammar specification , and their applications .Typed feature logic .Feature logics are a very convenient and flexible class of description logics that have been applied to virtually every level of linguistic description and every kind of linguistic application .", "label": "", "metadata": {}, "score": "51.93132"}
{"text": "The ideal model of [ MPS86 ] , for example , can be viewed as a PER inference model , as defined in [ Mit88 ] , by replacing each ideal I with the partial equivalence ... . ... tal definitions used in this section are based on papers of Bruce and Longo [ 12 ] , Freyd , Mulry , Rosolini , and Scott [ 61 ] , and others .", "label": "", "metadata": {}, "score": "51.933983"}
{"text": "It presents new surface generation techniques that improve on both aspects of surface generation : ( 1 ) lexical choice , which consists of choosing words and their associated syntactic structures and ( 2 ) syntactic realization , which consists of combining these partial structures into grammatical sentences .", "label": "", "metadata": {}, "score": "51.982277"}
{"text": "This paper outlines a simple and general notion of syntactic category on a metatheoretical level , independent of the notations and substantive claims of any particular grammatical framework .We define a class of formal objects called \" category structures \" where each such object provides a constructive definition for a space of syntactic categories .", "label": "", "metadata": {}, "score": "52.36945"}
{"text": "The weak - type provided by the data supplier may even be treated as a \" hint \" , and the user may take responsibility for classification on the basis of the properties and their values .In this encoding , the way that such an feature might be built on - demand by a set of \" joins \" to a narrow database table of properties ( see # Data_source below ) is quite obvious .", "label": "", "metadata": {}, "score": "52.378563"}
{"text": "These are combined by replacing ( or annotating ) atomic formulas of the first logic , i.e. the basic syntactic types , by formulas of the second .Modelling such a combined logic is less trivial than one might expect .Unification implements a global bookkeeping w ..", "label": "", "metadata": {}, "score": "52.386604"}
{"text": "A logical perspective is adopted which employs an attribute - value description language along with complete equational axiomatizations of the various systems of feature structures .At the same time , efficiency concerns are kept in mind and complexity and representability results are provided .", "label": "", "metadata": {}, "score": "52.452324"}
{"text": "Tools . me .The cha . by Gerald Gazdar , Geoffrey K. Pullum , Robert Carpenter , Ewan Klein , Thomas E. Hukari , Robert D. Levine - COMPUTATIONAL LINGUISTICS , 1988 . \" ...This paper outlines a simple and general notion of syntactic category on a metatheoretical level , independent of the notations and substantive claims of any particular grammatical framework .", "label": "", "metadata": {}, "score": "52.746605"}
{"text": "We obtain CPS transforms for the call - by - value interpretation , provided that the polymorphic let is restricted to values , and for the call - by - name interpretation with no restrictions .We prove that there is no call - by - value CPS transform for the full Damas - Milner language that validates the Meyer - Wand typing property and is equivalent to the standard call - by - value transform up to - conversion . ... neral , a polytype .", "label": "", "metadata": {}, "score": "52.819145"}
{"text": "This corresponds with the XML Schema \" extension \" mechanism .In GML languages based on XML Schema we tend to introduce high - level types with many generalised attributes , and then specialise by restriction as well as extension .The \" restriction \" phase ( which can only be implemented using a constraint language in UML ) is effectively where weakly - typed , but fully capable , objects are turned into strongly - typed objects .", "label": "", "metadata": {}, "score": "52.89411"}
{"text": "Definition : A total combinatory a .. by Luca Cardelli , Giuseppe Longo - JOURNAL OF FUNCTIONAL PROGRAMMING , 1991 . \" ...Quest is a programming language based on impredicative type quantifiers and subtyping within a three - level structure of kinds , types and type operators , and values .", "label": "", "metadata": {}, "score": "52.922104"}
{"text": "Substructural logics are logics that lack one or more of the usual structural rules that encode this insensitivity , making them a natural choice for expressing composition in natural languages .Categorial grammar has built upon this view using the Lambek Calculus and its various extensions to provide elegant accounts of coordination , quantifier scoping and many other complex phenomena from natural language .", "label": "", "metadata": {}, "score": "53.231064"}
{"text": "Such specialised typing would certainly be a scalability and maintenance nightmare .But exactly where the line should be drawn requires a more thorough exploration of some use cases and other issues .Consider some example instances of the latter two : . sour ... 20.1 1.3 ... .", "label": "", "metadata": {}, "score": "53.252174"}
{"text": "The IDAS natural - language generation system uses a KL - ONE type classifier to perform content determination , surface realisation , and part of text planning .Generation - by - classification allows IDAS to use a single representation and reasoning component for both domain and linguistic knowledge , which ... \" .", "label": "", "metadata": {}, "score": "53.341087"}
{"text": "less .Cambridge University Press ; November 2005 280 pages ; ISBN 9780511881176 Read online , or download in secure PDF format Title : The Logic of Typed Feature Structures Author : Robert L. Carpenter .Buy , download and read The Logic of Typed Feature Structures ( eBook ) by Robert L. Carpenter today !", "label": "", "metadata": {}, "score": "53.420193"}
{"text": "Grammars may also interleave unification steps with logic program goal calls ( as can be done in DCGs ) , thus allowing parsing to be interleaved with other system components .While ALE was developed to handle HPSG grammars , it can also execute PATR - II grammars , DCG grammars , Prolog , Prolog - II , and LOGIN programs , etc .", "label": "", "metadata": {}, "score": "53.785934"}
{"text": "Data retrieval considerations .A client for the data is likely to have a purpose in mind for which they require a specific set of properties .If we assume that the features would be delivered through a WFS , then formulation of requests is the most significant issue .", "label": "", "metadata": {}, "score": "53.841743"}
{"text": "Several methods have been proposed to minimize the amount of necessaxy copying .Lazy Incremental Copying ( LIC ) is presented as a new solution to the copying problem .It synthesizes ideas of lazy copying with the notion of chronological dereferencing for achieving a high amount of structure sharing . ... this paper .", "label": "", "metadata": {}, "score": "53.939995"}
{"text": "I am interested in all aspects of parsing according to a more realistic , modern view of grammar .That includes parsing with so - called freer word - order languages , in which constraint solving techniques combined with morphological information , functional information and/or statistically derived preferences must be used in order to efficiently match arguments to the grammatical relations of syntactic heads .", "label": "", "metadata": {}, "score": "54.11083"}
{"text": "ProFIT allows the programmer or grammar developer to declare an inheritance hierarchy , features and templates .Sorted feature terms can be used in ProFIT programs together with Prolog terms to provide a clearer description language for linguistic structures .ProFIT compiles all sorted feature terms into a Prolog term representation , so that the built - in Prolog term unification can be used for the unification of sorted feature structures , and no special unification algorithm is needed .", "label": "", "metadata": {}, "score": "54.287266"}
{"text": "We also compare various proofs that have appeared in the literature ( see section 11 ) .We conclude by sketching the extension of the above results to Girard 's higher - order polymorphic calculus F ! , and in appendix 1 , to F ! with product types .", "label": "", "metadata": {}, "score": "54.429985"}
{"text": "Default inheritance and default unication are discussed in detail .Grammar rules and lexical rules can be specied in the same formalism and thus the paradigmatic treatment of lexical semantics can be integrated with an account at the syntagmatic level .The use of the language is illustrated with some examples of the representation of verbs , the treatment of logical metonymy and of sense extension .", "label": "", "metadata": {}, "score": "54.470253"}
{"text": "Default inheritance and default unication are discussed in detail .Grammar rules and lexical rules can be specied in the same formalism and thus the paradigmatic treatment of lexical semantics can be integrated with an account at the syntagmatic level .The use of the language is illustrated with some examples of the representation of verbs , the treatment of logical metonymy and of sense extension .", "label": "", "metadata": {}, "score": "54.47026"}
{"text": "Generation - by - classification allows IDAS to use a single representation and reasoning component for both domain and linguistic knowledge , which is difficult for systems based on unification or systemic generation techniques . \" ...This thesis is an investigation of the representation of lexical semantic information from a computational linguistic perspective .", "label": "", "metadata": {}, "score": "54.83956"}
{"text": "This paper gives a simple method for providing categorial brands of feature - based unification grammars with a model - theoretic semantics .The key idea is to apply the paradigm of fibred semantics ( or layered logics , see [ 15 ] ) in order to combine the two components of a featurebased grammar logic .", "label": "", "metadata": {}, "score": "54.91947"}
{"text": "Barring criterion 6 , all of the above ... \" .this paper allows any defaults to be overridden by defaults which are associated with more specific types : thus priority ordering reflects the type hierarchy ordering .( In 6.2 , we will mention other possibilities for imposing a priority order on defaults . )", "label": "", "metadata": {}, "score": "55.109932"}
{"text": "Programs are then compiled into low - level Prolog instructions corresponding to the basic operations of the typed Rounds - Kapser logic .There is a strong type discipline enforced on descriptions , allowing many errors to be detected at compile - time .", "label": "", "metadata": {}, "score": "55.225464"}
{"text": "( Empty Category Principle and Subjacency ) and so forth .Patterns of cross - linguistic variation are accounted for by means of the parametrization of these principles .The method ... \" .this paper .The research of Pollard and Franz was supported by a grant from the National Science Foundation ( IRI-8806913 ) .", "label": "", "metadata": {}, "score": "55.48747"}
{"text": "In order to report such data in the context of a feature - instance , the following options are possible : . report all values in a weak - typed feature such as RockWithProperties shown above . select the values required to populate a strong - typed feature such as RockWithMohrCoulombProperties .", "label": "", "metadata": {}, "score": "55.642498"}
{"text": "or : . listserv tamvm1 ( if you 're on Bitnet ) .The .The program sorts the .It then replaces two .I welcome suggestions as to which of .Postproceedings .The postproceedings of the 1stInternational Workshop on Typed Feature Structure Grammars ( TFSG'06 ) will be published by Peter Lang GmbH ( European University Studies Series XXI - Linguistics ) .", "label": "", "metadata": {}, "score": "55.76615"}
{"text": "In particular , difficulties arise when we try to model simultaneously features such as c ... \" .Quest is a programming language based on impredicative type quantifiers and subtyping within a three - level structure of kinds , types and type operators , and values .", "label": "", "metadata": {}, "score": "56.07801"}
{"text": "by Jean H. Gallier , Jean H. Gallier - Logic and Computer Science , 1990 . \" ...Abstract : We attempt to elucidate the conditions required on Girard 's candidates of reducibility ( in French , \" candidats de reductibilit\u00e9 \" ) in order to establish certain properties of various typed lambda calculi , such as strong normalization and Church - Rosser property .", "label": "", "metadata": {}, "score": "56.112053"}
{"text": "Phonology in Constraint - Based Grammar Classical generative phonology is couched within the same set of assumptions that dominated standard transformational grammar .While this work has an increasingly declarative flavour , most versions retain procedural devices for repairing representations that fail to meet certain constraints , or for constraints to override each other .", "label": "", "metadata": {}, "score": "56.393845"}
{"text": "Alternatively , the consuming software may be auto - configured by processing the relevant community schema , in which case access to the latter and knowledge of its schema language is the only requirement .Weakly - typed data is more highly normalised , and consumption depends on ( often repetitive ) application of more generic operations .", "label": "", "metadata": {}, "score": "56.614174"}
{"text": "ProFIT is an extension of Standard Prolog with Features , Inheritance and Templates .ProFIT allows the programmer or grammar developer to declare an inheritance hierarchy , features and templates .Sorted feature terms can be used in ProFIT programs together with Prolog terms to provide a clearer descr ... \" .", "label": "", "metadata": {}, "score": "56.839096"}
{"text": "Patterns of cross - linguistic variation are accounted for by means of the parametrization of these principles .The methodological distinction between these two approaches is widely supposed to be that rules enumerate possibilities , while principles eliminate possibilities .But it is quite difficult to distinguish formally between a parametrized disjunctive principle and a collection of schematic rules only one of which can apply to a given structure .", "label": "", "metadata": {}, "score": "57.041504"}
{"text": "Z Documentation LaTeX 150k 61k . dvi 200k 93k PostScript 530k 236k Program ALE 85k 28k grammars 10k 4k Otherwise , documentation can be sent out by hard mail .Tape or disk copies of the system might be possible if absolutely necessary .", "label": "", "metadata": {}, "score": "57.103188"}
{"text": "The types and features used by a particular grammar are declared in a partial order called a signature , which describes how feature structures can combine and inherit information .My doctoral thesis was a study of algebraic methods for analysing these type signatures , with applications to grammar transformation , parametric typing , and computing various structural closures over signature specifications .", "label": "", "metadata": {}, "score": "57.20217"}
{"text": "These two objectives are usually separated more in the UML - based models : the root objects have semantically meaningful names but very few attributes , whereas if a fully - capable object type is required then it is the end of a derivation chain , not the beginning .", "label": "", "metadata": {}, "score": "57.33188"}
{"text": "Substructural logic .It is a common formal view of natural language understanding that each word of a sentence contributes some syntactic and semantic information which is combined by rules to form the meaning of the sentence .The order of the words and the number of times a word occurs clearly should matter to this composition .", "label": "", "metadata": {}, "score": "57.399178"}
{"text": "Namely , we propose to include intervals and a special kind of sets .Partial consistency checks can be made on these concepts descriptions during the unification of feature terms .Type checking on these special involves calling the classifier of the terminological language .", "label": "", "metadata": {}, "score": "57.449585"}
{"text": "Let us look at these alternative encodings from a number of points of view .Data source considerations .In a rock - property database it is unlikely that the set of measurements on each specimen is homogeneous .Furthermore , it is questionable whether the set of properties that might be measured can even be enumerated .", "label": "", "metadata": {}, "score": "57.46946"}
{"text": "Abstract : We attempt to elucidate the conditions required on Girard 's candidates of reducibility ( in French , \" candidats de reductibilit\u00e9 \" ) in order to establish certain properties of various typed lambda calculi , such as strong normalization and Church - Rosser property .", "label": "", "metadata": {}, "score": "57.720673"}
{"text": "We define a simple collection of operations for creating and manipulating record structures , where records are intended as finite associations of values to labels .A second - order type system over these operations supports both subtyping and polymorphism .We provide typechecking algorithms and limite ... \" .", "label": "", "metadata": {}, "score": "57.77127"}
{"text": "Typed feature structure grammars .Berlin : Peter Lang GmbH. Program and short abstracts .Introduction .Section 1 : Formal foundations ( Chair : Petter Haugereid ) .Anders S\u00f8gaard , Center for Language Technology , Copenhagen : \" Typed feature structure grammars and model generation \" .", "label": "", "metadata": {}, "score": "57.822784"}
{"text": "This is the usual GML encoding pattern .The strong - typing approach is particularly suitable for domains where the items of interest are artefacts that are created or asserted ( e.g. constructions , observation features ) , so their type is known a priori .", "label": "", "metadata": {}, "score": "57.84508"}
{"text": "We prove Strong Normalization for a \" stratified \" subcalculus .The definition of this calculus is guided by the understand ... . ... ies As is well known , strong normalization can not be proved by induction on terms , sincesreduction potentially increases the size of the reduced term .", "label": "", "metadata": {}, "score": "57.875763"}
{"text": "We present two sets of conditions for the typed version of the candidates .The first set consists of conditions similar to those used by Stenlund ( basically the typed version of Tait 's conditions ) , and the second set consists of Girard 's original conditions .", "label": "", "metadata": {}, "score": "58.017265"}
{"text": "The latter is based on a new encoding of record types .We concentrate on modeling quantifiers and subtyping ; recursion is the subject of current work . by John C. Mitchell , Eugenio Moggi - Annals of Pure and Applied Logic , 1996 . \" ...", "label": "", "metadata": {}, "score": "58.52668"}
{"text": "For example , the weakly - typed Road instance shown above is almost the same as the W3C XML schema that defines the strong - typed version : .Another way of thinking about it is that , putting schema - level information in the instance is a kind of \" just - in - time \" schema .", "label": "", "metadata": {}, "score": "59.072796"}
{"text": "In an early HPSG grammar , where feature structures consisted of roughly 100 - 200 nodes each , a 10 word sentence producing 25 completed inactive edges parsed in roughly two seconds , using SICStus 2.1 on a DEC 5100 .Complete documentation ( running to 80 pages , with examples of everything , programming advice , and sample grammars ) , is available as : Bob Carpenter ( 1992 ) ALE User 's Guide .", "label": "", "metadata": {}, "score": "59.261536"}
{"text": "On the other hand , construction of a request in respect of the feature with soft - typed properties is more difficult .For example .xmml : numericProperty xmml : numericProperty/@property frictionAngle xmml : numericProperty/@property cohesion ... .( dunno if I have the namspaces right here ) requests RockWithProperties features , reporting all ( ? ) numericProperty properties , where the selected features must satisfy the condition that the property attribute of a numericProperty property element must match the values \" frictionAngle \" , \" cohesion \" etc . .", "label": "", "metadata": {}, "score": "59.453846"}
{"text": "[ PDF ] .Frank Richter and Laura Kallmeyer , Universit\u00e4t T\u00fcbingen : \" Typed feature structures for semantic composition : a comparison between LRS and LTAG \" .[ PDF ] .Patrizia Paggio , Dorte Haltrup Hansen and Lene Offersgaard , Center for Language Technology , Copenhagen : \" Ontology - based question answering with feature structures \" .", "label": "", "metadata": {}, "score": "59.825943"}
{"text": "My own recent work in this area has focussed on graph - theoretic membership algorithms for the Lambek calculus , which prompted a reconsideration of this problem within the field that ultimately led to Pentus 's 2003 proof of the traditional calculus 's NP - completeness .", "label": "", "metadata": {}, "score": "59.91716"}
{"text": "The si ... . \" ... this paper ( Compagnoni , Intersection Types and Bounded Polymorphism 3 1994 ; Compagnoni , 1995 ) has been used in a type - theoretic model of object - oriented multiple inheritance ( Compagnoni & Pierce , 1996 ) .", "label": "", "metadata": {}, "score": "60.599957"}
{"text": "Specifically , this research focuses on the impact on lexical choice of one part of the pragmatic situation : the speaker 's argumentative intent , i.e. , the goal of the speaker to convince the hearer of a certain conclusion .The argumentative intent can be realized by a variety of evaluative expressions appearing at various ranks in the syntactic structure .", "label": "", "metadata": {}, "score": "61.11313"}
{"text": "While the traditional lambda calculus proof system is not complete for Henkin models that may have empty types , we prove strong completeness for Kripke models .In fact , every set of equations that is closed under implication is the theory of a single Kripke model .", "label": "", "metadata": {}, "score": "61.21032"}
{"text": "Functional Unification Grammars ( FUGs ) are popular for natural language applications because the formalism uses very few primitives and is uniform and expressive .In our work on text generation , we have found that it also has annoying limitations : it is not suited for the expression of simple , yet v ... \" .", "label": "", "metadata": {}, "score": "61.664795"}
{"text": "The different capabilities of XML Schema and UML lead to slightly divergent approaches in determining the higher - level feature types .The constraint language is an integral part of XML Schema , whereas it is an add - on ( in the form of OCL ) in UML .", "label": "", "metadata": {}, "score": "61.8268"}
{"text": "The Feature Model .The General Feature Model ( ISO 19109 ) defines feature types through their set of properties ( attributes and operations ) .The set of properties represents the consensus of a community concerned with this feature type : e.g. a \" Road \" may have the standard properties \" width \" , \" centre - line \" , \" classification \" , \" surface treatment \" etc .", "label": "", "metadata": {}, "score": "62.156754"}
{"text": "HPSG belongs to the \" unification - based \" family of linguistic theories , but differs from LFG and GPSG in that grammars are formulated entirely in terms of universal and language - specific principles expressed as constraints on feature structures , which in turn are taken to represent possible linguistic objects .", "label": "", "metadata": {}, "score": "62.358105"}
{"text": "Speech summarization is often conducted simply by transcribing the speech and then summarizing the textual transcript .In fact , much of the published research in speech summarization has been conducted on broadcast news , read text and other conservative domains that define other interesting aspects of the problem away simply for the sake of reporting better evaluation scores .", "label": "", "metadata": {}, "score": "62.39714"}
{"text": "Guidelines and LaTeX style sheets are provided .The maximum length of the abstracts is two ( 2 ) pages .Submit an anonymous PDF file .Contact information should be included in the e - mail text .E - mail the abstract and any questions you may have , to anders@cst.dk .", "label": "", "metadata": {}, "score": "62.501118"}
{"text": "Finite - state methods .I am interested in compilation methods for computing with very large - scale transducers or matrices , particularly in the critical but often unsung areas of memory management and numerically stable computation .My previous work in this area was confined mostly to extensions of finite - state specifications such as contextualised rules and default reasoning , and feature - based automata .", "label": "", "metadata": {}, "score": "64.059265"}
{"text": "We have demonstrated a very clear advantage to using acoustic and prosodic features , as well as features peculiar to spontaneous conversations that places this technology within the reach of practical applications .We are also very heavily involved in evaluating the usability of speech in various human - computer interfaces .", "label": "", "metadata": {}, "score": "64.10498"}
{"text": "Speech Summarisation .2007 Research Guide Entry .My research concerns the study of the structure of human languages as mathematical and computational systems .Not only is natural language processing an integral component of the overall vision of artificial intelligence research , but many of the problems that have defined the rest of AI , programming language and theoretical computer science research in general can be found inside this very rich empirical domain .", "label": "", "metadata": {}, "score": "64.94546"}
{"text": "Further improvements are still to come at both run - time and compile - time , due in great part to the better theoretical understanding that we now possess of typed feature logic .This in turn has opened the door to a variety of extensions of ALE 's functionality and applicability , such as constraint logic programming and speech - to - speech machine translation , a domain in which we successfully used ALE for parsing and generation support at Bell Laboratories .", "label": "", "metadata": {}, "score": "65.17442"}
{"text": "Bitumen ... .Like the strong - typed equivalent above , the data model for \" Road \" is exposed in the data instance , through the labelling and nesting of elements .The weak - typing pattern is much more flexible at \" run - time \" ( i.e. in the instance ) , but provides no constraints on the structure according to feature - type .", "label": "", "metadata": {}, "score": "65.62886"}
{"text": "In fact , in many observational settings , the properties being observed , or the exact set involved in a particular observation , is highly variable from observation to observation .There are a few cases ( e.g. gravity measurements ? ) where the complexity of the observation metadata , and historical practice , suggest that a strongly typed measurement type is appropriate , But in general , every geophysics survey is likely to have a slightly different suite of observations , similar for geochemistry .", "label": "", "metadata": {}, "score": "65.8824"}
{"text": "In order to approach their full potential , the next generations of these systems must be capable of providing far more precise information about meaning and the relations between the people , objects and locations described by these sources .Recent advances in wireless technology also require a natural means of interacting with ever more miniature devices , and this can only be achieved through spoken input and output .", "label": "", "metadata": {}, "score": "66.00858"}
{"text": "- Bob Carpenter Computational Linguistics Program Philosophy Department Carnegie Mellon University Pittsburgh , PA 15213 Net : carp lcl.cmu.edu .Phone : ( 412 ) 268 - 8573 Fax : ( 412 ) 268 - 1440 .When the following message was posted , we neglected to mention how the file mentioned in it could be obtained .", "label": "", "metadata": {}, "score": "66.28355"}
{"text": "[ 9 ] have used powerdomain orderings to model semantics of version spaces and ATMs 's .Our sem ...FYI : ALE Program , Minimal Pairs File .Directory .ALE : An Attribute Logic Engine ------------------------------- ALE , a public domain system written in Prolog , integrates phrase structure parsing and constraint logic programming with typed feature structures as terms .", "label": "", "metadata": {}, "score": "66.604965"}
{"text": "We describe a more general class of Kripke - style models .In categorical terms , our Kripke ... \" .The semantics of typed lambda calculus is usually described using Henkin models , consisting of functions over some collection of sets , or concrete cartesian closed categories , which are essentially equivalent .", "label": "", "metadata": {}, "score": "66.774254"}
{"text": "The parser 's computation model relies upon the actor paradigm , with concurrency entering through asynchronous message passing .Besides theoretical claims , we present an interactive grammar / parser workbench , a graphical development environment with various types of browsers , tracers , inspectors and debuggers that has been adapted to the requirements of large - scale grammar engineering in a distributed , object - oriented specification and programming framework .", "label": "", "metadata": {}, "score": "67.06001"}
{"text": "Notification of acceptance : April 15 2006 .In this Paper we describe an interface between typed formalisms and terminological languages like KL - ONE .The definition of such an interface is motivated by the needs of natural language front - ends to AI - systems where information must be transmitted from the front - end to the back - end system and vice versa .", "label": "", "metadata": {}, "score": "67.84249"}
{"text": "I am the principal developer , maintainer and one of the co - designers of The Attribute Logic Engine ( ALE ) , a Prolog - like logic programming language and parsing / generation system .ALE has been used by over 200 universities , research centres , and product developers for grammar development and testing , a wide variety of NLP applications , and embedded support for constraint resolution and unification over typed feature structures in other domains .", "label": "", "metadata": {}, "score": "68.819435"}
{"text": "ProFIT thus provides a direct step from grammars developed with sorted feature terms to Prolog programs usable for practical NLP systems . \" ... this paper allows any defaults to be overridden by defaults which are associated with more specific types : thus priority ordering reflects the type hierarchy ordering .", "label": "", "metadata": {}, "score": "70.08723"}
{"text": "Parsing algorithms are possibly the best known and most extensively studied area of computational linguistics , and yet our mastery of them is largely confined to an antiquated view of syntax .In this view , grammar consists of a number of context - free rules , with atomic ( or at least very small ) categories , and linear precedence is implicitly and rigidly determined .", "label": "", "metadata": {}, "score": "70.51654"}
{"text": "Pittsburgh .ALE can be run in either SICStus or Quintus Prolog , and with other compatible compilers doing first - argument indexing and last - call optimization .The system and its documentation are available without charge for research purposes from the address below .", "label": "", "metadata": {}, "score": "72.85535"}
{"text": "In categorical terms , our Kripke lambda models are cartesian closed subcategories of the presheaves over a poset .To those familiar with Kripke models of modal or intuitionistic logics , Kripke lambda models are likely to seem adequately \\semantic . \"", "label": "", "metadata": {}, "score": "74.64186"}
{"text": "[ PDF ] .General discussion .( The room is booked for 9:15 - 16:45 .This leaves room for extensive discussions at the end . )Howard Lasnik 's plenary lecture .Workshop dinner for those interested and still in town .", "label": "", "metadata": {}, "score": "75.334206"}
{"text": "Definite clause logic programs are treated as a special case of phrase structure grammars .Constraint systems are introduced and an enumeration technique is developed for solving arbitrary attribute - value logic constraints .This book , with its innovative approach to data structure , will be essential reading for researchers in computational linguistics , logic programming and knowledge representation .", "label": "", "metadata": {}, "score": "75.613884"}
{"text": "Next , taking HPSG as an exemplar of the grammar frameworks we have in mind , we show how the phonology attribute can be enriched , so that it can encode multi - tiered , hierarchical phonological representations .Finally , we exemplify the approach in some detail for the nonconcatenative morphology of Sierra Miwok and for schwa alternation in French .", "label": "", "metadata": {}, "score": "76.57605"}
{"text": "[ PDF ] .Anne Bjerre and Tavs Bjerre , University of Southern Denmark , Kolding : \" Sidder og ... \" .[ PDF ] .Lunch break .Section 3 : Comparisons and applications ( Chair : Anders S\u00f8gaard ) .", "label": "", "metadata": {}, "score": "77.878136"}
{"text": "The status quo has been weak typed structures with varying degrees of formal control over the vocabularies used , and no common technology approach for sharing such vocabularies .This has proven sufficiently ineffective at achieving interoperability that there is wide recognition that alternatives are required .", "label": "", "metadata": {}, "score": "85.38545"}
{"text": "Coffee break .Section 4 : Linguistic analyses ( II ) ( Chair : Anders S\u00f8gaard ) .Petter Haugereid , Norwegian University of Science and Technology , Trondheim : \" A constructional approach to passive in HPSG \" .[ PDF ] .", "label": "", "metadata": {}, "score": "90.79538"}
{"text": "Yo Sato , King 's College , London : \" Lexicalising word order constraints : a feature - oriented specification \" .[ PDF ] .Coffee break .Section 2 : Linguistic analyses ( I ) ( Chair : Petter Haugereid ) .", "label": "", "metadata": {}, "score": "98.00172"}
