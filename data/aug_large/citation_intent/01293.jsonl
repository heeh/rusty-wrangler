{"text": "At the second stage , a bilingual dictionary is introduced as a bridge between source and target languages to start a bootstrapping process .Initially , information about the source language can be utilized to improve the polarity assignment in target language .", "label": "", "metadata": {}, "score": "28.254063"}
{"text": "With this constant push from labeled nodes , the class boundaries will be pushed through high density regions and settle in low density gaps .At the second stage , a bilingual dictionary is introduced as a bridge between two languages to start the bootstrapping process .", "label": "", "metadata": {}, "score": "30.634811"}
{"text": "Preferably , the data in the standard text lexicon is represented by a tree structure as shown in FIG .6a or any other representation fashion where the probabilities associated between each transition may be of equal weight ( null ) or weighted according to their frequency of occurrence .", "label": "", "metadata": {}, "score": "30.871923"}
{"text": "The system also uses a suspect expression modification sequence to recognize and correct typographical spelling errors .A linguistic expression database includes a master lexicon having expression blocks arranged in accord with respective collation ranges of skeletons of expressions contained therein .", "label": "", "metadata": {}, "score": "30.979256"}
{"text": "The storage apparatus further includes an output element for providing a signal representative of the accessed linguistic information , e.g. , a word and its hyphenation pattern .In another aspect , the database serves as an element of an electronic spelling verification apparatus .", "label": "", "metadata": {}, "score": "32.393314"}
{"text": "The initial set - up of a project is not straightforward , and many linguists find it daunting .This is particularly true with sorting and interlinearization .There is a need for a set - up wizard that would guide a user through the creation of a new project .", "label": "", "metadata": {}, "score": "32.757233"}
{"text": "To the best of our knowledge , we provide the first attempt to investigate cross - language opinion lexicon extraction and our approach can be generalized to any other languages .We refine the standard label propagation algorithm from two aspects : seed word selection and graph construction , and the experimental results show the effectiveness of our approach .", "label": "", "metadata": {}, "score": "32.91283"}
{"text": "C. forming plural master lexicon blocks , each said block being formed by the steps of .( i ) generating a linguistically salient word skeleton for each linguistic expression in the block , .( ii ) collating said block linguistically salient word skeletons and determining therefrom a block skeletal collation range , .", "label": "", "metadata": {}, "score": "33.136116"}
{"text": "C. forming plural master lexicon blocks , each said block being formed by the steps of .( i ) generating a linguistically salient word skeleton for each linguistic expression in the block , .( ii ) collating said block linguistically salient word skeletons and determining therefrom a block skeletal collation range , and .", "label": "", "metadata": {}, "score": "33.720894"}
{"text": "All that is required here is a mechanism to transfer the scores established at the first pass search stage to the standard text lexicon .Any suitable data transfer process can be used here without departing from the spirit of the invention .", "label": "", "metadata": {}, "score": "34.632294"}
{"text": "FIGS .9 - 17 depict the operational sequence of a preferred spelling correction apparatus .The sequence begins at step 156 , FIG .9 .In steps 158 - 160 , the process initializes process variables , including , limit , hyphenation , capitalization , and suffix flags .", "label": "", "metadata": {}, "score": "34.7232"}
{"text": "The document processing system may also store the contents of the documents , or portions of the content , in a repository for use by a query processor when responding to a query .[ 0005 ] There is a continuing need for more sophisticated query searching and scoring techniques to ensure that query results are relevant to the query .", "label": "", "metadata": {}, "score": "35.07787"}
{"text": "The purpose of performing the search in three separate stages is to improve the performance in terms of computation and speed .The first rough calculation stage 208 , also called first pass search stage allows the system to eliminate those orthographies that are most unlikely to constitute a match to the spoken utterance .", "label": "", "metadata": {}, "score": "35.141838"}
{"text": "b ) a standard text lexicon including a plurality of orthographies ; . processor means in operative relationship with said memory means , said program element instructing said processor means for : . a ) selecting from said dictionary , a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; .", "label": "", "metadata": {}, "score": "35.52704"}
{"text": "Further the database has a structure which can be rapidly accessed to locate either a specific expression or its linguistically salient word skeleton .Spelling verification and correction systems constructed in accord with the invention require minimal programming and storage .Accordingly , these systems are readily adapted for relatively low - cost implementation .", "label": "", "metadata": {}, "score": "35.656265"}
{"text": "A method according to claim 29 wherein said master lexicon entry - forming step comprises at least one step selected from the steps of . A. generating a suffix code for representing a suffix pattern of a linguistic expression , .B. generating a hyphenation code for representing a hyphenation pattern of a linguistic expression , and .", "label": "", "metadata": {}, "score": "35.965885"}
{"text": "In steps 228 - 230 , the process identifies within the master lexicon entries matching the modified suspect expression .If the modified suspect expression is found in the database , the process proceeds to the \" CW3 \" processing sequence .", "label": "", "metadata": {}, "score": "36.085518"}
{"text": "In sequence , the tokens of the block are processed from first to last , matching each token and as many subsequent tokens as possible with the longest matching token sequence in the preceding sequence of tokens , including the lexicon 830 .", "label": "", "metadata": {}, "score": "36.248817"}
{"text": "G. generating a signal indicative of the success of said matching step .A method according to claim 38 wherein said matching step comprises the step of identifying a candidate master lexicon block likely to include an entry matching said suspect expression .", "label": "", "metadata": {}, "score": "36.386665"}
{"text": "It is intended that all matter in the description and drawings be interpreted as illustrative and not in a limiting sense .Further , the encoding techniques discussed above and , particularly , those directed to master lexicon entry and decompression table coding may be used in conjunction with any of the currently available computerized dictionary databases .", "label": "", "metadata": {}, "score": "36.41871"}
{"text": "This occurs in the case where there are many similar orthographies in the dictionary , when N is small or when the rough calculations lack precision .Against this background it appears that the process of building the candidate list during the first pass search is a crucial step in the speech recognition process .", "label": "", "metadata": {}, "score": "36.531036"}
{"text": "Unfortunately , introducing such sophisticated techniques can result in a degradation of search performance due to the additional processing and overhead involved .SUMMARY OF EMBODIMENTS .[ 0006 ] A search engine server system , while performing a query processing method , receives from a client system a search query having one or more query terms , and identifying a set of documents in accordance with the search query .", "label": "", "metadata": {}, "score": "36.854736"}
{"text": "In a preferred embodiment , the lexicon blocks are sequenced according to their respective collation ranges .In the illustration , BLOCK 1 represents a group of entries having the lowest collation range and stored at the beginning of the lexicon .", "label": "", "metadata": {}, "score": "36.87748"}
{"text": "A character sequence can also be represented by an indirect character code indicative of a character sequence common to several lexicon entries .Similar methods can be used to represent hyphenation and capitalization patterns for each lexicon expression .In addition to a master lexicon , a linguistic expression database can include a common expression verification table and a user - defined expression table .", "label": "", "metadata": {}, "score": "36.96753"}
{"text": "In step 54 , the sequence accepts a suspect expression , furnished either by the user , via the keyboard , or by the central processing unit as part of a batch mode verification task .In a verification phase , step 56 , the process compares the suspect expression with the linguistic expression database in order to identify matching database entries .", "label": "", "metadata": {}, "score": "36.990646"}
{"text": "The top two orthographies in the re - scored group are then processed by a rejection algorithm that evaluates if they are sufficiently distinctive from one another so that the top choice candidate can be considered to be a valid recognition .", "label": "", "metadata": {}, "score": "37.00627"}
{"text": "For example , the suggested order of the first four steps of the skeletal creation rules can be changed at will .A system for spelling verification , spelling correction , and linguistic expression storage of the type provided by the invention and described above has a number of advantages .", "label": "", "metadata": {}, "score": "37.06009"}
{"text": "This problem is addressed by the present invention .In the normal course of speech recognition , the first pass search should score the correct orthography located in the speech recognition dictionary in such a way that it will be in the top N candidates sent to the re - score stage .", "label": "", "metadata": {}, "score": "37.281788"}
{"text": "If valid speech is detected , the speech recognition layer of the system is invoked in an attempt to recognize the unknown utterance .In a first pass search , a fast match algorithm is used to select the top N orthographies from a speech recognition dictionary .", "label": "", "metadata": {}, "score": "37.45036"}
{"text": "b ) a standard text lexicon including a plurality of orthographies ; . processor in operative relationship with the memory unit , said program clement being executable by the processor and being operative for : . a ) processing said speech recognition dictionary to derive on the basis of the spoken utterance a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; .", "label": "", "metadata": {}, "score": "37.540756"}
{"text": "In this section , we describe a method to construct an opinion lexicon through mutual - reinforcement label propagation .In our work , all adjectives in the dataset are regarded as opinion words , and our approach is universal because it can be applied to verbs , adverbs and adjective - noun phrases .", "label": "", "metadata": {}, "score": "37.568542"}
{"text": "Application of these rules involves examination of the suspect word skeleton for specific skeletal character sequences and , if found , replacing them with other sequences .According to step 266 , where target substitution rules have been applied to the suspect word skeleton , a modified skeleton is passed to processing sequence \" C620 \" .", "label": "", "metadata": {}, "score": "37.744915"}
{"text": "In other embodiments , a first document corpus ( e.g. , a set of query sessions ) is used in the first pass through the system 500 and a second , different corpus is used in a second or subsequent pass through the system 500 .", "label": "", "metadata": {}, "score": "37.75749"}
{"text": "[0007 ] FIG .1 is a block diagram of an embodiment of a information retrieval system .[0008 ] FIG .2 is a conceptual block diagram of an embodiment of the lexicon generator of FIG .1 . [", "label": "", "metadata": {}, "score": "37.77375"}
{"text": "These expressions are verified by the CHKWRD routine .As indicated in step 194 , if any of the modified expressions are valid , processing proceeds to the \" C510 \" sequence .Otherwise , processing proceeds to the \" C50 \" sequence .", "label": "", "metadata": {}, "score": "38.240158"}
{"text": "These rules process parts of a word selectively , depending on such word - context factors as position in the word , letters , and the following or preceding letters .A preferred set of computer program rules or instructions for forming the word skeleton of a correctly spelled word for the data bank and the skeleton of suspect expression , are set forth below .", "label": "", "metadata": {}, "score": "38.25254"}
{"text": "If the dictionary expression and the suspect word do not match , the routine generates a new index according to a process similar to that discussed in conjunction with the common expression verification table .The above process is repeated with this new index .", "label": "", "metadata": {}, "score": "38.260147"}
{"text": "After performing the desired edits , processing logic recompresses the data into coded data ( processing block 1103 ) and creates a replacement tile , tile - part , or packet for the codestream ( processing block 1104 ) .In an alternative embodiment , processing logic may use a marker , or tag , such as a COM marker segment of the appropriate length instead of the padding .", "label": "", "metadata": {}, "score": "38.452377"}
{"text": "First , for each language , a label propagation algorithm is applied to a word relation graph , and then a bilingual dictionary is used as a bridge to transfer information between two languages .A key advantage of this model is its ability to make two languages learn from each other and boost each other .", "label": "", "metadata": {}, "score": "38.524128"}
{"text": "One skeleton - forming process reduces , simplifies , or even eliminates the word parts which embody a discrepancy .A word skeleton incorporates more salient parts of each word to identify its unique , distinguishing pattern of alphabetic characters , i.e. , letters .", "label": "", "metadata": {}, "score": "38.703575"}
{"text": "For graph construction , the original graph is replaced by a top - k sub - graph through selecting the top - k related nodes .The top - k sub - graph can ignore those weak word relations to reduce the error propagation .", "label": "", "metadata": {}, "score": "38.716553"}
{"text": "Most advantageously , this is effected by using the branch likelihoods estimated by the graph search effected at the first pass search stage and inserting in the top N candidate list only the top L scores of the standard text lexicon 512 .", "label": "", "metadata": {}, "score": "38.718353"}
{"text": "6a .In this case we also assign a priori probabilities for each branch in the tree .Using the acoustic scores computed on the dictionary during the graph search , we score the branches in the standard text lexicon and choose the L top scores or alternatively we include the whole list .", "label": "", "metadata": {}, "score": "38.722977"}
{"text": "It is therefore unwise to modify them by hand in the absence of expert information about their contents .A detailed discussion of the format and contents of these files goes beyond the scope of this introduction to Toolbox , but fortunately there is a good deal that can be done with the raw lexicon file without having to worry about metadata .", "label": "", "metadata": {}, "score": "38.74498"}
{"text": "For example in a voice activated dialing system ( VAD ) the standard text lexicon may be initialized with frequently called numbers or may be initialized by the user himself requesting him to enter a few of his commonly called telephone numbers the first time the system is used .", "label": "", "metadata": {}, "score": "38.84192"}
{"text": "For example , the indication of how the data is to be handled may indicate whether the data is to be deleted , whether the data is to be truncated , or some other operation to be performed on the data .", "label": "", "metadata": {}, "score": "38.86754"}
{"text": "For example , the indication of how the data is to be handled may indicate whether the data is to be deleted , whether the data is to be truncated , or some other operation to be performed on the data .", "label": "", "metadata": {}, "score": "38.86754"}
{"text": "For example , the indication of how the data is to be handled may indicate whether the data is to be deleted , whether the data is to be truncated , or some other operation to be performed on the data .", "label": "", "metadata": {}, "score": "38.86754"}
{"text": "[ 0072 ] Some studies show that the location of a term in a document indicates its significance to the document .For example , terms occurring in the title of a document that match a query term may be weighted more heavily than query terms occurring in the body of the document .", "label": "", "metadata": {}, "score": "38.95665"}
{"text": "To find a suspect word in the master lexicon , a master lexicon access routine strips a suffix , namely , \" s \" , \" 's \" , or \" ing \" , from the word and sets a flag indicating the type of suffix , if any .", "label": "", "metadata": {}, "score": "39.00551"}
{"text": "The Spelling Verifier .A preferred suspect expression verification sequence is depicted in FIGS .5 - 8 .The sequence begins at step 72 of FIG .5 .As indicated in steps 74 - 78 , the sequence determines whether the input expression is of permissible length and whether the database routines have been initialized .", "label": "", "metadata": {}, "score": "39.176834"}
{"text": "In order to highlight the domain - specific nature of opinion lexicon , we labeled the opinion words according to their domain characteristics .To justify the reliability of this labeling process , we invited three annotators to label the semantic orientation ( positive or negative ) of the same data .", "label": "", "metadata": {}, "score": "39.21409"}
{"text": "In a most preferred embodiment of the present invention , the speech recognition system , as best shown in FIG .4 , includes the pre - processing block 102 described earlier that parameterizes the incoming signal and performs some basic endpoint detection .", "label": "", "metadata": {}, "score": "39.269882"}
{"text": "Including the a - priori scores in the computation involves multiplying the acoustic score of a given branch with the a - priori probability of that branch .The result of this search is a list of top L orthographies from the standard text lexicon with scores associated to each one .", "label": "", "metadata": {}, "score": "39.358833"}
{"text": "The basic functionality of the program for lexicons and texts is described , and its strengths and weaknesses are reviewed .Its underlying data format is briefly discussed , and Toolbox processing capabilities of NLTK are introduced , showing ways in which it can be used to extend the functionality of Toolbox .", "label": "", "metadata": {}, "score": "39.44343"}
{"text": "We aim to have the source language and target language learn from each other and boost each other .An overall framework of our approach is shown in Figure 1 .The mutual - reinforcement label propagation model follows a two - stage framework .", "label": "", "metadata": {}, "score": "39.58774"}
{"text": "In one specific example , when the standard text lexicon contains only a few orthographies , it is possible to include all these orthographies in the list output as a result of the first pass search .In another possible embodiment , when the standard text lexicon includes too many orthographies , only a number of those orthographies are selected and then inserted in the list .", "label": "", "metadata": {}, "score": "39.630554"}
{"text": "The basic idea of our approach comes from the mutual reinforcement learning [ 16 ] - [ 18 ] .The key advantage of this framework is its ability to make two languages learn from each other and boost each other .", "label": "", "metadata": {}, "score": "39.924957"}
{"text": "They also tend to enjoy good empirical performance [ 22 ] .The top - k sub - graph is generated from the original graph , which can be divided into three steps .For any given node , the first step is to sort all the edges connecting it according to edge weight .", "label": "", "metadata": {}, "score": "39.931976"}
{"text": "The access routine then generates a linguistically salient word skeleton of the suspect word .The characters of this skeleton are also represented by a 5-bit code .To identify a master lexicon block likely to contain an expression matching a designated suspect word , the access routine performs a binary search on the block index table , comparing the first six characters of the suspect word compacted skeletal representation with the block index table entries .", "label": "", "metadata": {}, "score": "40.00958"}
{"text": "In this paper , we do not aim to beat existing approaches in terms of performance , but take a different perspective and focus on developing a language - independent approach for resource - poor language .Our approach differs from existing approaches in the following three points : first , it does not depend on rich external resources and it is language - independent .", "label": "", "metadata": {}, "score": "40.0902"}
{"text": "When the lexicon is revised , those changes do not propagate back to the previously glossed texts , and the mechanism for updating an outdated text from a revised lexicon is not foolproof .Support for the enforcement of data consistency is weak .", "label": "", "metadata": {}, "score": "40.09916"}
{"text": "This binary search element can include elements for generating a linguistically salient word skeleton of the suspect expression and for comparing that skeleton with block index table entries .The spelling verification apparatus can also include an element for matching a suspect expression with entries in the common expression verification table and the user expression table .", "label": "", "metadata": {}, "score": "40.10427"}
{"text": "B. generating signals representing plural master lexicon entries , each said entry representing an input linguistic expression , .C. forming plural master lexicon blocks , each said block being formed by the steps of .( i ) generating a linguistically salient word skeleton for each linguistic expression in the block , wherein said skeleton includes skeletal symbols , .", "label": "", "metadata": {}, "score": "40.122566"}
{"text": "The addressing mechanism is also used to represent common suffix and hyphenation patterns .According to a third sequence coding pattern , a lexicon entry stores a six - bit digital code representing a suffix map .The first two bits of this map indicate the permissibility of the \" ing \" suffix ; the next two bits indicate the permissibility of a \" 's \" suffix ; and the remaining two bits indicate the permissibility of a \" s \" suffix .", "label": "", "metadata": {}, "score": "40.14151"}
{"text": "The most preferred approach is to utilize the probabilistic scores established in selecting orthographies from the main speech recognition dictionary during the first pass search in order to compute scores for the orthographies in the standard text lexicon .In a most preferred embodiment , the standard text lexicon is user specific .", "label": "", "metadata": {}, "score": "40.264442"}
{"text": "In the event the suspect expression hash code or rehash code matches that of a verification table entry , the process compares the three high - order bits of the index , as well as the length of the input word , with the corresponding codes in the verification table entry .", "label": "", "metadata": {}, "score": "40.28179"}
{"text": "By reversing the host name fields of the URLs prior to sorting by URL , the documents are sorted in accordance with their logical proximity to each other .[ 0029 ] In some embodiments , the documents are ordered using one or more clustering techniques .", "label": "", "metadata": {}, "score": "40.336548"}
{"text": "As a result , each mini - lexicon ( described below ) will , on average , cover a larger portion of the set of documents than would otherwise be the case , and more generally , the encoding of the documents will occupy less space .", "label": "", "metadata": {}, "score": "40.413113"}
{"text": "We can iterate over all the fields of a given entry to print out the contents of the lexicon .The second way to access the contents of the lexicon object uses paths .The lexicon is a series of record objects , each containing a series of field objects , such as \" lx \" and \" ps \" .", "label": "", "metadata": {}, "score": "40.423134"}
{"text": "We aim to extract the domain - dependent opinion lexicon ( i.e. an opinion lexicon per domain ) instead of a universal opinion lexicon .Third , the most importantly , our approach can mine opinion lexicon for a target language by leveraging data and knowledge available in another language .", "label": "", "metadata": {}, "score": "40.4385"}
{"text": "In the \" Database \" menu , under \" Properties \" , various properties of a field can be defined .Below we see the default tab displayed when the marker properties for the \" ps \" field is selected : .", "label": "", "metadata": {}, "score": "40.55219"}
{"text": "A method according to claim 30 wherein said character differential code generating step comprises at least one step selected from the steps of . A. generating an explicit differential code for explicitly representing an alphanumeric character of said first linguistic expression , and .", "label": "", "metadata": {}, "score": "40.596397"}
{"text": "For instance , Qiu et al .[ 8 ] propose a bootstrapping method to extract target and opinion word using a dependency parser .However , tools and resources such as dependency parser are available only for a handful of languages , which limits the applicability of these approaches .", "label": "", "metadata": {}, "score": "40.61676"}
{"text": "In a method according to claim 60 the further improvement whereby each of said indirect differential coding step and said explicit differential coding step comprise at least one of the steps of . A. generating a digital coding representative of a suffix pattern of a linguistic expression , .", "label": "", "metadata": {}, "score": "40.634052"}
{"text": "A method as defined in claim 22 , comprising the step of scoring orthographies in said standard text lexicon on a basis of a potential match with the spoken utterance .A method as defined in claim 17 , wherein said standard text lexicon and said dictionary share at least one common orthography .", "label": "", "metadata": {}, "score": "40.65907"}
{"text": "In steps 124 - 128 , the process sets a return code indicating whether the suspect expression is correctly spelled .The process then returns to the calling routine .FIG .7 depicts the \" A \" processing sequence , beginning at block 130 , in which the process determines whether the suspect word is in the master version .", "label": "", "metadata": {}, "score": "40.668064"}
{"text": "As the publication of primary materials on the web becomes more commonplace , it is necessary for field linguists to organize their materials in such a way that they can be easily processed and shared with other researchers .This is especially important for research on endangered languages , since the materials gathered may represent the only record of a language before it ceases to be spoken .", "label": "", "metadata": {}, "score": "40.69404"}
{"text": "By way of example , where a first entry of a block represents the word \" computer \" and a second entry represents the word \" computerize , \" the character content of the second entry can be represented by a differential coding .", "label": "", "metadata": {}, "score": "40.72535"}
{"text": "A method as defined in claim 17 , comprising the step of providing a plurality of standard text lexicons .A method as defined in claim 27 , comprising the step of selecting one of said plurality of standard text lexicons for use as a source in the step of inserting at least one orthography from the selected one of said plurality of standard text lexicons into said list .", "label": "", "metadata": {}, "score": "40.83388"}
{"text": "A first portion of memory element 22 stores the master lexicon 24 representing a majority of the linguistic expressions in the database 20 .In the illustrated embodiment , this data includes digital codings representing English words , as well as capitalization , hyphenation , and suffix information .", "label": "", "metadata": {}, "score": "40.94473"}
{"text": "Otherwise a \" literal code \" is generated to represent the token .All tokens covered by the current code are then treated as preceding tokens for subsequence processing of the next token ( if any ) in the block .As shown in FIG .", "label": "", "metadata": {}, "score": "41.004856"}
{"text": "( ii ) storing said user - defined expression for addressable access according to a third index value .A method for spelling verification in a digital data processing apparatus , said method comprising the steps of . A. inputting plural linguistic expressions , each said linguistic expression including alphanumeric characters , .", "label": "", "metadata": {}, "score": "41.087234"}
{"text": "In step 86 , the process examines the suspect word capitalization pattern .If the pattern is irregular , the process matches the suspect expression with expressions in the User Dictionary ; see steps 88 - 90 .If the suspect expression matches a User Dictionary expression , the process returns a success indication to the calling routine ; see steps 92 - 98 .", "label": "", "metadata": {}, "score": "41.097305"}
{"text": "In the event the suspect word does not match an entry in the common expression verification table , the process matches the expression with the User Dictionary , see step 112 - 116 .If the suspect word matches an entry in the user dictionary , the process proceeds to step 124 .", "label": "", "metadata": {}, "score": "41.15406"}
{"text": "A method according to claim 29 comprising the further step of forming a modified suspect expression verification table having digitally encoded information representative of said input linguistic expressions stored in said master lexicon , said modified suspect expression verification table - forming step including the steps of .", "label": "", "metadata": {}, "score": "41.245705"}
{"text": "Therefore , we think that the words falling into the clustering centers have a crucial effect on the propagation process .In our work , we cluster the opinion words beforehand , and then label the words that are nearest to the clustering centers .", "label": "", "metadata": {}, "score": "41.268074"}
{"text": "B. hyphenation encoding means for representing a hyphenation pattern of a linguistic expression , and .C. capitalization encoding means for representing a capitalization pattern of a linguistic expression .An apparatus accoding to claim 1 wherein said master lexicon is substantially free of digitally encoded information explicitly representative of linguistically salient word skeletons .", "label": "", "metadata": {}, "score": "41.301468"}
{"text": "The query expansion terms are used by the query expander 506 to produce an expanded query tree or query expression , which is then processed by the query processing stages ( in a second pass processing of the query ) as described above .", "label": "", "metadata": {}, "score": "41.325813"}
{"text": "[ 0077 ] In some embodiments , the final set of relevancy scores are provided to a relevance feedback module 517 which generates one or more new query expansion terms based on documents in the result set produced by the last query stage .", "label": "", "metadata": {}, "score": "41.33409"}
{"text": "This table stores abbreviated hash codes representing a substantial number of the expressions in the master lexicon .By comparing each test expression with the table entries , the corrector can quickly determine if the expression is likely to be valid .", "label": "", "metadata": {}, "score": "41.361687"}
{"text": "Using the list of positions in the result set , the decoding system 527 can select the mini - lexicons 523 that are needed to decode the portions of a document that precede and follow the occurrences of the query terms in the document .", "label": "", "metadata": {}, "score": "41.377502"}
{"text": "If so , the segment processing engine 230 checks whether the marker points to the beginning of a protocol data unit ( i.e. , the \" Start \" found by protocol data unit detection processing in .FIG .7 ) .", "label": "", "metadata": {}, "score": "41.3857"}
{"text": "J. Acoust .Soc .Am .84 ( 6 ) , December 1988 , p.2007 .It should be noted that other algorithms may also be used to perform the scoring of the standard text lexicon and to determine how the orthographies from the standard text lexicon are inserted in the list of top N candidates .", "label": "", "metadata": {}, "score": "41.431953"}
{"text": "One embodiment of this process is shown in FIG .15 A. Thus , these can be the 2 complete tile - parts output for each tile .FIG .15B illustrates a number of layers , layers 1-n .", "label": "", "metadata": {}, "score": "41.45542"}
{"text": "The first field from the entry is accessed with entry[0 ] and saved as the variable field .The field has two attributes : \" tag \" ( the field 's marker ) and \" text \" ( the field 's value ) .", "label": "", "metadata": {}, "score": "41.468033"}
{"text": "This table includes a list of entries representing a collation range and address of each block in the lexicon .The signals stored in each master lexicon entry are encoded to reduce the overall size of the lexicon .For example , in lieu of an explicit representation of each alphanumeric character of a word , a master lexicon entry can store a \" differential coding \" representing character differences between the word and a word represented by another entry .", "label": "", "metadata": {}, "score": "41.48159"}
{"text": "While each block index table entry can include actual addressing information , implicit addressing is attained by providing a parallel structure for the block index table and the master lexicon .That is , the first entry of the block index table can correspond to the first block of the master lexicon , while the second entry of the block index table can correspond to the second block of the master lexicon , and so forth .", "label": "", "metadata": {}, "score": "41.503334"}
{"text": "In this manner , the codestream may be truncated without changing the packet header .In one embodiment , a list , array , or other structure ( such as reordering structure 601 A ) is built by indicating the portion of data in each packet .", "label": "", "metadata": {}, "score": "41.50548"}
{"text": "In this manner , the codestream may be truncated without changing the packet header .In one embodiment , a list , array , or other structure ( such as reordering structure 601 A ) is built by indicating the portion of data in each packet .", "label": "", "metadata": {}, "score": "41.50548"}
{"text": "In this manner , the codestream may be truncated without changing the packet header .In one embodiment , a list , array , or other structure ( such as reordering structure 601 A ) is built by indicating the portion of data in each packet .", "label": "", "metadata": {}, "score": "41.50548"}
{"text": "As embodied and broadly described herein , the invention also provides a computer readable storage medium comprising : . a primary data structure containing a plurality of orthographies potentially recognizable on a basis of a spoken utterance , said primary data structure forming a speech recognition dictionary ; . a plurality of secondary data structures , each secondary data structure including a plurality of orthographies and forming a standard text lexicon , each secondary data structure containing orthographies constituting a sub - set of the orthographies from said primary data structure ; . a plurality of identifiers , each secondary data structure being associated with a respective identifier distinguishing the secondary data structure from other ones of said plurality of data structures .", "label": "", "metadata": {}, "score": "41.50759"}
{"text": "In the mutual - reinforcement label propagation algorithm , the seed word set for each language contains 10 ( value of in Figure 4 ) positive words and 10 negative words , and the parameter is set to 0.1 .We selected adjectives with term frequency exceeding a threshold from the corpus to obtain a list of opinion words in each domain .", "label": "", "metadata": {}, "score": "41.509956"}
{"text": "It does not describe how data should be converted from one progression order to another progression order .In one embodiment , a progression order converting parser converts a codestream to a desired progression order based on the user input without decoding the data and then encoding it again .", "label": "", "metadata": {}, "score": "41.578888"}
{"text": "It does not describe how data should be converted from one progression order to another progression order .In one embodiment , a progression order converting parser converts a codestream to a desired progression order based on the user input without decoding the data and then encoding it again .", "label": "", "metadata": {}, "score": "41.578888"}
{"text": "It does not describe how data should be converted from one progression order to another progression order .In one embodiment , a progression order converting parser converts a codestream to a desired progression order based on the user input without decoding the data and then encoding it again .", "label": "", "metadata": {}, "score": "41.578888"}
{"text": "That is , the lines of memory below the L1 coefficients after the first decomposition level become unused , the lines of memory below the L2 coefficients after the second decomposition level become unused , etc .In one embodiment , this extra space may be reused .", "label": "", "metadata": {}, "score": "41.59665"}
{"text": "Introduction .Opinion lexicon is a valuable resource for natural language processing and it can be used in sentiment classification [ 1 ] , sentiment summarization [ 2 ] , [ 13 ] , social influence analysis [ 3 ] and so on .", "label": "", "metadata": {}, "score": "41.600792"}
{"text": "i. eliminating from the word skeleton produced thereby a selected alpha set , if any , of the expression being converted which lacks isomorphy with a phonetic representation of that selected set , and . ii . replacing with a different linguistic symbol another selected alpha set , if any , of the expression being converted which lacks isomorphy with a phonetic representation of that other selected set , .", "label": "", "metadata": {}, "score": "41.627857"}
{"text": "These bounds define each block 's \" skeletal collation range .\"Within the lexicon , the blocks are ordered in accord with their respective skeletal collation ranges .A block having the lowest collation range is stored , for example , at the lowest address within the lexicon , while a block having the highest collation range is stored at the highest address within the lexicon .", "label": "", "metadata": {}, "score": "41.742233"}
{"text": "The two distinctions selected have been found sufficient , with other structures of long words , to characterize the word skeleton sufficiently and ensure that the correction system does not produce a large number of correctly spelled , but inappropriate suggestions .", "label": "", "metadata": {}, "score": "41.917946"}
{"text": "In a preferred embodiment , these entries store words of twenty - one characters or less in length .The digital codings , as noted above , represent only differences in character content between successive entries .With regard to character sequence representation , each lexicon entry stores from one to three different sequence coding patterns .", "label": "", "metadata": {}, "score": "41.93818"}
{"text": "7 is a flow chart of the operation of a verification sub - unit of the speech recognition system in accordance with the invention ; .FIG .8 shows a flow chart illustrating the decision logic of an update operation of the standard text lexicon ; .", "label": "", "metadata": {}, "score": "41.99573"}
{"text": "If no such previous substitutions were effected , processing proceeds to the \" C50 \" processing sequence .FIG .17 depicts the \" C620 \" processing sequence , which begins at step 270 .In block 272 , the process identifies master lexicon entries having skeletons matching the modified suspcct expression skeleton .", "label": "", "metadata": {}, "score": "42.010124"}
{"text": "The foregoing skeletal creation rules and targeted substitutions are merely illustrative and may be modified .By way of non - limiting examples , the number of steps in the set can be changed .Additional steps may increase the percentage of misspellings which are corrected and may decrease the number of suggestions which the system produces for correcting a misspelling .", "label": "", "metadata": {}, "score": "42.053024"}
{"text": "A method according to claim 46 wherein said master lexicon expression locating step comprises the steps of . A. generating a linguistically salient word skeleton of said suspect expression and a linguistically salient word skeleton of at least one said master lexicon expression , and .", "label": "", "metadata": {}, "score": "42.09274"}
{"text": "If the word length is greater than twenty - one or no matching entries were identified , the process returns a \" word not found \" indication to the calling routine ; see steps 142 - 146 .Otherwise , the process proceeds to the \" V70 \" processing sequence .", "label": "", "metadata": {}, "score": "42.10892"}
{"text": "After the first pass search has been completed , the speech recognition system will insert into that list at least one entry from the standard text lexicon to form the augmented list .The standard text lexicon contains the most frequently called numbers by the user .", "label": "", "metadata": {}, "score": "42.126537"}
{"text": "FIG .10 , the process begins by processing logic receiving a codestream of compressed logic data ( processing block 1001 ) .The image data is organized into multiple layers , each of which comprises coded data that adds visual value to the image ( e.g. , look sharper , better defined , better contrast , etc . ) .", "label": "", "metadata": {}, "score": "42.13154"}
{"text": "FIG .10 , the process begins by processing logic receiving a codestream of compressed logic data ( processing block 1001 ) .The image data is organized into multiple layers , each of which comprises coded data that adds visual value to the image ( e.g. , look sharper , better defined , better contrast , etc . ) .", "label": "", "metadata": {}, "score": "42.13154"}
{"text": "FIG .10 , the process begins by processing logic receiving a codestream of compressed logic data ( processing block 1001 ) .The image data is organized into multiple layers , each of which comprises coded data that adds visual value to the image ( e.g. , look sharper , better defined , better contrast , etc . ) .", "label": "", "metadata": {}, "score": "42.13154"}
{"text": "The illustrated process can also verify and correct an entire document .In accord with this mode of operation , the process produces an error file indicating the location of misspelled words and possible substitute expressions .Further , the process can operate solely in spelling verification mode or solely in spelling correction mode .", "label": "", "metadata": {}, "score": "42.32197"}
{"text": "a memory storing a compressed image as a codestream in a first JPEG 2000 progression order ; . wherein the parser converts the codestream from the first progression order to a predetermined intermediate progression order and from the predetermined intermediate progression order to the second progression order , and .", "label": "", "metadata": {}, "score": "42.4347"}
{"text": "For example , general information about the documents ( e.g. , meta - data embedded in or otherwise associated with the identified documents ) , sampled content from the identified documents , and/or category information about the documents can be used to order the documents .", "label": "", "metadata": {}, "score": "42.44995"}
{"text": "The search block 104 includes a speech recognition dictionary that is scored in order to find possible matches to the spoken utterance .The search may be done in several steps in order to maximise the probability of obtaining the correct result in the shortest possible time and most preferably in real - time .", "label": "", "metadata": {}, "score": "42.593704"}
{"text": "In step 60 , the process identifies candidate substitute expressions , i.e. , those which are similar to the suspect expression , within the database .As indicated in steps 62 - 64 , these alternate expressions can be arranged for display or selected for automatic substitution in accord with the semi - automatic correction procedure described in co - pending , commonly assigned U.S. Ser .", "label": "", "metadata": {}, "score": "42.692177"}
{"text": "Each of the layers comprises coded data that adds visual value to the image .The method also includes selecting one or more of the layers for quantization based on sideband information accompanying the codestream and decompressing non - quantized layers of the codestream .", "label": "", "metadata": {}, "score": "42.72032"}
{"text": "The master lexicon blocks are arranged for access according to the range of the linguistically salient word skeletons of the words contained therein .These skeletons , as discussed in greater detail below , are entities which combine the salient graphic components of written word forms with the salient phonetic components of the corresponding spoken forms .", "label": "", "metadata": {}, "score": "42.779022"}
{"text": "Also , a screen resolution image may be the image used to send to a monitor for display thereon .A print resolution image may be of lower quality for printer applications .In one embodiment , a codestream of an image is organized into sections so that different versions of the image , such as , for example , a thumbnail version , a screen version , a print version and a lossless version , is progressive by quality .", "label": "", "metadata": {}, "score": "42.793762"}
{"text": "Also , a screen resolution image may be the image used to send to a monitor for display thereon .A print resolution image may be of lower quality for printer applications .In one embodiment , a codestream of an image is organized into sections so that different versions of the image , such as , for example , a thumbnail version , a screen version , a print version and a lossless version , is progressive by quality .", "label": "", "metadata": {}, "score": "42.793762"}
{"text": "Also , a screen resolution image may be the image used to send to a monitor for display thereon .A print resolution image may be of lower quality for printer applications .In one embodiment , a codestream of an image is organized into sections so that different versions of the image , such as , for example , a thumbnail version , a screen version , a print version and a lossless version , is progressive by quality .", "label": "", "metadata": {}, "score": "42.793762"}
{"text": "After selection , processing logic decompresses the non - quantized layers of the codestream ( processing block 1003 ) .Editing of Tiles , Tile - Parts , or Packets .Once a codestream is created , it may be desirable to edit parts of the image .", "label": "", "metadata": {}, "score": "42.858837"}
{"text": "After selection , processing logic decompresses the non - quantized layers of the codestream ( processing block 1003 ) .Editing of Tiles , Tile - Parts , or Packets .Once a codestream is created , it may be desirable to edit parts of the image .", "label": "", "metadata": {}, "score": "42.858837"}
{"text": "After selection , processing logic decompresses the non - quantized layers of the codestream ( processing block 1003 ) .Editing of Tiles , Tile - Parts , or Packets .Once a codestream is created , it may be desirable to edit parts of the image .", "label": "", "metadata": {}, "score": "42.858837"}
{"text": "Each respective mini - lexicon is used only for encoding and decoding a respective range of positions in the set of documents .The generation and use of the global - lexicon and the mini - lexicons are explained in more detail below .", "label": "", "metadata": {}, "score": "42.884678"}
{"text": "The search functional block 104 shown in more detail in FIG .2 ranks of all the branches in a dictionary such as to be able to derive the orthography or orthographies which have the highest probability of matching the spoken utterance .", "label": "", "metadata": {}, "score": "42.92641"}
{"text": "In a specific embodiment of this invention , the dictionary and the standard text lexicon are separate data structures that function independently from one another .For the purpose of this specification the expressions \" orthography \" is a data element that can be mapped onto a spoken utterance that can form a single word or a combination of words .", "label": "", "metadata": {}, "score": "42.996384"}
{"text": "It could contain information such as , for example , sideband information described herein or a copyright license for an image or text or other file format information .In one embodiment , in creating the replacement tile , tile - part , or packet , processing logic truncates the last packets for any or all components until the data fits in the codestream if the new data is larger than the unedited version of the data .", "label": "", "metadata": {}, "score": "43.1257"}
{"text": "2 .[ 0076 ] In some embodiments , the fourth set of relevancy scores S 4 can be used to select the top Z documents for presentation as an ordered list to the user , who can then simply click and follow internal pointers to the selected document .", "label": "", "metadata": {}, "score": "43.148174"}
{"text": "C. generating a digital coding representative of a capitalization pattern of a linguistic expression .In a method according to claim 61 , the further improvement whereby said indirect differential coding step comprises at least one of the steps of .i. generating and storing addressable digital codes representative of common linguistic expression hyphenation and suffix pattern , and . ii . generating and storing addressable digital codes representative of common linguistic expression alphanumeric character sequences .", "label": "", "metadata": {}, "score": "43.15265"}
{"text": "A wide variety of parameters can be used in the parameterisation block the most common being LPC coefficients , Mel - based cepstral coefficients , energies in a channel vocoder and zero crossing rate in a band - pass channel .The final sub - block of the pre - processing module , the endpoint detection or segmentation sub - block 206 splits the input signal waveform into start and end of the speech utterance .", "label": "", "metadata": {}, "score": "43.187386"}
{"text": "FIG .1 depicts a text processing system for use in practice of the invention ; .FIG .2 depicts a linguistic expression database constructed in accord with one practice of the invention ; .FIG .3 depicts the interrelationship of the master lexicon and the associated database tables ; .", "label": "", "metadata": {}, "score": "43.22881"}
{"text": "Method and apparatus for performing progressive order conversion US 7477792 B2 .Abstract .A method and apparatus for performing progressive order conversion is described .In one embodiment , a system comprises a memory and a progressive order conversion parser .", "label": "", "metadata": {}, "score": "43.344948"}
{"text": "For example , after the sorting by language , all the French documents will be grouped together , and then the French documents will be sorted by URL .When sorting by URL , each URL initially comprises a pattern of h1.h2 . . .", "label": "", "metadata": {}, "score": "43.374928"}
{"text": "In continuous and connected speech recognition , the endpoint detection stage is only used to provide a crude estimate of speech boundaries .In the 1980 's , most systems used the short term energy and the zero crossing rate and indication of the beginning or end of a word .", "label": "", "metadata": {}, "score": "43.37954"}
{"text": "However , the time saved by performing a simpler calculation improves the performance in speed of the system by several orders of magnitude .More specifically , the first pass search stage 208 , performs some rough probabilistic calculations and extracts from the speech recognition dictionary 218 a list of possible candidates for the spoken utterance .", "label": "", "metadata": {}, "score": "43.425095"}
{"text": "A method according to claim 49 wherein said suspect expression modification step includes the step of identifying said modified expression as being a valid linguistic expression .A method according to claim 51 wherein said suspect expression modification step comprises the steps of . A. generating a linguistically salient word skeleton of said modified suspect expression , and .", "label": "", "metadata": {}, "score": "43.471775"}
{"text": "The system defined in .A method comprising : . storing a compressed image as a codestream in a first JPEG 2000 progression order ; . wherein the parser converts the codestream from the first progression order to a predetermined intermediate progression order and from the predetermined intermediate progression order to the second progression order , and .", "label": "", "metadata": {}, "score": "43.52749"}
{"text": "The system defined in .A method comprising : . storing a compressed image as a codestream in a first JPEG 2000 progression order ; . wherein the parser converts the codestream from the first progression order to a predetermined intermediate progression order and from the predetermined intermediate progression order to the second progression order , and .", "label": "", "metadata": {}, "score": "43.52749"}
{"text": "Apart from a header entry , these entries provide information pertaining to each word in the word list .In particular , each entry includes a 3-bit capitalization code , of the type discussed above , and a 13-bit word list address .", "label": "", "metadata": {}, "score": "43.5608"}
{"text": "FIG .15 depicts the \" C510 \" processing sequence , which begins at block 246 .In step 248 , the process adds to the candidate expression list each master lexicon entry identified as having a skeleton matching that of the suspect expression .", "label": "", "metadata": {}, "score": "43.59014"}
{"text": "Figure 9 and Figure 10 show the accuracy curves of the mutual - reinforcement label propagation algorithm with different numbers of iterations .As seen in Figure 9 and Figure 10 , both for English and Chinese , trials on multiple domains show fast convergence of the proposed method .", "label": "", "metadata": {}, "score": "43.696087"}
{"text": "FIGS . 8 - 19 depict a preferred processing sequence for adding words to and deleting words from the User Dictionary .In word - addition mode , the illustrated routine , MODUSE , reads new words from either a text file , e.g. , during database initialization , or directly from the user , e.g. , during document verification .", "label": "", "metadata": {}, "score": "43.84347"}
{"text": "While this latter embodiment achieves substantial space savings , the time required to locate an expression within the block is increased .While in either embodiment skeletons can be stored with each entry , in a preferred embodiment they are not ; rather , the skeletons are generated at run - time .", "label": "", "metadata": {}, "score": "43.909378"}
{"text": "As embodied and broadly described herein the invention provides a speech recognition system comprising : . means for receiving a spoken utterance by a user of said speech recognition system , . a speech recognition dictionary including a plurality of orthographies potentially recognizable on a basis of the spoken utterance ; . means for selecting from said dictionary , a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; . a standard text lexicon including a plurality of orthographies ; . orthography insertion means for inserting at least one orthography from said standard text lexicon into said list to form an augmented list .", "label": "", "metadata": {}, "score": "43.949646"}
{"text": "For instance , a query term may be converted into a subtree containing the term and one or more synonym terms or other terms related to the query term , with the terms in the subtree being related to each other by an OR operator or parent node .", "label": "", "metadata": {}, "score": "43.954475"}
{"text": "If changes are made to the range set , they are not automatically applied to all entries .There is no macro language to automate common operations .For this reason , it is useful to be able to write custom programs that manipulate the contents of a Toolbox lexicon or text .", "label": "", "metadata": {}, "score": "43.98767"}
{"text": "( g ) Initial offset ( also referred to as \" S \" ) .( h ) Marker length ( also referred to as \" L \" ) .( i ) Marker type ( also referred to as \" T \" ) .", "label": "", "metadata": {}, "score": "43.994064"}
{"text": "A speech recognition system as defined in claim 13 , wherein said selection means is capable of receiving data indicative of an identifier , said selection means being capable of processing said data to select the standard text lexicon associated with the identifier designated by the received data .", "label": "", "metadata": {}, "score": "44.055874"}
{"text": "Soc .Am .84 ( 6 ) , December 1988 , p.2007 , whose contents are hereby incorporated by reference .The speech recognition system also comprises a search block 400 including four functional sub - blocks .The first sub - block , is referred to as the \" first pass search stage \" 402 , scores all the branches in a dictionary 403 by performing a rough estimation of the similarity between each orthography in the dictionary 403 and the uttered speech .", "label": "", "metadata": {}, "score": "44.111"}
{"text": "A method according to claim 29 comprising the further step of forming a common expression verification table having digitally encoded information representative of plural common linguistic expressions , said common expression verification table - forming step including the steps of .( i ) generating a first hash code representing a common linguistic expression , and .", "label": "", "metadata": {}, "score": "44.14264"}
{"text": "The invention relates to a method and an apparatus for recognising speech , more particularly to a speech recognition system and method utilising a speech recognition dictionary supplemented by a lexicon containing frequently occurring word sequences ( orthographies ) .In typical speech recognition systems , the process of speech recognition consists of scanning the vocabulary database or dictionary by using a fast match algorithm to find the top N candidates that potentially match the input speech .", "label": "", "metadata": {}, "score": "44.181488"}
{"text": "A voice activated dialing system comprising the speech recognition system of claim 1 .A method for performing speech recognition , said method comprising the steps of : . receiving a spoken utterance by a user of said speech recognition system ; . providing a speech recognition dictionary including a plurality of orthographies potentially recognizable on a basis of the spoken utterance ; . processing said speech recognition dictionary to derive on the basis of the spoken utterance a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; . providing a standard text lexicon including a plurality of orthographies ; . inserting at least one orthography from said standard text lexicon into said list to form an augmented list .", "label": "", "metadata": {}, "score": "44.20415"}
{"text": "reordering packets in the codestream using the structure to map the first progression order to the second progression order .The method defined in .claim 16 , further comprising specifying using the marker a starting point and an ending point of data associated with the respective packet .", "label": "", "metadata": {}, "score": "44.212234"}
{"text": "reordering packets in the codestream using the structure to map the first progression order to the second progression order .The method defined in .claim 16 , further comprising specifying using the marker a starting point and an ending point of data associated with the respective packet .", "label": "", "metadata": {}, "score": "44.212234"}
{"text": "Upon computing the new index , the process compares the verification table entry codes at this index with the suspect expression codes to determine if a match exists .If not , the process repeats itself until the maximum number of allowable rehashes ( e.g. , two rehashes ) have been performed .", "label": "", "metadata": {}, "score": "44.259827"}
{"text": "These efforts comprise the development of sophisticated speech processing and recognition systems that can be used in the context of telephone networks .In a typical speech recognition system the user enters his request using isolated word , connected word or continuous speech via a microphone or telephone set .", "label": "", "metadata": {}, "score": "44.29757"}
{"text": "If any of the modified expressions match a database expression , the process proceeds to the \" C50 \" sequence ; otherwise , the process proceeds to the \" C510 \" sequence .The \" C300 \" processing sequence begins at step 190 .", "label": "", "metadata": {}, "score": "44.35003"}
{"text": "A method according to claim 41 wherein said responding step includes the steps of . A. generating an alphanumeric character in response to an explicit differential coding representative of an alphanumeric character of said first linguistic expression , and .B. generating an alphanumeric character sequence in response to an indirect differential code , said indirect differential code representing a character sequence common to said first linguistic expression and to a third linguistic expression represented in a third lexicon entry .", "label": "", "metadata": {}, "score": "44.413765"}
{"text": "In Proceedings of the ACL Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics .Philadelphia , July 2002 , Association for Computational Linguistics .Provided are techniques for processing a data segment by stripping a header from a transport layer segment , performing protocol data unit detection to determine data for a protocol segment that is part of the transport layer segment data , and performing marker validation and stripping ....", "label": "", "metadata": {}, "score": "44.469654"}
{"text": "Alternate views of the data are possible .For example , below we find the same data displayed with additional information : the field markers are accompanied by their description on the left , while the field values are displayed in their usual location on the right : .", "label": "", "metadata": {}, "score": "44.516644"}
{"text": "After parsing , a set of documents is represented as a sequence of tokens .Furthermore , each token in the sequence of tokens has a token position , which also represents the position of the token in the set of documents .", "label": "", "metadata": {}, "score": "44.550133"}
{"text": "The system defined in .claim 1 wherein the parser : . determines where packets exist in the codestream based on at least one marker ; . creates a structure specifying components in each packet ; and .reorders packets in the codestream using the structure to map the first progression order to the second progression order .", "label": "", "metadata": {}, "score": "44.568146"}
{"text": "The design of the dictionary can be varied without detracting from the spirit of the invention since all that is needed is a model where the entries can be scored to provide probability measures depicting the probability a certain text has been uttered .", "label": "", "metadata": {}, "score": "44.56979"}
{"text": "FIG .11 , processing logic initially determines the tiles , tile - parts , or packets that cover the area , resolution , components , and/or precincts to be edited and decodes them ( processing block 1101 ) .This determination may be made in response to a user selecting an area and/or working resolution .", "label": "", "metadata": {}, "score": "44.575935"}
{"text": "FIG .11 , processing logic initially determines the tiles , tile - parts , or packets that cover the area , resolution , components , and/or precincts to be edited and decodes them ( processing block 1101 ) .This determination may be made in response to a user selecting an area and/or working resolution .", "label": "", "metadata": {}, "score": "44.575935"}
{"text": "Accordingly , one aspect of the invention contemplates a suspect expression modification element which generates , by modifying the suspect expression , a series of test expressions .Each test expressions incorporates a differing sequence of characters which \" reverse \" each type of typographic error .", "label": "", "metadata": {}, "score": "44.604294"}
{"text": "An object of this invention , therefore , is to provide an improved linguistic expression processor .More particularly , an object is to provide a spelling verifier , a spelling corrector , and a dictionary database which can operate effectively on word processors , microprocessor - controlled typewriters , and other computing systems of reduced processing and storage capacity .", "label": "", "metadata": {}, "score": "44.606163"}
{"text": "FIG .8 , the process begins by processing logic building a list from headers in the packets ( processing block 801 ) and optionally marking list items \" delete \" for quantization ( processing block 802 ) .Next , processing logic reorders the list to map the original progression to a desired progression ( including handling input and output with progressions specified with POC markers ( bounds on the progression order ) ( processing block 803 ) .", "label": "", "metadata": {}, "score": "44.645042"}
{"text": "FIG .8 , the process begins by processing logic building a list from headers in the packets ( processing block 801 ) and optionally marking list items \" delete \" for quantization ( processing block 802 ) .Next , processing logic reorders the list to map the original progression to a desired progression ( including handling input and output with progressions specified with POC markers ( bounds on the progression order ) ( processing block 803 ) .", "label": "", "metadata": {}, "score": "44.645042"}
{"text": "FIG .8 , the process begins by processing logic building a list from headers in the packets ( processing block 801 ) and optionally marking list items \" delete \" for quantization ( processing block 802 ) .Next , processing logic reorders the list to map the original progression to a desired progression ( including handling input and output with progressions specified with POC markers ( bounds on the progression order ) ( processing block 803 ) .", "label": "", "metadata": {}, "score": "44.645042"}
{"text": "A method according to claim 66 comprising the steps of . A. selectively modifying said suspect word skeleton by replacing one set of one or more skeleton symbols with a different set of such symbols , .B. comparing said modified suspect skeleton with a linguistically salient word skeleton of at least one said database expression , and .", "label": "", "metadata": {}, "score": "44.72341"}
{"text": "Furthermore , a scoring function may be applied to the result set , using the DocIDs and token positions within each document identified by the DocIDs so as to associate a score ( sometimes called a query score ) with each DocID in the result set .", "label": "", "metadata": {}, "score": "44.72612"}
{"text": "This problem can be addressed by sending a longer list of possible candidates to the re - score stage ( i.e. make N a larger number ) hereby increasing the chances that the actual correct orthography will be re - scored .", "label": "", "metadata": {}, "score": "44.754654"}
{"text": "This situation becomes even more difficult when the input information is a word or phrase .In these situations , the involvement of a human operator may be required to complete the desired task .Because telephone companies are likely to handle a very large number of calls per year , the associated labour costs are very significant .", "label": "", "metadata": {}, "score": "44.767853"}
{"text": "The method we propose can automatically detect such strings without the use of any lexicon , and no word segmentation is needed .We also can extract unknown words in a corpus which consist of three of more words .Keywords : CFS , normalized perplexity , phoneme - to - character , character - to - phoneme , prosodic segment .", "label": "", "metadata": {}, "score": "44.779076"}
{"text": "From the experimental results in Tables 2 - 3 , we can conclude that the mutual - reinforcement label propagation algorithm outperforms the monolingual polarity prediction algorithm .The better performance can be attributed to the fact that the mutual - reinforcement label propagation algorithm learns more information by combining two languages together .", "label": "", "metadata": {}, "score": "44.790184"}
{"text": "The apparatus is characterized , in part , by an input element for accepting a signal representative of a linguistic expression .This signal can be , for example , a database storage address .The apparatus is further characterized by an element for accessing information in the database and , particularly , information in the master lexicon .", "label": "", "metadata": {}, "score": "44.79557"}
{"text": "Figure 11 and Figure 12 show the accuracy curves of the mutual - reinforcement label propagation algorithm with different parameter .We have tried many different propagating possibilities and finally selected an approximately optimal value , which is 0.1 .The selected value is intuitive : if it is too large , the model tends to suffer from translation ambiguity ; if it is too small , the bilingual lexicon almost has no effect .", "label": "", "metadata": {}, "score": "44.809223"}
{"text": "For example , in the Rotokas text shown above , the \" m \" field in the text comes from the \" lx \" field of the lexicon and the \" g \" tier comes from the \" ge \" field of the lexicon .", "label": "", "metadata": {}, "score": "44.833885"}
{"text": "No . 5,097,509 ) .In simple terms , this algorithm computes the following : .The verification stage then performs some crosschecking with the standard text lexicon .Since the desired string \" 33 \" is present in the standard text lexicon , the system requires no confirmation from the user and proceeds in connecting the call .", "label": "", "metadata": {}, "score": "44.836174"}
{"text": "If there is more than one query term , during the first pass weights may be computed for the query terms to improve the search results .[0067 ] In some embodiments , the first pass through the system 500 processes a random sample of documents from a document corpus .", "label": "", "metadata": {}, "score": "44.86"}
{"text": "A method according to claim 49 wherein said suspect expression modification step comprises the step of matching said modified suspect expression with a table of user - defined expressions .A method according to claim 53 wherein said responding step includes the steps of . A. generating an alphanumeric character in response to an explicit differential coding representative of an alphanumeric character of said first linguistic expression , and .", "label": "", "metadata": {}, "score": "44.950336"}
{"text": "Likewise , target rates can be met for lower resolutions as well .The sideband information may be stored in a marker segment of the codestream .In one embodiment , the JPEG 2000 comment ( COM ) marker is used to provide information about the layers .", "label": "", "metadata": {}, "score": "44.984062"}
{"text": "Likewise , target rates can be met for lower resolutions as well .The sideband information may be stored in a marker segment of the codestream .In one embodiment , the JPEG 2000 comment ( COM ) marker is used to provide information about the layers .", "label": "", "metadata": {}, "score": "44.984062"}
{"text": "Likewise , target rates can be met for lower resolutions as well .The sideband information may be stored in a marker segment of the codestream .In one embodiment , the JPEG 2000 comment ( COM ) marker is used to provide information about the layers .", "label": "", "metadata": {}, "score": "44.984062"}
{"text": "A speech recognition system as defined in claim 2 , wherein said orthography insertion unit inserts into said list all the orthographies present in said standard text lexicon .A speech recognition system as defined in claim 6 , wherein said orthography insertion unit includes scoring means for scoring orthographies in said standard text lexicon on a basis of a potential match with the spoken utterance .", "label": "", "metadata": {}, "score": "45.085823"}
{"text": "Table 6 and table 7 show the average results of different seed word selection methods within the same language .As seen in Table 6 and Table 7 , our approach based on K - means clustering outperforms all the other approaches .", "label": "", "metadata": {}, "score": "45.09748"}
{"text": "It provides an integrated workspace for the development and maintenance of lexicons and texts .On balance , its strengths outweigh its limitations , especially for researchers who have a basic command of a scripting language such as Python , which together with NLTK can be used to extend its functionality .", "label": "", "metadata": {}, "score": "45.117603"}
{"text": "104 - 109 . \"SPEEDCOP -- Task A.1 : Quantification , \" J. J. Pollock , Jul. 1980 . \"SPEEDCOP -- Task A.3 : Word Classification , \" K. A. Hamill , Jun. 1980 . \"SPEEDCOP -- Task A.3/Task A.5 : Trigram Overlap Between Automatically Derived Word Classes , \" Yelena M. Nayvelt , Nov. 1980 . \"", "label": "", "metadata": {}, "score": "45.139336"}
{"text": "The levinstein distance method compares the similarity of the top N choice orthographies obtained from the first pass search with the orthographies in the standard text lexicon .Only the top L orthographies that have the highest score are inserted in the top N candidate list that is output by the first pass search stage , as shown at step 508 .", "label": "", "metadata": {}, "score": "45.211952"}
{"text": "These subsequent packets must be edited accordingly or eliminated .In another embodiment , such an indication may be made by zeroing out the data section of those tile - parts and/or creating a PPT marker segment that denotes no data .", "label": "", "metadata": {}, "score": "45.23893"}
{"text": "These subsequent packets must be edited accordingly or eliminated .In another embodiment , such an indication may be made by zeroing out the data section of those tile - parts and/or creating a PPT marker segment that denotes no data .", "label": "", "metadata": {}, "score": "45.23893"}
{"text": "These subsequent packets must be edited accordingly or eliminated .In another embodiment , such an indication may be made by zeroing out the data section of those tile - parts and/or creating a PPT marker segment that denotes no data .", "label": "", "metadata": {}, "score": "45.23893"}
{"text": "( iii ) storing in a storage medium one or more master lexicon entries , . D. forming a master lexicon wherein said blocks are arranged in an addressable sequence determined in accord with their respective skeletal collation range thereof , . E. inputting a signal representative of a suspect linguistic expression , . F. locating within said master lexicon an entry representing an expression substitutable for said suspect expression , and .", "label": "", "metadata": {}, "score": "45.257206"}
{"text": "FIG .16 .The process may be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "45.334183"}
{"text": "FIG .16 .The process may be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "45.334183"}
{"text": "In an embodiment in which there exists limited RAM storage , a cache table is not utilized .As indicated in the illustration , if the suspect word has not otherwise been identified as a misspelling , the process proceeds to step 122 .", "label": "", "metadata": {}, "score": "45.355156"}
{"text": "Hence , mining opinion lexicon for different domains from text corpora automatically has attracted a great deal of attention in the past few years [ 4 ] - [ 8 ] , [ 10 ] - [ 15 ] , [ 20 ] , [ 21 ] .", "label": "", "metadata": {}, "score": "45.367203"}
{"text": "They were hungry in this place one day .The information about the nature of the various fields in a lexicon or text ( see earlier screenshots ) is not found in the data file itself .Instead , it is found in separate \" settings \" files that provide information about the contents of the lexicon and text .", "label": "", "metadata": {}, "score": "45.522545"}
{"text": "The length code indicates the length of the represented word .The \" 's \" suffix pattern is similar to that discussed above .Entries within VERTAB , as well as those of the second array , VERCHK , are ordered according to the index value returned by FUNCTN .", "label": "", "metadata": {}, "score": "45.593395"}
{"text": "In forming the skeleton of a word , a process operating according to the invention carries out groups of conjunctively ordered steps .The output from one such step is the input to a subsequent step in the skeletonizing process .Other steps , however are complementary , i.e. , disjunctive , and may be applied in different sequential orderings .", "label": "", "metadata": {}, "score": "45.663284"}
{"text": "SPEEDCOP -- Task A.5 : The Use of Trigrams for Spelling Error Detection , \" Y. M. Nayvelt , Oct. 1980 . \"SPEEDCOP -- Task B.1 : Automatic Correction of Common Misspellings , \" J. J. Pollock , Oct. 1981 . \"", "label": "", "metadata": {}, "score": "45.674778"}
{"text": "For example , if it is known that an image is mostly text , a value may be sent that indicates that a first post - processing filter is to be used .On the other hand , if the area is mostly a graphic image , then a value may be sent that indicates that a second post - processing filter is to be used .", "label": "", "metadata": {}, "score": "45.693993"}
{"text": "For example , if it is known that an image is mostly text , a value may be sent that indicates that a first post - processing filter is to be used .On the other hand , if the area is mostly a graphic image , then a value may be sent that indicates that a second post - processing filter is to be used .", "label": "", "metadata": {}, "score": "45.693993"}
{"text": "For example , if it is known that an image is mostly text , a value may be sent that indicates that a first post - processing filter is to be used .On the other hand , if the area is mostly a graphic image , then a value may be sent that indicates that a second post - processing filter is to be used .", "label": "", "metadata": {}, "score": "45.693993"}
{"text": "However , the dictionary - based methods are unable to find domain dependent sentiment words because most entries in dictionaries are domain - independent .Turney and Littman [ 10 ] identify word polarity by looking at its statistical association with a set of positive / negative seed words .", "label": "", "metadata": {}, "score": "45.750217"}
{"text": "A subsequent section of each master lexicon entry is either a eight or sixteen bits in length .A 16-bit section includes : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "45.77566"}
{"text": "When the terms in a query occur near to each other within a document , it is more likely that the document is relevant to the query than if the terms occur at greater distance .Thus , the second set of relevancy scores S 2 are used to rank documents higher if the query terms occur adjacent to one another or in close proximity , as compared to documents in which the terms occur at a distance .", "label": "", "metadata": {}, "score": "45.784256"}
{"text": "The first step in processing a Toolbox lexicon with NLTK is to parse the lexicon file .To simplify the discussion , we will use the Rotokas lexicon shown above .An excerpt from that lexicon is available in NLTK as a sample data file called \" rotokas.dic \" .", "label": "", "metadata": {}, "score": "45.858887"}
{"text": "These dictionary statistics may be stored along with the user 's standard text lexicon in a database .Computation of new probabilities 416 for the orthographies stored in the dictionary 403 of the speech recognition system gives previously used orthographies a higher a priori probability than unused orthographies .", "label": "", "metadata": {}, "score": "45.900673"}
{"text": "According to one mode of operation , the illustrated sequence processes text on a page - by - page basis .For example , upon transmission of a page of text by the operator , the process checks and corrects any misspelled expressions .", "label": "", "metadata": {}, "score": "45.9124"}
{"text": "[0004 ] Information retrieval systems ( e.g. , search engines ) , match queries against an index of documents generated from a document corpus ( e.g. , the World Wide Web ) .A typical inverse index includes the words in each document , together with pointers to their locations within the documents .", "label": "", "metadata": {}, "score": "45.91857"}
{"text": "In this manner , the storage area for the input tile is almost completely reused .In one embodiment , to use a very little , or potentially minimum , memory , level 6 is stored separately from levels 4 and 5 .", "label": "", "metadata": {}, "score": "46.01214"}
{"text": "In this manner , the storage area for the input tile is almost completely reused .In one embodiment , to use a very little , or potentially minimum , memory , level 6 is stored separately from levels 4 and 5 .", "label": "", "metadata": {}, "score": "46.01214"}
{"text": "In this manner , the storage area for the input tile is almost completely reused .In one embodiment , to use a very little , or potentially minimum , memory , level 6 is stored separately from levels 4 and 5 .", "label": "", "metadata": {}, "score": "46.01214"}
{"text": "The systems operate at relatively high speed so as to reduce the amount of time required to correct a document .Additionally , the systems can interface with other text processing software to provide word processing capabilities tailored to different user - specific needs .", "label": "", "metadata": {}, "score": "46.078503"}
{"text": "Referring to .FIG .16 , processing logic initially determines the correct resolution and layering for the thumbnail ( processing block 1601 ) .In one embodiment , to determine the correct resolution and layering for the thumbnail , processing logic creates a POC constrained to that resolution and layer for each tile and then creates a set of tile - parts and places this POC for each tile in the codestream .", "label": "", "metadata": {}, "score": "46.12026"}
{"text": "Referring to .FIG .16 , processing logic initially determines the correct resolution and layering for the thumbnail ( processing block 1601 ) .In one embodiment , to determine the correct resolution and layering for the thumbnail , processing logic creates a POC constrained to that resolution and layer for each tile and then creates a set of tile - parts and places this POC for each tile in the codestream .", "label": "", "metadata": {}, "score": "46.12026"}
{"text": "Referring to .FIG .16 , processing logic initially determines the correct resolution and layering for the thumbnail ( processing block 1601 ) .In one embodiment , to determine the correct resolution and layering for the thumbnail , processing logic creates a POC constrained to that resolution and layer for each tile and then creates a set of tile - parts and places this POC for each tile in the codestream .", "label": "", "metadata": {}, "score": "46.12026"}
{"text": "FIG .10 depicts the \" C100 \" processing sequence , which begins at step 164 .In steps 166 - 170 , the process checks the length of the suspect word and examines the initialization flag .In the event of error , the process returns to the calling routine .", "label": "", "metadata": {}, "score": "46.129677"}
{"text": "One embodiment of this process is shown in .FIG .15A .Thus , these can be the 2 complete tile - parts output for each tile .Layer 2 may be output on a second pass within fixed - time or fixed - rate requirements while achieving similar distortion over all the components .", "label": "", "metadata": {}, "score": "46.130104"}
{"text": "One embodiment of this process is shown in .FIG .15A .Thus , these can be the 2 complete tile - parts output for each tile .Layer 2 may be output on a second pass within fixed - time or fixed - rate requirements while achieving similar distortion over all the components .", "label": "", "metadata": {}, "score": "46.130104"}
{"text": "A more complex method buffers the compressed data from some number of \" units . \"The bitrate and/or distortion for each unit at each distortion level is stored .Then the distortion to allow across all the units in the buffer is determined when the buffer is full .", "label": "", "metadata": {}, "score": "46.152653"}
{"text": "A more complex method buffers the compressed data from some number of \" units . \"The bitrate and/or distortion for each unit at each distortion level is stored .Then the distortion to allow across all the units in the buffer is determined when the buffer is full .", "label": "", "metadata": {}, "score": "46.152653"}
{"text": "Any of the above steps in the verification stage may be absent and their particular behaviour may be dependent upon the application .Following the verification stage , the standard text lexicon is updated 412 , immediately or at a later time , to reflect the user 's calling pattern .", "label": "", "metadata": {}, "score": "46.152733"}
{"text": "The invention relates to a method and an apparatus for recognising speech , more particularly to a speech recognition system and method utilising a speech recognition dictionary supplemented by a lexicon containing frequently occurring word sequences ( orthographies ) .Method and apparatus for performing speech recognition utilizing a supplementary lexicon of frequently used orthographies US 6018708 A .", "label": "", "metadata": {}, "score": "46.16748"}
{"text": "In the process of polarity propagation , we should choose the initial seed words with the maximum coverage instead of the maximum uncertainty , because our goal is to identify the polarity of the unlabeled words by propagating labels of limited seed words .", "label": "", "metadata": {}, "score": "46.21161"}
{"text": "5 is a flow chart illustrating the operation of the functional block that effects the forced inclusion of orthographies from the standard text lexicon ; .FIG .6 is a flow chart illustrating the operation of a speech recognition system in accordance with the invention ; .", "label": "", "metadata": {}, "score": "46.23613"}
{"text": "Word - final \" ae \" sequences are rewritten as a trace ( \" . sub .-- \") in words of five or more letters .All word - initial vowels or ( word - initial ) sequences of vowels ( members of the set \" a , e , i , o , u \" ) are rewritten as a trace ( \" . sub .", "label": "", "metadata": {}, "score": "46.25003"}
{"text": "Our approach propagates information back and forth between source language and target language , which is called mutual - reinforcement label propagation .The mutual - reinforcement label propagation model follows a two - stage framework .At the first stage , for each language , a label propagation algorithm is applied to a large word relation graph to produce a polarity estimate for any given word .", "label": "", "metadata": {}, "score": "46.31272"}
{"text": "In a preferred embodiment , these blocks are 512 bytes in length .In FIG .3 , two of these blocks are shown as elements \" BLOCK 1 \" and \" BLOCK 2 \" .In a preferred embodiment , the entries within the blocks are arranged in skeletal collation sequence , i.e. , a sequence determined in accord with skeletal values .", "label": "", "metadata": {}, "score": "46.398487"}
{"text": "In some embodiments , the first stage query processor 510 also computes a first set of relevancy scores S 1 between the query and each document based on one or more scoring algorithms .In one embodiment , the first set of relevancy scores S 1 are based on a set of factors that include presence of query terms , term frequency and document popularity .", "label": "", "metadata": {}, "score": "46.43628"}
{"text": "[ 0080 ] The main purpose of the first pass processing of the query is to produce a set of query expansion terms , and query term weights , so as to improve the quality of the query results produced by the second pass processing of the query .", "label": "", "metadata": {}, "score": "46.465397"}
{"text": "B. database storage means for storing signals representative of a set of valid linguistic expressions , .C. means for converting at least one said valid linguistic expression to a linguistically salient word skeleton , and for converting said suspect linguistic expression , or a modified form thereof , to a linguistically salient word skeleton , said converting means comprising .", "label": "", "metadata": {}, "score": "46.4674"}
{"text": "FIG .14 depicts the \" C500 \" processing sequence , which begins at block 234 .In step 236 , the process generates a linguistically salient word skeleton of the suspect word .In steps 238 - 240 , the process compares this skeleton with skeletons of master lexicon entries .", "label": "", "metadata": {}, "score": "46.5173"}
{"text": "0017 ]FIG .9A is a conceptual diagram of an encoding process used in the embodiment of the lexicon generator , and FIG .9B depicts exemplary data structures for representing encoded tokens .[ 0018 ] Like reference numerals refer to corresponding parts throughout the several views of the drawings .", "label": "", "metadata": {}, "score": "46.51915"}
{"text": "The two highest - ranking orthographies in the list are then transferred to the fourth and final stage of the search , which we call the rejection layer 408 .This operation can be performed by the algorithm described in U.S. Pat .", "label": "", "metadata": {}, "score": "46.53897"}
{"text": "6a shows a tree illustrating an example of a standard text lexicon that uses a - priori probabilities ; .FIG .6b shows a tree scored using values obtain from the previous scoring of the graph depicted in FIG .3b ; and .", "label": "", "metadata": {}, "score": "46.54209"}
{"text": "2 , is first to translate the incoming analog speech waveform into digital format .This can be done with the use of a simple A / D converter , a spectrogram generator or any other suitable technique .The input signal is then split into short segments called analysis frames whose typical duration ranges from 5 - 20 ms .", "label": "", "metadata": {}, "score": "46.597073"}
{"text": "This allows more fidelity for the high frequency coefficients , thereby resulting in text with sharp edges .Using Quantizers to Divide Things into Layers .Table 10 shows 16 example quantizers .Quantizer 15 is lossless .Quantizer 8 is the same as .", "label": "", "metadata": {}, "score": "46.598335"}
{"text": "This allows more fidelity for the high frequency coefficients , thereby resulting in text with sharp edges .Using Quantizers to Divide Things into Layers .Table 10 shows 16 example quantizers .Quantizer 15 is lossless .Quantizer 8 is the same as .", "label": "", "metadata": {}, "score": "46.598335"}
{"text": "As a reference , the reader is invited to consult Gupta V. N. , Lennig M. , Mermelstein P. \" A fast search strategy in a large vocabulary word recogniser INRS - Telecommunications .J. Acoust .Soc .Am .84 ( 6 ) , December 1988 , p.2007 and U.S. Pat .", "label": "", "metadata": {}, "score": "46.600895"}
{"text": "In steps 208 - 214 , the process compares those modified expressions which do not match entries in the suspect expression modification table with the User Dictionary .If the modified expression is not found in the dictionary , the processor returns to the calling routine ; see step 216 .", "label": "", "metadata": {}, "score": "46.74972"}
{"text": "In the experiments , accuracy is used to evaluate the performance of the proposed method , which is measured by counting the number of correctly labeled opinion words .In order to evaluate the effectiveness of the extracted opinion lexica , we applied them to practical sentiment classification task .", "label": "", "metadata": {}, "score": "46.761967"}
{"text": "FIG .21D illustrates that for a lossless version of the data , the remaining three tile - parts 2107 - 2108 are included with the rest of the tile - parts .These sets of tile parts may be placed on a server in this progressive order .", "label": "", "metadata": {}, "score": "46.788467"}
{"text": "FIG .21D illustrates that for a lossless version of the data , the remaining three tile - parts 2107 - 2108 are included with the rest of the tile - parts .These sets of tile parts may be placed on a server in this progressive order .", "label": "", "metadata": {}, "score": "46.788467"}
{"text": "FIG .21D illustrates that for a lossless version of the data , the remaining three tile - parts 2107 - 2108 are included with the rest of the tile - parts .These sets of tile parts may be placed on a server in this progressive order .", "label": "", "metadata": {}, "score": "46.788467"}
{"text": "SUMMARY OF THE INVENTION .The invention provides a system for linguistic expression verification , correction , and storage .The system is based , in part , on a unique method of arranging and storing linguistic information to form a compact linguistic expression database , i.e. , a computerized dictionary , designed for rapid data access .", "label": "", "metadata": {}, "score": "46.82576"}
{"text": "Each of the P LTokenIDs in the first mini - lexicon 208 is assigned to a unique GTokenID .Thus , a token having a position in the tokenized documents that falls within the range Start_Pos B to Start_Pos C -1 can be decoded using mini - lexicon B , as shown in FIG .", "label": "", "metadata": {}, "score": "46.8272"}
{"text": "Alternatively , the standard text lexicon may be of variable size such that the size of the lexicon grows indefinitely with each new speech utterance entered .Because of physical and economic limitations , the former is usually chosen for the physical implementation of the standard text lexicon .", "label": "", "metadata": {}, "score": "46.977737"}
{"text": "In the event of an unfavorable comparison , the access routine re - invokes FUNCTN to generates a new index using a process similar to that discussed above .The values are used in a repeat of the process described above .", "label": "", "metadata": {}, "score": "46.98712"}
{"text": "Soc .Opt .Eng . , USA .A method and apparatus for performing progressive order conversion is described .In one embodiment , a system comprises a memory and a progressive order conversion parser .Method and apparatus for performing progressive order conversion US 7477792 B2 .", "label": "", "metadata": {}, "score": "47.058487"}
{"text": "This correction process can be extended by a skeletal target modification element .This element modifies suspect expression skeletons , according to \" targeted \" modification rules , to produce other skeletons for further comparison with the master lexicon expressions .A spelling correction apparatus according to the invention can also include an element for detecting and correcting typographic spelling errors , i.e. , those caused by mechanical error .", "label": "", "metadata": {}, "score": "47.120636"}
{"text": "A speech recognition system as defined in claim 9 , wherein the orthographies in said standard text lexicon form a sub - set of the orthographies in said dictionary .A speech recognition system as defined in claim 1 , comprising a plurality of standard text lexicons .", "label": "", "metadata": {}, "score": "47.122955"}
{"text": "If the uttered speech is not in the dictionary , the system may reject the utterance or put out an incorrect choice .In some cases , it may occur that a speech utterance is rejected or that an incorrect choice is selected when the correct orthography is actually present in the speech recognition dictionary .", "label": "", "metadata": {}, "score": "47.160286"}
{"text": "At the beginning of the entire codestream is a main header , comprised of markers and marker segments , that offers similar information as well as information about the original image .The codestream is optionally wrapped in a file format that allows applications to interpret the meaning of , and other information about , the image .", "label": "", "metadata": {}, "score": "47.160866"}
{"text": "At the beginning of the entire codestream is a main header , comprised of markers and marker segments , that offers similar information as well as information about the original image .The codestream is optionally wrapped in a file format that allows applications to interpret the meaning of , and other information about , the image .", "label": "", "metadata": {}, "score": "47.160866"}
{"text": "At the beginning of the entire codestream is a main header , comprised of markers and marker segments , that offers similar information as well as information about the original image .The codestream is optionally wrapped in a file format that allows applications to interpret the meaning of , and other information about , the image .", "label": "", "metadata": {}, "score": "47.160866"}
{"text": "In one embodiment , the application uses a status buffer to indicate that the data in tile - parts subsequent to an edited tile - part may be useless .The status buffer may be in workspace memory and describes dependencies between packets .", "label": "", "metadata": {}, "score": "47.175514"}
{"text": "In one embodiment , the application uses a status buffer to indicate that the data in tile - parts subsequent to an edited tile - part may be useless .The status buffer may be in workspace memory and describes dependencies between packets .", "label": "", "metadata": {}, "score": "47.175514"}
{"text": "In one embodiment , the application uses a status buffer to indicate that the data in tile - parts subsequent to an edited tile - part may be useless .The status buffer may be in workspace memory and describes dependencies between packets .", "label": "", "metadata": {}, "score": "47.175514"}
{"text": "Of course , the exemplary modifications outlined above may result in reduced database , verifier , or corrector efficiency .Those skilled in the art may make changes described in the embodiment , and in other teachings herein , for further practices which are within the scope of the invention described and claimed herein .", "label": "", "metadata": {}, "score": "47.222122"}
{"text": "A method of electronic spelling correction in a digital data processing apparatus having a database for storing signals representative of a set of valid linguistic expressions , said method comprising the steps of . A. accepting a signal representative of a suspect linguistic expression , .", "label": "", "metadata": {}, "score": "47.246265"}
{"text": "FIG .12 depicts a preferred operational sequence for the CHKWRD routine , which begins at block 202 .In step 206 , the process compares a hash of the suspect word with the entries of the modified suspect expression verification table .", "label": "", "metadata": {}, "score": "47.28653"}
{"text": "In block 704 , the segment processing engine 230 detects the protocol data unit based on a starting location and a final length of the protocol data unit .In certain embodiments , the protocol data unit is detected from a starting location ( \" Start \" ) to the starting location plus the determined final length ( \" Start\"+final_length ) .", "label": "", "metadata": {}, "score": "47.31516"}
{"text": "For example , for an 8-bit image component , a quantiation step size of 8 , 16 or 32 might be used for text only regions and a quantization step size of 1 , 2 or 4 might be used for regions containing non - text .", "label": "", "metadata": {}, "score": "47.34661"}
{"text": "If the recognized word is not in the standard text lexicon and was confirmed to be incorrect by the user no operation is performed on the standard text lexicon 804 .In addition to scoring the orthographies in the dictionary , this invention provides a process that permits the adjustment of weights 416 in order to increase the probability of certain word combinations .", "label": "", "metadata": {}, "score": "47.35231"}
{"text": "0062 ]In some embodiments , the first stage query processor includes logic 416 for producing a result set .The lists of DocIDs are merged by logic 416 , in accordance with the Boolean logic specified by the query or query tree , to form a result set of DocIDs .", "label": "", "metadata": {}, "score": "47.40365"}
{"text": "The following sample script will print out the contents of the Rotokas dictionary in tabular format .That is , the output will be HTML consisting of a table in which each entry is a row with three columns : the lexeme , its part of speech , and its gloss .", "label": "", "metadata": {}, "score": "47.43428"}
{"text": "Here we use the findall ( ) function to search for any matches to the path \" record / lx \" , and we access the text content of the element : .Using some of the techniques discussed above , NLTK provides the ability to write Python scripts that give more fine - grained control over the presentation of data .", "label": "", "metadata": {}, "score": "47.461426"}
{"text": "These related terms can be used by the query expander 506 to expand the query for subsequent passes .[0068 ] The first stage query processor 510 uses the query terms to search against a tokenspace inverted index 512 and to identify documents matching the query .", "label": "", "metadata": {}, "score": "47.467903"}
{"text": "An intuitive explanation of the phenomenon is that using more datasets can expand the word co - occurrence , which is helpful to improve the performance of polarity assignment .To the best of our knowledge , the existing approaches for polarity assignment do not incorporate the cross - language mechanism ; while our method provides the first attempt to introduce a cross - language mechanism for opinion lexicon extraction .", "label": "", "metadata": {}, "score": "47.49453"}
{"text": "With continued reference to FIG .11 , the \" C200 \" sequence begins at step 184 .In block 186 , the process generates modified forms of the suspect expression by replacing each letter in that expression with other letters of the alphabet .", "label": "", "metadata": {}, "score": "47.578003"}
{"text": "The system defined in .claim 1 wherein the parser , in response to receiving a request , performs the conversion and sends the codestream in the second progression order .The system defined in .The system defined in .claim 9 wherein the server comprises a web server .", "label": "", "metadata": {}, "score": "47.63491"}
{"text": "The system defined in .claim 1 wherein the parser , in response to receiving a request , performs the conversion and sends the codestream in the second progression order .The system defined in .The system defined in .claim 9 wherein the server comprises a web server .", "label": "", "metadata": {}, "score": "47.63491"}
{"text": "The evaluation could provide more objective and reliable judgments and highlight the utility of our approach in practical application .The sentiment classification is unsupervised , thus we only used the labeled dataset for testing and the labeled dataset was not included in the unlabeled dataset .", "label": "", "metadata": {}, "score": "47.652214"}
{"text": "A method according to claim 47 wherein said master lexicon expression locating step comprises the step of responding to the absence of a match of skeletons for executing the steps of . A. selectively modifying said suspect expression skeleton by replacing one set of one or more skeletal symbols with a different set of such symbols , .", "label": "", "metadata": {}, "score": "47.67778"}
{"text": "generating a signal representative of an expression having an added character , and . iv .generating a signal representative of an expression having a replaced character .Description .BACKGROUND OF THE INVENTION .This invention is directed to linguistic expression processing .", "label": "", "metadata": {}, "score": "47.760395"}
{"text": "6A illustrates a system having such a parser .Referring to .FIG .6A , parser 601 receives requests from a client for a particular progression order .The client may be viewing a web page and selects a particular link .", "label": "", "metadata": {}, "score": "47.765297"}
{"text": "6A illustrates a system having such a parser .Referring to .FIG .6A , parser 601 receives requests from a client for a particular progression order .The client may be viewing a web page and selects a particular link .", "label": "", "metadata": {}, "score": "47.765297"}
{"text": "6A illustrates a system having such a parser .Referring to .FIG .6A , parser 601 receives requests from a client for a particular progression order .The client may be viewing a web page and selects a particular link .", "label": "", "metadata": {}, "score": "47.765297"}
{"text": "Also , in certain embodiments , if a transport layer segment is received out of order , embodiments will wait for the missing transport layer segments and place the transport layer segments in order before processing them .In block 604 , protocol data unit detection identifies a location of a Layer 4 + header .", "label": "", "metadata": {}, "score": "47.783825"}
{"text": "The graph search algorithm estimates likelihood for each branch in a graph based on both acoustics and a - priori probabilities .A heuristic algorithm then produces an ordered list of candidates , with the highest likelihood candidate being listed first .", "label": "", "metadata": {}, "score": "47.825768"}
{"text": "The instructions are listed in a preferred execution sequence .Every \" c \" followed immediately by \" e \" , \" i \" , or \" y \" is rewritten as \" s \" .Every non - word - initial \" z \" is rewritten as \" s \" .", "label": "", "metadata": {}, "score": "47.826946"}
{"text": "If matching skeletons are found , the corresponding linguistic expressions are returned to the calling routine .If no matching skeletons are found , the routine can expand the search to compensate for differing suffixes .For example , the routine can change the state of an \" s \" suffix flag , which indicates whether the suspect expression ends with an \" s \" , prior to comparing the modified skeletal expression with the block skeletal expressions .", "label": "", "metadata": {}, "score": "47.853054"}
{"text": "Thus , there exists a need in the industry to refine the speech recognition process such as to obtain a better recognition system with a high degree of accuracy particularly applicable to connected word recognition systems .OBJECTS AND STATEMENT OF THE INVENTION .", "label": "", "metadata": {}, "score": "47.916676"}
{"text": "The objective of the first pass search is to score all the branches in the graph .The results are shown in FIG .3b where each branch has an acoustic score associated with it .For the sake of simplicity , the a - priori values have been ignored .", "label": "", "metadata": {}, "score": "47.934784"}
{"text": "FIG .3a is a possible illustration of the dictionary in the form of a graph .The circles are called nodes and the paths between the nodes are called branches .Each branch is assigned a word ( digit in this case ) and optionally an a - priori probability .", "label": "", "metadata": {}, "score": "47.97169"}
{"text": "The entries of the array VERCHK are eight bits long and include an \" 's \" suffix pattern , an index pattern , and a length code .The index pattern stores a 3-bit portion of the index returned by FUNCTN .", "label": "", "metadata": {}, "score": "48.040924"}
{"text": "Automatic Spelling Error Detection and Correction in Textual Databases , \" J. J. Pollock and A. Zamora , International Interaction ; Proceedings of the ASIS Annual Meeting , vol .19 , Oct. 1982 , pp .236 - 238 . \"", "label": "", "metadata": {}, "score": "48.054554"}
{"text": "It will be apparent , however , to one skilled in the art , that the present invention may be practiced without these specific details .In other instances , well - known structures and devices are shown in block diagram form , rather than in detail , in order to avoid obscuring the present invention .", "label": "", "metadata": {}, "score": "48.0612"}
{"text": "It will be apparent , however , to one skilled in the art , that the present invention may be practiced without these specific details .In other instances , well - known structures and devices are shown in block diagram form , rather than in detail , in order to avoid obscuring the present invention .", "label": "", "metadata": {}, "score": "48.0612"}
{"text": "It will be apparent , however , to one skilled in the art , that the present invention may be practiced without these specific details .In other instances , well - known structures and devices are shown in block diagram form , rather than in detail , in order to avoid obscuring the present invention .", "label": "", "metadata": {}, "score": "48.0612"}
{"text": "detecting a protocol data unit based on a starting location and the final length of the protocol data unit ; and .perform marker validation and stripping .The article of manufacture of .claim 6 , wherein when performing marker validation and stripping , the instructions , when executed by the processor of the computer , are operable to : . extract a marker length number of bytes from an initial offset ; . validate the marker based on a marker type ; and . jump a marker interval in an incoming byte stream .", "label": "", "metadata": {}, "score": "48.070454"}
{"text": "9 illustrates a decoder that selects portions of a codestream based on sideband information .FIG .10 is a flow diagram of a process for using layers when decoding .FIG .11 is a flow diagram of one embodiment of an editing process .", "label": "", "metadata": {}, "score": "48.090168"}
{"text": "9 illustrates a decoder that selects portions of a codestream based on sideband information .FIG .10 is a flow diagram of a process for using layers when decoding .FIG .11 is a flow diagram of one embodiment of an editing process .", "label": "", "metadata": {}, "score": "48.090168"}
{"text": "9 illustrates a decoder that selects portions of a codestream based on sideband information .FIG .10 is a flow diagram of a process for using layers when decoding .FIG .11 is a flow diagram of one embodiment of an editing process .", "label": "", "metadata": {}, "score": "48.090168"}
{"text": "For example , in the hyphenation map of the word \" dictionary , \" for which hyphens are permitted after the third and seventh characters , the third and seventh bits have values of \" 1 \" ; the other bits have the value \" 0 \" .", "label": "", "metadata": {}, "score": "48.11154"}
{"text": "The proposed mechanism can be easily combined with a monolingual opinion lexicon extraction algorithm such as an approach based on random walk .Besides , our method is very flexible because it can be generalized to any other language .Essentially , the proposed framework mainly benefits from the mutual - reinforcement principle .", "label": "", "metadata": {}, "score": "48.147827"}
{"text": "If the distortion selected leads to a bit rate lower than the desired average bitrate , the distortion allowed is decreased for new units as they are compressed .A more complex method buffers the compressed data from some number of \" units . \"", "label": "", "metadata": {}, "score": "48.159172"}
{"text": "In step 134 , the process matches the suspect word with the master lexicon entries .If a disk error occurs in searching the master lexicon , the process returns an error message to the calling routine ; see steps 136 - 140 .", "label": "", "metadata": {}, "score": "48.194473"}
{"text": "In block 802 , the segment processing engine 230 performs marker validation based on a marker type that can point to a beginning and/or end of a protocol data unit .In certain embodiments , the segment processing engine 230 validates the marker with the following psuedocode : .", "label": "", "metadata": {}, "score": "48.198807"}
{"text": "6b , the digit 3 will also have a weight of 0.1 .This type of computation is done for every branch and path in the tree .Since the standard text lexicon is much smaller than the dictionary , this computation is feasible for the applications concerned with this invention .", "label": "", "metadata": {}, "score": "48.199684"}
{"text": "These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art .An algorithm is here , and generally , conceived to be a self - consistent sequence of steps leading to a desired result .", "label": "", "metadata": {}, "score": "48.209484"}
{"text": "These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art .An algorithm is here , and generally , conceived to be a self - consistent sequence of steps leading to a desired result .", "label": "", "metadata": {}, "score": "48.209484"}
{"text": "These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art .An algorithm is here , and generally , conceived to be a self - consistent sequence of steps leading to a desired result .", "label": "", "metadata": {}, "score": "48.209484"}
{"text": "The information may be used to control rate distortion .In another embodiment , the layers may be predefined for a particular viewing distance .In such a case , the data is divided into layers from the highest frequency , lowest resolution to the lowest frequency , highest resolution .", "label": "", "metadata": {}, "score": "48.2127"}
{"text": "A method as defined in claim 29 , comprising the step of receiving data indicative of an identifier and processing said data to select the standard text lexicon associated with the identifier designated by the received data .A method as defined in claim 30 , wherein said data is indicative of a telephone number of a caller .", "label": "", "metadata": {}, "score": "48.224533"}
{"text": "FIG .4 depicts one process for spelling verification and correction contemplated by the invention .In step 52 , the process initializes program variables and database storage sections .This initialization is governed , in part , by database management software 20C ( FIG .", "label": "", "metadata": {}, "score": "48.244934"}
{"text": "4 .In some embodiments , the token positions are used in a multi - stage query processing system for scoring documents relevant to the query , as described with respect to FIG .5 .In response to the query terms , the query processors 114 generate an ordered list of documents which are presented to the user via one or more modes of communication ( e.g. , display device , audio , etc . ) .", "label": "", "metadata": {}, "score": "48.26656"}
{"text": "Other attributes that may be used as indicators of relevancy include bolded text , underlined text and font size .Thus , the third set of scores S 3 are determined using the attributes of tokens in the documents that match the query terms .", "label": "", "metadata": {}, "score": "48.32572"}
{"text": "These algorithms are well known in the art to which this invention pertains .At this point , the list generated by the combination of the N top candidate of the first pass search and the standard text lexicon candidates , which we will designate as the augmented candidate list , is processed by the third step , called the re - score stage 406 .", "label": "", "metadata": {}, "score": "48.381035"}
{"text": "A computer readable medium with executable instructions stored thereon which , when executed by a processing device , cause the processing device to : . store a compressed image as a codestream in a first JPEG 2000 progression order ; and .", "label": "", "metadata": {}, "score": "48.390327"}
{"text": "A computer readable medium with executable instructions stored thereon which , when executed by a processing device , cause the processing device to : . store a compressed image as a codestream in a first JPEG 2000 progression order ; and .", "label": "", "metadata": {}, "score": "48.390327"}
{"text": "Hyphenation information for each master lexicon word is represented by an n - bit string , where \" n \" is the number of characters in the word .Hyphenation points within the word are indicated by a bit having the value \" 1 \" .", "label": "", "metadata": {}, "score": "48.531975"}
{"text": "Let us assume that the standard text lexicon associated with the user terminal station consists of the following numbers : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Standard text lexicon______________________________________343353 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .", "label": "", "metadata": {}, "score": "48.603626"}
{"text": "The criterion for selecting which packets go into the first set of tile - parts can be similar to any other rate control algorithm .In one embodiment , the rate of packets can be less than the desired average bitrate for the whole image .", "label": "", "metadata": {}, "score": "48.658306"}
{"text": "The criterion for selecting which packets go into the first set of tile - parts can be similar to any other rate control algorithm .In one embodiment , the rate of packets can be less than the desired average bitrate for the whole image .", "label": "", "metadata": {}, "score": "48.658306"}
{"text": "A naive decoder would simply ignore the data in the comment marker .FIG .10 is a flow diagram of a process for using layers when decoding .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "48.662178"}
{"text": "A naive decoder would simply ignore the data in the comment marker .FIG .10 is a flow diagram of a process for using layers when decoding .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "48.662178"}
{"text": "A naive decoder would simply ignore the data in the comment marker .FIG .10 is a flow diagram of a process for using layers when decoding .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "48.662178"}
{"text": "9 - 17 are flow charts depicting a processing sequence for a preferred spelling correction method ; .FIGS .18 - 20 are flow charts depicting a processing sequence for a preferred user dictionary maintenance routine .DESCRIPTION OF THE ILLUSTRATED EMBODIMENT .", "label": "", "metadata": {}, "score": "48.683624"}
{"text": "The process than invokes FUNCTN to determine a hash code and index .The process addresses the indexed verification table entry and compares the hash code and S - map with the corresponding entry codes .If the hash codes do not match , the process generates a new index which is a function of the original hash code index .", "label": "", "metadata": {}, "score": "48.695847"}
{"text": "In the event none of these modified expressions produce valid word forms , the process proceeds to the \" C50 \" sequence ; otherwise , the process proceeds to the \" C510 \" sequence , i.e. , step 246 ( FIG .", "label": "", "metadata": {}, "score": "48.7601"}
{"text": "In order to further improve the performance of mutual - reinforcement label propagation , we refine the label propagation algorithm from two aspects : seed word selection and graph construction .For seed word selection , active learning is used in conjunction with semi - supervised learning because it can effectively reduce the demand for labeled samples .", "label": "", "metadata": {}, "score": "48.77834"}
{"text": "Every remaining \" a \" , \" e \" , \" i \" , \" o \" , \" u \" , and \" y \" is deleted .Position restriction : This operation does not apply in word - initial position .", "label": "", "metadata": {}, "score": "48.792866"}
{"text": "Typically , algorithms such as the Viterbi trellis or other similar algorithms well known in the art are used at this stage .During the re - score stage , we may also use a - priori probabilities of the supplied orthographies in order to favor frequently occurring strings .", "label": "", "metadata": {}, "score": "48.798992"}
{"text": "Therefore , this information is hidden .For example , the 1 bit block represents the 1 in the 2\u00d72 block above indicates it is not part of a minimal tag tree , but can be used to convey some particular information to a decoder .", "label": "", "metadata": {}, "score": "48.901382"}
{"text": "Therefore , this information is hidden .For example , the 1 bit block represents the 1 in the 2\u00d72 block above indicates it is not part of a minimal tag tree , but can be used to convey some particular information to a decoder .", "label": "", "metadata": {}, "score": "48.901382"}
{"text": "Therefore , this information is hidden .For example , the 1 bit block represents the 1 in the 2\u00d72 block above indicates it is not part of a minimal tag tree , but can be used to convey some particular information to a decoder .", "label": "", "metadata": {}, "score": "48.901382"}
{"text": "During a second pass processing of the expanded query , the last query stage 520 produces short snippets , suitable in length and content for display with the list of documents in the result set having the highest or best scores .", "label": "", "metadata": {}, "score": "48.90162"}
{"text": "The result of the re - score stage is a short list of orthographies with their associated exact scores ( probabilities of being a match to the spoken utterance ) .The two highest - ranking orthographies in the list are then typically transferred to the rejection stage 212 .", "label": "", "metadata": {}, "score": "48.959908"}
{"text": "A spelling verification and correction apparatus constructed in accord with the invention operates , in part , by identifying and correcting cognitive spelling errors .These errors commonly arise because of a lack of correspondence , or isomorphy , between the graphic form of a word and the phonetic , or spoken form of that word .", "label": "", "metadata": {}, "score": "48.999054"}
{"text": "In some cases , two spatially adjacent coefficients may be close to each other numerically yet in separate quantization bins , such as coefficient values 1201 of range R 2 and 1202 of range R 1 in FIG .12 .The results of the quantization may cause an artifact to occur .", "label": "", "metadata": {}, "score": "49.013344"}
{"text": "Thus , control is passed from one layer to the next to transmit and receive data .The application layer ( Layer 7 ) supports application and end - user processes .The presentation layer ( Layer 6 ) translates data from application to network format , and vice versa .", "label": "", "metadata": {}, "score": "49.079937"}
{"text": "As a variant , many phone numbers can be associated to a given standard text lexicon , such as a cellular number and a residence number for the same user , without detracting from the spirit of the invention .The speech recognition system also includes a lexicon selection block 420 that receives the identifier and on that basis selects the appropriate standard text lexicon .", "label": "", "metadata": {}, "score": "49.130062"}
{"text": "LP and MLP only differ in whether cross - language relations are used and all the other aspects are identical .Some were culled from manually developed resources .Others were identified automatically using both annotated and unannotated data .Mutual - reinforcement Label Propagation vs. Baselines .", "label": "", "metadata": {}, "score": "49.180054"}
{"text": "Again , processing logic applies a first level inverse transform to clipped coefficients ( processing block 2805 ) and clips the partially transformed coefficients to still another predetermined range ( processing block 2806 ) .Simplified Colorspace Handling .A typical decoding process including color management is shown in .", "label": "", "metadata": {}, "score": "49.182644"}
{"text": "Again , processing logic applies a first level inverse transform to clipped coefficients ( processing block 2805 ) and clips the partially transformed coefficients to still another predetermined range ( processing block 2806 ) .Simplified Colorspace Handling .A typical decoding process including color management is shown in .", "label": "", "metadata": {}, "score": "49.182644"}
{"text": "For example , a state machine and associated registers may be used to calculate the complete CRC digest , and the partial CRC digest and residual data may be used to save the state of the registers before all data for the protocol data unit is received .", "label": "", "metadata": {}, "score": "49.184242"}
{"text": "Also the last packet in a tile - part can be extended a few bytes .These extra bytes may be used to send additional information .The length of the compressed data for a code - block can be given in the packet header with a non - minimum representation .", "label": "", "metadata": {}, "score": "49.18489"}
{"text": "Also the last packet in a tile - part can be extended a few bytes .These extra bytes may be used to send additional information .The length of the compressed data for a code - block can be given in the packet header with a non - minimum representation .", "label": "", "metadata": {}, "score": "49.18489"}
{"text": "Also the last packet in a tile - part can be extended a few bytes .These extra bytes may be used to send additional information .The length of the compressed data for a code - block can be given in the packet header with a non - minimum representation .", "label": "", "metadata": {}, "score": "49.18489"}
{"text": "A method as defined in claim 18 , comprising the step of ranking orthographies in said augmented list on a basis of acoustic match with the spoken utterance .A method as defined in claim 19 , comprising the step of processing selected ones of the orthographies ranked in said augmented list to evaluate how distinctive the selected ones of said orthographies are with relation to one another .", "label": "", "metadata": {}, "score": "49.259163"}
{"text": "It is not intended to be exhaustive or limiting .Many modifications and variations are possible in light of the above teachings .Figures .Abstract .There is a growing interest in automatically building opinion lexicon from sources such as product reviews .", "label": "", "metadata": {}, "score": "49.28013"}
{"text": "FIG .16 depicts the \" C600 \" processing sequence , which begins at step 258 .According to step 260 , if the suspect word has a length greater than 21 characters , processing returns to the \" C50 \" processing sequence ; otherwise , in step 262 , the process initializes routine variables .", "label": "", "metadata": {}, "score": "49.3464"}
{"text": "decompressing non - quantized layers of the codestream .The method defined in .claim 1 wherein the sideband information is stored in a marker segment of the codestream .The method defined in . claim 2 wherein the marker segment comprises a comment marker .", "label": "", "metadata": {}, "score": "49.347298"}
{"text": "word - initial : the letter occupying position one is the word - initial .word boundary : the end of the word is marked by the symbol \" # \" , which immediately follows the last letter in the word .", "label": "", "metadata": {}, "score": "49.370422"}
{"text": "FIG .8 illustrates operations performed by the segment processing engine 230 for marker validation and stripping ( block 606 ) in accordance with certain embodiments .Control begins at block 800 with the segment processing engine 230 extracting marker length parameter ( \" L \" ) bytes from an initial offset .", "label": "", "metadata": {}, "score": "49.370834"}
{"text": "FIG .8 illustrates one embodiment of a process for performing progression order conversion .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.39329"}
{"text": "FIG .8 illustrates one embodiment of a process for performing progression order conversion .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.39329"}
{"text": "FIG .8 illustrates one embodiment of a process for performing progression order conversion .The process is performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.39329"}
{"text": "The process continues until the total is equal to or greater than the number of bytes desired or all packets have been added .During the process , those packets which have been added to the total , are marked as selected by the selection flag in the structure .", "label": "", "metadata": {}, "score": "49.441628"}
{"text": "The process continues until the total is equal to or greater than the number of bytes desired or all packets have been added .During the process , those packets which have been added to the total , are marked as selected by the selection flag in the structure .", "label": "", "metadata": {}, "score": "49.441628"}
{"text": "The process continues until the total is equal to or greater than the number of bytes desired or all packets have been added .During the process , those packets which have been added to the total , are marked as selected by the selection flag in the structure .", "label": "", "metadata": {}, "score": "49.441628"}
{"text": "In steps 252 - 254 , the process determines whether the number of candidate expressions is too large .If so , the \" limit exceeded \" flag is set and the process returns to the calling routine .Otherwise , in step 256 , the candidate list \" completed \" flag is set , indicating that a suitable number of candidate expressions have been identified .", "label": "", "metadata": {}, "score": "49.49984"}
{"text": "( ii ) storing said second hash code for addressable access in accord with a second index value .A method according to claim 29 comprising the further step of forming a user expression table having digitally encoded information representative of one or more user - defined expressions , said user expression table - forming step comprising the steps of .", "label": "", "metadata": {}, "score": "49.58508"}
{"text": "21 , No . 1 , Jan. 1974 , pp .168 - 173 . \"The Use of Trigram Analysis for Spelling Error Detection , \" E. M. Zamora , J. J. Pollock and A. Zamora , Information Processing & Management , vol .", "label": "", "metadata": {}, "score": "49.679913"}
{"text": "FIG .11 is a flow diagram of one embodiment of an editing process .The process is performed by process logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.681736"}
{"text": "FIG .11 is a flow diagram of one embodiment of an editing process .The process is performed by process logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.681736"}
{"text": "FIG .11 is a flow diagram of one embodiment of an editing process .The process is performed by process logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run by , for example , a general purpose computer or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "49.681736"}
{"text": "The new TCP connection parameters may be set as soon as a connection is created and before any data is transferred .These fields are used with in - order transport layer segments to detect protocol data unit boundaries , validate markers , and delete ( strip ) markers .", "label": "", "metadata": {}, "score": "49.689827"}
{"text": "With the advent of smaller microprocessor - based computing systems , e.g. , word processors , the storage requirements and computational efficiency of text processing software have become very important .These smaller systems include only a limited amount of memory and , thus , have little capacity for storage of spelling dictionaries and software .", "label": "", "metadata": {}, "score": "49.698353"}
{"text": "5 .On each pass ( other than the last ) , additional query expansion terms are generated ( as will be explained below ) , and then these additional terms are added to the query tree .The query tree can also be used as a scoring tree , with weights being associated with terms in the query tree .", "label": "", "metadata": {}, "score": "49.699272"}
{"text": "B. comparing said modified suspect skeleton with a linguistically salient word skeleton of at least one said database alternate expression , and .C. selectively repeating said modifying step and said comparing step in response to the continued absence of a match of skeletons .", "label": "", "metadata": {}, "score": "49.71749"}
{"text": "A method and apparatus for performing progressive order conversion is described .In one embodiment , a system comprises a memory and a progressive order conversion parser .The memory stores a compressed image as a codestream in a first progression order and the progression order conversion parser converts the codestream from the first progression order to a second progression order different than the first progression order .", "label": "", "metadata": {}, "score": "49.740685"}
{"text": "This comparison hardware and software may implement a subtractor or subtraction operation .The results are a quantized codesteam ( assuming some values have been changed . )This may be applied over two or more frames .Also the comparison is not limited to two consecutive frames .", "label": "", "metadata": {}, "score": "49.74105"}
{"text": "This comparison hardware and software may implement a subtractor or subtraction operation .The results are a quantized codesteam ( assuming some values have been changed . )This may be applied over two or more frames .Also the comparison is not limited to two consecutive frames .", "label": "", "metadata": {}, "score": "49.74105"}
{"text": "This comparison hardware and software may implement a subtractor or subtraction operation .The results are a quantized codesteam ( assuming some values have been changed . )This may be applied over two or more frames .Also the comparison is not limited to two consecutive frames .", "label": "", "metadata": {}, "score": "49.74105"}
{"text": "In another embodiment , the layers may be predefined for a particular viewing distance .In such a case , the data is divided into layers from the highest frequency , lowest resolution to the lowest frequency , highest resolution .In one embodiment , the layer information indicates the summation of bits across the entire image for that layer and all previous layers ( for example the 16,011 bits listed next to layer 1 indicates the total number of bits for layer 0 and layer 1 ) .", "label": "", "metadata": {}, "score": "49.775"}
{"text": "In another embodiment , the layers may be predefined for a particular viewing distance .In such a case , the data is divided into layers from the highest frequency , lowest resolution to the lowest frequency , highest resolution .In one embodiment , the layer information indicates the summation of bits across the entire image for that layer and all previous layers ( for example the 16,011 bits listed next to layer 1 indicates the total number of bits for layer 0 and layer 1 ) .", "label": "", "metadata": {}, "score": "49.775"}
{"text": "The contents of the lexicon object can be accessed by indices or by paths .Indices essentially treat a lexicon as a list of entries , each of which consists of a list of fields .Individual items in the list can be accessed by number ( where counting begins with zero ) .", "label": "", "metadata": {}, "score": "49.777214"}
{"text": "In the following description , reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments .It is understood that other embodiments may be utilized and structural and operational changes may be made .FIG .", "label": "", "metadata": {}, "score": "49.818535"}
{"text": "Once the marker is validated , in block 804 , the segment processing engine 230 jumps a marker interval in the incoming byte stream .FIG .9 illustrates operations performed by the pre - processing agent 210 in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "49.83723"}
{"text": "The biggest challenge is the initial setup of a project .Although it is possible to do this from scratch by carefully following the documentation , a better approach is to start with a sample project and modify it for one 's own purposes .", "label": "", "metadata": {}, "score": "49.852192"}
{"text": "In one embodiment , selective quantization of coefficients can be performed during encoding by setting a subset of the refinement bits to be the more probable symbol ( MPS ) .This may be performed at a user selected bitplane .Such a quantization scheme may be used to implement non - uniform quantization step sizes .", "label": "", "metadata": {}, "score": "49.86734"}
{"text": "In one embodiment , selective quantization of coefficients can be performed during encoding by setting a subset of the refinement bits to be the more probable symbol ( MPS ) .This may be performed at a user selected bitplane .Such a quantization scheme may be used to implement non - uniform quantization step sizes .", "label": "", "metadata": {}, "score": "49.86734"}
{"text": "In one embodiment , selective quantization of coefficients can be performed during encoding by setting a subset of the refinement bits to be the more probable symbol ( MPS ) .This may be performed at a user selected bitplane .Such a quantization scheme may be used to implement non - uniform quantization step sizes .", "label": "", "metadata": {}, "score": "49.86734"}
{"text": "An apparatus according to claim 19 further comprising user expression verification means for identifying a suspect expression or modification thereof as matching a user defined expression .A method for storing digitally - encoded linguistic information in a digital data processing apparatus , said method comprising the steps of . A. inputting plural linguistic expressions , each said linguistic expression including alphanumeric characters , .", "label": "", "metadata": {}, "score": "49.868446"}
{"text": "A machine readable storage medium as defined in claim 44 , comprising wherein said program element directs the processor for receiving data indicative of an identifier and processing the data to select the standard text lexicon associated with the identifier designated by the received data .", "label": "", "metadata": {}, "score": "49.88537"}
{"text": "If is set to 1 stiffly , this kind of misleading information may be too overwhelming .Discussion .In this paper , we propose a cross - language opinion lexicon extraction framework using the mutual - reinforcement label propagation algorithm .", "label": "", "metadata": {}, "score": "49.89891"}
{"text": "A query string 502 is tokenized and parsed by a query parser 504 into query terms ( i.e. , each distinct term in the query is treated as a token ) .The tokenized query terms are translated by the global - lexicon 508 to corresponding GTokenIDs using a translation table or mapping , as previously described with respect to FIGS . 2 and 4 .", "label": "", "metadata": {}, "score": "49.965534"}
{"text": "The invention can be used , for example , to provide text processing on word processors and microprocessor - controlled typewriters .Text processing systems facilitate the production of printed documents .Capabilities of the systems generally include text entry , editing , and justification , as well as spelling verification and correction .", "label": "", "metadata": {}, "score": "49.99211"}
{"text": "Therefore , assuming a tile height between 128 and 1024 inclusive and using in - place memory for 3 levels of the transform is a good heuristic .In such a case , the input tile ends up at the top of the memory structure .", "label": "", "metadata": {}, "score": "49.999783"}
{"text": "Therefore , assuming a tile height between 128 and 1024 inclusive and using in - place memory for 3 levels of the transform is a good heuristic .In such a case , the input tile ends up at the top of the memory structure .", "label": "", "metadata": {}, "score": "49.999783"}
{"text": "Therefore , assuming a tile height between 128 and 1024 inclusive and using in - place memory for 3 levels of the transform is a good heuristic .In such a case , the input tile ends up at the top of the memory structure .", "label": "", "metadata": {}, "score": "49.999783"}
{"text": "A machine readable storage medium as defined in claim 32 , wherein said program element instructing the processor for inserting all the orthographies in the standard text lexicon in said list .A machine readable storage medium as defined in claim 37 , wherein said program element instructing the processor for scoring orthographies in the standard text lexicon on a basis of a potential match with the spoken utterance .", "label": "", "metadata": {}, "score": "50.02945"}
{"text": "This partial CRC digest is used as an initial CRC digest for the next transport layer segment .Thus , this process serializes back - to - back transport layer segment processing on the same flow .FIG .13 illustrates a timeline 1300 of serialization in a \" BEFORE \" scenario in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "50.180374"}
{"text": "Wiebe J , Wilson T , Bruce R , Bell M , Martin M ( 2004 )Learning subjective language .Computational Linguistics 30(3 ) , pp.277 - 308 .Lin Z , Tan S , Cheng X , Xu X , Shi W ( 2012 ) Effective and Efficient ?", "label": "", "metadata": {}, "score": "50.182205"}
{"text": "O+W ] ) is the extracted value from the processing of block 700 : .This value is multiplied by the value of the length field multiplier ( \" M \" ) , and then the result is added to the value of the length field adder parameter ( \" A \" ) .", "label": "", "metadata": {}, "score": "50.198746"}
{"text": "A CFS is very useful in Chinese natural language processing and its related applications .We show its application to the following three tasks : Chinese phoneme - to - character conversion , Chinese character - to - phoneme conversion , and the determination of prosodic segments in a Chinese sentence for text - to - speech output .", "label": "", "metadata": {}, "score": "50.22421"}
{"text": "5 illustrates one embodiment of the process of handling the input data .FIG .6A illustrates a system having a progression order conversion parser .FIG .6B illustrates a progression converter converting from a resolution progressive codestream to a quality progressive codestream .", "label": "", "metadata": {}, "score": "50.25289"}
{"text": "5 illustrates one embodiment of the process of handling the input data .FIG .6A illustrates a system having a progression order conversion parser .FIG .6B illustrates a progression converter converting from a resolution progressive codestream to a quality progressive codestream .", "label": "", "metadata": {}, "score": "50.25289"}
{"text": "5 illustrates one embodiment of the process of handling the input data .FIG .6A illustrates a system having a progression order conversion parser .FIG .6B illustrates a progression converter converting from a resolution progressive codestream to a quality progressive codestream .", "label": "", "metadata": {}, "score": "50.25289"}
{"text": "C. selectively repeating said modifying step and said comparing step in response to the continued absence of a match of skeletons .A method according to claim 46 further comprising the step of generating a signal representative of a modified form of said suspect expression and for locating a linguistic expression matching said modified suspect expression .", "label": "", "metadata": {}, "score": "50.296642"}
{"text": "Sign up to receive free email alerts when patent applications with chosen keywords are published SIGN UP .Abstract : .A search engine server system receives from a client system a search query and identifies a set of documents in accordance with the search query .", "label": "", "metadata": {}, "score": "50.32998"}
{"text": "The system furthermore returns to the client system a response to the search query , the response including information identifying at least the respective document and including the content snippet of the respective document .A second decompression operation is performed by applying a second mapping to the set of second token identifiers to recover uncompressed content comprising a portion of the respective document .", "label": "", "metadata": {}, "score": "50.346474"}
{"text": "When a particular token is found in documents associated with more than language , the language associated with the token may be determined using any suitable methodology .One suitable methodology is a statistical methodology that is used while parsing the set of documents to identify unique tokens .", "label": "", "metadata": {}, "score": "50.37565"}
{"text": "BRIEF DESCRIPTION OF THE DRAWINGS .Referring now to the drawings in which like reference numbers represent corresponding parts throughout : .FIG .1 illustrates details of a computing environment in which certain embodiments may be implemented .FIG .2 illustrates a block diagram of a network adapter in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "50.401787"}
{"text": "Each of the layers comprises coded data that adds visual value to the image .Method and apparatus for selecting layers for quantization based on sideband information US 7072520 B2 .Abstract .A method and apparatus for selecting layers for quantization based on sideband information is described .", "label": "", "metadata": {}, "score": "50.49419"}
{"text": "Esuli A , Sebastiani F ( 2006 )Sentiwordnet : A publicly available lexical resource for opinion mining .In Proceedings of the 5th Conference on Language Resources and Evaluation , 417 - 422 .Kamps J , Marx M , Mokken RJ , de Rijke M ( 2004 )", "label": "", "metadata": {}, "score": "50.575317"}
{"text": "These representations are well known to one skilled in the art to which the invention pertains .In the example of a voice activated dialing system , the nodes in the graph represent the digit positions in the telephone number and the transition branches represent each of the digits with its associated probability in the given position ( FIG .", "label": "", "metadata": {}, "score": "50.60701"}
{"text": "In one embodiment , for coefficients near a boundary between two quantization bins , the encoder selects a bin such as Range R 1 into which a coefficient , such as coefficient 1201 , will be quantized so that it is consistent with neighbors , such as coefficient 1202 .", "label": "", "metadata": {}, "score": "50.608696"}
{"text": "In one embodiment , for coefficients near a boundary between two quantization bins , the encoder selects a bin such as Range R 1 into which a coefficient , such as coefficient 1201 , will be quantized so that it is consistent with neighbors , such as coefficient 1202 .", "label": "", "metadata": {}, "score": "50.608696"}
{"text": "If the entry is null , the routine returns a message indicating that the word is not in the database ; otherwise , the routine examines the expression stored in the word list at the address indicated by the pointer table .", "label": "", "metadata": {}, "score": "50.651085"}
{"text": "For each language , a label propagation algorithm is applied to a large word relation graph , producing a polarity estimate for any given word .In order to establish communication between two languages , a bilingual dictionary is introduced .Figure 2 shows a simple example of mutual - reinforcement label propagation .", "label": "", "metadata": {}, "score": "50.655403"}
{"text": "699,202 , filed Feb. 5 , 1985 for \" Method and Apparatus for Semi - Automatic Spelling Correction . \" In step 66 , the process prints the corrected suspect expression or a list of candidate alternate expressions .In step 68 , the process determines whether other suspect expressions require verification and correction .", "label": "", "metadata": {}, "score": "50.666904"}
{"text": "In an alternative embodiment , the layers may be predefined for some other distortion metric ( e.g. , MSE , weighted MSE , sharpness of text , etc . ) .The decoder uses the information regarding the layers from the codestream to select layers to generate an image .", "label": "", "metadata": {}, "score": "50.703125"}
{"text": "In an alternative embodiment , the layers may be predefined for some other distortion metric ( e.g. , MSE , weighted MSE , sharpness of text , etc . ) .The decoder uses the information regarding the layers from the codestream to select layers to generate an image .", "label": "", "metadata": {}, "score": "50.703125"}
{"text": "In some cases , two spatially adjacent coefficients may be close to each other numerically yet in separate quantization bins , such as coefficient values 1201 of range R 2 and 1202 of range R 1 in .FIG .12 .", "label": "", "metadata": {}, "score": "50.729416"}
{"text": "In some cases , two spatially adjacent coefficients may be close to each other numerically yet in separate quantization bins , such as coefficient values 1201 of range R 2 and 1202 of range R 1 in .FIG .12 .", "label": "", "metadata": {}, "score": "50.729416"}
{"text": "For instance , in one embodiment , the tokens in the first band are sorted alphabetically , that is by numeric or alphabetic value .Each of the other bands are sorted first by language , and then alphabetically .As a result , the sorted tokens in each band other than Band 0 are grouped by language , and within each language group the tokens are sorted alphabetically .", "label": "", "metadata": {}, "score": "50.74019"}
{"text": "Various general purpose systems may be used with programs in accordance with the teachings herein , or it may prove convenient to construct more specialized apparatus to perform the required method steps .The required structure for a variety of these systems will appear from the description below .", "label": "", "metadata": {}, "score": "50.782364"}
{"text": "Various general purpose systems may be used with programs in accordance with the teachings herein , or it may prove convenient to construct more specialized apparatus to perform the required method steps .The required structure for a variety of these systems will appear from the description below .", "label": "", "metadata": {}, "score": "50.782364"}
{"text": "Various general purpose systems may be used with programs in accordance with the teachings herein , or it may prove convenient to construct more specialized apparatus to perform the required method steps .The required structure for a variety of these systems will appear from the description below .", "label": "", "metadata": {}, "score": "50.782364"}
{"text": "[0031 ]In some embodiments , the list of unique tokens , and the associated frequency and language information , is sorted based on frequency of occurrence of the unique tokens .Optionally , the entries can then be further sorted to facilitate space efficient encoding of the set of documents .", "label": "", "metadata": {}, "score": "50.786488"}
{"text": "We conducted two - paired t - test ( ) over the results ( involving all four domains of two languages together ) and found that the improvements were significant over both LP and Random Walk .More specifically , for English , the accuracy of mutual - reinforcement label propagation increases by 0.0328 and 0.0645 respectively compared to the single propagation and random walks on average .", "label": "", "metadata": {}, "score": "50.79004"}
{"text": "An effective and complete solution is provided for each critical stage for processing received transport layer segments whose data portions may contain protocol segments .Embodiments provide a solution for Layer 4 + protocol data unit detection , marker validation and stripping , Layer 4 + direct header inspection using a pre - processing agent 210 , and CRC calculation of protocol data unit payload that could span multiple byte aligned transport layer segments .", "label": "", "metadata": {}, "score": "50.79674"}
{"text": "The User Dictionary word list is a serial array storing character sequences for each user - defined expression .Each word in the array is terminated by a null character .To locate a suspect word within the User Dictionary , the access routine invokes FUNCTN to compute a word index .", "label": "", "metadata": {}, "score": "50.839077"}
{"text": "Results .To validate the effectiveness and robustness of the proposed method , we conduct experiments on product reviews of English and Chinese .In order to highlight the domain - specific nature of opinion words , we collect reviews not only from different languages , but also from different domains ( electronics , kitchen , network and health ) .", "label": "", "metadata": {}, "score": "50.897377"}
{"text": "In this specific embodiment of the invention the dictionary would comprise all possible card numbers while a single user independent standard text lexicon may consist of the card number combinations of a particular card issuer .As embodied and broadly described herein the invention provides a method for performing speech recognition , said method comprising the steps of : . receiving a spoken utterance by a user of said speech recognition system , . providing a speech recognition dictionary including a plurality of orthographies potentially recognizable on a basis of the spoken utterance ; . selecting from said dictionary , a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; . providing a standard text lexicon including a plurality of orthographies ; . inserting at least one orthography from said standard text lexicon into said list to form an augmented list .", "label": "", "metadata": {}, "score": "50.95739"}
{"text": "5,097,509 or some other type of rejection algorithm which allows the comparison of 2 or more candidates .The rejection layer compares the two top orthographies obtained by the re - score stage and , according to a chosen threshold , will determine if a possibly correct mapping was found or if there is confusion between the two top orthographies .", "label": "", "metadata": {}, "score": "50.976295"}
{"text": "Several proprietary coding schemes could use this semi - randomly located undefined data to provide a number of important types of information including , but not limited to , decoding and filtering hints , ownership , segmentation hints , and so on .", "label": "", "metadata": {}, "score": "51.050774"}
{"text": "Several proprietary coding schemes could use this semi - randomly located undefined data to provide a number of important types of information including , but not limited to , decoding and filtering hints , ownership , segmentation hints , and so on .", "label": "", "metadata": {}, "score": "51.050774"}
{"text": "Several proprietary coding schemes could use this semi - randomly located undefined data to provide a number of important types of information including , but not limited to , decoding and filtering hints , ownership , segmentation hints , and so on .", "label": "", "metadata": {}, "score": "51.050774"}
{"text": "The following example will illustrate the above concepts and is shown in FIG .6 .We must mention at this time that the numbers used for the probability computations are there simply for illustration purposes and no explicit meaning should be conferred to them other than to illustrate the spirit of the invention .", "label": "", "metadata": {}, "score": "51.054916"}
{"text": "These operators may occur in the form of reserved punctuation ( e.g. , quotation marks ) or reserved terms in a specialized format ( e.g. , AND , OR ) .In the case of a natural language processing ( NLP ) system , operators can be recognized implicitly in the language used no matter how the operators might be expressed ( e.g. , prepositions , conjunctions , ordering , etc . ) .", "label": "", "metadata": {}, "score": "51.062107"}
{"text": "A speech recognition apparatus comprising : . means for receiving a spoken utterance by a user of said speech recognition apparatus ; . a speech recognition dictionary including a plurality of orthographies potentially recognizable on a basis of the spoken utterance ; . means for processing said speech recognition dictionary to derive on the basis of the spoken utterance a list of orthographies , said list containing a plurality of orthographies , each orthography in said list being a candidate having a certain probability to correspond to the spoken utterance ; . a standard text lexicon including a plurality of orthographies ; . means for inserting at least one orthography from said standard text lexicon into said list to form an augmented list .", "label": "", "metadata": {}, "score": "51.093925"}
{"text": "Furthermore , a Python script can be custom tailored to a specific data format , which means that it can be made to work even for lexicons ( such as the one for Rotokas ) that do not conform to the MDF standard .", "label": "", "metadata": {}, "score": "51.16117"}
{"text": "For example , if a final compressed bitstream at 2.0 bpp is desired , the first pass could place 1.5 bpp for every tile in the codestream , and buffer 1 bpp for every tile .The second pass can select from the remaining data the packets to place in the second tile part of each tile .", "label": "", "metadata": {}, "score": "51.162487"}
{"text": "FIG .11 , processing logic initially determines the tiles , precincts to be edited and decodes them ( processing block 1101 ) .This determination may be made in response to a user selecting an area and/or working resolution .The determination may use editing information for a higher resolution to determine which parts or tiles cover the portion to be edited .", "label": "", "metadata": {}, "score": "51.179577"}
{"text": "In other words , every \" i \" or \" y \" that is both preceded and followed by any member of the set \" e , i , o , a , u \" is rewritten as \" Y \" .", "label": "", "metadata": {}, "score": "51.190514"}
{"text": "Each entry of the second decompression table section stores one common character sequence , including the following information : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "51.19095"}
{"text": "In alternative embodiments , the coefficient is set to be within the quantization bin size of the other coefficient value or twice the quantization bin size .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization described above .", "label": "", "metadata": {}, "score": "51.219482"}
{"text": "In alternative embodiments , the coefficient is set to be within the quantization bin size of the other coefficient value or twice the quantization bin size .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization described above .", "label": "", "metadata": {}, "score": "51.219482"}
{"text": "In alternative embodiments , the coefficient is set to be within the quantization bin size of the other coefficient value or twice the quantization bin size .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization described above .", "label": "", "metadata": {}, "score": "51.219482"}
{"text": "This quantization scheme causes some level of distortion but lowers the bit rate necessary to transfer the codestream .In one embodiment , the same technique may be applied to other changes between frames .That is , in one embodiment , a change due to a rate distortion in one frame may be performed in a subsequent frame to avoid distortion effects .", "label": "", "metadata": {}, "score": "51.21994"}
{"text": "This quantization scheme causes some level of distortion but lowers the bit rate necessary to transfer the codestream .In one embodiment , the same technique may be applied to other changes between frames .That is , in one embodiment , a change due to a rate distortion in one frame may be performed in a subsequent frame to avoid distortion effects .", "label": "", "metadata": {}, "score": "51.21994"}
{"text": "This quantization scheme causes some level of distortion but lowers the bit rate necessary to transfer the codestream .In one embodiment , the same technique may be applied to other changes between frames .That is , in one embodiment , a change due to a rate distortion in one frame may be performed in a subsequent frame to avoid distortion effects .", "label": "", "metadata": {}, "score": "51.21994"}
{"text": "10/917,745 , entitled \" System and Method For Encoding And Decoding Variable - Length Data . \"Alternately , the information in each attribute record may be run - length encoded .In some embodiments , the attributes of the tokens in a set of documents are identified and encoded at the same time that the tokenized documents are encoded and stored in the tokenspace repository , as described above .", "label": "", "metadata": {}, "score": "51.24025"}
{"text": "The routine is responsive to an \" auto - delete \" flag which indicates that new words added to an already full dictionary are to be inserted in place of existing entries .In a preferred mode of operation , such replacement occurs at the middle of the User Dictionary .", "label": "", "metadata": {}, "score": "51.27636"}
{"text": "In particular , the computer memory unit 12B stores a database portion 20A while the disk memory 16 stores database portion 20B. Further , the computer memory unit 12B retains database management software 20C.The database management software 20C controls the accessing and the decoding of information stored in database portions 20A and 20B and thereby permits the retrieval of database entries in logical form , i.e. , in the form of linguistic expressions .", "label": "", "metadata": {}, "score": "51.28328"}
{"text": "A response to the search query is returned to the client system , the response including information identifying at least the respective document and including the content snippet .Claims : .Description : . RELATED APPLICATIONS .[ 0001 ] This application is a continuation of U.S. application Ser .", "label": "", "metadata": {}, "score": "51.421997"}
{"text": "These decomposition levels contain a number of subbands populated with coefficients that describe the horizontal and vertical spatial frequency characteristics of the original tile - components .The coefficients provide frequency information about a local area , rather than across the entire image .", "label": "", "metadata": {}, "score": "51.426636"}
{"text": "These decomposition levels contain a number of subbands populated with coefficients that describe the horizontal and vertical spatial frequency characteristics of the original tile - components .The coefficients provide frequency information about a local area , rather than across the entire image .", "label": "", "metadata": {}, "score": "51.426636"}
{"text": "These decomposition levels contain a number of subbands populated with coefficients that describe the horizontal and vertical spatial frequency characteristics of the original tile - components .The coefficients provide frequency information about a local area , rather than across the entire image .", "label": "", "metadata": {}, "score": "51.426636"}
{"text": "The system verifies these test expressions by comparing them with the database entries .As a majority of the modified suspect expressions are themselves invalid , processing time might be wasted attempting to verify each and every one of them .To avoid this , the suspect modification element can include a filtering element for identifying those test expressions which are likely to be a valid expression .", "label": "", "metadata": {}, "score": "51.446663"}
{"text": "The parser may use a data structure referred to herein as a \" packet structure . \"Note that this data structure may be used for other purposes such as , for example , the versatile pocket data structure described below .", "label": "", "metadata": {}, "score": "51.474808"}
{"text": "We claim : .A digital data processing apparatus for storing digitally encoded linguistic information , said apparatus comprising . A. input means for accepting a signal representative of linguistic expression , .B. database storage means for storing a linguistic expression database , .", "label": "", "metadata": {}, "score": "51.4812"}
{"text": "Another component of the memory element 22 , the common expression verification table 32 , stores commonly used linguistic expressions .In the illustrated embodiment , the table 32 is organized in two parallel arrays .The corresponding entries of each of these arrays represents a single word .", "label": "", "metadata": {}, "score": "51.525032"}
{"text": "The new query expansion terms are provided to the query expander 506 which generates a new query expression to be processed by one or more of the query processors 510 , 514 , 518 and 520 .Thus , the multi - stage query processing system 500 is capable of executing two or more passes on a query , and using information from each pass to generate improved queries which will ultimately result in the user receiving more relevant documents .", "label": "", "metadata": {}, "score": "51.61959"}
{"text": "Moreover , operations may be added to the above described logic and still conform to the described embodiments .Further , operations described herein may occur sequentially or certain operations may be processed in parallel .Yet further , operations may be performed by a single processing unit or by distributed processing units .", "label": "", "metadata": {}, "score": "51.73742"}
{"text": "FIG .5 illustrates the program logic followed in the selection of the appropriate orthography insertion algorithm .At step 500 the length of the standard text lexicon is evaluated .If at decision step 502 the lexicon contains less than X orthographies , X being typically around 20 , all the orthographies of the standard text lexicon are inserted at step 503 in the list of the top N candidates output by the first pass search .", "label": "", "metadata": {}, "score": "51.74025"}
{"text": "A system for processing a data segment , comprising : . a network adapter coupled to a Peripheral Component Interconnect ( PCI ) bus ; and .hardware logic at the network adapter operable to : . strip a header from a transport layer segment ; . perform protocol data unit detection to determine data for a protocol segment that is part of data of the transport layer segment by : . extracting a value from an offset of a length field of a header of a protocol data unit for a width of the length field of the header ; . determining a final length of the protocol data unit based on the extracted value and values of an order of multiply / add parameter , a length field multiplier parameter , and a length field adder parameter ; and .", "label": "", "metadata": {}, "score": "51.772793"}
{"text": "That is , the minimal tag tree is created by taking the first 2\u00d72 group in the 4\u00d74 arrangement above and look at minimum value is out of the four values .In this case , for the 2\u00d72 block .the minimum value is 3 .", "label": "", "metadata": {}, "score": "51.794796"}
{"text": "That is , the minimal tag tree is created by taking the first 2\u00d72 group in the 4\u00d74 arrangement above and look at minimum value is out of the four values .In this case , for the 2\u00d72 block .the minimum value is 3 .", "label": "", "metadata": {}, "score": "51.794796"}
{"text": "That is , the minimal tag tree is created by taking the first 2\u00d72 group in the 4\u00d74 arrangement above and look at minimum value is out of the four values .In this case , for the 2\u00d72 block .the minimum value is 3 .", "label": "", "metadata": {}, "score": "51.794796"}
{"text": "To access subbands , such as the LL , LH , HL and HH subbands , only a starting pointer and the offset between rows / lines are necessary .The height and width are also needed to know when to stop when accessing a tile .", "label": "", "metadata": {}, "score": "51.802277"}
{"text": "The decoding of a JPEG 2000 codestream is performed by reversing the order of the encoding steps .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme that operates on a compressed image data codestream .Referring to .", "label": "", "metadata": {}, "score": "51.851772"}
{"text": "The decoding of a JPEG 2000 codestream is performed by reversing the order of the encoding steps .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme that operates on a compressed image data codestream .Referring to .", "label": "", "metadata": {}, "score": "51.851772"}
{"text": "The decoding of a JPEG 2000 codestream is performed by reversing the order of the encoding steps .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme that operates on a compressed image data codestream .Referring to .", "label": "", "metadata": {}, "score": "51.851772"}
{"text": "In step 280 , the process sets \" limit exceeded \" flag if more than 30 candidate expressions were identified .The process then returns to the calling routine .If the candidate limit has not been exceeded , the process returns to \" C610 \" sequence .", "label": "", "metadata": {}, "score": "51.993282"}
{"text": "In one embodiment , user specified quantization is provided .For a 3 level transform for one component , 7 quantization values are sufficient : level 1 HH , level 1 HL and LH , level 2 HH , level 2 HL and LH , level 3 HH , level 3 HL and LH , and level 3 LH .", "label": "", "metadata": {}, "score": "52.02828"}
{"text": "In one embodiment , user specified quantization is provided .For a 3 level transform for one component , 7 quantization values are sufficient : level 1 HH , level 1 HL and LH , level 2 HH , level 2 HL and LH , level 3 HH , level 3 HL and LH , and level 3 LH .", "label": "", "metadata": {}, "score": "52.02828"}
{"text": "In one embodiment , user specified quantization is provided .For a 3 level transform for one component , 7 quantization values are sufficient : level 1 HH , level 1 HL and LH , level 2 HH , level 2 HL and LH , level 3 HH , level 3 HL and LH , and level 3 LH .", "label": "", "metadata": {}, "score": "52.02828"}
{"text": "All data and metadata are stored in text files that use a relatively simple - to - understand format .This means that it is easy to write external software that reads and even modifies these files to extend the built - in functionality of Toolbox .", "label": "", "metadata": {}, "score": "52.03867"}
{"text": "In block 198 , the process generates modified forms of the suspect word by inserting letters in each position of the suspect word .If any of the modified expressions are valid , as indicated by the CHKWRD routine , the process proceeds to sequence \" C510 .", "label": "", "metadata": {}, "score": "52.039536"}
{"text": "The second layer , often called the re - score stage 210 , performs more precise calculations but only on the top N candidates in the list supplied by the first pass search .At this stage , techniques such as the Viterbi algorithm with complete allophone models and model distances will be used .", "label": "", "metadata": {}, "score": "52.051384"}
{"text": "In an apparatus according to claim 56 the futher improvement wherein each of said indirect differential encoding means and said explicit differential encoding means comprises at least one of . A. suffix encoding means for storing a digital coding representative of a suffix pattern of a linguistic expression , .", "label": "", "metadata": {}, "score": "52.085823"}
{"text": "Packets are written to the new codestream .The packet structure may be created using the following : . unsigned short .l ; . unsigned short .p ; . unsigned char . select ; .Pack_t ; .Size[j ] array to the packet structure array .", "label": "", "metadata": {}, "score": "52.15499"}
{"text": "It also contains a tile number , a resolution , a component , layer , and a precinct the packet belongs to .Finally , it also consists of a selection flag .This flag , when set to a predetermined value ( e.g. , 1 ) , indicates if the packet is selected in the array for writing out to a new codestream .", "label": "", "metadata": {}, "score": "52.17239"}
{"text": "It also contains a tile number , a resolution , a component , layer , and a precinct the packet belongs to .Finally , it also consists of a selection flag .This flag , when set to a predetermined value ( e.g. , 1 ) , indicates if the packet is selected in the array for writing out to a new codestream .", "label": "", "metadata": {}, "score": "52.17239"}
{"text": "It also contains a tile number , a resolution , a component , layer , and a precinct the packet belongs to .Finally , it also consists of a selection flag .This flag , when set to a predetermined value ( e.g. , 1 ) , indicates if the packet is selected in the array for writing out to a new codestream .", "label": "", "metadata": {}, "score": "52.17239"}
{"text": "A digital data processing apparatus according to claim 2 wherein said differential encoding means comprises at least one of . A. explicit differential encoding means for explicitly representing an alphanumeric character of said first linguistic expression , and .B. indirect differential encoding means for representing an alphanumeric character sequence common to said first linguistic expression and to a third linguistic expression represented within a third said lexicon entry .", "label": "", "metadata": {}, "score": "52.18684"}
{"text": "In one embodiment , editing is performed without changing file size by quantizing instead of expanding .In another embodiment , a predetermined amount of extra space is allocated per tile or per codeblock to allow for a predetermined amount of expansion .", "label": "", "metadata": {}, "score": "52.23719"}
{"text": "In general , the pre - processing block comprises a normalisation sub - block 200 , a parameterisation sub - block 202 and an endpoint detection sub - block 206 .The normalisation sub - block 200 adjusts the maximum signal amplitude of each analysis frame to a standard level in order to take into account variations in speech intensity , transmission losses and other physical effects such as distance from the microphone and recording level .", "label": "", "metadata": {}, "score": "52.28382"}
{"text": "7 is a block diagram of an embodiment of a query processing server .[ 0016 ] FIG .8A is a block diagram of a second embodiment of a tokenized document repository , and FIG .8b is a conceptual block diagram of a second embodiment of the lexicon generator of FIG .", "label": "", "metadata": {}, "score": "52.30683"}
{"text": "C. capitalization encoding means for storing a digital coding representative of a capitalization pattern of a linguistic expression .In an apparatus according to claim 58 , the further improvement wherein said indirect differential encoding means comprises decompression table means for storing signals representative of linguistic expression information , said decompression table means comprising at least one of .", "label": "", "metadata": {}, "score": "52.359653"}
{"text": "Position restrictions : This operation does not apply to sequences beginning in position one or position two .Word - final \" y \" is rewritten as \" Y \" .Position restrictions : This operation does not apply to words of less than three letters .", "label": "", "metadata": {}, "score": "52.364563"}
{"text": "Otherwise , the process proceeds sequentially through the \" C100 \" , \" C500 \" , \" C600 \" , \" C200 \" , \" C300 \" , \" C400 \" , \" C700 \" processing sequences .Control of the sequential movement through each of these sequences is determined by the value of a \" try \" variable , which is incremented at the completion of each sequence .", "label": "", "metadata": {}, "score": "52.407562"}
{"text": "By double - clicking on a single entry , its full contents can be displayed , as shown below for the entry aako ( a noun that means \" mother \" ) .In the default display shown above , the program displays the data for an entry in two columns : on the left are the field markers , and on the right are the field values .", "label": "", "metadata": {}, "score": "52.413155"}
{"text": "This is essentially a form of quantization that is applied during encoding .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .A test of whether to apply such quantization to a coefficient value in a subsequent frame is based on the quantization that was performed on the coefficient in the previous frame .", "label": "", "metadata": {}, "score": "52.47097"}
{"text": "This is essentially a form of quantization that is applied during encoding .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .A test of whether to apply such quantization to a coefficient value in a subsequent frame is based on the quantization that was performed on the coefficient in the previous frame .", "label": "", "metadata": {}, "score": "52.47097"}
{"text": "This is essentially a form of quantization that is applied during encoding .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .A test of whether to apply such quantization to a coefficient value in a subsequent frame is based on the quantization that was performed on the coefficient in the previous frame .", "label": "", "metadata": {}, "score": "52.47097"}
{"text": "detecting a protocol data unit based on a starting location and the final length of the protocol data unit ; and .performing marker validation and stripping .The method of .claim 1 , wherein performing marker validation and stripping further comprises : . extracting a marker length number of bytes from an initial offset ; . validating the marker based on a marker type ; and . jumping a marker interval in an incoming byte stream .", "label": "", "metadata": {}, "score": "52.47433"}
{"text": "The content of the master lexicon entries , as applied in a preferred embodiment , is presented in greater detail below .According to this embodiment , each entry includes a sequence of sections .The first section , the \" header , \" is either sixteen or thirty - two bits in length .", "label": "", "metadata": {}, "score": "52.490707"}
{"text": "0079 ]In one embodiment , the query processing system contains L parallel query processing sub - systems , each of which contains an inverse index 512 and a tokenspace repository 524 for a respective subset of a collection of documents .", "label": "", "metadata": {}, "score": "52.53914"}
{"text": "The method defined in . claim 17 , further comprising obtaining at least one operation specified in the one or more markers operates based on rate distortion information provided via one of a PLT / PPM and a PPT / PPM marker sets .", "label": "", "metadata": {}, "score": "52.54042"}
{"text": "The method defined in . claim 17 , further comprising obtaining at least one operation specified in the one or more markers operates based on rate distortion information provided via one of a PLT / PPM and a PPT / PPM marker sets .", "label": "", "metadata": {}, "score": "52.54042"}
{"text": "Note that the re - scoring is performed only for the candidates in the list .In a real world situation the list is much longer , typically containing between 6 and 30 entries .The re - scoring will be effected only on the top N candidates , N ranging typically from 6 to 30 .", "label": "", "metadata": {}, "score": "52.55446"}
{"text": "With every new transport layer segment , the CRC engine 224 is provided with the partial CRC digest from the preceding transport layer segment , which it uses as an initial CRC .The \" residual data \" is also provided to calculate the subsequent CRC digest .", "label": "", "metadata": {}, "score": "52.59387"}
{"text": "In some embodiments , the identified attribute record or records 318 are stored in an encoded , compressed form , and thus must be decoded in order to determine the attributes associated with each of the query terms .[0073 ]", "label": "", "metadata": {}, "score": "52.59897"}
{"text": "wherein the predetermined intermediate progression order is a layer progression order and the second progression order is a target progression order other than the layer progression order .An apparatus comprising : . means for storing a compressed image as a codestream in a first JPEG 2000 progression order ; and .", "label": "", "metadata": {}, "score": "52.60243"}
{"text": "wherein the predetermined intermediate progression order is a layer progression order and the second progression order is a target progression order other than the layer progression order .An apparatus comprising : . means for storing a compressed image as a codestream in a first JPEG 2000 progression order ; and .", "label": "", "metadata": {}, "score": "52.60243"}
{"text": "In one embodiment , the layers are predefined based on rate .For example , the first layer represents a 1-bit per pixel image , while the second layer represents a 2-bit per pixel image , etc .", "label": "", "metadata": {}, "score": "52.61517"}
{"text": "In one embodiment , the layers are predefined based on rate .For example , the first layer represents a 1-bit per pixel image , while the second layer represents a 2-bit per pixel image , etc .", "label": "", "metadata": {}, "score": "52.61517"}
{"text": "In one embodiment , the layers are predefined based on rate .For example , the first layer represents a 1-bit per pixel image , while the second layer represents a 2-bit per pixel image , etc .", "label": "", "metadata": {}, "score": "52.61517"}
{"text": "In other embodiments , the first set of relevancy scores S 1 , together with DocIDs and corresponding positions , are provided to the second stage query processor 514 for further processing .Query Processing --Stage II .[0070 ] The second stage query processor 514 receives a set of DocIDs , a list of tokenspace repository positions for the corresponding documents , and a first set of relevancy scores S 1 from the first stage query processor 510 .", "label": "", "metadata": {}, "score": "52.691666"}
{"text": "perform marker validation and stripping .The system of .claim 11 , wherein when performing marker validation and stripping , the hardware logic is operable to : . extract a marker length number of bytes from an initial offset ; . validate the marker based on a marker type ; and . jump a marker interval in an incoming byte stream .", "label": "", "metadata": {}, "score": "52.78292"}
{"text": "The User Dictionary .A further portion of the memory element 22 , the User Dictionary 34 , stores a list of user - defined expressions .In the illustrated embodiment , the dictionary includes a pointer table and a word list .", "label": "", "metadata": {}, "score": "52.823322"}
{"text": "According to a second sequence coding pattern , an entry stores an address directed to the decompression table 28 .As discussed below , this table stores entries representing common character sequences .By way of example , the character sequence \" ize \" is common to many master lexicon expressions and , as such , is represented by an entry in the decompression table .", "label": "", "metadata": {}, "score": "52.899174"}
{"text": "We can simply apply the levinstein distance metric described earlier or use the pre - computed branch probabilities calculated in the first stage .For example , in FIG .3b , the digit 3 in the first position has a weight of 0.1 .", "label": "", "metadata": {}, "score": "52.932915"}
{"text": "The novel method comprises the introduction of a step in the search stage that consists of forcing the insertion in the list of N candidates entries selected from a lexicon containing frequently used orthographies to increase the probability of occurrence of certain text combinations .", "label": "", "metadata": {}, "score": "52.962288"}
{"text": "7B shows one embodiment of such simplified conversion paths in which the number of required mappings is reduced from 10 ( as in .FIG .7A ) to 4 .However , any one of the five progression orders could be used as the one to which all are converted before arriving at the selected order .", "label": "", "metadata": {}, "score": "52.97841"}
{"text": "7B shows one embodiment of such simplified conversion paths in which the number of required mappings is reduced from 10 ( as in .FIG .7A ) to 4 .However , any one of the five progression orders could be used as the one to which all are converted before arriving at the selected order .", "label": "", "metadata": {}, "score": "52.97841"}
{"text": "7B shows one embodiment of such simplified conversion paths in which the number of required mappings is reduced from 10 ( as in .FIG .7A ) to 4 .However , any one of the five progression orders could be used as the one to which all are converted before arriving at the selected order .", "label": "", "metadata": {}, "score": "52.97841"}
{"text": "Experimental results show the effectiveness of our approach .The better performance benefits from the fact that the source language and target language can learn from each other and boost each other through propagating information back and forth .Wiebe J ( 2000 ) Learning subjective adjective from corpora .", "label": "", "metadata": {}, "score": "52.9851"}
{"text": "4 is a flow chart depicting a processing sequence for a spelling verification and correction system operating in accord with one practice of the invention ; .FIGS .5 - 8 are flow charts depicting a processing sequence for a preferred spelling verification method ; .", "label": "", "metadata": {}, "score": "53.010162"}
{"text": "An apparatus according to claim 12 wherein said binary search means comprises means for generating a linguistically salient word skeleton of said suspect expression .An apparatus according to claim 14 wherein said differential decoding means comprises means responsive to at least one of .", "label": "", "metadata": {}, "score": "53.053013"}
{"text": "Through quantization , the information content of a large number of coefficients is further reduced .Additional processing by an entropy coder reduces the number of bits required to represent these quantized coefficients , sometimes significantly compared to the original image .", "label": "", "metadata": {}, "score": "53.107124"}
{"text": "Through quantization , the information content of a large number of coefficients is further reduced .Additional processing by an entropy coder reduces the number of bits required to represent these quantized coefficients , sometimes significantly compared to the original image .", "label": "", "metadata": {}, "score": "53.107124"}
{"text": "Through quantization , the information content of a large number of coefficients is further reduced .Additional processing by an entropy coder reduces the number of bits required to represent these quantized coefficients , sometimes significantly compared to the original image .", "label": "", "metadata": {}, "score": "53.107124"}
{"text": "6 illustrates operations performed by the segment processing engine 230 in accordance with certain embodiments .Control begins at block 600 with the segment processing engine 230 receiving a transport layer segment .In certain alternative embodiments , the processing of blocks 602 , 604 , 606 , and 608 may be performed serially or with some processing being performed in parallel while other processing is performed serially .", "label": "", "metadata": {}, "score": "53.13473"}
{"text": "To find a test expression in the modified suspect expression verification table , the access routine initially strips a suffix \" s \" or \" 's \" from the test expression .The routine then invokes FUNCTN to generate a hash code and index for the modified test expression .", "label": "", "metadata": {}, "score": "53.135216"}
{"text": "6B illustrates the progression converter converting from a layer progressive codestream ( LRCP ) to a resolution progressive ( RLCP ) codestream .The progression orders map directly to each other .FIG .7A shows multiple ways to convert a codestream from one progression order to another .", "label": "", "metadata": {}, "score": "53.161545"}
{"text": "6B illustrates the progression converter converting from a layer progressive codestream ( LRCP ) to a resolution progressive ( RLCP ) codestream .The progression orders map directly to each other .FIG .7A shows multiple ways to convert a codestream from one progression order to another .", "label": "", "metadata": {}, "score": "53.161545"}
{"text": "6B illustrates the progression converter converting from a layer progressive codestream ( LRCP ) to a resolution progressive ( RLCP ) codestream .The progression orders map directly to each other .FIG .7A shows multiple ways to convert a codestream from one progression order to another .", "label": "", "metadata": {}, "score": "53.161545"}
{"text": "In Proceedings of CIKM ' 12 , pp.1542 - 1546 .Qiu G , Liu B , Bu J , Chen C ( 2011 )Opinion word expansion and target extraction through double propagation .Computational Linguistics 37(1 ) , pp.9 - 27 .", "label": "", "metadata": {}, "score": "53.246765"}
{"text": "After decoding the set of times , editing may be performed , followed by encoding the set of tiles with the edits to the same size as the encoded tiles were prior to their decoding .Examples of typical editing include sharpening of text and removing \" red - eye .", "label": "", "metadata": {}, "score": "53.285656"}
{"text": "8 depicts the \" V70 \" processing sequence , which begins at block 148 .In step 150 , the process obtains from the database hyphenation and capitalization information for the verified suspect word .This information is returned to the calling routine along with an indication that the suspect expression is correctly spelled ; see steps 152 - 154 .", "label": "", "metadata": {}, "score": "53.332977"}
{"text": "[0065 ]Next , the list of GTokenIDs are processed by a query expander 506 , which generates a query tree or other query representation that takes into account any operators used in the query string ( e.g. , a Boolean expression ) .", "label": "", "metadata": {}, "score": "53.337395"}
{"text": "Query Processing --Stage III .The third stage query processor 518 receives a set of DocIDs , a list of tokenspace repository positions for the corresponding documents , and the second set of relevancy scores S 2 from the second stage query processor 514 .", "label": "", "metadata": {}, "score": "53.422367"}
{"text": "Unsupervised or semi - supervised learning provides an optional solution to multilingual opinion lexicon extraction .However , the datasets are imbalanced in different languages .For some languages , the high - quality corpora are scarce or hard to obtain , which limits the research progress .", "label": "", "metadata": {}, "score": "53.468193"}
{"text": "Upon successful return from that sequence , as indicated by marker \" CW3 \" , the process proceeds through steps 220 - 222 .There , the validated expression is added to the list of candidate replacement expressions .FIG .13 depicts the \" CW2 \" processing sequence , which begins at step 224 .", "label": "", "metadata": {}, "score": "53.505684"}
{"text": "1 , a bitstream initially is received by data ordering block 101 that regroups layers and subband coefficients .Arithmetic coder 102 uses contextual information collected during encoding about the bit - plane compressed image data , and its internal state , to decode a compressed bit stream .", "label": "", "metadata": {}, "score": "53.50739"}
{"text": "1 , a bitstream initially is received by data ordering block 101 that regroups layers and subband coefficients .Arithmetic coder 102 uses contextual information collected during encoding about the bit - plane compressed image data , and its internal state , to decode a compressed bit stream .", "label": "", "metadata": {}, "score": "53.50739"}
{"text": "1 , a bitstream initially is received by data ordering block 101 that regroups layers and subband coefficients .Arithmetic coder 102 uses contextual information collected during encoding about the bit - plane compressed image data , and its internal state , to decode a compressed bit stream .", "label": "", "metadata": {}, "score": "53.50739"}
{"text": "If so , processing continues to block 1506 , otherwise , processing continues to block 1504 .In block 1504 , the CRC engine 224 retrieves a partial CRC digest and residual data for a previous transport layer segment from a CRC storage area 228 .", "label": "", "metadata": {}, "score": "53.527313"}
{"text": "Automatic Spelling Correction in Scientific and Scholarly Text , \" Joseph J. Pollock and Antonio Zamora , Communications of the ACM , Apr. 1984 , vol .27 , No . 4 , pp .358 - 368 . \"SPEEDCOP -- Final Report , \" J. J. Pollock , Nov. 1981 . \"", "label": "", "metadata": {}, "score": "53.52836"}
{"text": "In one embodiment , the S 3 scores are produced by adjusting the S 2 scores in accordance with the additional scoring factors produced by the third stage query processor 518 .Query Processing --Stage IV .[ 0074 ]The fourth stage query processor 520 receives a set of DocIDs , a list of positions in the documents corresponding to the DocIDs , and the third set of relevancy scores S 3 from the third stage query processor 518 .", "label": "", "metadata": {}, "score": "53.532177"}
{"text": "In one embodiment , in order to reduce flicker in motion JPEG , coefficient values are modified ( quantized ) based on their relationship with each other with respect to a threshold . else .For example , the value T may be twice the quantization step size .", "label": "", "metadata": {}, "score": "53.556694"}
{"text": "In one embodiment , in order to reduce flicker in motion JPEG , coefficient values are modified ( quantized ) based on their relationship with each other with respect to a threshold . else .For example , the value T may be twice the quantization step size .", "label": "", "metadata": {}, "score": "53.556694"}
{"text": "In one embodiment , in order to reduce flicker in motion JPEG , coefficient values are modified ( quantized ) based on their relationship with each other with respect to a threshold . else .For example , the value T may be twice the quantization step size .", "label": "", "metadata": {}, "score": "53.556694"}
{"text": "This results in less debug time and fewer memory and run - time variables .To perform the conversion , the order of the packets in the codestream must be reordered .The packets are labeled by their sequential order in the codestream .", "label": "", "metadata": {}, "score": "53.60506"}
{"text": "This results in less debug time and fewer memory and run - time variables .To perform the conversion , the order of the packets in the codestream must be reordered .The packets are labeled by their sequential order in the codestream .", "label": "", "metadata": {}, "score": "53.60506"}
{"text": "This results in less debug time and fewer memory and run - time variables .To perform the conversion , the order of the packets in the codestream must be reordered .The packets are labeled by their sequential order in the codestream .", "label": "", "metadata": {}, "score": "53.60506"}
{"text": "The request indicates the progression order by using an optional command ( e.g. , RL2L ( Resolution - layer progression to Layer Progression ) ) .The progression order that is described may be based on layer , resolution , component , precinct , or tile .", "label": "", "metadata": {}, "score": "53.65837"}
{"text": "The request indicates the progression order by using an optional command ( e.g. , RL2L ( Resolution - layer progression to Layer Progression ) ) .The progression order that is described may be based on layer , resolution , component , precinct , or tile .", "label": "", "metadata": {}, "score": "53.65837"}
{"text": "The request indicates the progression order by using an optional command ( e.g. , RL2L ( Resolution - layer progression to Layer Progression ) ) .The progression order that is described may be based on layer , resolution , component , precinct , or tile .", "label": "", "metadata": {}, "score": "53.65837"}
{"text": "Position restrictions : This operation does not apply to sequences beginning in position one or position two of the word .Sequences of \" tu \" are rewritten as \" kh \" when followed by \" o \" , \" a \" , or \" e \" .", "label": "", "metadata": {}, "score": "53.70923"}
{"text": "FIG .9 illustrates such a decoder .Referring to .FIG .9 , decoder 901 receives a codestream and includes quantization logic 902 that examines the COM marker and uses information about the viewing distance it is at stored in storage 903 to generate quantized codestream 904 via , for example , selecting the proper layers .", "label": "", "metadata": {}, "score": "53.823586"}
{"text": "FIG .9 illustrates such a decoder .Referring to .FIG .9 , decoder 901 receives a codestream and includes quantization logic 902 that examines the COM marker and uses information about the viewing distance it is at stored in storage 903 to generate quantized codestream 904 via , for example , selecting the proper layers .", "label": "", "metadata": {}, "score": "53.823586"}
{"text": "FIG .7A , each of the five progressions ( LRCP , RLCP , RPCL , CPRL , and PCRL ) are shown with paths to each of the others , such that all progressions are shown .In one embodiment , the parser causes all conversions to go through the layer progression first and then to a selected conversion .", "label": "", "metadata": {}, "score": "53.849365"}
{"text": "FIG .7A , each of the five progressions ( LRCP , RLCP , RPCL , CPRL , and PCRL ) are shown with paths to each of the others , such that all progressions are shown .In one embodiment , the parser causes all conversions to go through the layer progression first and then to a selected conversion .", "label": "", "metadata": {}, "score": "53.849365"}
{"text": "FIG .7A , each of the five progressions ( LRCP , RLCP , RPCL , CPRL , and PCRL ) are shown with paths to each of the others , such that all progressions are shown .In one embodiment , the parser causes all conversions to go through the layer progression first and then to a selected conversion .", "label": "", "metadata": {}, "score": "53.849365"}
{"text": "Note that if there are subsequent tile - parts that depend on the data in the portion of the codestream that is being edited , these tile - parts may become useless in the codestream .An indication of this useless data may be noted to the decoder by one of several methods .", "label": "", "metadata": {}, "score": "53.864502"}
{"text": "Note that if there are subsequent tile - parts that depend on the data in the portion of the codestream that is being edited , these tile - parts may become useless in the codestream .An indication of this useless data may be noted to the decoder by one of several methods .", "label": "", "metadata": {}, "score": "53.864502"}
{"text": "Note that if there are subsequent tile - parts that depend on the data in the portion of the codestream that is being edited , these tile - parts may become useless in the codestream .An indication of this useless data may be noted to the decoder by one of several methods .", "label": "", "metadata": {}, "score": "53.864502"}
{"text": "The verification block 410 , shown in more detail in FIG .7 , is used to perform a final verification of the top choice orthography such as to reduce the error rate .The proposed orthography is received 700 by the verification stage and cross - checked against the standard text lexicon giving the candidates which are present in the standard text lexicon a higher rating than those which are not .", "label": "", "metadata": {}, "score": "53.957043"}
{"text": "More particularly , the characters ( blank ) , \" a \" , \" b \" , \" c \" , . . ., \" z \" , \" ' \" , \" - \" , \" .\" , and \" / \" are represented by binary codes having the decimal values 0 , 1 , 2 , . . .", "label": "", "metadata": {}, "score": "53.978973"}
{"text": "A decomposition level is related to the next decomposition level by a spatial factor of two , such that each successive decomposition level of the subbands has approximately half the horizontal resolution and half the vertical resolution of the previous decomposition level .", "label": "", "metadata": {}, "score": "53.993374"}
{"text": "A decomposition level is related to the next decomposition level by a spatial factor of two , such that each successive decomposition level of the subbands has approximately half the horizontal resolution and half the vertical resolution of the previous decomposition level .", "label": "", "metadata": {}, "score": "53.993374"}
{"text": "Word - final sequences \" ea \" and \" ia \" are rewritten as a trace ( \" . sub .Position restrictions : This operation does not apply to words of less than four letters .Word - final \" a \" is rewritten as a trace ( \" . sub .", "label": "", "metadata": {}, "score": "54.018993"}
{"text": "As the number of decomposition levels increases , some rows at the bottom of memory become unused .That is , the lines of memory below the L1 coefficients after the first decomposition level become unused , the lines of memory below the L2 coefficients after the second decomposition level become unused , etc .", "label": "", "metadata": {}, "score": "54.03567"}
{"text": "As the number of decomposition levels increases , some rows at the bottom of memory become unused .That is , the lines of memory below the L1 coefficients after the first decomposition level become unused , the lines of memory below the L2 coefficients after the second decomposition level become unused , etc .", "label": "", "metadata": {}, "score": "54.03567"}
{"text": "In other embodiments , the number of distinct type codes may be more or less than eight ( e.g. , one indicating a copy code and the rest indicating literal codes ) .Thus , if a matching sequence of , say , four tokens is found by the encoding system 810 , beginning at a location 31 tokens preceding the current position , then the code for this sequence would be : .", "label": "", "metadata": {}, "score": "54.077126"}
{"text": "Toolbox uses these files to interpret the contents of a lexicon .For example , here is the metadata for the part of speech field : . \\+mkr ps \\nam Part of Speech \\lng Default \\rngset ? ? ?ADJ ADV CLASS COMP CONN DEM ENC EXCL FFP INFIX INTER LOC N NUM PART POST PPRO PRE PRO RPRO SUFF V \\SingleWord \\mkrOverThis lx \\-mkr .", "label": "", "metadata": {}, "score": "54.08695"}
{"text": "PROCESSING TOOLBOX DATA WITH THE NATURAL LANGUAGE TOOLKIT .It is written in the programming language Python and includes tools for a variety of tasks , including tagging , chunking , and parsing ( Loper and Bird 2002 , 2004 ) .", "label": "", "metadata": {}, "score": "54.098915"}
{"text": "The article of manufacture of . claim 8 , wherein when returning the requested data , the instructions , when executed by the processor of the computer , are operable to : . provide a location of a header of the protocol data unit to a pre - processing agent .", "label": "", "metadata": {}, "score": "54.16057"}
{"text": "The embodiment described below provides a four - way linguistic distinction for vowel sounds in short words : front , back , long , and short .It employs only a two - way , i.e. , front and back , vocalic distinction for long words .", "label": "", "metadata": {}, "score": "54.18305"}
{"text": "Referring to .FIG .28 , processing logic applies a first level inverse transform to coefficients ( processing block 2801 ) .Thereafter , processing logic clips the partially transformed coefficients to a predetermined range ( processing block 2802 ) .", "label": "", "metadata": {}, "score": "54.206024"}
{"text": "Referring to .FIG .28 , processing logic applies a first level inverse transform to coefficients ( processing block 2801 ) .Thereafter , processing logic clips the partially transformed coefficients to a predetermined range ( processing block 2802 ) .", "label": "", "metadata": {}, "score": "54.206024"}
{"text": "The combination of these packets with other packets represents the monitor resolution image , which when combined with other packets may represent the printer version , etc .Using the POC and tile parts , portions of a codestream may be grouped together .", "label": "", "metadata": {}, "score": "54.212646"}
{"text": "The combination of these packets with other packets represents the monitor resolution image , which when combined with other packets may represent the printer version , etc .Using the POC and tile parts , portions of a codestream may be grouped together .", "label": "", "metadata": {}, "score": "54.212646"}
{"text": "The combination of these packets with other packets represents the monitor resolution image , which when combined with other packets may represent the printer version , etc .Using the POC and tile parts , portions of a codestream may be grouped together .", "label": "", "metadata": {}, "score": "54.212646"}
{"text": "In active learning , the most informative data is picked to be labeled by an expert actively .The standard active learning algorithm usually chooses the maximum - entropy data , because the maximum uncertain data contains the maximum information content .", "label": "", "metadata": {}, "score": "54.220676"}
{"text": "When the message is received with the appended remainder , the receiving computing device recalculates the remainder and compares the recomputed remainder to the appended remainder .If the remainders do not match , an error is detected .FIG .3 illustrates a block diagram of a protocol data unit 300 in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "54.23134"}
{"text": "Table 9 shows additional bitplanes to quantize ( e.g. , truncate ) for luminance to take advantage of the frequency response of the Human Visual System ( from Table J-2 of the JPEG 2000 standard ) .A viewing distance of 1000 pixels might be appropriate for viewing images on a computer monitor .", "label": "", "metadata": {}, "score": "54.257523"}
{"text": "Table 9 shows additional bitplanes to quantize ( e.g. , truncate ) for luminance to take advantage of the frequency response of the Human Visual System ( from Table J-2 of the JPEG 2000 standard ) .A viewing distance of 1000 pixels might be appropriate for viewing images on a computer monitor .", "label": "", "metadata": {}, "score": "54.257523"}
{"text": "Table 9 shows additional bitplanes to quantize ( e.g. , truncate ) for luminance to take advantage of the frequency response of the Human Visual System ( from Table J-2 of the JPEG 2000 standard ) .A viewing distance of 1000 pixels might be appropriate for viewing images on a computer monitor .", "label": "", "metadata": {}, "score": "54.257523"}
{"text": "Speech recognition systems have been developed in many parts of the world and , although it is difficult to describe a standard recognition system architecture , some characteristics are shared between many of them .A typical speech recognition system , of the type depicted in FIG .", "label": "", "metadata": {}, "score": "54.292027"}
{"text": "Packets are written to the new codestream .The packet structure may be created using the following : .Pack_t ; .Size[j ] array to the packet structure array .m++ ; .Versatile Packet Data Structure .The same packet data structure described above can be used to facilitate other parsing options , once packets are read into the structure .", "label": "", "metadata": {}, "score": "54.347504"}
{"text": "Packets are written to the new codestream .The packet structure may be created using the following : .Pack_t ; .Size[j ] array to the packet structure array .m++ ; .Versatile Packet Data Structure .The same packet data structure described above can be used to facilitate other parsing options , once packets are read into the structure .", "label": "", "metadata": {}, "score": "54.347504"}
{"text": "The first pass search stage then selects the top N scores in the graph .In this example consider only the top three scores .After reordering the results , the first search stage yields the following candidate list : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Candidate______________________________________434445 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .", "label": "", "metadata": {}, "score": "54.354763"}
{"text": "The method also includes selecting one or more of the layers for quantization based on sideband information accompanying the codestream and decompressing non - quantized layers of the codestream .BRIEF DESCRIPTION OF THE DRAWINGS .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme .", "label": "", "metadata": {}, "score": "54.362495"}
{"text": "f is a matrix , the rows can be interpreted as the probability distributions over polarities .In step 1 , all nodes propagate their polarities to their neighbors for one step .Step 2 is critical : we want persistent label sources from labeled data .", "label": "", "metadata": {}, "score": "54.40933"}
{"text": "After decoding the set of tiles , editing may be performed , followed by encoding the set of tiles with the edits to the same size as the encoded tiles were prior to their decoding .Examples of typical editing include sharpening of text and removing \" red - eye .", "label": "", "metadata": {}, "score": "54.431763"}
{"text": "After decoding the set of tiles , editing may be performed , followed by encoding the set of tiles with the edits to the same size as the encoded tiles were prior to their decoding .Examples of typical editing include sharpening of text and removing \" red - eye .", "label": "", "metadata": {}, "score": "54.431763"}
{"text": "FIG .24 illustrates one example in which values in a first and third frame are used to set the value in the second frame .Note that the quantization can also be codestream quantization with a code block - based rule .", "label": "", "metadata": {}, "score": "54.453514"}
{"text": "FIG .24 illustrates one example in which values in a first and third frame are used to set the value in the second frame .Note that the quantization can also be codestream quantization with a code block - based rule .", "label": "", "metadata": {}, "score": "54.453514"}
{"text": "FIG .24 illustrates one example in which values in a first and third frame are used to set the value in the second frame .Note that the quantization can also be codestream quantization with a code block - based rule .", "label": "", "metadata": {}, "score": "54.453514"}
{"text": "The redundant entries may be replaced and used for hidden or sideband information .Use of Layers When Encoding .Layers are part of the JPEG standard .In one embodiment , sideband information , possibly in a COM marker , is used by the decoder to allow selecting of layers during decoding .", "label": "", "metadata": {}, "score": "54.476627"}
{"text": "The redundant entries may be replaced and used for hidden or sideband information .Use of Layers When Encoding .Layers are part of the JPEG standard .In one embodiment , sideband information , possibly in a COM marker , is used by the decoder to allow selecting of layers during decoding .", "label": "", "metadata": {}, "score": "54.476627"}
{"text": "The redundant entries may be replaced and used for hidden or sideband information .Use of Layers When Encoding .Layers are part of the JPEG standard .In one embodiment , sideband information , possibly in a COM marker , is used by the decoder to allow selecting of layers during decoding .", "label": "", "metadata": {}, "score": "54.476627"}
{"text": "BACKGROUND .Shoebox is a computer program that helps field linguists and anthropologists integrate various kinds of text data : lexical , cultural , grammatical , etc .It has flexible options for sorting , selecting , and displaying data .It is especially useful for helping researchers build a dictionary as they use it to analyze and interlinearize text .", "label": "", "metadata": {}, "score": "54.496506"}
{"text": "16 .The process may be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "54.505302"}
{"text": "TOOLBOX BASICS .A full overview of what Toolbox has to offer can be found in the documentation that comes with the program .Here we will cover the highlights using screenshots from the authors ' own Toolbox projects .We will start by looking at how lexicons are managed in Toolbox .", "label": "", "metadata": {}, "score": "54.54603"}
{"text": "Then the newly produced codestream contains only packets from resolution 1 up to resolution 3 .Similarly , for component parsing , progression conversion parsing , quality parsing can be performed step by step processing the packets in the structure .The packet data structure can handle complex requests .", "label": "", "metadata": {}, "score": "54.595497"}
{"text": "The algorithm of seed word selection is shown in Figure 4 .In the seed word selection algorithm , for each opinion word , we construct a feature vector , where is the PMI value of and , .The similarity of two opinion words is measured by the cosine value of the two vectors , which is defined as : .", "label": "", "metadata": {}, "score": "54.63315"}
{"text": "Note that this may be used for other filters ( e.g. , a 9 - 7 filter ) .FIG .28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .", "label": "", "metadata": {}, "score": "54.63932"}
{"text": "Note that this may be used for other filters ( e.g. , a 9 - 7 filter ) .FIG .28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .", "label": "", "metadata": {}, "score": "54.63932"}
{"text": "Thus , in this example , a total of 14 extra lines are needed to enable reuse of the memory that stores an input time and has two levels of decomposition applied thereto .To access subbands , such as the LL , LH , HL and HH subbands , only a starting pointer and the offset between rows / lines are necessary .", "label": "", "metadata": {}, "score": "54.673317"}
{"text": "Thus , in this example , a total of 14 extra lines are needed to enable reuse of the memory that stores an input time and has two levels of decomposition applied thereto .To access subbands , such as the LL , LH , HL and HH subbands , only a starting pointer and the offset between rows / lines are necessary .", "label": "", "metadata": {}, "score": "54.673317"}
{"text": "The memory element 22 also includes the decompression table 28 which stores common character sequences and common expression information , e.g. , hyphenation and suffix information , for words in the master lexicon 24 .The table is comprised of two sections : the common pattern section and the common character sequence section .", "label": "", "metadata": {}, "score": "54.84402"}
{"text": "Clipping after each Inverse Transform .As a result of quantization performed on wavelet coefficients , the final decoded pixels are often outside of the original range of allowed pixels from the specified bit depth .Typically , these pixels are clipped to the original range so that further image processing or display devices can use the original bit depth .", "label": "", "metadata": {}, "score": "54.86537"}
{"text": "9 illustrates operations performed by a pre - processing agent in accordance with certain embodiments .FIG .10 illustrates a format of a Receive Buffer instruction in accordance with certain embodiments .FIG .11 illustrates a format of a Cyclic Redundancy Check ( CRC ) data structure in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "54.88266"}
{"text": "These maximum and minimum values can be computed by finding the signal that leads to the maximum and minimum and running the forward compression system and recording the maxima .The signals that lead to extreme values come from inputs where each pixel is either a maximum or minimum .", "label": "", "metadata": {}, "score": "54.904343"}
{"text": "Therefore , the combination of re - ordering and parsing allows specification of the desired ordering and resolution , quality , etc . .A PROGRESSION ORDER CONVERSION EXAMPLE .The following is an example showing how packets are arranged in a codestream .", "label": "", "metadata": {}, "score": "54.957703"}
{"text": "Therefore , the combination of re - ordering and parsing allows specification of the desired ordering and resolution , quality , etc . .A Progression Order Conversion Example .The following is an example showing how packets are arranged in a codestream .", "label": "", "metadata": {}, "score": "54.957703"}
{"text": "Therefore , the combination of re - ordering and parsing allows specification of the desired ordering and resolution , quality , etc . .A Progression Order Conversion Example .The following is an example showing how packets are arranged in a codestream .", "label": "", "metadata": {}, "score": "54.957703"}
{"text": "Table 6 indicates each layer and its resolution in the number of bytes across the tile in an image .Such a table may have distortion values instead .In another embodiment , the ordering could be by layer .Thus , the information above is consolidated for each level ( not segregated by level or component ) , as shown below : .", "label": "", "metadata": {}, "score": "54.96634"}
{"text": "The system of . claim 13 , wherein when returning the requested data , the hardware logic is operable to : . provide a header of the protocol data unit to a pre - processing agent .Description .BACKGROUND .Description of the Related Art .", "label": "", "metadata": {}, "score": "54.97815"}
{"text": "The label propagation algorithm is based on the assumption that nodes connected by an edge with high weight tend to have same label in the graph constructed by labeled data and unlabeled data .It is observed that opinion words in the same sentence have similar sentiment or polarity .", "label": "", "metadata": {}, "score": "55.021717"}
{"text": "In the JPEG2000 standard , data in a compressed codestream can be stored in one of the five progression orders .The progression order can change at different points in the codestream .The order is defined by embedded \" for layers \" on layers , precincts , resolution , and components .", "label": "", "metadata": {}, "score": "55.022514"}
{"text": "In the JPEG2000 standard , data in a compressed codestream can be stored in one of the five progression orders .The progression order can change at different points in the codestream .The order is defined by embedded \" for layers \" on layers , precincts , resolution , and components .", "label": "", "metadata": {}, "score": "55.022514"}
{"text": "In the JPEG2000 standard , data in a compressed codestream can be stored in one of the five progression orders .The progression order can change at different points in the codestream .The order is defined by embedded \" for layers \" on layers , precincts , resolution , and components .", "label": "", "metadata": {}, "score": "55.022514"}
{"text": "Experimental Setup .The resources used in the experiments contain unlabeled datasets of two languages and a bilingual dictionary .For each language , the datasets cover four domains ( Kitchen , Electronics , Health , Network ) respectively .The following datasets were collected and used in the experiments : .", "label": "", "metadata": {}, "score": "55.06142"}
{"text": "If you are looking to hire a patent attorney , you 've come to the right place .Protect your idea and hire a patent lawyer .An apparatus and method for linguistic expression processing provides features for spelling verification , correction , and dictionary database storage .", "label": "", "metadata": {}, "score": "55.069466"}
{"text": "The signals that lead to extreme values come from inputs where each pixel is either a maximum or minimum .For irreversible filters , it is not necessary to actually run the system to determine the maxima , simply convolving the wavelet coefficients is sufficient .", "label": "", "metadata": {}, "score": "55.074707"}
{"text": "The signals that lead to extreme values come from inputs where each pixel is either a maximum or minimum .For irreversible filters , it is not necessary to actually run the system to determine the maxima , simply convolving the wavelet coefficients is sufficient .", "label": "", "metadata": {}, "score": "55.074707"}
{"text": "i. generating a signal representative of an expression having a transposed character sequence , . ii .generating a signal representative of an expression having a deleted character , . iii .generating a signal representative of an expression having an added character , and . iv .", "label": "", "metadata": {}, "score": "55.085403"}
{"text": "generating a signal representative of an expression having a replaced character .An apparatus according to claim 22 wherein said suspect expression modification comprises means for identifying said modified expression as a potentially valid linguistic expression .An apparatus according to claim 26 wherein said differential decoding means comprises means responsive to at least one of .", "label": "", "metadata": {}, "score": "55.149666"}
{"text": "15A illustrates a process for performing rate control .FIG .15B illustrates an exemplary number of layers that may be subjected to first and second passes .FIG .16 illustrates one embodiment of the process for accessing the groupings of tile parts .", "label": "", "metadata": {}, "score": "55.157043"}
{"text": "15A illustrates a process for performing rate control .FIG .15B illustrates an exemplary number of layers that may be subjected to first and second passes .FIG .16 illustrates one embodiment of the process for accessing the groupings of tile parts .", "label": "", "metadata": {}, "score": "55.157043"}
{"text": "15A illustrates a process for performing rate control .FIG .15B illustrates an exemplary number of layers that may be subjected to first and second passes .FIG .16 illustrates one embodiment of the process for accessing the groupings of tile parts .", "label": "", "metadata": {}, "score": "55.157043"}
{"text": "However , it can be appreciated that other configurations of the computer system may include some or all of the devices .Therefore , references to details of various embodiments are not intended to limit the scope of the claims which in themselves recite only those features regarded as essential to the invention .", "label": "", "metadata": {}, "score": "55.175083"}
{"text": "However , it can be appreciated that other configurations of the computer system may include some or all of the devices .Therefore , references to details of various embodiments are not intended to limit the scope of the claims which in themselves recite only those features regarded as essential to the invention .", "label": "", "metadata": {}, "score": "55.175083"}
{"text": "However , it can be appreciated that other configurations of the computer system may include some or all of the devices .Therefore , references to details of various embodiments are not intended to limit the scope of the claims which in themselves recite only those features regarded as essential to the invention .", "label": "", "metadata": {}, "score": "55.175083"}
{"text": "20 depicts a processing sequence for the user dictionary access routine DUMP - USE .This routine permits the sequential access of words in the User Dictionary .An input parameter , LIMIT , specifies the maximum number of words which can be returned in successive calls to DUMP - USE , each call returning an individual entry or groups of entries , e.g. , to print a sorted list of user - defined expressions .", "label": "", "metadata": {}, "score": "55.18995"}
{"text": "The JPEG 2000 standard leaves many choices to implementers .SUMMARY OF THE INVENTION .A method and apparatus for performing progressive order conversion is described .In one embodiment , a system comprises a memory and a progressive order conversion parser .", "label": "", "metadata": {}, "score": "55.24271"}
{"text": "The JPEG 2000 standard leaves many choices to implementers .SUMMARY OF THE INVENTION .A method and apparatus for performing progressive order conversion is described .In one embodiment , a system comprises a memory and a progressive order conversion parser .", "label": "", "metadata": {}, "score": "55.24271"}
{"text": "( Development of Shoebox has stopped , as has support for it , and users of the program should upgrade to Toolbox . )Second , Toolbox provides a number of useful new features , such as the ability to export data in XML format and support for Unicode data storage .", "label": "", "metadata": {}, "score": "55.243587"}
{"text": "ElementTree import ElementTree , Element , SubElement , tostring from nltk.corpus import toolbox .The output of the script is the first 10 entries of the dictionary formatted as HTML ( which can be saved into a file and viewed in a web browser ) : .", "label": "", "metadata": {}, "score": "55.257668"}
{"text": "Each stage calculates one or more sets of relevancy scores which can be returned to the user and/or combined with relevancy scores generated in previous stages , depending upon the application .Query Processing --Stage I .[ 0064 ] The first stage query processor 510 was generally described with respect to FIG .", "label": "", "metadata": {}, "score": "55.260967"}
{"text": "The fourth stage query processor 520 is coupled to a decoding system 527 , which in turn is coupled to one or more mini - lexicon maps 523 , a tokenspace repository 524 and one or more global - lexicon maps 508 .", "label": "", "metadata": {}, "score": "55.278355"}
{"text": "Each expression in this table is represented by a hash code , i.e. , a numeric code which reflects the character content of the expression .The table can also store signals representing expression hyphenation and capitalization patterns .The user - defined expression table , i.e. , user dictionary , stores signals representing expressions defined by the user , e.g. , proper nouns , acronyms , technical terms , and abbreviations .", "label": "", "metadata": {}, "score": "55.337673"}
{"text": "Editing of an image may be performed by changing coded data for tiles , tile - parts , or codeblocks .In one embodiment , editing is performed without changing file size by quantizing instead of expanding .In another embodiment , a predetermined amount of extra space is allocated per tile or per codeblock to allow for a predetermined amount of expansion .", "label": "", "metadata": {}, "score": "55.39467"}
{"text": "Editing of an image may be performed by changing coded data for tiles , tile - parts , or codeblocks .In one embodiment , editing is performed without changing file size by quantizing instead of expanding .In another embodiment , a predetermined amount of extra space is allocated per tile or per codeblock to allow for a predetermined amount of expansion .", "label": "", "metadata": {}, "score": "55.39467"}
{"text": "An example tag tree , which is minimal for the 4\u00d74 arrangement above is as follows : . in which \" 3 \" is added to every codeblock 's value , and \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" are each added to the 4 corresponding codeblocks .", "label": "", "metadata": {}, "score": "55.42117"}
{"text": "An example tag tree , which is minimal for the 4\u00d74 arrangement above is as follows : . in which \" 3 \" is added to every codeblock 's value , and \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" are each added to the 4 corresponding codeblocks .", "label": "", "metadata": {}, "score": "55.42117"}
{"text": "An example tag tree , which is minimal for the 4\u00d74 arrangement above is as follows : . in which \" 3 \" is added to every codeblock 's value , and \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" are each added to the 4 corresponding codeblocks .", "label": "", "metadata": {}, "score": "55.42117"}
{"text": "For example , suppose s is a word in source language and its polarity is , if word t is the translation of s in the bilingual dictionary , then we think t inherits the polarity information of s with a certain probability , rather than assigning stiffly .", "label": "", "metadata": {}, "score": "55.42733"}
{"text": "In verification mode , the access routine compares the suspect word with expressions decoded from the block .If a matching expression is found , the routine returns a \" success \" flag .Otherwise , the routine returns a \" no success \" flag .", "label": "", "metadata": {}, "score": "55.469273"}
{"text": "To provide an eight bit output , these values are clipped to 0 and 255 respectively .This clipping procedure always reduces pixel wise distortion because the original image did not contain pixels outside of the clipping bounds .This procedure is well known and recommend by the JPEG 2000 standard .", "label": "", "metadata": {}, "score": "55.50473"}
{"text": "It is a good idea to back up the current version of a project before modifying it , since this will ensure that there is a working version to fall back on in the event that the changes introduce problems that can not readily be fixed .", "label": "", "metadata": {}, "score": "55.520668"}
{"text": "6 illustrates operations performed by a segment processing engine in accordance with certain embodiments .FIG .7 illustrates operations performed by a segment processing engine for protocol data unit detection in accordance with certain embodiments .FIG .8 illustrates operations performed by a segment processing engine for marker validation and stripping in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "55.534424"}
{"text": "A speech recognition system as defined in claim 1 , comprising second processing unit for processing said augmented list for selecting an orthography from said augmented list as a possible candidate to the spoken utterance .A speech recognition system as defined in claim 2 , wherein said second processing unit includes a re - scoring unit to rank orthographies in said augmented list on a basis of acoustic match with the spoken utterance .", "label": "", "metadata": {}, "score": "55.55917"}
{"text": "The main lexicon window shows the entries of a lexicon in alphabetical order .The following screenshot shows the browsing window for a lexicon of the Central dialect of Rotokas , a Papuan language spoken in Bougainville ( Firchow 1987 , Robinson 2006 ) : .", "label": "", "metadata": {}, "score": "55.588478"}
{"text": "Each field has two parts : a field marker and a field value .The field marker is preceded by a backslash and is separated from the field value by white space .For example , the first field consists of the field marker \" lx \" with the field value aako .", "label": "", "metadata": {}, "score": "55.64952"}
{"text": "[ 0026 ] FIG .2 is a conceptual block diagram of an embodiment of the lexicon generator 108 of FIG .1 .The lexicon generator 108 includes a global - lexicon builder 202 and a mini - lexicon builder 204 .", "label": "", "metadata": {}, "score": "55.6977"}
{"text": "NLTK provides tools for parsing and manipulating Toolbox lexicons and texts .Since standard format is a less sophisticated markup language , a standard XML interface for it makes handling it significantly easier .It also greatly facilitates conversion between standard format and XML , which is an important consideration , given that a great deal of recently developed linguistics software uses XML formatted data .", "label": "", "metadata": {}, "score": "55.78807"}
{"text": "Layer 1 contains all data not in layer 0 and not quantized away by quantizer 1 .Finally , layer 15 would contain the LSB of 1LH chrominance .Rate Control with Multiple Layers and Tile - Parts .There several well known techniques for rate control in compression systems .", "label": "", "metadata": {}, "score": "55.78855"}
{"text": "Position restriction : This operation does not apply to letters in word - initial position .Word - final \" o \" and \" u \" are rewritten as \" O \" .Position restriction : This operation applies only to words of two or more letters .", "label": "", "metadata": {}, "score": "55.82997"}
{"text": "In one embodiment , coefficients from levels 4 , 5 , and 6 are packed in a smaller memory structure , such as storage area 450 in FIG .4 .Referring to .An additional two lines 451 are all that is needed to store level 5 coefficients in the same necessary storage area .", "label": "", "metadata": {}, "score": "55.931824"}
{"text": "Once the requested data is received , processing continues from block 610 to block 612 .In block 612 , the segment processing engine 230 forwards an indication of the location of a Layer 4 + header and/or forwards the actual Layer 4 + header of the detected protocol data unit to the pre - processing agent 210 .", "label": "", "metadata": {}, "score": "55.94867"}
{"text": "During encoding , unquantized coefficients from some or all subbands may be divided by a value of Q to create the quantized coefficient values .This value Q may have a wide range of values .Typical encoders quantize a number of the values in a single particular range of values is made equal to one single coefficient value .", "label": "", "metadata": {}, "score": "55.96754"}
{"text": "During encoding , unquantized coefficients from some or all subbands may be divided by a value of Q to create the quantized coefficient values .This value Q may have a wide range of values .Typical encoders quantize a number of the values in a single particular range of values is made equal to one single coefficient value .", "label": "", "metadata": {}, "score": "55.96754"}
{"text": "During encoding , unquantized coefficients from some or all subbands may be divided by a value of Q to create the quantized coefficient values .This value Q may have a wide range of values .Typical encoders quantize a number of the values in a single particular range of values is made equal to one single coefficient value .", "label": "", "metadata": {}, "score": "55.96754"}
{"text": "Form and function of Rotokas words .Language and Linguistics in Melanesia 15:5 - 111 .Mertz , David .Text processing in Python .Reading , MA : Addison - Wesley .Loper , Edward , and Steven Bird .NLTK :", "label": "", "metadata": {}, "score": "55.96767"}
{"text": "Larger edge weights allow polarities to travel through more easily .Define a probabilistic transition matrix P. where is the probability of transit from node i to j .Also define a polarity matrix , whose i th row is an indicator vector for , .", "label": "", "metadata": {}, "score": "55.980064"}
{"text": "Referring to .FIG .4A , locations for the input tile , level 1 coefficients , level 2 coefficients , and level 3 coefficients is shown with the added 2 , 4 and 8 lines respectively .FIG .4B shows a similar single memory embodiment where the input coefficients of various levels of the transform can be stored along with the output during application of an inverse transform .", "label": "", "metadata": {}, "score": "55.992188"}
{"text": "Referring to .FIG .4A , locations for the input tile , level 1 coefficients , level 2 coefficients , and level 3 coefficients is shown with the added 2 , 4 and 8 lines respectively .FIG .4B shows a similar single memory embodiment where the input coefficients of various levels of the transform can be stored along with the output during application of an inverse transform .", "label": "", "metadata": {}, "score": "55.992188"}
{"text": "However , those seed words with great coverage can be found through K - means clustering .In general , the cluster centers are the densest district of the whole sample space .Besides , K - means clustering guarantees the diversity of the selected seed words because the distance between different cluster centers is large .", "label": "", "metadata": {}, "score": "56.020947"}
{"text": "wherein the predetermined intermediate progression order is a layer progression order and the second progression order is a target progression order other than the layer progression order .Description .This is a divisional of application Ser .No .09/784,928 , filed on Feb. 15 , 2001 now U.S. Pat .", "label": "", "metadata": {}, "score": "56.022808"}
{"text": "wherein the predetermined intermediate progression order is a layer progression order and the second progression order is a target progression order other than the layer progression order .Description .This is a divisional of application Ser .No .09/784,928 , filed on Feb. 15 , 2001 now U.S. Pat .", "label": "", "metadata": {}, "score": "56.022808"}
{"text": "Subsequent to setting the entry pointer variable CUR to zero , indicating that the listing is to begin at the start of the dictionary , DUMP - USER is called to retrieve the expressions .Subsequently , the pointer table is restored by rehashing the user expressions and storing pointers to them at the indexed addresses within the pointer table .", "label": "", "metadata": {}, "score": "56.061302"}
{"text": "Table 6 indicates each layer and its resolution in the number of bytes across the tile in an image .Such a table may have distortion values instead .In an alternative embodiment , such information may be hidden in the codestream as described above .", "label": "", "metadata": {}, "score": "56.065773"}
{"text": "Table 6 indicates each layer and its resolution in the number of bytes across the tile in an image .Such a table may have distortion values instead .In an alternative embodiment , such information may be hidden in the codestream as described above .", "label": "", "metadata": {}, "score": "56.065773"}
{"text": "Because there are two unused lines after generating the level 1 coefficients ( i.e. , the memory that stored the last two lines of input data ) , a small memory savings can be achieved by letting the levels 4 , 5 and 6 reuse these two lines .", "label": "", "metadata": {}, "score": "56.121567"}
{"text": "Because there are two unused lines after generating the level 1 coefficients ( i.e. , the memory that stored the last two lines of input data ) , a small memory savings can be achieved by letting the levels 4 , 5 and 6 reuse these two lines .", "label": "", "metadata": {}, "score": "56.121567"}
{"text": "Because there are two unused lines after generating the level 1 coefficients ( i.e. , the memory that stored the last two lines of input data ) , a small memory savings can be achieved by letting the levels 4 , 5 and 6 reuse these two lines .", "label": "", "metadata": {}, "score": "56.121567"}
{"text": "The GTokenIDs are then mapped into the corresponding tokens ( e.g. , text and punctuation ) using the global - lexicon 206 , thereby reconstructing all or a portion of the document .Encoding System .[0045 ] FIG .3A is a block diagram of an embodiment of an encoding system 300 for encoding documents for a tokenspace repository .", "label": "", "metadata": {}, "score": "56.12493"}
{"text": "A further object of this invention is to provide an improved spelling verification and correction system which corrects a high percentage of misspellings and which operates with sufficiently high speed for convenient on - line use and operator interaction .Still another object of the invention is to provide improved data storage and data organization techniques for use with digital data processing apparatus text databases .", "label": "", "metadata": {}, "score": "56.316994"}
{"text": "For example , given a 4 resolution codestream , and a request is to produce a 3-resolution codestream , a parser marks all packets which belong to resolution 4 unselected .Then the newly produced codestream contains only packets from resolution 1 up to resolution 3 .", "label": "", "metadata": {}, "score": "56.351913"}
{"text": "For example , given a 4 resolution codestream , and a request is to produce a 3-resolution codestream , a parser marks all packets which belong to resolution 4 unselected .Then the newly produced codestream contains only packets from resolution 1 up to resolution 3 .", "label": "", "metadata": {}, "score": "56.351913"}
{"text": "0075 ]The fourth stage query processor 520 generates a fourth set of relevancy scores S 4 based on context , and may also generate a \" snippet \" for one or more of the documents listed in the result set .", "label": "", "metadata": {}, "score": "56.359875"}
{"text": "Word - initial \" wr \" sequences are rewritten as \" r \" .Word - initial \" wh \" sequences are rewritten as \" h \" when followed immediately by \" o \" .All sequences of \" wh \" are rewritten as \" w \" when followed immediately by \" e \" , \" i \" , \" a \" , or \" y \" .", "label": "", "metadata": {}, "score": "56.37693"}
{"text": "FIG .21 illustrates an example progression with tile parts for a single server .Each tile 's thumbnail is grouped in tile - parts at the beginning of a file .FIG .21A illustrates that tile - part 2101 is the only portion that is used for a thumbnail image .", "label": "", "metadata": {}, "score": "56.38925"}
{"text": "FIG .21 illustrates an example progression with tile parts for a single server .Each tile 's thumbnail is grouped in tile - parts at the beginning of a file .FIG .21A illustrates that tile - part 2101 is the only portion that is used for a thumbnail image .", "label": "", "metadata": {}, "score": "56.38925"}
{"text": "FIG .21 illustrates an example progression with tile parts for a single server .Each tile 's thumbnail is grouped in tile - parts at the beginning of a file .FIG .21A illustrates that tile - part 2101 is the only portion that is used for a thumbnail image .", "label": "", "metadata": {}, "score": "56.38925"}
{"text": "Position restriction : This operation applies only to words of two or more letters .The symbol \" E \" is rewritten as \" I \" when it is followed exclusively by consonants ( up to nine without any intervening vowels ) .", "label": "", "metadata": {}, "score": "56.41224"}
{"text": "3a shows a graph illustrating an example of a dictionary that uses a - priori probabilities ; .FIG .3b shows a graph scored using acoustic measurements .FIG .4 is a functional block diagram of a speech recognition system designed in accordance with the invention ; .", "label": "", "metadata": {}, "score": "56.41533"}
{"text": "In block 1518 , the received or retrieved partial CRC digest and residual data forwards the new partial CRC digest and residual data to the segment processing engine 230 .In block 1520 , the received or retrieved partial CRC digest and residual data stores the new partial CRC digest and residual data in a CRC data structure 226 and in a CRC storage area 228 .", "label": "", "metadata": {}, "score": "56.41774"}
{"text": "The speech recognition unit 100 can be split into two functional blocks namely a pre - processing block 102 and a search unit 104 .The pre - processing unit 102 , also called the acoustic processor , performs the segmentation , the normalisation and the parameterisation of the input signal waveform .", "label": "", "metadata": {}, "score": "56.47252"}
{"text": "17 and 18 illustrate quantizers for one component for a three level 5,3 transform .FIG .19 illustrates an example of HVS weighted quantization .FIG .20 is a block diagram of one embodiment of a computer system .FIG .", "label": "", "metadata": {}, "score": "56.474182"}
{"text": "17 and 18 illustrate quantizers for one component for a three level 5,3 transform .FIG .19 illustrates an example of HVS weighted quantization .FIG .20 is a block diagram of one embodiment of a computer system .FIG .", "label": "", "metadata": {}, "score": "56.474182"}
{"text": "17 and 18 illustrate quantizers for one component for a three level 5,3 transform .FIG .19 illustrates an example of HVS weighted quantization .FIG .20 is a block diagram of one embodiment of a computer system .FIG .", "label": "", "metadata": {}, "score": "56.474182"}
{"text": "3D - F ) transforms .FIGS .4A and B illustrate embodiments of a single memory where the input image data and the various decomposition levels of the image data can be stored during forward and inverse transforms , respectively .", "label": "", "metadata": {}, "score": "56.53666"}
{"text": "i. explicit differential encoding means for storing a first digital coding pattern explicitly representative of at least one alphanumeric character of said first linguistic expression , and . ii . indirect differential encoding means for storing a second digital coding pattern representative of an alphanumeric character sequence common to said first linguistic expression and a third linguistic expression stored in a third said entry means of said database .", "label": "", "metadata": {}, "score": "56.553722"}
{"text": "FIG .16 illustrates operations performed by the segment processing engine 230 for cyclic redundancy checking in accordance with certain embodiments .Control begins at block 1600 with the segment processing engine 230 receiving a current transport layer segment .In block 1602 , the segment processing engine 230 determines whether a partial CRC digest and residual data were received for a last transport layer segment .", "label": "", "metadata": {}, "score": "56.59886"}
{"text": "In one embodiment , coefficients from levels 4 , 5 , and 6 are packed in a smaller memory structure , such as storage area 450 in .FIG .4 .Referring to .An additional two lines 451 are all that is needed to store level 5 coefficients in the same necessary storage area .", "label": "", "metadata": {}, "score": "56.604378"}
{"text": "In one embodiment , coefficients from levels 4 , 5 , and 6 are packed in a smaller memory structure , such as storage area 450 in .FIG .4 .Referring to .An additional two lines 451 are all that is needed to store level 5 coefficients in the same necessary storage area .", "label": "", "metadata": {}, "score": "56.604378"}
{"text": "In other embodiments , some packets from layer 6 would be included and others would be replaced by zero packets so that the total amount of layer 6 data was approximately 250,000 bytes .FIG .22 illustrates an example of layering for a 5,3 irreversible transform with three levels , MSE or similar .", "label": "", "metadata": {}, "score": "56.68355"}
{"text": "In other embodiments , some packets from layer 6 would be included and others would be replaced by zero packets so that the total amount of layer 6 data was approximately 250,000 bytes .FIG .22 illustrates an example of layering for a 5,3 irreversible transform with three levels , MSE or similar .", "label": "", "metadata": {}, "score": "56.68355"}
{"text": "Another object of the invention is to provide a method and apparatus for performing speech recognition that offer improved recognition accuracy , particularly well suited in the context of connected word recognition .Another object of this invention is to provide a computer readable storage medium containing a program element that directs a computer to perform speech recognition , the program element being designed such as to improve recognition accuracy .", "label": "", "metadata": {}, "score": "56.72829"}
{"text": "Then these identified minimum values are evaluated again to determine their minimum , which would be \" 3 \" in the example .Then the minimum value is subtracted from the four minimum values to create the following .Then , for the remaining numbers in the 4\u00d74 , the number 3 is subtracted from each value along with the value in the 2\u00d72 that corresponds to the particular value in the 4\u00d74 arrangement , thereby resulting in the tag tree above .", "label": "", "metadata": {}, "score": "56.772713"}
{"text": "Then these identified minimum values are evaluated again to determine their minimum , which would be \" 3 \" in the example .Then the minimum value is subtracted from the four minimum values to create the following .Then , for the remaining numbers in the 4\u00d74 , the number 3 is subtracted from each value along with the value in the 2\u00d72 that corresponds to the particular value in the 4\u00d74 arrangement , thereby resulting in the tag tree above .", "label": "", "metadata": {}, "score": "56.772713"}
{"text": "Then these identified minimum values are evaluated again to determine their minimum , which would be \" 3 \" in the example .Then the minimum value is subtracted from the four minimum values to create the following .Then , for the remaining numbers in the 4\u00d74 , the number 3 is subtracted from each value along with the value in the 2\u00d72 that corresponds to the particular value in the 4\u00d74 arrangement , thereby resulting in the tag tree above .", "label": "", "metadata": {}, "score": "56.772713"}
{"text": "FIG .14 , a quantizer 1400 receives coefficients 1410 for frames of a motion sequence from a wavelet transform ( not shown ) .The coefficients are received by quantization logic 1401 which compares a threshold value stored in memory 1401 to coefficient values for the previous frame that are stored in memory 1403 to coefficients 1410 with a scalar quantizer Q applied from memory 1404 .", "label": "", "metadata": {}, "score": "56.823544"}
{"text": "FIG .14 , a quantizer 1400 receives coefficients 1410 for frames of a motion sequence from a wavelet transform ( not shown ) .The coefficients are received by quantization logic 1401 which compares a threshold value stored in memory 1401 to coefficient values for the previous frame that are stored in memory 1403 to coefficients 1410 with a scalar quantizer Q applied from memory 1404 .", "label": "", "metadata": {}, "score": "56.823544"}
{"text": "FIG .14 , a quantizer 1400 receives coefficients 1410 for frames of a motion sequence from a wavelet transform ( not shown ) .The coefficients are received by quantization logic 1401 which compares a threshold value stored in memory 1401 to coefficient values for the previous frame that are stored in memory 1403 to coefficients 1410 with a scalar quantizer Q applied from memory 1404 .", "label": "", "metadata": {}, "score": "56.823544"}
{"text": "In a mutual - reinforcement label propagation model , we use a top - k sub - graph to replace the original graph .In the top - k sub - graph , each node connects to only a few nodes .", "label": "", "metadata": {}, "score": "56.89732"}
{"text": "Note that if a third decomposition level was being performed , an additional 8 lines would be needed .Thus , in this example , a total of 14 extra lines are needed to enable reuse of the memory that stores an input time and has two levels of decomposition applied thereto .", "label": "", "metadata": {}, "score": "56.90114"}
{"text": "The label propagation algorithm is known to have many desirable properties including convergence and an equivalence to computing random walks through graphs .More specifically , we construct a graph of words where each opinion word denotes a node and two nodes are linked if they are semantically related .", "label": "", "metadata": {}, "score": "56.98821"}
{"text": "In Engiish , discrepancies between the graphic and the phonetic forms of words arise in part from the spel1ing of unstressed vowels , of stressed long vowels and of some short stressed vowels , of single and of double consonants , and of silent vowels and consonants .", "label": "", "metadata": {}, "score": "57.069756"}
{"text": "FIGS .3D - F ) transforms .FIGS .4A and B illustrate embodiments of a single memory where the input image data and the various decomposition levels of the image data can be stored during forward and inverse transforms , respectively .", "label": "", "metadata": {}, "score": "57.071564"}
{"text": "FIGS .3D - F ) transforms .FIGS .4A and B illustrate embodiments of a single memory where the input image data and the various decomposition levels of the image data can be stored during forward and inverse transforms , respectively .", "label": "", "metadata": {}, "score": "57.071564"}
{"text": "The mutual - reinforcement label propagation model is based on bootstrapping .First , for each language , a label propagation algorithm is applied to a large word relation graph , producing a polarity estimate for any given word .Second , a bilingual dictionary is seen as a bridge between two languages to start the bootstrapping process .", "label": "", "metadata": {}, "score": "57.0893"}
{"text": "storing a differential coding representative of differences between a first linguistic expression stored in a first entry and a second linguistic expression stored in a second entry , said differential coding storing step including the steps of .i. generating a first digital coding pattern explicitly representative of at least one alphanumeric character of said first linguistic expression , and . ii .", "label": "", "metadata": {}, "score": "57.09758"}
{"text": "These and other features of the present invention will become apparent from the following detailed description considered in connection with the accompanying drawings .It is to be understood , however , that the drawings are designed for purposes of illustration only and not as a definition of the limits of the invention for which reference should be made to the appending claims .", "label": "", "metadata": {}, "score": "57.145798"}
{"text": "A method according to claim 43 wherein said common expression identification step comprises the step of generating a first hash code representative of said suspect expression .A method according to claim 38 further comprising the step of identifying said suspect expression as matching an entry in a digitally encoded table of user - defined expressions .", "label": "", "metadata": {}, "score": "57.17003"}
{"text": "[ 0023 ] The lexicon generator 108 generates the mappings used for encoding a set of documents by parsing the documents .A first mapping produced by the lexicon generator 108 is herein called the global - lexicon , which identifies all distinct tokens ( herein called unique tokens ) in the set documents , and assigns a global token identifier to each unique token .", "label": "", "metadata": {}, "score": "57.204544"}
{"text": "Effective handling of receive traffic in turn improves overall system performance .Thus , certain embodiments process receive protocol data units for upper layer protocols , such as iSCSI and RDMA .Additional Embodiment Details .The described embodiments may be implemented as a method , apparatus or article of manufacture using programming and/or engineering techniques to produce software , firmware , hardware , or any combination thereof .", "label": "", "metadata": {}, "score": "57.217396"}
{"text": "If the difference between the two top orthographies is such that it is less than the threshold , the system may abort the operation on the basis that a resolution between the two orthographies can not be made .On the other hand if the difference between the orthographies is sufficient , the one having the highest score is output as the best choice .", "label": "", "metadata": {}, "score": "57.265835"}
{"text": "In addition to providing printed telephone directories , telephone companies provide information services to their subscribers .The services may include stock quotes , directory assistance and many others .In most of these applications , when the information requested can be expressed as a number or number sequence , the user is required to enter his request via a touch tone telephone .", "label": "", "metadata": {}, "score": "57.30868"}
{"text": "Truncating N bitplanes is equivalent to a scalar quantizer of 2 N .The subband where the quantization changes with respect to the previous quantizer is highlighted with a dashed box .The quantizers D , K and Q all have the same relationship between the subbands .", "label": "", "metadata": {}, "score": "57.345592"}
{"text": "Truncating N bitplanes is equivalent to a scalar quantizer of 2 N .The subband where the quantization changes with respect to the previous quantizer is highlighted with a dashed box .The quantizers D , K and Q all have the same relationship between the subbands .", "label": "", "metadata": {}, "score": "57.345592"}
{"text": "Truncating N bitplanes is equivalent to a scalar quantizer of 2 N .The subband where the quantization changes with respect to the previous quantizer is highlighted with a dashed box .The quantizers D , K and Q all have the same relationship between the subbands .", "label": "", "metadata": {}, "score": "57.345592"}
{"text": "In certain embodiments , the Marker Processing Agent ( MPA ) may be part of segment processing engine 230 .As for the configurable MPA and protocol data unit detection , embodiments provide a configuration mechanism for each TCP connection that enables marker stripping / validation and protocol data unit detection .", "label": "", "metadata": {}, "score": "57.38671"}
{"text": "Variable - length data can include various data types , such as , without limitation , integers , character strings , floating - point numbers , fixed - point numbers and the like .The variable - length data includes but is not limited to text , images , graphics , audio samples and the like .", "label": "", "metadata": {}, "score": "57.414917"}
{"text": "Additionally , the devices , adapters , etc . , may be implemented in one or more integrated circuits on the adapter or on a motherboard .The illustrated operations of .FIGS .6 , 7 , 8 , 9 , 15 , and 16 show certain events occurring in a certain order .", "label": "", "metadata": {}, "score": "57.46977"}
{"text": "A machine readable storage medium as defined in claim 32 , wherein said program element instructing the processor for processing the augmented list for selecting an orthography from the augmented list as a possible candidate to the spoken utterance .A machine readable storage medium as defined in claim 32 , wherein said program element instructing the processor to rank orthographies in the augmented list on a basis of acoustic match with the spoken utterance .", "label": "", "metadata": {}, "score": "57.474182"}
{"text": "System Overview .[ 0019 ]FIG .1 is a block diagram of an embodiment of an information retrieval system 100 .The information retrieval system 100 includes a document processing system 102 and a query processing system 104 .Document Processing System .", "label": "", "metadata": {}, "score": "57.56655"}
{"text": "A third disadvantage is that the second pass could take large amount of time .To mitigate these problems , each tile of a JPEG 2000 codestream is encoded as described above with at least two layers .At the completion of encoding each tile , a number of packets ( e.g. , layer , resolution , precinct , tile - component ) are output to the codestream as a complete tile - part .", "label": "", "metadata": {}, "score": "57.571846"}
{"text": "This method is well known in the art and more information can be obtained in \" Discrete Time Processing of Speech Signals \" by Deller & als .MacMillan publishing New York and in Gupta V. N. , Lennig M. , Mermelstein P. \" A fast search strategy in a large vocabulary word recogniser INRS - Telecommunications .", "label": "", "metadata": {}, "score": "57.590164"}
{"text": "At the completion of encoding each tile , a number of packets ( e.g. , layer , resolution , precinct , tile - component ) are output to the codestream as a complete tile - part .The remaining layers are stored in the buffer .", "label": "", "metadata": {}, "score": "57.60221"}
{"text": "At the completion of encoding each tile , a number of packets ( e.g. , layer , resolution , precinct , tile - component ) are output to the codestream as a complete tile - part .The remaining layers are stored in the buffer .", "label": "", "metadata": {}, "score": "57.60221"}
{"text": "Once decoding has been completed , processing logic performs the desired edits ( processing block 1102 ) .After performing the desired edits , processing logic recompresses the data into coded data ( processing block 1103 ) and creates a replacement tile , tile - part , or packet for the codestream ( processing block 1104 ) .", "label": "", "metadata": {}, "score": "57.651123"}
{"text": "Once decoding has been completed , processing logic performs the desired edits ( processing block 1102 ) .After performing the desired edits , processing logic recompresses the data into coded data ( processing block 1103 ) and creates a replacement tile , tile - part , or packet for the codestream ( processing block 1104 ) .", "label": "", "metadata": {}, "score": "57.651123"}
{"text": "In line processing of Layer 4 + header bytes reduces the processing latency by eliminating the store and forward architectural paradigm used in conventional systems .Additionally , incoming data may be retrieved by the Direct Memory Access ( DMA ) engine 220 for placement into the application space 124 upon the pre - processing agent 210 issuing a command to the DMA engine 220 .", "label": "", "metadata": {}, "score": "57.675034"}
{"text": "An digital data processing apparatus for electronic spelling correction comprising . A. input means for accepting a signal representative of a suspect linguistic expression , .B. database storage means for storing a linguistic expression database , .C. database access means connected with said input means and with said database storage means for accessing information stored in said linguistic expression database , . D. database verification means connected with said input means for locating within said linguistic expression database an expression substitutable for said suspect linguistic expression , . said database matching means including master lexicon matching means for identifying a master lexicon expression substitutable for said suspect expression , and . E. output means connected with said database matching means for generating a signal indicative of the success of locating within the database an expression substitutable for the suspect expression .", "label": "", "metadata": {}, "score": "57.7249"}
{"text": "The decoder uses the information regarding the layers from the codestream to select layers to generate an image .The decoder knowing what the desired viewing characteristics from the application or implementation ( see Table 9 below ) , and using the information from the codestream specifying the layers , can quantize the codestream in order to display an image at the correct viewing distance .", "label": "", "metadata": {}, "score": "57.769306"}
{"text": "Andreevskaia A , Bergler S ( 2006 )Mining WordNet for fuzzy sentiment : Sentiment tag extraction from WordNet glosses .In Proceedings of Conference of the European Chapter of the Association for Computational Linguistics .Sutton RS ( 1996 )Generalization in reinforcement learning : Successful examples using sparse coarse coding .", "label": "", "metadata": {}, "score": "57.793846"}
{"text": "9 illustrates such a decoder .Referring to .FIG .9 , decoder 901 receives a codestream and includes quantization logic 902 that examines the COM marker and uses information about the viewing distance it is at stored in storage 903 to generate quantized codestream 904 via , for example , selecting the proper layers .", "label": "", "metadata": {}, "score": "57.805164"}
{"text": "An apparatus according to claim 63 comprising target modification means for . A. selectively modifying said suspect word skeleton by replacing one set of one or more skeleton symbols with a different set of such symbols , .B. comparing said modified suspect skeleton with a linguistically salient word skeleton of at least one said database linguistic expression , and .", "label": "", "metadata": {}, "score": "57.85273"}
{"text": "No . 5,097,509 ) .In simple terms , this algorithm computes the following : .ELSE Invoke default procedure , such as passing the matter to a human operator .As shown in the above example the uttered speech \" 33 \" is not recognised because it was not included in the top 3 candidates sent to the re - score stage 210 .", "label": "", "metadata": {}, "score": "57.863266"}
{"text": "The second pass can select from the remaining data the packets to place in the second tile part of each tile .Rate Control for Compressed Codestream Data .Some rate control techniques described herein include rate control performed on a compressed codestream based on a request implemented by selecting some number of layers to keep in the codestream .", "label": "", "metadata": {}, "score": "57.912502"}
{"text": "The second pass can select from the remaining data the packets to place in the second tile part of each tile .Rate Control for Compressed Codestream Data .Some rate control techniques described herein include rate control performed on a compressed codestream based on a request implemented by selecting some number of layers to keep in the codestream .", "label": "", "metadata": {}, "score": "57.912502"}
{"text": "A method according to claim 66 comprising the step of generating from said input suspect expression a modified form thereof said modified suspect expression - generating step comprising at least one of the steps of .i. generating a signal representative of an expression having a transposed character sequence , . ii .", "label": "", "metadata": {}, "score": "57.93435"}
{"text": "1 is a simplified functional block diagram of a speech recognition system ; .FIG .2 is a more detailed functional block diagram of a speech recognition system ; .FIG .3 is a flow chart illustrating the operation of a typical speech recognition system ; .", "label": "", "metadata": {}, "score": "57.945427"}
{"text": "The relevance feedback module 517 ( FIG .5 ) may be shared by all the query processing sub - systems .During a first pass through the query processing system , the query is processed by a small portion of the parallel query processing sub - systems , while during a second pass the query is processed by the entire query processing system .", "label": "", "metadata": {}, "score": "57.95926"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _Descriptor Length of Descriptor _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "57.9887"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _Descriptor Length of Descriptor _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "57.9887"}
{"text": "The resulting mapping of LTokenIDs to GTokenIDs is called a mini - lexicon 208 .A range of token positions , from Start_Pos A to Start_Pos B , is associated with the mini - lexicon .A second mini - lexicon is generated by scanning the set of documents starting at the position Start_Pos B immediately following the last position associated with the first mini - lexicon .", "label": "", "metadata": {}, "score": "57.992184"}
{"text": "The operation of each of these components has been previously described with respect to FIGS . 1 - 5 .Query Processing Server .[ 0083 ]FIG .7 is a block diagram of an embodiment of a query processing server 700 .", "label": "", "metadata": {}, "score": "58.03713"}
{"text": "For the reversible 5 - 3 filter , however , the floor function is used in the computation of coefficients and is also used to determine the correct maxima .Note that this may be used for other filters ( e.g. , a 9 - 7 filter ) .", "label": "", "metadata": {}, "score": "58.063335"}
{"text": "Description .This is a divisional of application Ser .No .09/784,928 , filed on Feb. 15 , 2001 , entitled \" A Memory Usage Scheme for Performing Wavelet Processing , \" and assigned to the corporate assignee of the present invention .", "label": "", "metadata": {}, "score": "58.07155"}
{"text": "BRIEF DESCRIPTION OF THE DRAWINGS .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme .FIG .2 illustrates one embodiment of an organization for an image in memory .FIGS .3A - F illustrate a transform memory organization for various levels depicting conceptually how coefficients may be stored for the forward ( FIGS .", "label": "", "metadata": {}, "score": "58.116997"}
{"text": "BRIEF DESCRIPTION OF THE DRAWINGS .FIG .1 is a block diagram of the JPEG 2000 standard decoding scheme .FIG .2 illustrates one embodiment of an organization for an image in memory .FIGS .3A - F illustrate a transform memory organization for various levels depicting conceptually how coefficients may be stored for the forward ( FIGS .", "label": "", "metadata": {}, "score": "58.116997"}
{"text": "Note that , in the experiments , the size of English data is much less than the size of Chinese data , thus opinion lexicon extraction for English has great potential for improvement .Tables 4 - 5 show the accuracy of sentiment classification predicted by the extracted opinion lexicon .", "label": "", "metadata": {}, "score": "58.269695"}
{"text": "Document Processing Server .[0081 ] FIG .6 is a block diagram of an embodiment of a tokenspace repository server 600 .The server 600 can be a stand alone computer system or part of a distributed processing system including multiple computer systems .", "label": "", "metadata": {}, "score": "58.29305"}
{"text": "No .5,097,509 by inventor Lennig M. entitled \" A Rejection Method for speech recognition \" .The speech recognition dictionary 218 used in the above described procedure can be organised in numerous ways .The dictionary may be stored in the form of a graph where the links between nodes are words with their associated probabilities .", "label": "", "metadata": {}, "score": "58.294018"}
{"text": "3 , No . 48 , Dec. 1982 , pp .282 - 291 . \"Collection and Characterization of Spelling Errors in Scientific and Scholarly Text , \" J. J. Pollock and A. Zamora , Journal of the American Society for Information Science , Jan. 1983 , pp .", "label": "", "metadata": {}, "score": "58.440002"}
{"text": "Finally , layer 15 would contain the LSB of 1LH chrominance .Rate Control with Multiple Layers and Tile - Parts .There several well known techniques for rate control in compression systems .If the distortion selected leads to a bitrate higher than the desired average bitrate , the distortion allowed is increased for new units as they are compressed .", "label": "", "metadata": {}, "score": "58.492577"}
{"text": "Finally , layer 15 would contain the LSB of 1LH chrominance .Rate Control with Multiple Layers and Tile - Parts .There several well known techniques for rate control in compression systems .If the distortion selected leads to a bitrate higher than the desired average bitrate , the distortion allowed is increased for new units as they are compressed .", "label": "", "metadata": {}, "score": "58.492577"}
{"text": "Usually , though not necessarily , these quantities take the form of electrical or magnetic signals capable of being stored , transferred , combined , compared , and otherwise manipulated .It has proven convenient at times , principally for reasons of common usage , to refer to these signals as bits , values , elements , symbols , characters , terms , numbers , or the like .", "label": "", "metadata": {}, "score": "58.504826"}
{"text": "Usually , though not necessarily , these quantities take the form of electrical or magnetic signals capable of being stored , transferred , combined , compared , and otherwise manipulated .It has proven convenient at times , principally for reasons of common usage , to refer to these signals as bits , values , elements , symbols , characters , terms , numbers , or the like .", "label": "", "metadata": {}, "score": "58.504826"}
{"text": "Usually , though not necessarily , these quantities take the form of electrical or magnetic signals capable of being stored , transferred , combined , compared , and otherwise manipulated .It has proven convenient at times , principally for reasons of common usage , to refer to these signals as bits , values , elements , symbols , characters , terms , numbers , or the like .", "label": "", "metadata": {}, "score": "58.504826"}
{"text": "The third step is to normalize the edge weight according to the rule .The advantages of a sparse graph are twofold : first , the number of edges is reduced , which can speed up the algorithm execution and reduce the demand for memory space .", "label": "", "metadata": {}, "score": "58.524445"}
{"text": "5 is a block diagram of an embodiment of a multi - stage query processing system for use with a tokenspace repository .[ 0014 ]FIG .6 is a block diagram of an embodiment of a tokenspace repository server .", "label": "", "metadata": {}, "score": "58.601845"}
{"text": "A typical global - lexicon 206 can include a few million unique tokens .[ 0028 ] In some embodiments , the set of documents to be encoded ( e.g. , the documents in one partition ) are sorted in accordance with one or more criteria prior to the parsing of the documents into tokens and the processing of the tokens .", "label": "", "metadata": {}, "score": "58.603714"}
{"text": "Subsequently , the process proceeds to the \" V35 \" sequence .FIG .6 depicts the \" V35 \" sequence , which begins at step 104 .According to that sequence , if the hyphenation flag is true -- indicating that a hyphenation pattern is to be returned for the suspect expression -- the process proceeds to step 122 .", "label": "", "metadata": {}, "score": "58.60907"}
{"text": "Position restrictions : This operation does not apply to words of less than four letters .Word - final \" i \" is rewritten as \" Y \" .Position restrictions : This operation does not apply to words of less than three letters .", "label": "", "metadata": {}, "score": "58.667885"}
{"text": "The COM marker could be used to fill space or could contain information that the encoder wanted to include .It could contain information such as , for example , sideband information described herein or a copyright license for an image or text or other file format information .", "label": "", "metadata": {}, "score": "58.779976"}
{"text": "The COM marker could be used to fill space or could contain information that the encoder wanted to include .It could contain information such as , for example , sideband information described herein or a copyright license for an image or text or other file format information .", "label": "", "metadata": {}, "score": "58.779976"}
{"text": "It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein .A machine - readable medium includes any mechanism for storing or transmitting information in a form readable by a machine ( e.g. , a computer ) .", "label": "", "metadata": {}, "score": "58.801914"}
{"text": "It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein .A machine - readable medium includes any mechanism for storing or transmitting information in a form readable by a machine ( e.g. , a computer ) .", "label": "", "metadata": {}, "score": "58.801914"}
{"text": "It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein .A machine - readable medium includes any mechanism for storing or transmitting information in a form readable by a machine ( e.g. , a computer ) .", "label": "", "metadata": {}, "score": "58.801914"}
{"text": "3c is a block diagram of an embodiment of an attribute encoding / decoding system for encoding / decoding document attributes .[ 0012 ]FIG .4 is a block diagram of an embodiment of a query processing system for use with a tokenspace repository .", "label": "", "metadata": {}, "score": "58.83442"}
{"text": "The exemplary Verilog below converts a single quantization value \" q \" into seven quantizers ( number of LSBs to truncate ) .assign q_2H . 0 : temp_2H ; . assign q_3HH . 0 : temp_3HH ; . assign q_3H . 0 : temp_3H ; . assign q_3LL . 0 : temp_3LL ; . endmodule .", "label": "", "metadata": {}, "score": "58.86138"}
{"text": "The exemplary Verilog below converts a single quantization value \" q \" into seven quantizers ( number of LSBs to truncate ) .assign q_2H . 0 : temp_2H ; . assign q_3HH . 0 : temp_3HH ; . assign q_3H . 0 : temp_3H ; . assign q_3LL . 0 : temp_3LL ; . endmodule .", "label": "", "metadata": {}, "score": "58.86138"}
{"text": "claim 4 , wherein the marker indicates a starting point and an ending point of data associated with the respective packet .The system defined in . claim 5 , wherein the marker indicates at least one of whether the data is to be deleted , truncated , and one or more additional operations that are to be performed on the data .", "label": "", "metadata": {}, "score": "58.900608"}
{"text": "claim 4 , wherein the marker indicates a starting point and an ending point of data associated with the respective packet .The system defined in . claim 5 , wherein the marker indicates at least one of whether the data is to be deleted , truncated , and one or more additional operations that are to be performed on the data .", "label": "", "metadata": {}, "score": "58.900608"}
{"text": "B. database storage means for storing a linguistic expression database , .C. database access means connected with said input means and with said database storage means for accessing information stored in said linguistic expression database , . D. database verification means connected with said database access means for locating within said linguistic expression database a linguistic expression matching suspect expression , . said database verification means including master lexicon verification means for matching said suspect expression with a linguistic expression represented within said master lexicon means , and . E. output means connected with said database verification means for generating a signal indicative of the success of locating a matching database expression .", "label": "", "metadata": {}, "score": "58.90821"}
{"text": "12 illustrates an interaction of a segment processing engine and the Cyclic Redundancy Check ( CRC ) engine in accordance with certain embodiments .FIG .13 illustrates a timeline of serialization in a \" BEFORE \" scenario in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "58.933815"}
{"text": "2 illustrates one embodiment of an organization for an image in memory .FIGS .3A - F illustrate a transform memory organization for various levels depicting conceptually how coefficients may be stored for the forward ( FIGS .A - C ) and inverse ( .", "label": "", "metadata": {}, "score": "58.944958"}
{"text": "7 ) are sufficient for most applications .( For image components with depth 12-bits or more and 5 or more transform levels , perhaps higher quantizations might be useful . )Values 0 . . .6 could be used to specify the number of bitplanes to truncate and 7 could be used to mean discard all bitplanes .", "label": "", "metadata": {}, "score": "58.96926"}
{"text": "7 ) are sufficient for most applications .( For image components with depth 12-bits or more and 5 or more transform levels , perhaps higher quantizations might be useful . )Values 0 . . .6 could be used to specify the number of bitplanes to truncate and 7 could be used to mean discard all bitplanes .", "label": "", "metadata": {}, "score": "58.96926"}
{"text": "7 ) are sufficient for most applications .( For image components with depth 12-bits or more and 5 or more transform levels , perhaps higher quantizations might be useful . )Values 0 . . .6 could be used to specify the number of bitplanes to truncate and 7 could be used to mean discard all bitplanes .", "label": "", "metadata": {}, "score": "58.96926"}
{"text": "7A shows multiple ways to convert a codestream from one progression order to another .FIG .7B shows one embodiment of simplified conversion paths to convert a codestream from one progression order to another .FIG .8 illustrates one embodiment of a process for performing progression order conversion .", "label": "", "metadata": {}, "score": "58.983128"}
{"text": "7A shows multiple ways to convert a codestream from one progression order to another .FIG .7B shows one embodiment of simplified conversion paths to convert a codestream from one progression order to another .FIG .8 illustrates one embodiment of a process for performing progression order conversion .", "label": "", "metadata": {}, "score": "58.983128"}
{"text": "7A shows multiple ways to convert a codestream from one progression order to another .FIG .7B shows one embodiment of simplified conversion paths to convert a codestream from one progression order to another .FIG .8 illustrates one embodiment of a process for performing progression order conversion .", "label": "", "metadata": {}, "score": "58.983128"}
{"text": "Then the distortion to allow across all the units in the buffer is determined when the buffer is full .If the buffer is sufficient to contain the entire image , extremely high quality results can be obtained .In JPEG 2000 , layers are designed to contain increments to quality .", "label": "", "metadata": {}, "score": "59.049965"}
{"text": "10/917,745 , entitled \" System and Method For Encoding And Decoding Variable - Length Data .\" [ 0047 ] Various information generated by the document processing system 102 can be encoded using all or part of the encoding system 300 .", "label": "", "metadata": {}, "score": "59.11201"}
{"text": "10/917,746 , filed Aug. 13 , 2004 , entitled \" Multi - Stage Query Processing System And Method For Use With Tokenspace Repository \" , both of which are incorporated by reference herein in their entirety .TECHNICAL FIELD .[ 0003 ] The disclosed embodiments relate generally to data processing systems and methods , and in particular to a document compression system and method for use with a collection of documents with an associated index ( hereinafter also referred to as a \" tokenspace repository \" ) .", "label": "", "metadata": {}, "score": "59.139847"}
{"text": "FIG .4A , locations for the input tile , level 1 coefficients , level 2 coefficients , and level 3 coefficients is shown with the added 2,4 and 8 lines respectively .FIG .4B shows a similar single memory embodiment where the input coefficients of various levels of the transform can be stored along with the output during application of an inverse transform .", "label": "", "metadata": {}, "score": "59.18122"}
{"text": "If the code is a \" literal code \" the second portion 904 of the code represents the global token identifier .In some embodiments , this type field 902 indicates the number of bits required to represent the global token identifier .", "label": "", "metadata": {}, "score": "59.19126"}
{"text": "The decoder defined in .claim 7 wherein the sideband information is stored in a marker segment of the codestream .The decoder defined in . claim 8 wherein the marker segment comprises a comment marker .The decoder defined in .", "label": "", "metadata": {}, "score": "59.195496"}
{"text": "Then , processing logic repeats processing block 1601 for the printer resolution given that the monitor packets are already in the codestream ( processing block 1603 ) .Lastly , processing logic creates a POC marker with the extremes of the resolutions and layers for each tile ( processing block 1604 ) .", "label": "", "metadata": {}, "score": "59.20747"}
{"text": "Then , processing logic repeats processing block 1601 for the printer resolution given that the monitor packets are already in the codestream ( processing block 1603 ) .Lastly , processing logic creates a POC marker with the extremes of the resolutions and layers for each tile ( processing block 1604 ) .", "label": "", "metadata": {}, "score": "59.20747"}
{"text": "Then , processing logic repeats processing block 1601 for the printer resolution given that the monitor packets are already in the codestream ( processing block 1603 ) .Lastly , processing logic creates a POC marker with the extremes of the resolutions and layers for each tile ( processing block 1604 ) .", "label": "", "metadata": {}, "score": "59.20747"}
{"text": "Furthermore , a sound recording and playback device , such as a speaker and/or microphone may optionally be coupled to bus 2011 for audio interfacing with computer system 2000 .Another device that may be coupled to bus 2011 is a wired / wireless communication capability 2025 to communication to a phone or handheld palm device .", "label": "", "metadata": {}, "score": "59.21235"}
{"text": "Furthermore , a sound recording and playback device , such as a speaker and/or microphone may optionally be coupled to bus 2011 for audio interfacing with computer system 2000 .Another device that may be coupled to bus 2011 is a wired / wireless communication capability 2025 to communication to a phone or handheld palm device .", "label": "", "metadata": {}, "score": "59.21235"}
{"text": "Furthermore , a sound recording and playback device , such as a speaker and/or microphone may optionally be coupled to bus 2011 for audio interfacing with computer system 2000 .Another device that may be coupled to bus 2011 is a wired / wireless communication capability 2025 to communication to a phone or handheld palm device .", "label": "", "metadata": {}, "score": "59.21235"}
{"text": ", where h1.h2 . . .hy.hz comprises the host name portion of the URL and /n1/n2 represents the remainder of the URL .The URL is remapped to the pattern hz.hy . . .h2.h1/n1/n2 . . .", "label": "", "metadata": {}, "score": "59.231583"}
{"text": "The algorithm of mutual - reinforcement label propagation is shown in Figure 3 .Seed Word Selection .If we have to label a few instances for semi - supervised learning , it may be attractive to let the learning algorithm tell us which instances to label , rather than selecting them randomly [ 22 ] .", "label": "", "metadata": {}, "score": "59.240036"}
{"text": "5 .Q Document Repository Encoding and Decoding System --Second Embodiment .[0052 ] FIGS .8A and 8B are block diagrams of an embodiment in which a tokenized collection of documents ( a \" tokenspace repository \" ) is encoded in a somewhat different way than the one described above .", "label": "", "metadata": {}, "score": "59.280487"}
{"text": "The raw data that makes up the third line from the text shown above is illustrated below : . \\ref 3 \\t Uva voa toupaoro ovokivuia ogoeaepa .\\m uva voa tou -pa -oro o- voki -vu -ia ogoe -a -epa \\g so here be -CONT -DEP.SIM SPEC- day -ALT -LOC hungry -3 .", "label": "", "metadata": {}, "score": "59.37512"}
{"text": "Next , the codestream is quantized by quantization block 104 , which may be quantizing based on a region of interest ( ROI ) as indicated by ROI block 105 .After quantization , an inverse transform is applied to the remaining coefficients via transform block 106 , followed by DC and optional component transform block 107 .", "label": "", "metadata": {}, "score": "59.444214"}
{"text": "Next , the codestream is quantized by quantization block 104 , which may be quantizing based on a region of interest ( ROI ) as indicated by ROI block 105 .After quantization , an inverse transform is applied to the remaining coefficients via transform block 106 , followed by DC and optional component transform block 107 .", "label": "", "metadata": {}, "score": "59.444214"}
{"text": "Next , the codestream is quantized by quantization block 104 , which may be quantizing based on a region of interest ( ROI ) as indicated by ROI block 105 .After quantization , an inverse transform is applied to the remaining coefficients via transform block 106 , followed by DC and optional component transform block 107 .", "label": "", "metadata": {}, "score": "59.444214"}
{"text": "The region lexicon 830 , the encoded tokens 832 and the block offsets 834 ( each of which will be described in more detail next ) together form an encoded representation of a respective region 820 of the set of documents .", "label": "", "metadata": {}, "score": "59.48696"}
{"text": "This clipping procedure always reduces pixel wise distortion because the original image did not contain pixels outside of the clipping bounds .This procedure is well known and recommend by the JPEG 2000 standard .In addition to the bounds on the final output samples , there are bounds on the values coefficients can assume at the various stages of the wavelet transform .", "label": "", "metadata": {}, "score": "59.497383"}
{"text": "This clipping procedure always reduces pixel wise distortion because the original image did not contain pixels outside of the clipping bounds .This procedure is well known and recommend by the JPEG 2000 standard .In addition to the bounds on the final output samples , there are bounds on the values coefficients can assume at the various stages of the wavelet transform .", "label": "", "metadata": {}, "score": "59.497383"}
{"text": "[ 24 ] and Li et al .[ 25 ] .Each set of the four domains contains 1000 reviews ( 500 positive and 500 negative reviews ) .Each set of the four domains contains 10000 reviews ( 5000 positive and 5000 negative reviews ) .", "label": "", "metadata": {}, "score": "59.596752"}
{"text": "The number of bytes is computed based on the bitrate desired by the request .The number of bytes belonging to layer 0 is added up to a total .Then this total of bytes is compared with the number of bytes desired .", "label": "", "metadata": {}, "score": "59.608562"}
{"text": "The number of bytes is computed based on the bitrate desired by the request .The number of bytes belonging to layer 0 is added up to a total .Then this total of bytes is compared with the number of bytes desired .", "label": "", "metadata": {}, "score": "59.608562"}
{"text": "The number of bytes is computed based on the bitrate desired by the request .The number of bytes belonging to layer 0 is added up to a total .Then this total of bytes is compared with the number of bytes desired .", "label": "", "metadata": {}, "score": "59.608562"}
{"text": "This bitrate is equal to or less than the bitrate specified by the request .The parser may use a data structure referred to herein as a \" packet structure . \"Note that this data structure may be used for other purposes such as , for example , the versatile pocket data structure described below .", "label": "", "metadata": {}, "score": "59.629368"}
{"text": "This bitrate is equal to or less than the bitrate specified by the request .The parser may use a data structure referred to herein as a \" packet structure . \"Note that this data structure may be used for other purposes such as , for example , the versatile pocket data structure described below .", "label": "", "metadata": {}, "score": "59.629368"}
{"text": "Position restrictions : This operation does not apply to sequences beginning in position one or position two .Word - final sequences of \" gue \" are rewritten as \" ge \" .Position restrictions : This rule does not apply to sequences beginning in position one or position two .", "label": "", "metadata": {}, "score": "59.677002"}
{"text": "claim 6 , wherein the instructions , when executed by the processor of the computer , are operable to : . receive a peek command requesting a header portion of a next protocol data unit ; . wait for the requested data ; and .", "label": "", "metadata": {}, "score": "59.7156"}
{"text": "Pixels from storage 501 or received directly form the input undergo color conversion and/or level shifting , with the resulting outputs being stored in one coefficient buffers 502 1 - 502 N .That is , once the color conversion has been completed on each tile , it is stored in one of the coefficient buffers 502 1 - 502 N , and then the next tile can be processed .", "label": "", "metadata": {}, "score": "59.755455"}
{"text": "Pixels from storage 501 or received directly form the input undergo color conversion and/or level shifting , with the resulting outputs being stored in one coefficient buffers 502 1 - 502 N .That is , once the color conversion has been completed on each tile , it is stored in one of the coefficient buffers 502 1 - 502 N , and then the next tile can be processed .", "label": "", "metadata": {}, "score": "59.755455"}
{"text": "Pixels from storage 501 or received directly form the input undergo color conversion and/or level shifting , with the resulting outputs being stored in one coefficient buffers 502 1 - 502 N .That is , once the color conversion has been completed on each tile , it is stored in one of the coefficient buffers 502 1 - 502 N , and then the next tile can be processed .", "label": "", "metadata": {}, "score": "59.755455"}
{"text": "The data format used by Toolbox is called \" standard format marker \" ( SFM ) , a markup format that predates Shoebox .Although standard format is easy to read and interpret , it is not as easily parsed as modern mark - up schemes , such as XML , which is easily parsed and validated using a wide variety of freely available tools .", "label": "", "metadata": {}, "score": "59.765434"}
{"text": "( Note that representing \" 3 \" , \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" might use less bitstream data than \" 2 \" , \" 1 \" , \" 3 \" , \" 6 \" and \" 3 \" . )", "label": "", "metadata": {}, "score": "59.85029"}
{"text": "( Note that representing \" 3 \" , \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" might use less bitstream data than \" 2 \" , \" 1 \" , \" 3 \" , \" 6 \" and \" 3 \" . )", "label": "", "metadata": {}, "score": "59.85029"}
{"text": "( Note that representing \" 3 \" , \" 0 \" , \" 2 \" , \" 5 \" and \" 2 \" might use less bitstream data than \" 2 \" , \" 1 \" , \" 3 \" , \" 6 \" and \" 3 \" . )", "label": "", "metadata": {}, "score": "59.85029"}
{"text": "Other bit lengths for each field of a copy code may be used in other embodiments .The length of each literal code ( as measured in bits ) is specified by the type of the literal code .[0058 ] Referring back to FIG . 8B , as the encoding system 810 encodes the blocks of a region , the encoding system 810 generates a set of block offsets 834 indicating the locations of the encoded tokens for each block of the region .", "label": "", "metadata": {}, "score": "59.8703"}
{"text": "Embodiments perform header processing in a flexible manner by utilizing a pre - processing agent 210 that has context sensitive register space 212 ( e.g. , a microengine ) .Control begins at block 900 with the pre - processing agent 210 receiving an indication of the location of or actual header data for a protocol segment from the segment processing engine 230 .", "label": "", "metadata": {}, "score": "59.935654"}
{"text": "When the code or logic is executed by a processor , the circuitry may include the medium including the code or logic as well as the processor that executes the code loaded from the medium .The code in which embodiments are implemented may further be accessible through a transmission media or from a file server over a network .", "label": "", "metadata": {}, "score": "59.946175"}
{"text": "In some embodiments , a language is not associated with the unique tokens representing punctuation symbols .In yet another embodiment , while a language may be associated with every unique token , the language association is ignored when processing the N ( e.g. , 256 ) most frequently occurring tokens .", "label": "", "metadata": {}, "score": "59.94994"}
{"text": "Some of the flags that are provided with the instruction are : C for calculating a CRC digest over the transfer amount ( e.g. , with a CRC32-C technique ) and P that represents strip pad bytes that are to be removed from the payload that is being transferred .", "label": "", "metadata": {}, "score": "60.00321"}
{"text": "These code blocks can be grouped into partitions .These rectangular arrays of coefficients can be extracted independently .The individual bit - planes of the coefficients in a code - block are entropy coded with three coding passes .Each of these coding passes collects contextual information about the bit - plane compressed image data .", "label": "", "metadata": {}, "score": "60.012627"}
{"text": "These code blocks can be grouped into partitions .These rectangular arrays of coefficients can be extracted independently .The individual bit - planes of the coefficients in a code - block are entropy coded with three coding passes .Each of these coding passes collects contextual information about the bit - plane compressed image data .", "label": "", "metadata": {}, "score": "60.012627"}
{"text": "These code blocks can be grouped into partitions .These rectangular arrays of coefficients can be extracted independently .The individual bit - planes of the coefficients in a code - block are entropy coded with three coding passes .Each of these coding passes collects contextual information about the bit - plane compressed image data .", "label": "", "metadata": {}, "score": "60.012627"}
{"text": "However , electronic publication of materials on the web is increasingly common , and it is therefore useful to be able to take a Toolbox lexicon and format it as HTML for web display .For example , an entry might be formatted as HTML in the style of a dictionary , as follows : . aako n. \" mother , aunt \" .", "label": "", "metadata": {}, "score": "60.076694"}
{"text": "Although the present invention has been described in considerable detail with reference to certain preferred versions thereof , other versions are possible .For example in a flight information system , flights could be identified by source and destination cities where typical airlines fly to 300 cities which would result in a search space of 300\u00d7300 city pairs .", "label": "", "metadata": {}, "score": "60.089134"}
{"text": "Every \" rh \" sequence is rewritten as \" r \" .Non - word - initial sequences of \" ght \" are rewritten as \" te \" .Every \" ph \" sequence is rewritten as \" f \" .Every \" gn \" sequence is rewritten as \" n \" .", "label": "", "metadata": {}, "score": "60.109184"}
{"text": "Original Graph vs. Top - k Sub - graph .The comparison results of the opinion lexicon extraction based on different graphs are shown in Figures 5 and 6 .From the experimental results in Figures 5 and 6 , we can see that the label propagation algorithm based on top - k sub - graph outperforms the standard model based on the original graph in both languages .", "label": "", "metadata": {}, "score": "60.114796"}
{"text": "3B and 3C in successive levels ) only need to be stored temporarily while computing the transform with the exception of the final transform level 's LL coefficients which are coded .When a transform is used that does the horizontal and vertical transforms in one pass and uses line buffers , once a pair of input rows has been completely read ( input lines or LL coefficients ) , the space used by lines can be reused .", "label": "", "metadata": {}, "score": "60.12863"}
{"text": "3B and 3C in successive levels ) only need to be stored temporarily while computing the transform with the exception of the final transform level 's LL coefficients which are coded .When a transform is used that does the horizontal and vertical transforms in one pass and uses line buffers , once a pair of input rows has been completely read ( input lines or LL coefficients ) , the space used by lines can be reused .", "label": "", "metadata": {}, "score": "60.12863"}
{"text": "3B and 3C in successive levels ) only need to be stored temporarily while computing the transform with the exception of the final transform level 's LL coefficients which are coded .When a transform is used that does the horizontal and vertical transforms in one pass and uses line buffers , once a pair of input rows has been completely read ( input lines or LL coefficients ) , the space used by lines can be reused .", "label": "", "metadata": {}, "score": "60.12863"}
{"text": "In certain embodiments , the TCP connection may be set up for the duration of data being transmitted .Embodiments set the following new parameters for each Layer 4 + TCP connection : .( a ) Offset of length field in Layer 4 + header ( also referred to as \" O \" ) .", "label": "", "metadata": {}, "score": "60.15219"}
{"text": "Every \" sx \" sequence is rewritten as \" x \" .The letters \" e \" , \" i \" , and \" a \" are rewritten as \" E \" when preceded exclusively by consonants and/or preceded by the trace of word - initial vowels .", "label": "", "metadata": {}, "score": "60.16778"}
{"text": "If the total exceeds the number of bytes desired , the packets in the last layer added are subtracted from the total .This is done to guarantee that the bitrate is below the bitrate desired .Consequently , during the subtraction step , packets which have been subtracted from the total are marked unselected .", "label": "", "metadata": {}, "score": "60.17329"}
{"text": "If the total exceeds the number of bytes desired , the packets in the last layer added are subtracted from the total .This is done to guarantee that the bitrate is below the bitrate desired .Consequently , during the subtraction step , packets which have been subtracted from the total are marked unselected .", "label": "", "metadata": {}, "score": "60.17329"}
{"text": "If the total exceeds the number of bytes desired , the packets in the last layer added are subtracted from the total .This is done to guarantee that the bitrate is below the bitrate desired .Consequently , during the subtraction step , packets which have been subtracted from the total are marked unselected .", "label": "", "metadata": {}, "score": "60.17329"}
{"text": "The system defined in .claim 1 wherein the predetermined intermediate progression order comprises a Layer - resolution - component - position progression of JPEG 2000 .The system defined in . claim 2 when the first progression order is one of the following group of JPEG 2000 progression orders : resolution - layer - component - position progression ; resolution - position - component - layer progression ; component - position - resolution - layer progression ; and position - component - resolution - layer progression .", "label": "", "metadata": {}, "score": "60.212128"}
{"text": "FIGS .3D-3F illustrate the corresponding inverse transform memory usage in which additional lines store the results of applying an inverse transform and those additional lines are in the memory behind the direction the inverse transform is being performed .FIG .", "label": "", "metadata": {}, "score": "60.24984"}
{"text": "FIGS .3D-3F illustrate the corresponding inverse transform memory usage in which additional lines store the results of applying an inverse transform and those additional lines are in the memory behind the direction the inverse transform is being performed .FIG .", "label": "", "metadata": {}, "score": "60.24984"}
{"text": "After each mini - lexicon 208 is generated , the tokens in the corresponding portion of the set of documents is mapped to LTokenIDs by the encoding / decoding system 110 and stored in the tokenspace repository 112 for subsequent retrieval .", "label": "", "metadata": {}, "score": "60.26722"}
{"text": "That is , if a gray level is supposed to be at 50 % ( for example ) , and is instead at 60 % , it is often not visually objectionable if the image is of text .In one embodiment , the LL ( DC ) coefficients are quantized more heavily for text than for non - text images at low bitrate .", "label": "", "metadata": {}, "score": "60.313965"}
{"text": "That is , if a gray level is supposed to be at 50 % ( for example ) , and is instead at 60 % , it is often not visually objectionable if the image is of text .In one embodiment , the LL ( DC ) coefficients are quantized more heavily for text than for non - text images at low bitrate .", "label": "", "metadata": {}, "score": "60.313965"}
{"text": "Whenever an LTokenID ( in the tokenspace repository ) having a value of F-1 or less is decoded , it can be mapped to a token directly in accordance with the global - lexicon without having to first map the LTokenID to a corresponding GTokenID .", "label": "", "metadata": {}, "score": "60.330025"}
{"text": "wherein the predetermined intermediate progression order is a layer progression order and the second progression order is a target progression order other than the layer progression order .The system defined in .claim 1 wherein the predetermined intermediate progression order comprises a Layer - resolution - component - position progression of JPEG 2000 .", "label": "", "metadata": {}, "score": "60.358284"}
{"text": "Some rate control techniques described herein include rate control performed on a compressed codestream based on a request implemented by selecting some number of layers to keep in the codestream .A parser may be used to produce a new codestream which shows the bitrate based on layers .", "label": "", "metadata": {}, "score": "60.508736"}
{"text": "The spelling correction apparatus includes elements for correcting both typographical and cognitive misspellings .Through use of a unique skeleton - forming process , the invention produces word skeletons which are typically unaffected by cognitive errors , i.e. , those which result from not knowing how to spell a word .", "label": "", "metadata": {}, "score": "60.532516"}
{"text": "The result is a global lexicon 206 .Next , the set of documents ( which have been tokenized ) are processed by a region lexicons builder 804 .Conceptually , the set of documents are divided into regions 820 , and each region 820 is divided into blocks 822 .", "label": "", "metadata": {}, "score": "60.559937"}
{"text": "To date , the art has failed to provide satisfactory spelling verification and correction software for use on microprocessor systems .In general , the available software compensates for limited storage space by maintaining short or impoverished spelling dictionaries ( e.g. , having fewer entries or lacking capitalization and hyphenation information ) , resulting in the recognition of fewer correctly spelled words and the replacement of fewer incorrectly spelled words .", "label": "", "metadata": {}, "score": "60.568604"}
{"text": "In Proceedings of LREC'04 , pp.1115 - 1118 .Hu M , Liu B ( 2004 )Mining and summarizing customer reviews .In Proceedings of SIGKDD'04 , 168 - 177 .Kim SM , Hovy E ( 2004 ) Determining the sentiment of opinions .", "label": "", "metadata": {}, "score": "60.590317"}
{"text": "The following 8 packets belong to Layer 1 .Using the conversion process described herein , the above codestream is converted to resolution layer progression .The following shows how the above packets are re - ordered .After the layer progressive codestream is converted to resolution progression , in the new codestream , packets are grouped based on resolution .", "label": "", "metadata": {}, "score": "60.621914"}
{"text": "The following 8 packets belong to Layer 1 .Using the conversion process described herein , the above codestream is converted to resolution layer progression .The following shows how the above packets are re - ordered .After the layer progressive codestream is converted to resolution progression , in the new codestream , packets are grouped based on resolution .", "label": "", "metadata": {}, "score": "60.621914"}
{"text": "The following 8 packets belong to Layer 1 .Using the conversion process described herein , the above codestream is converted to resolution layer progression .The following shows how the above packets are re - ordered .After the layer progressive codestream is converted to resolution progression , in the new codestream , packets are grouped based on resolution .", "label": "", "metadata": {}, "score": "60.621914"}
{"text": "Targeted Skeletal Modifications .The target skeletal modifications are applied to a skeleton to produce another skeleton .Each skeletal modification substitutes one skeletal character sequence with another skeletal character sequence .In the preferred embodiment , there are 73 targeted substitutions .", "label": "", "metadata": {}, "score": "60.656963"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _Descriptor Length of Descriptor _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Type ( value \" 0 \" ) 1 bit.sup .", "label": "", "metadata": {}, "score": "60.662773"}
{"text": "In certain embodiments , the header processing is performed before the data of a previous message has been completely transferred to the host computer 102 .Since these Layer 4 + protocols are used for application programs 122 such as disk access and inter - process communication , low processing latencies are desired .", "label": "", "metadata": {}, "score": "60.676315"}
{"text": "8 : . 1 ) If the recognized word is in the standard text lexicon , the a - priori probability of the word may be incremented or alternatively the standard text lexicon may be left unchanged 800 .2 ) If the recognized word is not in the standard text lexicon and was confirmed to be correct by the user it may be added to the standard text lexicon 802 .", "label": "", "metadata": {}, "score": "60.708294"}
{"text": "The third band , Band 2 , may comprise the next 2 ' ' ( i.e. , 65,536 ) tokens in the sorted list of unique tokens .Of course , the number of tokens in each band may differ in other embodiments .", "label": "", "metadata": {}, "score": "60.7547"}
{"text": "An apparatus according to claim 22 wherein said suspect expression modification means comprises means for at least one of .i. generating a signal representative of an expression having a transposed character sequence , . ii .generating a signal representative of an expression having a deleted character , . iii .", "label": "", "metadata": {}, "score": "60.78151"}
{"text": "Various structures and/or buffers ( not shown ) may reside in memory 106 or may be located in a storage unit separate from the memory 106 in certain embodiments .FIG .2 illustrates a block diagram of a network adapter 128 in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "60.83776"}
{"text": "The process then proceeds to sequence \" C145 \" .FIG .11 depicts the \" C145 \" processing sequence , which begins at step 178 .In step 180 , the process generates modified forms of the suspect expression by sequentially transposing each pair of adjacent characters .", "label": "", "metadata": {}, "score": "60.84823"}
{"text": "In an alternate embodiment , the first F LTokenIDs in each mini - lexicon 208 are reserved for the F most popular tokens in the set of documents .For these F LTokenIDs , the LTokenID is always equal to the GTokenID .", "label": "", "metadata": {}, "score": "60.869667"}
{"text": "From block 612 , processing loops back to block 600 .In block 614 , other processing may be performed before looping back to block 600 .Although the segment processing engine 230 is illustrated as checking for a peek command in block 608 , other processing may occur prior to the processing of block 608 .", "label": "", "metadata": {}, "score": "60.871456"}
{"text": "Alternatively , access logic 202A accesses memory 201 using a pointer or index to the end of the tile instead of the width of the tile .In one embodiment , in order to access for each line of a tile or a portion of a line of an image to perform some function F , the following process may be used .", "label": "", "metadata": {}, "score": "60.92135"}
{"text": "Alternatively , access logic 202A accesses memory 201 using a pointer or index to the end of the tile instead of the width of the tile .In one embodiment , in order to access for each line of a tile or a portion of a line of an image to perform some function F , the following process may be used .", "label": "", "metadata": {}, "score": "60.92135"}
{"text": "Alternatively , access logic 202A accesses memory 201 using a pointer or index to the end of the tile instead of the width of the tile .In one embodiment , in order to access for each line of a tile or a portion of a line of an image to perform some function F , the following process may be used .", "label": "", "metadata": {}, "score": "60.92135"}
{"text": "For reused memory , the amount listed is the additional new memory used for that level .For this example , reusing memory for levels 1 , 2 and 3 saves memory .Level 4 may use a separate memory .The memory for levels 4 , 5 and 6 could be placed in a single memory after level 3 has been generated or in a completely different and separate memory .", "label": "", "metadata": {}, "score": "61.083595"}
{"text": "For reused memory , the amount listed is the additional new memory used for that level .For this example , reusing memory for levels 1 , 2 and 3 saves memory .Level 4 may use a separate memory .The memory for levels 4 , 5 and 6 could be placed in a single memory after level 3 has been generated or in a completely different and separate memory .", "label": "", "metadata": {}, "score": "61.083595"}
{"text": "For reused memory , the amount listed is the additional new memory used for that level .For this example , reusing memory for levels 1 , 2 and 3 saves memory .Level 4 may use a separate memory .The memory for levels 4 , 5 and 6 could be placed in a single memory after level 3 has been generated or in a completely different and separate memory .", "label": "", "metadata": {}, "score": "61.083595"}
{"text": "The RDMA protocol has a single digest for the entire protocol data unit .The marker 314 is a field that is present in a TCP stream .Each marker 314 is a pointer to the start or the end of the protocol data unit or both .", "label": "", "metadata": {}, "score": "61.0994"}
{"text": "[0002 ] This application is related to U.S. patent application Ser .No .10/917,745 , filed Aug. 13 , 2004 , entitled \" System and Method For Encoding And Decoding Variable - Length Data , \" and U.S. patent application Ser .", "label": "", "metadata": {}, "score": "61.207237"}
{"text": "Received April 18 , 2000 ; revised September 13 , 2000 ; accepted October 30 , 2000 .Communicated by Wen - Lian Hsu .Managing Fieldwork Data with Toolbox and the Natural Language Toolkit .This paper shows how fieldwork data can be managed using the program Toolbox together with the Natural Language Toolkit ( NLTK ) for the Python programming language .", "label": "", "metadata": {}, "score": "61.3959"}
{"text": "Each block 822 of a region 820 also has a predefined , fixed size , such as 64 tokens ( or any other appropriate size ) .[0054 ]In one embodiment , the \" lexicon \" 830 for a respective region 820 is an ordered listing of the longest sequences of tokens having the highest repeat rates , or any similar structure .", "label": "", "metadata": {}, "score": "61.40615"}
{"text": "With respect to tag tree data hiding , packet headers of the JPEG 2000 standard use tag trees for coding first inclusion and zero bitplane information .When there are multiple codeblocks , tag trees are like a quadtree of minimum values .", "label": "", "metadata": {}, "score": "61.46103"}
{"text": "With respect to tag tree data hiding , packet headers of the JPEG 2000 standard use tag trees for coding first inclusion and zero bitplane information .When there are multiple codeblocks , tag trees are like a quadtree of minimum values .", "label": "", "metadata": {}, "score": "61.46103"}
{"text": "With respect to tag tree data hiding , packet headers of the JPEG 2000 standard use tag trees for coding first inclusion and zero bitplane information .When there are multiple codeblocks , tag trees are like a quadtree of minimum values .", "label": "", "metadata": {}, "score": "61.46103"}
{"text": "305 - 316 . \"Abbreviated Typing for Word Processing , \" S. J. P. Todd , IBM Technical Disclosure Bulletin , vol .21 , No . 9 , Feb. 1979 , pp .3796 - 3797 . H. A. Gleason , Jr. , An Introduction to Descriptive Linguitics , Revised Edition , Holt , Rinehart and Winston , N.Y. , 1961 , pp .", "label": "", "metadata": {}, "score": "61.488533"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _Where \" Character \" is an explicit representation of a differential character ; \" Hyphen \" is a portion of the hyphenation map ; and \" Hyphen Flag \" is a flag indicating whether the next section includes a continuation of the hyphenation string .", "label": "", "metadata": {}, "score": "61.550163"}
{"text": "In graph - based algorithms , it is usually more meaningful to construct a high - quality graph rather than selecting a specific algorithm .There are two major factors which influence the label propagation algorithm : similarity measure function and the number of edges connecting each node .", "label": "", "metadata": {}, "score": "61.58887"}
{"text": "19 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for each chrominance component , and .13 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for chrominance .A central processing unit ( CPU ) might select one predetermined quantizer from a table and write it to a CPU or other controller controlling special purpose JPEG 2000 hardware ( a chip ) for each frame of a motion JPEG 2000 video sequence .", "label": "", "metadata": {}, "score": "61.64824"}
{"text": "19 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for each chrominance component , and .13 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for chrominance .A central processing unit ( CPU ) might select one predetermined quantizer from a table and write it to a CPU or other controller controlling special purpose JPEG 2000 hardware ( a chip ) for each frame of a motion JPEG 2000 video sequence .", "label": "", "metadata": {}, "score": "61.64824"}
{"text": "19 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for each chrominance component , and .13 values can be used for 4:2:2 subsampled data , 7 for luminance and 6 for chrominance .A central processing unit ( CPU ) might select one predetermined quantizer from a table and write it to a CPU or other controller controlling special purpose JPEG 2000 hardware ( a chip ) for each frame of a motion JPEG 2000 video sequence .", "label": "", "metadata": {}, "score": "61.64824"}
{"text": "The following descriptions relate to implementations or novel ways to take advantage of the flexibility of JPEG 2000 or other coding schemes with similar features .Memory Usage for Low Memory and Fast Burst Access .FIG .2 shows one embodiment of an organization for an image in memory 201 .", "label": "", "metadata": {}, "score": "61.671074"}
{"text": "The following descriptions relate to implementations or novel ways to take advantage of the flexibility of JPEG 2000 or other coding schemes with similar features .Memory Usage for Low Memory and Fast Burst Access .FIG .2 shows one embodiment of an organization for an image in memory 201 .", "label": "", "metadata": {}, "score": "61.671074"}
{"text": "The following descriptions relate to implementations or novel ways to take advantage of the flexibility of JPEG 2000 or other coding schemes with similar features .Memory Usage for Low Memory and Fast Burst Access .FIG .2 shows one embodiment of an organization for an image in memory 201 .", "label": "", "metadata": {}, "score": "61.671074"}
{"text": "Memory 702 may include mass storage that is remotely located from the central processing unit(s ) 704 .The operation of each of these components has been previously described with respect to FIGS . 1 - 5 .[0085 ] The foregoing description , for purpose of explanation , has been described with reference to specific embodiments .", "label": "", "metadata": {}, "score": "61.68136"}
{"text": "Embodiments provide receive path processing .In certain embodiments , the receive path processing is for Layer 4 + ( iSCSI , RDMA ) protocol data units .Cyclic redundancy check may be described as a technique for detecting data transmission errors .", "label": "", "metadata": {}, "score": "61.692192"}
{"text": "If so , processing continues to block 1512 , otherwise , processing continues to block 1514 .In block 1512 , the CRC engine 224 notifies an application program 122 of the successfully received data .In block 1514 , the CRC engine 224 processes an error .", "label": "", "metadata": {}, "score": "61.798683"}
{"text": "Lahive & Cockfield Parent Case Text .REFERENCE TO RELATED APPLICATION .This is a continuation in part of U.S. Pat .No . 4,580,241 ( U.S. Ser .No .467,834 filed Feb. 18 , 1983 ) , for \" Graphic Word Spelling Correction Using Automated Dictionary Comparisons with Phonetic Word Skeletons . \"", "label": "", "metadata": {}, "score": "61.835854"}
{"text": "During this second pass , extra packets from each tile are appended to the codestream as complete tile - parts as space or time allows .If in a fixed - rate application , then only packets within the given rate are appended .", "label": "", "metadata": {}, "score": "61.895973"}
{"text": "During this second pass , extra packets from each tile are appended to the codestream as complete tile - parts as space or time allows .If in a fixed - rate application , then only packets within the given rate are appended .", "label": "", "metadata": {}, "score": "61.895973"}
{"text": "Index 10 bits Difference 4 bits Hyphen Flag 1 bit.sup .Following the header section , each master lexicon entry includes a section representing either one or two differential characters .This section is either eight or sixteen bits in length depending on the remaining number of differential characters .", "label": "", "metadata": {}, "score": "61.908894"}
{"text": "For Chinese opinion lexicon extraction , we have an improvement of 0.0264 over M1 , 0.0244 over M2 , 0.0313 over M3 .Except the general seed words of M1 , seed words of other methods are all domain dependent .Though M2 and M3 pick seed words for each domain actively , they have no significant advantage over the domain independent method LP .", "label": "", "metadata": {}, "score": "61.926876"}
{"text": "Many modifications and variations are possible in view of the above teachings .The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications , to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated .", "label": "", "metadata": {}, "score": "61.99724"}
{"text": "The table 26 consists of a series of 4-byte entries .Each entry contains , in 5-bit compressed character form , the first six characters of the lower collation sequence bound , i.e. , lowest skeleton , of each block .", "label": "", "metadata": {}, "score": "62.01156"}
{"text": "The standard text lexicon may also be user specific .As a concrete example , a voice activated dialing system may contain a standard text lexicon of orthographies for each user or group of users .The standard text lexicons are stored in a machine readable medium as a data base 422 and are indexed using an identifier such as the user 's telephone number .", "label": "", "metadata": {}, "score": "62.039833"}
{"text": "In block 904 , the pre - processing agent 210 sends a peek command to the segment processing engine 230 for a header portion of the next protocol data unit and receives the requested data from the issued peek command .In certain embodiments , the received data is an indication of the location of a Layer 4 + header and/or the actual Layer 4 + header of a protocol data unit .", "label": "", "metadata": {}, "score": "62.06692"}
{"text": "Although four address / length pairs are illustrated , any number may be included in the Receive Buffer instruction .The opcode 1010 provides an instruction type , which in this case is the \" Receive Buffer \" type of instruction .", "label": "", "metadata": {}, "score": "62.09276"}
{"text": "The JPEG2000 standard leaves many choices to implementers .SUMMARY OF THE INVENTION .A method and apparatus for selecting layers for quantization based on sideband information is described .In one embodiment , the method comprises receiving a codestream of compressed image data organized in multiple layers .", "label": "", "metadata": {}, "score": "62.135868"}
{"text": "The Modified Suspect Expression Verification Table .A third portion of the memory element 22 , the modified suspect expression verification table 30 , stores an abbreviated hash codes representing a majority of the expressions in the master lexicon .Each entry of the table represents one or more lexicon entries and contains an eight - bit low - order portion of a hash code returned by the routine FUNCTN .", "label": "", "metadata": {}, "score": "62.2628"}
{"text": "Tile - components comprise all of the samples of a given component in a tile .An image may have multiple components .Each of such components comprises a two - dimensional array of samples .For example , a color image might have red , green and blue components .", "label": "", "metadata": {}, "score": "62.26334"}
{"text": "Tile - components comprise all of the samples of a given component in a tile .An image may have multiple components .Each of such components comprises a two - dimensional array of samples .For example , a color image might have red , green and blue components .", "label": "", "metadata": {}, "score": "62.26334"}
{"text": "Tile - components comprise all of the samples of a given component in a tile .An image may have multiple components .Each of such components comprises a two - dimensional array of samples .For example , a color image might have red , green and blue components .", "label": "", "metadata": {}, "score": "62.26334"}
{"text": "For example , a first mini - lexicon 208 ( e.g. , mini - lexicon A ) having P ( e.g. , 256 ) entries is generated for the first P unique tokens encountered by the mini - lexicon builder 204 as it parses through the documents .", "label": "", "metadata": {}, "score": "62.290154"}
{"text": "The article of manufacture defined in . claim 13 wherein selection of the one or more layers is based on meeting a target rate .An apparatus comprising : . means for receiving a codestream of compressed image data organized in a plurality of layers , wherein each of the plurality of layers comprises coded data that adds visual value to the image ; . means for decompressing non - quantized layers of the codestream .", "label": "", "metadata": {}, "score": "62.33363"}
{"text": "The JPEG 2000 POC , QCD , and QCC markers can have redundant entries .It is as if the codestream were quantized and the markers were not rewritten .For example , the QCD and QCC markers have values for a number of subbands specified by the syntax of the marker .", "label": "", "metadata": {}, "score": "62.411484"}
{"text": "The JPEG 2000 POC , QCD , and QCC markers can have redundant entries .It is as if the codestream were quantized and the markers were not rewritten .For example , the QCD and QCC markers have values for a number of subbands specified by the syntax of the marker .", "label": "", "metadata": {}, "score": "62.411484"}
{"text": "The JPEG 2000 POC , QCD , and QCC markers can have redundant entries .It is as if the codestream were quantized and the markers were not rewritten .For example , the QCD and QCC markers have values for a number of subbands specified by the syntax of the marker .", "label": "", "metadata": {}, "score": "62.411484"}
{"text": "A second pass through the remaining coded data in the buffer is optional .During this second pass , extra packets from each tile are appended to the codestream as complete tile - parts as space or time allows .If in a fixed - rate application , then only packets within the given rate are appended .", "label": "", "metadata": {}, "score": "62.462234"}
{"text": "An additional user input device is cursor control 2023 , such as a mouse , trackball , trackpad , stylus , or cursor direction keys , coupled to bus 2011 for communicating direction information and command selections to processor 2012 , and for controlling cursor movement on display 2021 .", "label": "", "metadata": {}, "score": "62.614956"}
{"text": "An additional user input device is cursor control 2023 , such as a mouse , trackball , trackpad , stylus , or cursor direction keys , coupled to bus 2011 for communicating direction information and command selections to processor 2012 , and for controlling cursor movement on display 2021 .", "label": "", "metadata": {}, "score": "62.614956"}
{"text": "An additional user input device is cursor control 2023 , such as a mouse , trackball , trackpad , stylus , or cursor direction keys , coupled to bus 2011 for communicating direction information and command selections to processor 2012 , and for controlling cursor movement on display 2021 .", "label": "", "metadata": {}, "score": "62.614956"}
{"text": "File Order for Thumbnail , Monitor , Printer , and Full Resolution and Quality .Multiple images at multiple resolutions are important in many image processing situations .Depending on the application , a user may want to select different images of different resolutions .", "label": "", "metadata": {}, "score": "62.73304"}
{"text": "File Order for Thumbnail , Monitor , Printer , and Full Resolution and Quality .Multiple images at multiple resolutions are important in many image processing situations .Depending on the application , a user may want to select different images of different resolutions .", "label": "", "metadata": {}, "score": "62.73304"}
{"text": "File Order for Thumbnail , Monitor , Printer , and Full Resolution and Quality .Multiple images at multiple resolutions are important in many image processing situations .Depending on the application , a user may want to select different images of different resolutions .", "label": "", "metadata": {}, "score": "62.73304"}
{"text": "The packet data structure can handle complex requests .For example , a request which requires the parser to produce a codestream which has a 3-resolution , 2-layer , and 1-component codestream .Clipping After Each Inverse Transform .", "label": "", "metadata": {}, "score": "62.752777"}
{"text": "The packet data structure can handle complex requests .For example , a request which requires the parser to produce a codestream which has a 3-resolution , 2-layer , and 1-component codestream .Clipping After Each Inverse Transform .", "label": "", "metadata": {}, "score": "62.752777"}
{"text": "For Chinese , the accuracy of mutual - reinforcement label propagation increases by 0.0269 and 0.0589 respectively compared to the single propagation and random walks on average .As for the Chinese open - source lexica Tsinghua and HowNet , the accuracy is fairly satisfactory because they are built manually , whereas we extract the opinion lexicon from corpora automatically .", "label": "", "metadata": {}, "score": "62.775562"}
{"text": "25 is a block diagram of a prior art decoding process that includes color management .FIG .26 illustrates one embodiment of a non - preferred camera encoder .FIG .27 illustrates one embodiment of a simpler camera encoder .", "label": "", "metadata": {}, "score": "62.784973"}
{"text": "25 is a block diagram of a prior art decoding process that includes color management .FIG .26 illustrates one embodiment of a non - preferred camera encoder .FIG .27 illustrates one embodiment of a simpler camera encoder .", "label": "", "metadata": {}, "score": "62.784973"}
{"text": "25 is a block diagram of a prior art decoding process that includes color management .FIG .26 illustrates one embodiment of a non - preferred camera encoder .FIG .27 illustrates one embodiment of a simpler camera encoder .", "label": "", "metadata": {}, "score": "62.784973"}
{"text": "Layer 2 is all the data quantized by Q 1 but not quantized by Q 2 .Layer 3 is all the data quantized by Q 2 .Simple Quantization .FIGS .17 and 18 show example quantizers ( label A . . .", "label": "", "metadata": {}, "score": "62.80828"}
{"text": "Layer 2 is all the data quantized by Q 1 but not quantized by Q 2 .Layer 3 is all the data quantized by Q 2 .Simple Quantization .FIGS .17 and 18 show example quantizers ( label A . . .", "label": "", "metadata": {}, "score": "62.80828"}
{"text": "Layer 2 is all the data quantized by Q 1 but not quantized by Q 2 .Layer 3 is all the data quantized by Q 2 .Simple Quantization .FIGS .17 and 18 show example quantizers ( label A . . .", "label": "", "metadata": {}, "score": "62.80828"}
{"text": "If a match is found , an application program 122 is notified of the received data ( e.g. , with a flag set by the CRC engine 224 to notify the pre - processing agent 210 ) , otherwise an error is detected .", "label": "", "metadata": {}, "score": "62.863213"}
{"text": "In certain embodiments , the pre - processing agent 210 pre - processes data segments conforming to Layer 4 + protocols , which will be referred to as protocol segments for ease of reference .For ease of reference , the term \" Layer 4 + protocols \" will be used herein to describe emerging protocols , such as iSCSI and RDMA ( RDMA Consortium , RDMA Protocol Over TCP / IP Networks , Version 1.0 , October 2002 ) .", "label": "", "metadata": {}, "score": "62.923775"}
{"text": "The GTokenIDs for the P distinct tokens are assembled in a list .In some embodiments , the GTokenIDs in the list are sorted by numeric value , with the smallest GTokenIDs at the top of the list .LTokenIDs are then assigned to the GTokenIDs in the list , in accordance with the positions of the GTokenIDs in the list .", "label": "", "metadata": {}, "score": "62.97675"}
{"text": "In one embodiment , when encoding 4:1:1 data , the encoder treats 1 HL , 1 LH and 1 HH coefficients as zero .When encoding 4:2:2 data , the encoder treats 1 HL and 1 HH coefficients as zero .Thus , with all information in the extra subbands quantized to zero , a decoder is able to receive the codestream in a way it expects .", "label": "", "metadata": {}, "score": "63.042595"}
{"text": "In one embodiment , when encoding 4:1:1 data , the encoder treats 1 HL , 1 LH and 1 HH coefficients as zero .When encoding 4:2:2 data , the encoder treats 1 HL and 1 HH coefficients as zero .Thus , with all information in the extra subbands quantized to zero , a decoder is able to receive the codestream in a way it expects .", "label": "", "metadata": {}, "score": "63.042595"}
{"text": "In one embodiment , when encoding 4:1:1 data , the encoder treats 1 HL , 1 LH and 1 HH coefficients as zero .When encoding 4:2:2 data , the encoder treats 1 HL and 1 HH coefficients as zero .Thus , with all information in the extra subbands quantized to zero , a decoder is able to receive the codestream in a way it expects .", "label": "", "metadata": {}, "score": "63.042595"}
{"text": "Just as quantization can change the final decoded samples to lie outside the original bounds , quantization can change the partially transformed wavelet coefficients to lie outside their original bounds .If these coefficients are clipped to their original bounds , distortion will decrease .", "label": "", "metadata": {}, "score": "63.053562"}
{"text": "The method defined in .The method defined in . claim 21 wherein the server comprises a web server .The method defined in .claim 20 , wherein the request includes a command specifying a target progression order as the second progression order .", "label": "", "metadata": {}, "score": "63.06235"}
{"text": "The method defined in .The method defined in . claim 21 wherein the server comprises a web server .The method defined in .claim 20 , wherein the request includes a command specifying a target progression order as the second progression order .", "label": "", "metadata": {}, "score": "63.06235"}
{"text": "A machine readable storage medium as defined in claim 32 , wherein the orthographies in the standard text lexicon form a sub - set of the orthographies in the dictionary .A machine readable storage medium as defined in claim 32 , wherein the computer includes a plurality of standard text lexicons .", "label": "", "metadata": {}, "score": "63.09246"}
{"text": "Libraries of this sort can be found for at least two popular scripting languages , Perl and Python .For Python , the authors have developed a module for processing Toolbox data , which is distributed as part of a larger suite of tools known as the Natural Language Toolkit ( NLTK ) .", "label": "", "metadata": {}, "score": "63.108234"}
{"text": "Typically , these pixels are clipped to the original range so that further image processing or display devices can use the original bit depth .For example , an eight bit image has pixel values between 0 and 255 , inclusive .", "label": "", "metadata": {}, "score": "63.10923"}
{"text": "Typically , these pixels are clipped to the original range so that further image processing or display devices can use the original bit depth .For example , an eight bit image has pixel values between 0 and 255 , inclusive .", "label": "", "metadata": {}, "score": "63.10923"}
{"text": "23 illustrates another example in which transform has 5 levels and the data is divided up into layers 0 - 3 .Layer 0 corresponds to the thumbnail version , layers 0 - 1 correspond to the monitor ( or screen ) resolution , layers 0 - 2 correspond to the print resolution , and layers 0 - 3 correspond to lossless .", "label": "", "metadata": {}, "score": "63.122707"}
{"text": "With respect to each packet header , the end of a packet header is rounded to a byte boundary .Therefore , there may be 1 to 7 bits that may be available for sending extra information at times when rounding would have been necessary .", "label": "", "metadata": {}, "score": "63.175526"}
{"text": "With respect to each packet header , the end of a packet header is rounded to a byte boundary .Therefore , there may be 1 to 7 bits that may be available for sending extra information at times when rounding would have been necessary .", "label": "", "metadata": {}, "score": "63.175526"}
{"text": "With respect to each packet header , the end of a packet header is rounded to a byte boundary .Therefore , there may be 1 to 7 bits that may be available for sending extra information at times when rounding would have been necessary .", "label": "", "metadata": {}, "score": "63.175526"}
{"text": "The method defined in . claim 13 wherein the predetermined intermediate progression order comprises a Layer - resolution - component - position progression of JPEG 2000 .The method defined in .claim 14 when the first progression order is one of the following group of JPEG 2000 progression orders : resolution - layer - component - position progression ; resolution - position - component - layer progression ; component - position - resolution - layer progression ; and position - component - resolution - layer progression .", "label": "", "metadata": {}, "score": "63.238327"}
{"text": "The method defined in . claim 13 wherein the predetermined intermediate progression order comprises a Layer - resolution - component - position progression of JPEG 2000 .The method defined in .claim 14 when the first progression order is one of the following group of JPEG 2000 progression orders : resolution - layer - component - position progression ; resolution - position - component - layer progression ; component - position - resolution - layer progression ; and position - component - resolution - layer progression .", "label": "", "metadata": {}, "score": "63.238327"}
{"text": "The present invention also relates to apparatus for performing the operations herein .This apparatus may be specially constructed for the required purposes , or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer .", "label": "", "metadata": {}, "score": "63.244865"}
{"text": "The present invention also relates to apparatus for performing the operations herein .This apparatus may be specially constructed for the required purposes , or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer .", "label": "", "metadata": {}, "score": "63.244865"}
{"text": "The present invention also relates to apparatus for performing the operations herein .This apparatus may be specially constructed for the required purposes , or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer .", "label": "", "metadata": {}, "score": "63.244865"}
{"text": "20 , computer system 2000 may comprise an exemplary client 150 or server 100 computer system .Computer system 2000 comprises a communication mechanism or bus 2011 for communicating information , and a processor 2012 coupled with bus 2011 for processing information .", "label": "", "metadata": {}, "score": "63.25272"}
{"text": "20 , computer system 2000 may comprise an exemplary client 150 or server 100 computer system .Computer system 2000 comprises a communication mechanism or bus 2011 for communicating information , and a processor 2012 coupled with bus 2011 for processing information .", "label": "", "metadata": {}, "score": "63.25272"}
{"text": "20 , computer system 2000 may comprise an exemplary client 150 or server 100 computer system .Computer system 2000 comprises a communication mechanism or bus 2011 for communicating information , and a processor 2012 coupled with bus 2011 for processing information .", "label": "", "metadata": {}, "score": "63.25272"}
{"text": "We construct a graph where two nodes are linked if they are semantically related , and the polarity estimate problem is formulated as a form of propagation on a graph where a node\u20acs label propagates to neighboring nodes according to their semantic similarity .", "label": "", "metadata": {}, "score": "63.292984"}
{"text": "Programs in the storage 108 may be loaded into the memory 106 and executed by the CPU 104 .An input device 150 is used to provide user input to the CPU 104 , and may include a keyboard , mouse , pen - stylus , microphone , touch sensitive display screen , or any other activation or input mechanism known in the art .", "label": "", "metadata": {}, "score": "63.318996"}
{"text": "Once the English opinion lexicon is translated into Chinese , we have more polarity information to modify the original Chinese opinion lexicon .In our work , a parameter is adopted to prevent the polarity modification from hypercorrection .Conversely , the polarity information of Chinese opinion words can be transferred to English too .", "label": "", "metadata": {}, "score": "63.364117"}
{"text": "An 8-bit section includes the following information : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "63.460777"}
{"text": "Natural Language Processing in Python .Bird , Steven , and Gary Simons .Seven dimensions of portability for language documentation and description .Language 79(3):557 - 82 .Firchow , Irwin B. 1974 .Rotokas songs .Ukarumpa : Summer Institute of Linguistics .", "label": "", "metadata": {}, "score": "63.61448"}
{"text": "12 illustrates a bell - shaped curve of a range of values that are quantized to a particular value .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization to reduce flicker .", "label": "", "metadata": {}, "score": "63.73649"}
{"text": "12 illustrates a bell - shaped curve of a range of values that are quantized to a particular value .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization to reduce flicker .", "label": "", "metadata": {}, "score": "63.73649"}
{"text": "12 illustrates a bell - shaped curve of a range of values that are quantized to a particular value .FIG .13 is a flow diagram of one embodiment of a process to reduce flicker .FIG .14 illustrates one embodiment of an encoder ( or portion thereof ) that performs the quantization to reduce flicker .", "label": "", "metadata": {}, "score": "63.73649"}
{"text": "FIG .10 illustrates a format of a Receive Buffer instruction 1000 in accordance with certain embodiments .The Receive Buffer instruction 1000 includes an opcode 1010 , flags 1012 , a skip length 1014 , and a list of address / length pairs 1016 , 1018 , 1020 , . . .", "label": "", "metadata": {}, "score": "63.74246"}
{"text": "Using Quantizers to Divide Things into Layers .Table 10 shows 16 example quantizers .Quantizer 15 is lossless .Quantizer 8 is the same as FIG .19 .These can be used divide the subband bitplanes into layers .Layer 0 contains all data not quantized away by quantizer 0 .", "label": "", "metadata": {}, "score": "63.854"}
{"text": "Layer 2 may be output on a second pass within fixed - time or fixed - rate requirements while achieving similar distortion over all the components .Also less memory is required for buffering .The criterion for selecting which packets go into the first set of tile - parts can be similar to any other rate control algorithm .", "label": "", "metadata": {}, "score": "63.874714"}
{"text": "In JPEG 2000 , layers are designed to contain increments to quality .Thus , selecting a distortion can mean selecting the number of layers to use for each code block or tile .A complete description of this type of rate control is in , David Taubman , \" High Performance Scalable Image Compression with EBCOT , \" IEEE Transactions on Image Processing .", "label": "", "metadata": {}, "score": "63.99524"}
{"text": "In JPEG 2000 , layers are designed to contain increments to quality .Thus , selecting a distortion can mean selecting the number of layers to use for each code block or tile .A complete description of this type of rate control is in , David Taubman , \" High Performance Scalable Image Compression with EBCOT , \" IEEE Transactions on Image Processing .", "label": "", "metadata": {}, "score": "63.99524"}
{"text": "Alternately , the GTokenIDs in each mini - lexicon may be treated as a list that is first delta encoded , and then the resulting delta values are encoded using a variable length encoding scheme .Mini -Lexicon Builder .[ 0037 ]", "label": "", "metadata": {}, "score": "64.003845"}
{"text": "Every remaining \" c \" is rewritten as \" k \" .Every \" ks \" sequence is rewritten as \" x \" .Sequences of \" xion \" are rewritten as \" xhon \" .Position restriction : This operation does not apply to word - initial sequences .", "label": "", "metadata": {}, "score": "64.11738"}
{"text": "An apparatus according to claim 11 wherein said database verification means comprises common expression verification means of identifying said suspect expression as being a commonly used linguistic expression .An apparatus according to claim 15 wherein said common expression verification means comprises means for generating a first hash code representative of said suspect expression .", "label": "", "metadata": {}, "score": "64.14757"}
{"text": "This addressing information is indicated by way of pointer element 44A. Similarly , master lexicon entry 24E contains addressing information directed to common pattern section entry 28D , as indicated by pointer element 44B.The master lexicon entry 24E also contains addressing information directed to common character sequence entry 28K.", "label": "", "metadata": {}, "score": "64.20099"}
{"text": "The scale of Chinese opinion lexicon is larger than the scale of English opinion lexicon , because the size of Chinese unlabeled data is ten times the one of English dataset .Tables 2 - 3 show the accuracy of opinion lexicon extracted by mutual - reinforcement label propagation and the baseline methods .", "label": "", "metadata": {}, "score": "64.32927"}
{"text": "[ 0061 ] In some embodiments , the inverse index 408 provides a list of positions which can be used as an index into the first stage look - up table 406 .When the query contains multiple terms , multiple lists of positions are produced by the inverse index 408 .", "label": "", "metadata": {}, "score": "64.36862"}
{"text": "Citation : Lin Z , Tan S , Liu Y , Cheng X , Xu X ( 2013 ) Cross - Language Opinion Lexicon Extraction Using Mutual - Reinforcement Label Propagation .PLoS ONE 8(11 ) : e79294 .doi:10.1371/journal.pone.0079294 .", "label": "", "metadata": {}, "score": "64.46764"}
{"text": "The standard text lexicon is a data structure that contains orthographies that are likely to be correct choices thus their inclusion in the list passed to the re - score stage is likely to augment the recognition accuracy .The standard text lexicon 414 contains a frequently used sub - set of the orthographies in the main dictionary 403 .", "label": "", "metadata": {}, "score": "64.506096"}
{"text": "For example , using the structure of .FIG .4B , 8 lines would be necessary to create the L2 coefficients from the L3 coefficients , 4 extra lines would be necessary to create the L1 coefficients from the L2 coefficients and 2 extra lines would be necessary to create the input tile from the L1 coefficients .", "label": "", "metadata": {}, "score": "64.5441"}
{"text": "For example , using the structure of .FIG .4B , 8 lines would be necessary to create the L2 coefficients from the L3 coefficients , 4 extra lines would be necessary to create the L1 coefficients from the L2 coefficients and 2 extra lines would be necessary to create the input tile from the L1 coefficients .", "label": "", "metadata": {}, "score": "64.5441"}
{"text": "For example , using the structure of .FIG .4B , 8 lines would be necessary to create the L2 coefficients from the L3 coefficients , 4 extra lines would be necessary to create the L1 coefficients from the L2 coefficients and 2 extra lines would be necessary to create the input tile from the L1 coefficients .", "label": "", "metadata": {}, "score": "64.5441"}
{"text": "claim 1 wherein the plurality of layers are predefined with respect to a viewing distance , and wherein the plurality of layers are arranged from a highest frequency and lowest resolution to a lowest frequency and highest resolution manner .The method of .", "label": "", "metadata": {}, "score": "64.64138"}
{"text": "Some marker segments , packet headers and packets are padded out to the nearest byte .Examples of the JPEG 2000 marker segments include PPM , PPT , PLM , and PLT .In addition , some marker segments can be longer than they need to be including QCD , QCC , and POC .", "label": "", "metadata": {}, "score": "64.64664"}
{"text": "Some marker segments , packet headers and packets are padded out to the nearest byte .Examples of the JPEG 2000 marker segments include PPM , PPT , PLM , and PLT .In addition , some marker segments can be longer than they need to be including QCD , QCC , and POC .", "label": "", "metadata": {}, "score": "64.64664"}
{"text": "Some marker segments , packet headers and packets are padded out to the nearest byte .Examples of the JPEG 2000 marker segments include PPM , PPT , PLM , and PLT .In addition , some marker segments can be longer than they need to be including QCD , QCC , and POC .", "label": "", "metadata": {}, "score": "64.64664"}
{"text": "[0036 ] In the embodiments described below , the tokenspace repository is populated with fixed length LTokenIDs , rather than the variable - length GTokenIDs .However , mapping the LTokenIDs in the tokenspace repository back to the original tokens ( which are also of variable length , of course ) requires the storage of a large number of \" mini - lexicons \" , and the content of the mini - lexicons comprises GTokenIDs .", "label": "", "metadata": {}, "score": "64.67169"}
{"text": "7 illustrates operations performed by the segment processing engine 230 for protocol data unit detection ( block 604 ) in accordance with certain embodiments .For example , if the length field starts at an offset of four bytes and has a width of five bytes , then the value is extracted from bytes four , five , six , seven , and eight .", "label": "", "metadata": {}, "score": "64.735596"}
{"text": "The exemplary Verilog below converts a single quantization value \" q \" into seven quantizers ( number of LSBs to truncate ) .The variable q - 1_HH is used for level 1 HH coefficients , the variable q - 1_H is used for level 1 HL and LH coefficients , etc . assign q_2H . 0 : temp_2H ; . assign q_3HH . 0 : temp_3HH ; . assign q_3H . 0 : temp_3H ; . assign q_3LL . 0 : temp_3LL ; . endmodule .", "label": "", "metadata": {}, "score": "64.75798"}
{"text": "The closeness may be determined by some threshold .The threshold may be user set or adaptive based on some criteria .The threshold could be different based on the subband and , perhaps , on the persistance of the particular value ( number of frames that this coefficient is close ) .", "label": "", "metadata": {}, "score": "64.78695"}
{"text": "The closeness may be determined by some threshold .The threshold may be user set or adaptive based on some criteria .The threshold could be different based on the subband and , perhaps , on the persistance of the particular value ( number of frames that this coefficient is close ) .", "label": "", "metadata": {}, "score": "64.78695"}
{"text": "The closeness may be determined by some threshold .The threshold may be user set or adaptive based on some criteria .The threshold could be different based on the subband and , perhaps , on the persistance of the particular value ( number of frames that this coefficient is close ) .", "label": "", "metadata": {}, "score": "64.78695"}
{"text": "Each lexicon can be assigned a specific identifier that is unique , such as the telephone number of the user .In this example , a single user independent standard text lexicon may include frequently requested city pairs or , alternatively , all valid city pairs served by a particular airline , each pair being associated with a certain probability of occurrence .", "label": "", "metadata": {}, "score": "64.801956"}
{"text": "The decoder defined in .claim 6 wherein the quantization logic selects the one or more layers is based on meeting a target rate .The decoder defined in .claim 6 wherein the plurality of layers are predefined based on resolution so that selecting the one or more layers is based on meeting a target distortion .", "label": "", "metadata": {}, "score": "64.846146"}
{"text": "Embodiments address this by introducing a \" one - behind \" storage area 228 ( e.g. , a cache ) for the CRC data structure 226 inside of the CRC engine 224 .The storage area 228 stores a partial CRC digest .", "label": "", "metadata": {}, "score": "64.90964"}
{"text": "In block 608 , the segment processing engine 230 determines whether a peek command has been received .If so , processing continues to block 610 , otherwise , processing continues to block 614 .A peek command is a command requesting that the segment processing engine 230 \" look ahead \" into incoming transport layer segments and locate particular data .", "label": "", "metadata": {}, "score": "64.969215"}
{"text": "That is , since a protocol data unit may have multiple protocol segments embedded within multiple transport layer segments , the CRC engine 224 determines whether it now has received a complete protocol data unit .If so , processing continues to block 1508 , otherwise , processing continues to block 1516 .", "label": "", "metadata": {}, "score": "65.05337"}
{"text": "28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .The process is performed by processing logic , which may comprise hardware ( e.g. , circuitry , dedicated logic , etc . ) , software ( such as that which runs on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "65.16332"}
{"text": "claim 1 wherein the parser : . determines where packets exist in the codestream based on at least one marker ; . creates a structure specifying components in each packet ; and .reorders packets in the codestream using the structure to map the first progression order to the second progression order .", "label": "", "metadata": {}, "score": "65.18451"}
{"text": "There are also a number of useful books in print ( e.g. , Lutz and Ascher 2004 , Mertz 2003 ) .Here we will illustrate the workings of NLTK using fairly basic Python constructs so that even readers unfamiliar with the language can follow the discussion .", "label": "", "metadata": {}, "score": "65.269966"}
{"text": "As a result , we obtain an augmented candidate list that can be passed on along with the N top choices from the dictionary to the re - score stage 406 ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "65.292145"}
{"text": "One of the functions F may include applying a wavelet transform on pairs of lines .Also another function F may be a DC level shift , multiple component transform .Such a process would be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "65.46971"}
{"text": "One of the functions F may include applying a wavelet transform on pairs of lines .Also another function F may be a DC level shift , multiple component transform .Such a process would be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "65.46971"}
{"text": "One of the functions F may include applying a wavelet transform on pairs of lines .Also another function F may be a DC level shift , multiple component transform .Such a process would be performed by processing logic that may comprise hardware ( e.g. , dedicated logic , circuitry , etc . ) , software ( such as is run on a general purpose computer system or a dedicated machine ) , or a combination of both .", "label": "", "metadata": {}, "score": "65.46971"}
{"text": "In one embodiment the region lexicons 830 and block offsets 834 are stored in a table 808 or equivalent data structure that is indexed in accordance with the starting positions of the regions 820 divided by the fixed region size .From another viewpoint , each region 820 is assigned a Region Number comprising its starting position divided by the fixed region size , and the data structure(s ) in which the region lexicons 830 and block offsets 834 are stored are indexed by Region Number .", "label": "", "metadata": {}, "score": "65.5849"}
{"text": "The hash code is computed from the words character content by the routine FUNCTN .This routine operates according to a standard alphanumeric hash - generating sequence to produce a 14-bit hash code and a 12-bit index .", "label": "", "metadata": {}, "score": "65.60647"}
{"text": "FIELD OF THE INVENTION .This invention relates to a method and an apparatus for automatically performing desired actions in response to spoken requests .It is applicable to speech recognition systems , specifically to connected word recognition systems and may be used to allow voice activated dialling ( VAD ) , credit card number identification , flight information and other services .", "label": "", "metadata": {}, "score": "65.62779"}
{"text": "FIG .2 , only the \" tile height \" raster lines , or a band of the image , are in memory 201 , not the whole image .Thus , the amount of an image in memory 201 is equal to the image width multiplied by the tile height .", "label": "", "metadata": {}, "score": "65.63498"}
{"text": "FIG .2 , only the \" tile height \" raster lines , or a band of the image , are in memory 201 , not the whole image .Thus , the amount of an image in memory 201 is equal to the image width multiplied by the tile height .", "label": "", "metadata": {}, "score": "65.63498"}
{"text": "FIG .2 , only the \" tile height \" raster lines , or a band of the image , are in memory 201 , not the whole image .Thus , the amount of an image in memory 201 is equal to the image width multiplied by the tile height .", "label": "", "metadata": {}, "score": "65.63498"}
{"text": "( c ) Length field multiplier ( also referred to as \" M \" ) .( d ) Length field adder ( also referred to as \" A \" ) .( e ) Order of multiply / add ( also referred to as \" D \" ) .", "label": "", "metadata": {}, "score": "65.65506"}
{"text": "Note that each unique token in the tokenized documents may be associated with more than one mini - lexicon 208 if the token occurs in more than one position range .In one embodiment , an average document has approximately 1100 tokens and an average mini - lexicon 208 spans around 1000 tokens .", "label": "", "metadata": {}, "score": "65.73973"}
{"text": "Simplified Colorspace Handling .A typical decoding process including color management is shown in FIG .25 .Referring to .FIG .25 , a file with a file format ( e.g. , a file format described in the JPEG 2000 standard ) containing a restricted ICC profile is provided to a decoding device .", "label": "", "metadata": {}, "score": "65.75366"}
{"text": "In a preferred embodiment these sections , excluding the master lexicon 24 , are maintained in RAM .Typically , only a portion of the lexicon 24 resides in RAM at any one time .The content and access of these sections are discussed below .", "label": "", "metadata": {}, "score": "65.79175"}
{"text": "Although the JPEG 2000 standard is a decoding standard , the JPEG 2000 specifies encoding and decoding by defining what a decoder must do .Under the JPEG 2000 Standard , each image is divided into one or more rectangular tiles .", "label": "", "metadata": {}, "score": "65.80838"}
{"text": "Although the JPEG 2000 standard is a decoding standard , the JPEG 2000 specifies encoding and decoding by defining what a decoder must do .Under the JPEG 2000 Standard , each image is divided into one or more rectangular tiles .", "label": "", "metadata": {}, "score": "65.80838"}
{"text": "Although the JPEG 2000 standard is a decoding standard , the JPEG 2000 specifies encoding and decoding by defining what a decoder must do .Under the JPEG 2000 Standard , each image is divided into one or more rectangular tiles .", "label": "", "metadata": {}, "score": "65.80838"}
{"text": "In block 1604 , the segment processing engine 230 forwards the current transport layer segment to the CRC engine 224 with the partial CRC digest and the residual data for the last transport layer segment .In block 1606 , the segment processing engine 230 determines whether the current transport layer segment is on a same flow as the last transport layer segment .", "label": "", "metadata": {}, "score": "65.854294"}
{"text": "A complete description of this type of rate control is in , David Taubman , \" High Performance Scalable Image Compression with EBCOT , \" IEEE Transactions on Image Processing .There are several disadvantages to this process .One disadvantage is that a buffer memory for the entire codestream is required .", "label": "", "metadata": {}, "score": "65.92436"}
{"text": "Embodiments perform the cyclic redundancy check in a manner that is efficient on storage usage as well as performance .On each TCP connection , a CRC data structure 226 is maintained to calculate a cyclic redundancy check digest across a transport layer segment .", "label": "", "metadata": {}, "score": "65.92831"}
{"text": "The first 4 packets belong on 0 , the next 4 packets to resolution 1 , and so on .Data Hiding ( Sideband Information ) in JPEG 2000 Coding .Bit hiding allows sideband information to be transmitted without increasing the file size .", "label": "", "metadata": {}, "score": "66.048676"}
{"text": "The first 4 packets belong on 0 , the next 4 packets to resolution 1 , and so on .Data Hiding ( Sideband Information ) in JPEG 2000 Coding .Bit hiding allows sideband information to be transmitted without increasing the file size .", "label": "", "metadata": {}, "score": "66.048676"}
{"text": "In some embodiments , a list of information is received by the preprocessor 302 which orders the information for efficient encoding .The preprocessor 302 may order the data into a monotonic sequence using one or more sorting algorithms .For example , if a set of integers are sorted by value , then adjacent integers will be close in magnitude , thus enabling the delta encoder 304 to generate delta values that are small valued integers for encoding .", "label": "", "metadata": {}, "score": "66.1328"}
{"text": "The line offset from the LL row to the next LL row for level 1 ( e.g. , the distance from row 312 to row 314 in .FIG .3B ) is twice the tile width ( since each coefficient row is from an area corresponding to two lines ) .", "label": "", "metadata": {}, "score": "66.1566"}
{"text": "The line offset from the LL row to the next LL row for level 1 ( e.g. , the distance from row 312 to row 314 in .FIG .3B ) is twice the tile width ( since each coefficient row is from an area corresponding to two lines ) .", "label": "", "metadata": {}, "score": "66.1566"}
{"text": "Engineering Innovation : Voyage of Discovery .IEEE 1997 Canadian Conference on St. Johns , NFLD ., Canada May 25 - 28 , 1997 , New York , NY .( pp .500 - 503 ) , XP010235053 .Westernick , et al . , \" Proceedings : ICASSP 87 \" , 1987 International Conference on Acoustics , Speech , and Signal Processing , Apr. 6 , 7 , 8 , 9 , 1987 , vol .", "label": "", "metadata": {}, "score": "66.19589"}
{"text": "By pruning the low - weight edges , the performance of polarity propagation can be improved because some errors can be avoided .Figure 7 and Figure 8 show the influence of parameter on label propagation algorithm based on top - k sub - graph .", "label": "", "metadata": {}, "score": "66.33696"}
{"text": "A camera will typically write the same profile for all images , so ICC B is computed offline , and copied into each output file .Coding 4:2:2 and 4:1:1 Data as 4:4:4 Data with Quantization .The JPEG 2000 standard is typically used to handling data in a 4:4:4 format .", "label": "", "metadata": {}, "score": "66.449066"}
{"text": "A camera will typically write the same profile for all images , so ICC B is computed offline , and copied into each output file .Coding 4:2:2 and 4:1:1 Data as 4:4:4 Data with Quantization .The JPEG 2000 standard is typically used to handling data in a 4:4:4 format .", "label": "", "metadata": {}, "score": "66.449066"}
{"text": "A camera will typically write the same profile for all images , so ICC B is computed offline , and copied into each output file .Coding 4:2:2 and 4:1:1 Data as 4:4:4 Data with Quantization .The JPEG 2000 standard is typically used to handling data in a 4:4:4 format .", "label": "", "metadata": {}, "score": "66.449066"}
{"text": "This process eliminates the requirement for temporary buffering of in - order transport layer segments .Embodiments calculate a cyclic redundancy check ( e.g. , CRC-32C ) digest while the data is being transferred to the application buffer .Calculating the CRC-32C digest is difficult when payload for a protocol data unit associated with each transport layer segment is transferred as soon as the transport layer segment arrives .", "label": "", "metadata": {}, "score": "66.54512"}
{"text": "In step 274 , the process determines whether a disk error occurred in the identification step .If so , an error message is returned to the calling routine .If the process failed to identify matching skeletal expressions , the process returns to the C610 calling sequence ; see steps 274 - 276 .", "label": "", "metadata": {}, "score": "66.62846"}
{"text": "The article of manufacture defined in . claim 13 wherein the sideband information is stored in a marker segment of the codestream .The article of manufacture defined in .claim 14 wherein the marker segment comprises a comment marker .The article of manufacture defined in .", "label": "", "metadata": {}, "score": "66.64154"}
{"text": "13 disappears in the \" AFTER \" case .FIG .15 illustrates operations performed by the CRC engine 224 in accordance with certain embodiments .Control begins at block 1500 with the CRC engine 224 receiving a transport layer segment .", "label": "", "metadata": {}, "score": "66.73089"}
{"text": "The improvements show the utility of our approach in practical sentiment classification application .Compared to Hownet which is a high - quality public resource maintained by many people , the performance of our method is close to the method based on Hownet .", "label": "", "metadata": {}, "score": "66.88368"}
{"text": "International sentiment analysis for news and blogs .In Proceedings of the International Conference on Weblogs and Social Media ( ICWSM ) .Turney PD , Littman ML ( 2003 ) Measuring praise and criticism : Inference of semantic orientation from association .", "label": "", "metadata": {}, "score": "66.908646"}
{"text": "3D-3F illustrate the corresponding inverse transform memory usage in which additional lines store the results of applying an inverse transform and those additional lines are in the memory behind the direction the inverse transform is being performed .FIG .4A shows one embodiment of a single memory where the input and the various levels can be stored during application of a forward transform .", "label": "", "metadata": {}, "score": "66.95241"}
{"text": "Note that no lines are skipped when storing the coefficients .In one embodiment in which a 256\u00d7256 tile is being processed , the extra 5 lines at the bottom of storage area 430 , two lines 421 and approximately 4.75 lines 422 are used to accommodate storage area 450 .", "label": "", "metadata": {}, "score": "66.97972"}
{"text": "Note that no lines are skipped when storing the coefficients .In one embodiment in which a 256\u00d7256 tile is being processed , the extra 5 lines at the bottom of storage area 430 , two lines 421 and approximately 4.75 lines 422 are used to accommodate storage area 450 .", "label": "", "metadata": {}, "score": "66.97972"}
{"text": "Note that no lines are skipped when storing the coefficients .In one embodiment in which a 256\u00d7256 tile is being processed , the extra 5 lines at the bottom of storage area 430 , two lines 421 and approximately 4.75 lines 422 are used to accommodate storage area 450 .", "label": "", "metadata": {}, "score": "66.97972"}
{"text": "No .10/917,745 , entitled \" System and Method For Encoding And Decoding Variable - Length Data , \" referenced earlier in this document .[ 0055 ] Referring to FIGS .9A and 9B , in one embodiment the encoding system 810 encodes each block 822 of tokens as follows .", "label": "", "metadata": {}, "score": "66.98219"}
{"text": "( Note that there are two rows between rows 341 and 342 that are wasted space . )The additional lines are preferably behind the direction the wavelet transform is being applied to the information in the memory .For example , the results of applying a wavelet transform to input rows 310 and 311 are the coefficients in portions of rows 312 and 313 of L1 coefficients ( 302 ) .", "label": "", "metadata": {}, "score": "67.00949"}
{"text": "Thus , the \" article of manufacture \" may comprise the medium in which the code is embodied .Additionally , the \" article of manufacture \" may comprise a combination of hardware and software components in which the code is embodied , processed , and executed .", "label": "", "metadata": {}, "score": "67.076996"}
{"text": "The resulting sorted list of unique tokens is then divided into bands .For instance , the top band , Band 0 , may comprise the top 255 or 256 tokens ( i.e. , those with the highest frequency counts ) .", "label": "", "metadata": {}, "score": "67.15505"}
{"text": "19 .These can be used divide the subband bitplanes into layers .Layer 0 contains all data not quantized away by quantizer 0 .This would be luminance data only : all of 3LL ; all but 4 bitplanes of 2HL , 2LH , 3HL , 3LH and 3HH ; all but 5 bitplanes of 2HH and all but 6 bitplanes of 1HL and 1LH .", "label": "", "metadata": {}, "score": "67.18174"}
{"text": "19 .These can be used divide the subband bitplanes into layers .Layer 0 contains all data not quantized away by quantizer 0 .This would be luminance data only : all of 3LL ; all but 4 bitplanes of 2HL , 2LH , 3HL , 3LH and 3HH ; all but 5 bitplanes of 2HH and all but 6 bitplanes of 1HL and 1LH .", "label": "", "metadata": {}, "score": "67.18174"}
{"text": "THE STRENGTHS AND WEAKNESSES OF TOOLBOX .Toolbox is a mature program that is very full - featured .Two major strengths of the program are that : .Its data format is very flexible .It is possible to use Toolbox to store all kinds of data that the developers never envisioned .", "label": "", "metadata": {}, "score": "67.20008"}
{"text": "2 or 3 . 3HH .3HL , 3LH .Additionally chrominance may be quantized more heavily than luminance .Sharp text without ringing artifacts is more desirable than exact gray value for text / background .That is , if a gray level is supposed to be at 50 % ( for example ) , and is instead at 60 % , it is often not visually objectionable if the image is of text .", "label": "", "metadata": {}, "score": "67.20354"}
{"text": "[ 0063 ] FIG .5 is a block diagram of an embodiment of a multi - stage query processing system 500 for use with a tokenspace repository 524 .In some embodiments , the query processing system 500 includes four stages of query processing and relevancy score generation , including a first stage query processor 510 , a second stage query processor 514 , a third stage query processor 518 and a fourth stage query processor 520 .", "label": "", "metadata": {}, "score": "67.31142"}
{"text": "FIG .28 , processing logic applies a first level inverse transform to coefficients ( processing block 2801 ) .Thereafter , processing logic clips the partially transformed coefficients to a predetermined range ( processing block 2802 ) .Next , processing logic applies a first level inverse transform to the clipped coefficients ( processing block 2803 ) and clips the partially transformed coefficients to a predetermined range ( processing block 2804 ) , which is different than the range in processing block 2802 .", "label": "", "metadata": {}, "score": "67.46583"}
{"text": "Because rows of coefficients are stored together in memory , rows may be accessed efficiently when stored in cache , burst accessible memories or memories that are wider than one coefficient .FIGS .3A - C show a transform memory organization for various levels depicting conceptually how coefficients may be stored .", "label": "", "metadata": {}, "score": "67.469086"}
{"text": "Because rows of coefficients are stored together in memory , rows may be accessed efficiently when stored in cache , burst accessible memories or memories that are wider than one coefficient .FIGS .3A - C show a transform memory organization for various levels depicting conceptually how coefficients may be stored .", "label": "", "metadata": {}, "score": "67.469086"}
{"text": "Because rows of coefficients are stored together in memory , rows may be accessed efficiently when stored in cache , burst accessible memories or memories that are wider than one coefficient .FIGS .3A - C show a transform memory organization for various levels depicting conceptually how coefficients may be stored .", "label": "", "metadata": {}, "score": "67.469086"}
{"text": "In some embodiments , no packets from layer 6 would be included .In other embodiments , some packets from layer 6 would be included and others would be replaced by zero packets so that the total amount of layer 6 data was approximately 250,000 bytes .", "label": "", "metadata": {}, "score": "67.49574"}
{"text": "FIG .12 illustrates an interaction of a segment processing engine 230 and the CRC engine 224 in accordance with certain embodiments .The segment processing engine 230 is responsible for pushing the next transport layer segment to the CRC engine 224 for CRC digest calculation .", "label": "", "metadata": {}, "score": "67.536415"}
{"text": "For example , the results of applying a wavelet transform to input rows 310 and 311 are the coefficients in portions of rows 312 and 313 of L1 coefficients ( 302 ) .Note that the level 1 coefficients from the first two input lines are stored in two extra rows at the top of the memory with the remaining level 1 coefficients being written into the locations storing the data of input tile 301 to reuse the memory .", "label": "", "metadata": {}, "score": "67.54715"}
{"text": "For example , the results of applying a wavelet transform to input rows 310 and 311 are the coefficients in portions of rows 312 and 313 of L1 coefficients ( 302 ) .Note that the level 1 coefficients from the first two input lines are stored in two extra rows at the top of the memory with the remaining level 1 coefficients being written into the locations storing the data of input tile 301 to reuse the memory .", "label": "", "metadata": {}, "score": "67.54715"}
{"text": "For a more in - depth tutorial , consult the chapter Accessing and Analyzing Linguistic Field Data from the forthcoming book Natural language processing in Python .There is a mailing list for NLTK users , where general questions can be posted : nltk - devel .", "label": "", "metadata": {}, "score": "67.567856"}
{"text": "The Progression order change ( POC ) marker describes the bounds and progression order for any progression order other than that specified in the COD marker segments in the codestream .The Packet Length Main Header ( PLM ) indicates a list of packet lengths in tile - parts for every tile part in order and the Packet Length , Tile - part header ( PLT ) indicates tile packet lengths in a tile - part and indicates where the data is in the codestream .", "label": "", "metadata": {}, "score": "67.57042"}
{"text": "The Progression order change ( POC ) marker describes the bounds and progression order for any progression order other than that specified in the COD marker segments in the codestream .The Packet Length Main Header ( PLM ) indicates a list of packet lengths in tile - parts for every tile part in order and the Packet Length , Tile - part header ( PLT ) indicates tile packet lengths in a tile - part and indicates where the data is in the codestream .", "label": "", "metadata": {}, "score": "67.57042"}
{"text": "The Progression order change ( POC ) marker describes the bounds and progression order for any progression order other than that specified in the COD marker segments in the codestream .The Packet Length Main Header ( PLM ) indicates a list of packet lengths in tile - parts for every tile part in order and the Packet Length , Tile - part header ( PLT ) indicates tile packet lengths in a tile - part and indicates where the data is in the codestream .", "label": "", "metadata": {}, "score": "67.57042"}
{"text": "Certain of the protocols ( e.g. , RDMA ) may be tied with the transport layer ( i.e. , Layer 4 ) protocol ( e.g. , TCP ) .In certain embodiments , the segment processing engine 230 processes data segments ( e.g. , TCP segments ) , which will be referred to as \" transport layer segments \" for ease of reference .", "label": "", "metadata": {}, "score": "67.5885"}
{"text": "The method defined in .claim 4 further comprising specifying , using one or more COM markers , a number of bytes for each one of resolution and a rate across an entire image .The method defined in .claim 4 further comprising specifying using one or more COM markers a relative number of bytes for each additional layer .", "label": "", "metadata": {}, "score": "67.711136"}
{"text": "A 16-bit header includes the following information : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "67.75258"}
{"text": "In an exemplary embodiment , the maximum lexicon size is 64 tokens , but any other appropriate size limit may be used in other embodiments .As will be described next , the lexicon 830 is used as a context for encoding each of the blocks 822 of the respective region 820 , enabling a highly compressed representation of the region .", "label": "", "metadata": {}, "score": "67.764404"}
{"text": "10/917,745 , entitled \" System and Method For Encoding And Decoding Variable - Length Data . \"Attribute Encoding /Decoding System .[ 0050 ]FIG .3c is a block diagram of an embodiment of an attribute encoding / decoding system 314 for encoding / decoding document attributes .", "label": "", "metadata": {}, "score": "67.817696"}
{"text": "11 illustrates a format of a CRC data structure 226 in accordance with certain embodiments .The CRC data structure 226 includes a partial CRC digest field 1110 , a residual count 1112 , and residual data 1114 .The residual data field 1112 maintains the remnant bytes from the preceding transport layer segment .", "label": "", "metadata": {}, "score": "67.897064"}
{"text": "For example , each block may have a size of 32,768 positions , and each entry may have a pointer to a first entry in the DocID lookup table 410 for the corresponding block of positions .Thus , the first stage look - up table 406 translates the list(s ) of positions into starting point positions for document identifier ( DocID ) entries 412 in the second stage look - up table 410 , which is sometimes called the DocID table 410 .", "label": "", "metadata": {}, "score": "67.95893"}
{"text": "For this size , the first three transform levels can reuse memory in a 142\u00d7128 buffer .In some applications , adapting the memory organization to the tile height is inconvenient .A single fixed memory organization can be used .Tile sizes smaller than 128\u00d7128 typically result in bad compression performance , so would typically not be used .", "label": "", "metadata": {}, "score": "68.01515"}
{"text": "For this size , the first three transform levels can reuse memory in a 142\u00d7128 buffer .In some applications , adapting the memory organization to the tile height is inconvenient .A single fixed memory organization can be used .Tile sizes smaller than 128\u00d7128 typically result in bad compression performance , so would typically not be used .", "label": "", "metadata": {}, "score": "68.01515"}
{"text": "For this size , the first three transform levels can reuse memory in a 142\u00d7128 buffer .In some applications , adapting the memory organization to the tile height is inconvenient .A single fixed memory organization can be used .Tile sizes smaller than 128\u00d7128 typically result in bad compression performance , so would typically not be used .", "label": "", "metadata": {}, "score": "68.01515"}
{"text": "claim 3 wherein the comment marker comprises a JPEG 2000 COM marker .The method defined in .claim 1 wherein selecting the one or more layers is based on meeting a target rate .The method defined in .claim 1 wherein the plurality of layers are predefined based on resolution so that selecting the one or more layers is based on meeting a target distortion .", "label": "", "metadata": {}, "score": "68.265945"}
{"text": "Computer 12 also connects with a display terminal 18 and with a keyboard 14 .The terminal and the keyboard provide an interface between the system user and the computer .Specifically , the keyboard translates user - typed commands into computer - readable signals , while the display terminal 18 displays , in human - readable form , signals output from the computer .", "label": "", "metadata": {}, "score": "68.45918"}
{"text": "For efficiency , the list of token positions for each GTokenID is encoded so as to reduce the amount of space occupied by the inverse index .[ 0025 ] In some embodiments , the one or more query processor(s ) 114 parse a query into multiple query terms which are transformed by the one or more query processors 114 into a query expression ( e.g. , Boolean tree expression ) .", "label": "", "metadata": {}, "score": "68.6008"}
{"text": "An address / length pair 1016 . . .1024 provides an address in application space 124 and an associated length so that data may be stored at that address for the specified length .Once the Receive Buffer instruction is scheduled with the DMA engine 220 , the Receive Buffer instruction is applied to the incoming transport layer segments .", "label": "", "metadata": {}, "score": "68.631905"}
{"text": "Note that the particular orders of the packets defined in the POCs are not of importance , only the limits .An Exemplary Computer System .FIG .20 is a block diagram of an exemplary computer system .Referring to .", "label": "", "metadata": {}, "score": "68.77295"}
{"text": "Note that the particular orders of the packets defined in the POCs are not of importance , only the limits .An Exemplary Computer System .FIG .20 is a block diagram of an exemplary computer system .Referring to .", "label": "", "metadata": {}, "score": "68.77295"}
{"text": "Note that the particular orders of the packets defined in the POCs are not of importance , only the limits .An Exemplary Computer System .FIG .20 is a block diagram of an exemplary computer system .Referring to .", "label": "", "metadata": {}, "score": "68.77295"}
{"text": "A more complete understanding of the invention may be attained by reference to the description which follows and by reference to aforementioned U.S. Pat .No . 4,580,241 ( U.S. Ser .No .467,834 , filed Feb. 18 , 1983 ) , which is incorporated herein by reference .", "label": "", "metadata": {}, "score": "69.044464"}
{"text": "T.800/ISO / IEC 154441:2000 JPEG 2000 Image Coding System ) are coded .These coefficients are represented by dotted lines in .FIGS .3B and C. Input lines of input tile 301 and LL coefficients ( shown as solid lines in .", "label": "", "metadata": {}, "score": "69.06112"}
{"text": "T.800/ISO / IEC 154441:2000 JPEG 2000 Image Coding System ) are coded .These coefficients are represented by dotted lines in .FIGS .3B and C. Input lines of input tile 301 and LL coefficients ( shown as solid lines in .", "label": "", "metadata": {}, "score": "69.06112"}
{"text": "Friston KJ , Daunizeau J , Kiebel SJ ( 2009 )Reinforcement Learning or Active Inference ?PLoS ONE 4(7 ) : e6421 . doi : 10.1371/journal.pone.0006421 .A method and apparatus for selecting layers for quantization based on sideband information is described .", "label": "", "metadata": {}, "score": "69.10683"}
{"text": "Exact and Approximate Membership Testers , \" Carter et al . , Proceedings of the 10th Annual ACM Symposium , May 1978 , pp .59 - 65 . \"Give Your Computer and Ear for Names , \" J. Munnecke , Byte Magazine , vol .", "label": "", "metadata": {}, "score": "69.1786"}
{"text": "System 2000 further comprises a random access memory ( RAM ) , or other dynamic storage device 2004 ( referred to as main memory ) coupled to bus 2011 for storing information and instructions to be executed by processor 2012 .Main memory 2004 also may be used for storing temporary variables or other intermediate information during execution of instructions by processor 2012 .", "label": "", "metadata": {}, "score": "69.26131"}
{"text": "System 2000 further comprises a random access memory ( RAM ) , or other dynamic storage device 2004 ( referred to as main memory ) coupled to bus 2011 for storing information and instructions to be executed by processor 2012 .Main memory 2004 also may be used for storing temporary variables or other intermediate information during execution of instructions by processor 2012 .", "label": "", "metadata": {}, "score": "69.26131"}
{"text": "System 2000 further comprises a random access memory ( RAM ) , or other dynamic storage device 2004 ( referred to as main memory ) coupled to bus 2011 for storing information and instructions to be executed by processor 2012 .Main memory 2004 also may be used for storing temporary variables or other intermediate information during execution of instructions by processor 2012 .", "label": "", "metadata": {}, "score": "69.26131"}
{"text": "Alternatively , bytes , words , kilobytes , or other units of memory or rate could be used instead of bits .Table 7 shows this type of absolute rate information .Table 8 shows relative rate information .Layer 0 has 4096 bits , layer 1 has 11,915 bits , etc . .", "label": "", "metadata": {}, "score": "69.406006"}
{"text": "The mini - lexicon builder 204 continues to generate a sequence of mini - lexicons 208 for subsequent ranges of token positions in the set of documents until all the tokens in the documents have been mapped to mini - lexicons 208 .", "label": "", "metadata": {}, "score": "69.50578"}
{"text": "An apparatus according to claim 64 comprising means for generating from said input suspect expression a modified form thereof said modified suspect expression - generating means comprising at least one of .i. means for generating a signal representative of an expression having a transposed character sequence , . ii . means for generating a signal representative of an expression having a deleted character , . iii .", "label": "", "metadata": {}, "score": "69.56578"}
{"text": "A memory a little smaller than 273\u00d7256 can hold all the transform coefficients for a 256\u00d7256 tile .This is less than 7 % more than a true in - place memory organization .Unlike an in - place memory organization , extra copies are avoided while simultaneously keeping the rows packed together for fast access .", "label": "", "metadata": {}, "score": "69.60358"}
{"text": "A memory a little smaller than 273\u00d7256 can hold all the transform coefficients for a 256\u00d7256 tile .This is less than 7 % more than a true in - place memory organization .Unlike an in - place memory organization , extra copies are avoided while simultaneously keeping the rows packed together for fast access .", "label": "", "metadata": {}, "score": "69.60358"}
{"text": "A memory a little smaller than 273\u00d7256 can hold all the transform coefficients for a 256\u00d7256 tile .This is less than 7 % more than a true in - place memory organization .Unlike an in - place memory organization , extra copies are avoided while simultaneously keeping the rows packed together for fast access .", "label": "", "metadata": {}, "score": "69.60358"}
{"text": "The decoded data is received by the delta decoder 312 , which computes running sums , thereby producing delta - decoded data , which is equivalent to the original list of information .The use of offset / mask tables in decoding group encoded variable - length integer values is described more fully in co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "69.62704"}
{"text": "Table Index 7 bits _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _", "label": "", "metadata": {}, "score": "69.636406"}
{"text": "Lower case letters in this program are alpha characters of the English language , \" E \" , \" I \" , \" O \" , \" W \" , and \" Y \" are linguistic vocalic symbols ; and \" . sub .", "label": "", "metadata": {}, "score": "69.721176"}
{"text": "If so , processing continues to block 1608 , otherwise , processing loops back to block 1604 .In block 1608 , the segment processing engine 230 forwards the current transport layer segment to the CRC engine 224 without the partial CRC digest and the residual data for the last transport layer segment .", "label": "", "metadata": {}, "score": "70.00961"}
{"text": "Layers are arbitrary groupings of successive coding passes from code - blocks .Although there is great flexibility in layering , the premise is that each successive layer contributes to a higher quality image .Subband coefficients at each resolution level are partitioned into rectangular areas called precincts .", "label": "", "metadata": {}, "score": "70.03846"}
{"text": "Layers are arbitrary groupings of successive coding passes from code - blocks .Although there is great flexibility in layering , the premise is that each successive layer contributes to a higher quality image .Subband coefficients at each resolution level are partitioned into rectangular areas called precincts .", "label": "", "metadata": {}, "score": "70.03846"}
{"text": "Layers are arbitrary groupings of successive coding passes from code - blocks .Although there is great flexibility in layering , the premise is that each successive layer contributes to a higher quality image .Subband coefficients at each resolution level are partitioned into rectangular areas called precincts .", "label": "", "metadata": {}, "score": "70.03846"}
{"text": "The interrelationship of the block index table 26 and the master lexicon 24 is also shown in FIG .3 .There , as indicated by pointer element 46A , block index table entry 26A is associated with BLOCK 1 of the master lexicon 24 .", "label": "", "metadata": {}, "score": "70.04527"}
{"text": "The encoding / decoding system 110 retrieves documents from the one or more document repositories 106 , parses the documents into tokens , encodes the tokens into a compressed format using mappings from the lexicon generator 108 , then stores the encoded tokens in the tokenspace repository 112 .", "label": "", "metadata": {}, "score": "70.22545"}
{"text": "3A - C show input tile 301 , level 1 ( L1 ) ( 302 ) and level 2 ( L2 ) ( 303 ) memory areas aligned with an offset to indicate how reuse might be accomplished in one embodiment .", "label": "", "metadata": {}, "score": "70.25502"}
{"text": "3A - C show input tile 301 , level 1 ( L1 ) ( 302 ) and level 2 ( L2 ) ( 303 ) memory areas aligned with an offset to indicate how reuse might be accomplished in one embodiment .", "label": "", "metadata": {}, "score": "70.25502"}
{"text": "arithmetic coder ( AC ) termination ( without predictable termination ) .end of packet header rounding to byte .after last packet , before next tile . tag tree construction by not always using minimum . packet header Lblock signalling .", "label": "", "metadata": {}, "score": "70.34064"}
{"text": "arithmetic coder ( AC ) termination ( without predictable termination ) .end of packet header rounding to byte .after last packet , before next tile . tag tree construction by not always using minimum . packet header Lblock signalling .", "label": "", "metadata": {}, "score": "70.34064"}
{"text": "arithmetic coder ( AC ) termination ( without predictable termination ) .end of packet header rounding to byte .after last packet , before next tile . tag tree construction by not always using minimum . packet header Lblock signalling .", "label": "", "metadata": {}, "score": "70.34064"}
{"text": "28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .DETAILED DESCRIPTION OF THE PRESENT INVENTION .Improvements to compression and decompression schemes are described .It is a purpose of the techniques and implementations described herein to use choices in JPEG 2000 to make high speed , low cost , low memory and/or feature rich implementations .", "label": "", "metadata": {}, "score": "70.46411"}
{"text": "28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .DETAILED DESCRIPTION OF THE PRESENT INVENTION .Improvements to compression and decompression schemes are described .It is a purpose of the techniques and implementations described herein to use choices in JPEG 2000 to make high speed , low cost , low memory and/or feature rich implementations .", "label": "", "metadata": {}, "score": "70.46411"}
{"text": "28 is a flow diagram of one embodiment of a process for applying an inverse transform with clipping on partially transformed coefficients .DETAILED DESCRIPTION OF THE PRESENT INVENTION .Improvements to compression and decompression schemes are described .It is a purpose of the techniques and implementations described herein to use choices in JPEG 2000 to make high speed , low cost , low memory and/or feature rich implementations .", "label": "", "metadata": {}, "score": "70.46411"}
{"text": "3 illustrates a block diagram of a protocol data unit in accordance with certain embodiments .FIG .4 illustrates three Transmission Control Protocol ( TCP ) segments in accordance with certain embodiments .FIG .5 illustrates Transmission Control Protocol ( TCP ) segment and protocol data unit processing in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "70.47573"}
{"text": "Therefore , the spirit and scope of the appended claims should not be limited to the description of the preferred versions contained herein .Easy To Use Patents Search & Patent Lawyer Directory .At Patents you can conduct a Patent Search , File a Patent Application , find a Patent Attorney , or search available technology through our Patent Exchange .", "label": "", "metadata": {}, "score": "70.48103"}
{"text": "FIG .22 illustrates an example of layering for a 5,3 irreversible transform .FIG .23 illustrates an example in which transform has 5 levels and the data is divided up into layers 0 - 3 .FIG .24 illustrates one example of a situation in which flicker may be avoided in which values in first and third frames are used to set the value in the second frame .", "label": "", "metadata": {}, "score": "70.5661"}
{"text": "FIG .22 illustrates an example of layering for a 5,3 irreversible transform .FIG .23 illustrates an example in which transform has 5 levels and the data is divided up into layers 0 - 3 .FIG .24 illustrates one example of a situation in which flicker may be avoided in which values in first and third frames are used to set the value in the second frame .", "label": "", "metadata": {}, "score": "70.5661"}
{"text": "FIG .22 illustrates an example of layering for a 5,3 irreversible transform .FIG .23 illustrates an example in which transform has 5 levels and the data is divided up into layers 0 - 3 .FIG .24 illustrates one example of a situation in which flicker may be avoided in which values in first and third frames are used to set the value in the second frame .", "label": "", "metadata": {}, "score": "70.5661"}
{"text": "22 illustrates an example of layering for a 5,3 irreversible transform with three levels , MSE or similar .Referring to .FIG .22 , there are 45 layers shown .Each additional layer improves MSE in an order that gives good rate - distortion for MSE .", "label": "", "metadata": {}, "score": "70.62454"}
{"text": "2 or 3 . 3HH .3HL , 3LH .Additionally chrominance may be quantized more heavily than luminance .FIG .19 shows a quantization that starts with .FIG .17(D ) and then adds frequency weighting for a 1000 pixel viewing distance ( to both luminance and chrominance ) , keeps 3LL chrominance unchanged , discards 1HL and 1HH chrominance for 4:2:2 and additional 2 bitplanes are discarded for the remaining chrominance .", "label": "", "metadata": {}, "score": "70.67121"}
{"text": "2 or 3 . 3HH .3HL , 3LH .Additionally chrominance may be quantized more heavily than luminance .FIG .19 shows a quantization that starts with .FIG .17(D ) and then adds frequency weighting for a 1000 pixel viewing distance ( to both luminance and chrominance ) , keeps 3LL chrominance unchanged , discards 1HL and 1HH chrominance for 4:2:2 and additional 2 bitplanes are discarded for the remaining chrominance .", "label": "", "metadata": {}, "score": "70.67121"}
{"text": "The attributes for a document are determined on a token - by - token basis , with a 0 or 1 bit value being used to represent the presence or absence of each attribute for a given token .For instance an attribute record 318 in the attribute table may be conceptually represented as an A\u00d7K bit map , where A is the number of attributes that are encoded and K is the number of tokens whose attributes are represented by the record 318 .", "label": "", "metadata": {}, "score": "70.67718"}
{"text": "T.800/IS0/IEC 154441:2000 JPEG 2000 Image Coding System ) are coded .These coefficients are represented by dotted lines in .FIGS .3B and C .Input lines of input tile 301 and LL coefficients ( shown as solid lines in .", "label": "", "metadata": {}, "score": "70.70198"}
{"text": "The first 4 packets belong to resolution 0 , the next 4 packets to resolution 1 , and so on .Data Hiding ( Sideband Information ) in JPEG2000 Coding .Bit hiding allows sideband information to be transmitted without increasing the file size .", "label": "", "metadata": {}, "score": "70.72821"}
{"text": "14 illustrates a timeline of serialization in an \" AFTER \" scenario in accordance with certain embodiments .FIG .15 illustrates operations performed by a Cyclic Redundancy Check ( CRC ) engine in accordance with certain embodiments .FIG .16 illustrates operations performed by a segment processing engine for cyclic redundancy checking in accordance with certain embodiments .", "label": "", "metadata": {}, "score": "70.81934"}
{"text": "The seven layers are : application , presentation , session , transport , network , data link , and physical layer .The physical layer connects to a physical link .When data is being transmitted , the data is transferred from the application layer , via the presentation layer , session layer , transport layer , network layer , data link layer , and physical layer , to the physical link .", "label": "", "metadata": {}, "score": "70.927444"}
{"text": "FIG .22 , there are 45 layers shown .Each additional layer improves MSE in an order that gives good rate - distortion for MSE .FIG .23 illustrates another example in which transform has 5 levels and the data is divided up into layers 0 - 3 .", "label": "", "metadata": {}, "score": "70.930244"}
{"text": "FIG .22 , there are 45 layers shown .Each additional layer improves MSE in an order that gives good rate - distortion for MSE .FIG .23 illustrates another example in which transform has 5 levels and the data is divided up into layers 0 - 3 .", "label": "", "metadata": {}, "score": "70.930244"}
{"text": "A packet contains compressed image data from one layer of a precinct of one resolution level of one tile - component .These packets are placed in a defined order in the codestream .The codestream relating to a tile , organized in packets , are arranged in one , or more , tile - parts .", "label": "", "metadata": {}, "score": "70.98189"}
{"text": "A packet contains compressed image data from one layer of a precinct of one resolution level of one tile - component .These packets are placed in a defined order in the codestream .The codestream relating to a tile , organized in packets , are arranged in one , or more , tile - parts .", "label": "", "metadata": {}, "score": "70.98189"}
{"text": "A packet contains compressed image data from one layer of a precinct of one resolution level of one tile - component .These packets are placed in a defined order in the codestream .The codestream relating to a tile , organized in packets , are arranged in one , or more , tile - parts .", "label": "", "metadata": {}, "score": "70.98189"}
{"text": "That is , inverse RCT / ICT block 2502 takes the components and the \" RCT Y / N \" indication ( RCT if yes , ICT is no ) and performs the specified inverse transform and provides ( non - display ) RGB pixels .", "label": "", "metadata": {}, "score": "71.119934"}
{"text": "That is , inverse RCT / ICT block 2502 takes the components and the \" RCT Y / N \" indication ( RCT if yes , ICT is no ) and performs the specified inverse transform and provides ( non - display ) RGB pixels .", "label": "", "metadata": {}, "score": "71.119934"}
{"text": "196 - 200 . \"Reducing Dictionary Size by Using a Hashing Technique , \" D. J. Dodds , Communications of the Association for Computing Machinery , vol .25 , No . 6 , 1982 , pp .368 - 370 .", "label": "", "metadata": {}, "score": "71.1358"}
{"text": "FIG .5 illustrates one embodiment of the process of handling the input data .Referring to .FIG .5 , color input pixels are received in raster order .These color pixels may be in RGB , YCrCb , CMY , CMYK , grayscale , etc .", "label": "", "metadata": {}, "score": "71.34135"}
{"text": "FIG .5 illustrates one embodiment of the process of handling the input data .Referring to .FIG .5 , color input pixels are received in raster order .These color pixels may be in RGB , YCrCb , CMY , CMYK , grayscale , etc .", "label": "", "metadata": {}, "score": "71.34135"}
{"text": "FIG .5 illustrates one embodiment of the process of handling the input data .Referring to .FIG .5 , color input pixels are received in raster order .These color pixels may be in RGB , YCrCb , CMY , CMYK , grayscale , etc .", "label": "", "metadata": {}, "score": "71.34135"}
{"text": "( More information about what NLTK has to offer can be found on the hompage .Since the project is pedagogically - oriented , the documentation includes numerous tutorials and exercises . )On the installation page ( accessible from the homepage ) , there is information about how to install and run NLTK on various operating systems ( Windows , MacOS , Linux ) .", "label": "", "metadata": {}, "score": "71.46907"}
{"text": "25 .Referring to .FIG .25 , a file with a file format ( e.g. , a file format described in the JPEG 2000 standard ) containing a restricted ICC profile is provided to a decoding device .Decompression block 2501 decompresses the file by taking the codestream portion of the file and performing context modeling , entropy decoding , and applying an inverse wavelet transform , but does not perform color space operations .", "label": "", "metadata": {}, "score": "71.50315"}
{"text": "25 .Referring to .FIG .25 , a file with a file format ( e.g. , a file format described in the JPEG 2000 standard ) containing a restricted ICC profile is provided to a decoding device .Decompression block 2501 decompresses the file by taking the codestream portion of the file and performing context modeling , entropy decoding , and applying an inverse wavelet transform , but does not perform color space operations .", "label": "", "metadata": {}, "score": "71.50315"}
{"text": "The Interrelationship of Database Sections .The interrelationship of the master lexicon 24 and the decompression table 28 is shown in greater detail in FIG .3 .There , several entries of the master lexicon are shown to include addressing information directed to entries within the common pattern and the common character sequence sections of the decompression table 28 .", "label": "", "metadata": {}, "score": "71.56476"}
{"text": "Engineering Innovation : Voyage of Discovery .IEEE 1997 Canadian Conference on St. Johns , NFLD ., Canada May 25 - 28 , 1997 , New York , NY .( pp .500 - 503 ) , XP010235053 .Wu , et al . , \" New Compression Paradigms in JPEG2000 \" , Applications of Digital Image Processing XXIII , San Diego , CA USA , Jul. 31-Aug . 3 , 2000 , vol .", "label": "", "metadata": {}, "score": "71.58498"}
{"text": "Engineering Innovation : Voyage of Discovery .IEEE 1997 Canadian Conference on St. Johns , NFLD ., Canada May 25 - 28 , 1997 , New York , NY .( pp .500 - 503 ) , XP010235053 .Wu , et al . , \" New Compression Paradigms in JPEG2000 \" , Applications of Digital Image Processing XXIII , San Diego , CA USA , Jul. 31-Aug . 3 , 2000 , vol .", "label": "", "metadata": {}, "score": "71.58498"}
{"text": "claim 1 wherein the sideband information is stored within an arithmetic coder ( AC ) termination area .The method defined in .claim 1 wherein the sideband information is stored near an end of a packer header .The method defined in .", "label": "", "metadata": {}, "score": "71.612915"}
{"text": "Table 7 shows this type of absolute rate information .Table 8 shows relative rate information .Layer 0 has 4096 bits , layer 1 has 11,915 bits , etc . .For example , if only 750,000 bytes may be allowed in the decoded image , then all that can be decoded ( as the 1,000,000 bytes tabulated with layer 6 includes the 500,000 bytes of layers 0 - 5 ) is through layer 5 and half of importance layer 6 .", "label": "", "metadata": {}, "score": "71.685135"}
{"text": "Table 7 shows this type of absolute rate information .Table 8 shows relative rate information .Layer 0 has 4096 bits , layer 1 has 11,915 bits , etc . .For example , if only 750,000 bytes may be allowed in the decoded image , then all that can be decoded ( as the 1,000,000 bytes tabulated with layer 6 includes the 500,000 bytes of layers 0 - 5 ) is through layer 5 and half of importance layer 6 .", "label": "", "metadata": {}, "score": "71.685135"}
{"text": "claim 11 , wherein the hardware logic is operable to : . receive a peek command requesting a header portion of a next protocol data unit ; . wait for the requested data ; and .return the requested data in response to the peek command .", "label": "", "metadata": {}, "score": "71.76053"}
{"text": "FIG .27 , a camera 2701 generates YCrCb pixels and provides them to compressor 2702 .Compressor comprises a JPEG 2000 encoder without an RCT conversion and generates an ICC B codestream with RCT equaling 1 ( with syntax signaling that the inverse RCT should be used on decoding ) .", "label": "", "metadata": {}, "score": "71.76943"}
{"text": "FIG .27 , a camera 2701 generates YCrCb pixels and provides them to compressor 2702 .Compressor comprises a JPEG 2000 encoder without an RCT conversion and generates an ICC B codestream with RCT equaling 1 ( with syntax signaling that the inverse RCT should be used on decoding ) .", "label": "", "metadata": {}, "score": "71.76943"}
{"text": "FIG .27 , a camera 2701 generates YCrCb pixels and provides them to compressor 2702 .Compressor comprises a JPEG 2000 encoder without an RCT conversion and generates an ICC B codestream with RCT equaling 1 ( with syntax signaling that the inverse RCT should be used on decoding ) .", "label": "", "metadata": {}, "score": "71.76943"}
{"text": "One disadvantage is that a buffer memory for the entire codestream is required .A second disadvantage is that the latency ( time until any of the codestream is output ) is high .A third disadvantage is that the second pass could take large amount of time .", "label": "", "metadata": {}, "score": "72.01577"}
{"text": "One disadvantage is that a buffer memory for the entire codestream is required .A second disadvantage is that the latency ( time until any of the codestream is output ) is high .A third disadvantage is that the second pass could take large amount of time .", "label": "", "metadata": {}, "score": "72.01577"}
{"text": "The width and height for each type of coefficient ( e.g. , LH , HL , HH ) for each subband of level 1 coefficients is half that of input tile 301 .The line offset from the LL row to the next LL row for level 1 ( e.g. , the distance from row 312 to row 314 in .", "label": "", "metadata": {}, "score": "72.12959"}
{"text": "The line offset for level 2 is four times the tile width ( since each coefficient row is from an area corresponding to two level 1 LL rows or four input lines ) .Thus , four extra lines of memory are needed to use the same memory that is storing the input tile to store the L2 coefficients .", "label": "", "metadata": {}, "score": "72.15723"}
{"text": "The line offset for level 2 is four times the tile width ( since each coefficient row is from an area corresponding to two level 1 LL rows or four input lines ) .Thus , four extra lines of memory are needed to use the same memory that is storing the input tile to store the L2 coefficients .", "label": "", "metadata": {}, "score": "72.15723"}
{"text": "[ 0022 ] It is noted that in some implementations , a completely different set of computers are used for encoding documents than the computers used for decoding documents .For instance , a web crawling system may include a document processing system 102 that encodes documents , while a query processing system 104 may decode selected portions of the encoded documents .", "label": "", "metadata": {}, "score": "72.35104"}
{"text": "21B illustrates that for a monitor resolution , tile - parts 2102 - 2104 have been included with tile - part 2101 .FIG .21C illustrates that for a printer resolution , tile - parts 2105 and 2106 have been included with tile - parts 2101 - 2104 .", "label": "", "metadata": {}, "score": "72.45293"}
{"text": "21B illustrates that for a monitor resolution , tile - parts 2102 - 2104 have been included with tile - part 2101 .FIG .21C illustrates that for a printer resolution , tile - parts 2105 and 2106 have been included with tile - parts 2101 - 2104 .", "label": "", "metadata": {}, "score": "72.45293"}
{"text": "21B illustrates that for a monitor resolution , tile - parts 2102 - 2104 have been included with tile - part 2101 .FIG .21C illustrates that for a printer resolution , tile - parts 2105 and 2106 have been included with tile - parts 2101 - 2104 .", "label": "", "metadata": {}, "score": "72.45293"}
{"text": "If these coefficients are clipped to their original bounds , distortion will decrease .For each subband , each filter , each transform level , and each image depth , there is a different maximum and minimum value for the coefficients .", "label": "", "metadata": {}, "score": "72.60672"}
{"text": "If these coefficients are clipped to their original bounds , distortion will decrease .For each subband , each filter , each transform level , and each image depth , there is a different maximum and minimum value for the coefficients .", "label": "", "metadata": {}, "score": "72.60672"}
{"text": "This is illustrated below in a Unix - style command - line window , where the main code library is imported for use ( if NLTK is not installed , an error will result ) : .$ python Python 2.4.3 ( # 1 , Oct 23 2006 , 14:19:47 ) [ GCC 4.1.1 20060525 ( Red Hat 4.1.1 - 1 ) ] on linux2 Type \" help \" , \" copyright \" , \" credits \" or \" license \" for more information .", "label": "", "metadata": {}, "score": "72.642914"}
{"text": "This convergence provides immense cost - advantages for Information Technology ( IT ) infrastructure by eliminating a need for a separate physical medium for carrying storage traffic .This advantage comes at a cost to the end stations , which have to run more complex protocols on the host processors .", "label": "", "metadata": {}, "score": "72.65549"}
{"text": "For 3 component color quantization : . 21 values can be used with separate values for each component , .14 values can be used , 7 for luminance and 7 for chrominance , .17 values can be used for 4:1:1 subsampled data , 7 for luminance and 5 for each chrominance component , .", "label": "", "metadata": {}, "score": "72.84057"}
{"text": "For 3 component color quantization : . 21 values can be used with separate values for each component , .14 values can be used , 7 for luminance and 7 for chrominance , .17 values can be used for 4:1:1 subsampled data , 7 for luminance and 5 for each chrominance component , .", "label": "", "metadata": {}, "score": "72.84057"}
{"text": "For 3 component color quantization : . 21 values can be used with separate values for each component , .14 values can be used , 7 for luminance and 7 for chrominance , .17 values can be used for 4:1:1 subsampled data , 7 for luminance and 5 for each chrominance component , .", "label": "", "metadata": {}, "score": "72.84057"}
{"text": "In certain embodiments , the offload protocol processing may be provided with dedicated hardware .In certain embodiments , the network adapter 128 may implement a transport layer offload engine ( TOE ) to implement the transport protocol layer in the network adapter to reduce host computer processing burdens .", "label": "", "metadata": {}, "score": "72.84224"}
{"text": "claim 1 , further comprising : . receiving a peek command requesting a header portion of a next protocol data unit ; . waiting for the requested data ; and . returning the requested data in response to the peek command .", "label": "", "metadata": {}, "score": "72.898834"}
{"text": "In some embodiments , GTokenIDs are assigned to the sorted unique tokens in increasing order , so that high - frequency tokens are assigned small valued GTokenIDs and low - frequency tokens are assigned large valued GTokenIDs .To be more specific , in one embodiment , each token in the sorted list of tokens is assigned a 32-bit global token identifier equal to its numeric position in the sorted list of unique tokens .", "label": "", "metadata": {}, "score": "72.927025"}
{"text": "5 illustrates transport layer segment and protocol data unit processing in accordance with certain embodiments .Context may be described as information related to a particular TCP connection .In certain embodiments , one TCP connection has one context .In certain other embodiments , one TCP connection may have one or more contexts .", "label": "", "metadata": {}, "score": "73.01682"}
{"text": "As seen in Figure 7 , when takes the value from 40 to 60 , the average accuracy is best for English .As seen in Figure 8 , when takes the value from 80 to 120 , the average accuracy is best for Chinese .", "label": "", "metadata": {}, "score": "73.09802"}
{"text": "The present invention relates to the field of compression and decompression ; more particularly , the present invention relates to selecting layers for quantization based on sideband information .BACKGROUND OF THE INVENTION .The new JPEG 2000 decoding standard ( ITU - T Rec .", "label": "", "metadata": {}, "score": "73.10129"}
{"text": "Versatile Packet Data Structure .The same packet data structure described above can be used to facilitate other parsing options , once packets are read into the structure .For resolution parsing , the packets which are to be excluded are marked unselected .", "label": "", "metadata": {}, "score": "73.11552"}
{"text": "The ordered GTokenIDs are then delta encoded by the delta encoder 304 to provide difference or residual values .The difference values are then encoded in groups ( e.g. , groups of 4 values ) into a compressed format using the variable - length data encoder 306 .", "label": "", "metadata": {}, "score": "73.1366"}
{"text": "418 - 429 , XP008013391 , Proceedings of the DPIE - The International Society for Optical Engineering , 2000 , SPIE - Int .Soc .Opt .Eng . , USA .A method and apparatus for performing progressive order conversion is described .", "label": "", "metadata": {}, "score": "73.28819"}
{"text": "Layer 4 + protocol data units are first constructed and then handed over for TCP processing as a byte stream .The TCP processing may re - segment each protocol segment into multiple transport layer segments so that each transport layer segment that is sent out does not exceed an effective maximum data segment size .", "label": "", "metadata": {}, "score": "73.352486"}
{"text": "The dictionary then consists of all possible combinations of two of these digits .FIG .3a shows a possible illustration of the dictionary in the form of a graph .We assume that the input speech is the digit string \" 33 \" .", "label": "", "metadata": {}, "score": "73.52959"}
{"text": "In 2003 the program was re - released with a new name , Toolbox .Toolbox is fundamentally the same as Shoebox , to the extent that it uses the same basic data format and user interface , but Toolbox differs from its predecessor Shoebox in two important respects .", "label": "", "metadata": {}, "score": "73.90419"}
{"text": "Each entry 412 in the second stage look - up table 410 includes a DocID ( document identifier ) and a starting repository position for the corresponding document .The last token in any document is the position immediately prior to the starting position identified by the next entry 412 in the second stage look - up table .", "label": "", "metadata": {}, "score": "74.05323"}
{"text": "Table 4 shows the packet order , length and association index of packets in the example .The packet order column shows the sequential order of packets placed in a codestream .The length indicates the length of the packets .The association index shows the resolution , layer , component , and precinct of the packet .", "label": "", "metadata": {}, "score": "74.067795"}
{"text": "Table 4 shows the packet order , length and association index of packets in the example .The packet order column shows the sequential order of packets placed in a codestream .The length indicates the length of the packets .The association index shows the resolution , layer , component , and precinct of the packet .", "label": "", "metadata": {}, "score": "74.067795"}
{"text": "Table 4 shows the packet order , length and association index of packets in the example .The packet order column shows the sequential order of packets placed in a codestream .The length indicates the length of the packets .The association index shows the resolution , layer , component , and precinct of the packet .", "label": "", "metadata": {}, "score": "74.067795"}
{"text": "That is , this technique reduces distortion yet may increase rate , particularly when a coefficient is moved from a smaller bin to a higher bin .Flicker Reduction for Motion JPEG .At times , flicker occurs when applying wavelet compression to motion sequences .", "label": "", "metadata": {}, "score": "74.14372"}
{"text": "That is , this technique reduces distortion yet may increase rate , particularly when a coefficient is moved from a smaller bin to a higher bin .Flicker Reduction for Motion JPEG .At times , flicker occurs when applying wavelet compression to motion sequences .", "label": "", "metadata": {}, "score": "74.14372"}
{"text": "The flicker may be due to the application of different local quantization to successive frames of a motion sequence or to noise exacerbated by quantization that is viewed temporarily .To reduce flicker , coefficients that are in the same position and close to the same value in successive frames are forced to the same value .", "label": "", "metadata": {}, "score": "74.15143"}
{"text": "The flicker may be due to the application of different local quantization to successive frames of a motion sequence or to noise exacerbated by quantization that is viewed temporarily .To reduce flicker , coefficients that are in the same position and close to the same value in successive frames are forced to the same value .", "label": "", "metadata": {}, "score": "74.15143"}
{"text": "The flicker may be due to the application of different local quantization to successive frames of a motion sequence or to noise exacerbated by quantization that is viewed temporarily .To reduce flicker , coefficients that are in the same position and close to the same value in successive frames are forced to the same value .", "label": "", "metadata": {}, "score": "74.15143"}
{"text": "Finally , the ICC color profile from the file format along with information about the display device will be used to produce the output pixels .Inverse ICC block 2503 receives the ( non - display ) RGB pixels and the ICC profile and applies an inverse color space transform to provide display RGB pixels .", "label": "", "metadata": {}, "score": "74.54173"}
{"text": "Finally , the ICC color profile from the file format along with information about the display device will be used to produce the output pixels .Inverse ICC block 2503 receives the ( non - display ) RGB pixels and the ICC profile and applies an inverse color space transform to provide display RGB pixels .", "label": "", "metadata": {}, "score": "74.54173"}
{"text": "Finally , the ICC color profile from the file format along with information about the display device will be used to produce the output pixels .Inverse ICC block 2503 receives the ( non - display ) RGB pixels and the ICC profile and applies an inverse color space transform to provide display RGB pixels .", "label": "", "metadata": {}, "score": "74.54173"}
{"text": "It has a length of 589 bytes .Association index RwLxCyPz indicates the packet belongs to resolution w , layer x , component y and precinct z. .In this codestream , packets are grouped based on the layer in which they reside .", "label": "", "metadata": {}, "score": "74.65857"}
{"text": "It has a length of 589 bytes .Association index RwLxCyPz indicates the packet belongs to resolution w , layer x , component y and precinct z. .In this codestream , packets are grouped based on the layer in which they reside .", "label": "", "metadata": {}, "score": "74.65857"}
{"text": "It has a length of 589 bytes .Association index RwLxCyPz indicates the packet belongs to resolution w , layer x , component y and precinct z. .In this codestream , packets are grouped based on the layer in which they reside .", "label": "", "metadata": {}, "score": "74.65857"}
{"text": "The host computer 102 may comprise any computing device known in the art , such as a mainframe , server , personal computer , workstation , laptop , handheld computer , telephony device , network appliance , virtualization device , storage controller , etc .", "label": "", "metadata": {}, "score": "74.856514"}
{"text": "This helps avoid artifacts .That is , this technique reduces distortion yet may increase rate , particularly when a coefficient is moved from a smaller bin to a higher bin .Flicker Reduction for Motion JPEG .At times , flicker occurs when applying wavelet compression to motion sequences .", "label": "", "metadata": {}, "score": "74.87675"}
{"text": "The coded data is buffered in coded data memory 505 .While performing the further compression processing on one tile , the transform may be applied to another tile .Similarly , any or all the operations may be performed on multiple tiles at the same time .", "label": "", "metadata": {}, "score": "75.07286"}
{"text": "The coded data is buffered in coded data memory 505 .While performing the further compression processing on one tile , the transform may be applied to another tile .Similarly , any or all the operations may be performed on multiple tiles at the same time .", "label": "", "metadata": {}, "score": "75.07286"}
{"text": "The coded data is buffered in coded data memory 505 .While performing the further compression processing on one tile , the transform may be applied to another tile .Similarly , any or all the operations may be performed on multiple tiles at the same time .", "label": "", "metadata": {}, "score": "75.07286"}
{"text": "[ 0032 ] The sorting process produces a sorted list of the unique tokens , each having a respective position in the list .Each sorted unique token is then assigned a unique global token identifier ( hereinafter also referred to as \" GTokenID \" ) .", "label": "", "metadata": {}, "score": "75.42726"}
{"text": "FIG .14 illustrates a timeline 1400 of serialization in an \" AFTER \" scenario in accordance with certain embodiments .In .FIG .14 , the timeline 1400 shows that the \" delay \" in the BEFORE scenario of .", "label": "", "metadata": {}, "score": "75.49258"}
{"text": "Query Processing System .[ 0060 ] FIG .4 is a block diagram of an embodiment of the first stage of a query processing system 104 for use with a tokenspace repository .The query processing system 104 includes a global - lexicon 402 , a tokenspace inverse index 408 , a first stage look - up table 406 and a second stage look - up table 410 .", "label": "", "metadata": {}, "score": "75.88782"}
{"text": "Character 1 5 bits Character 2 5 bits Character 3 5 bits ( Unused ) 1 bit.sup .The content of the decompression table 28 of a preferred embodiment of the invention is listed in Appendix I. .The Block Index Table .", "label": "", "metadata": {}, "score": "76.068245"}
{"text": "[ 0027 ] The global - lexicon builder 202 retrieves documents from the document repository 106 and generates a global - lexicon 206 by assigning unique global token identifiers ( GTokenIDs ) to each unique token contained in the documents .In some embodiments , the document repository 106 is logically or physically split into multiple portions , sometimes called partitions , and a separate global - lexicon 206 is generated for each partition .", "label": "", "metadata": {}, "score": "76.390366"}
{"text": "Extracting Chinese Frequent Strings Without a Dictionary From a Chinese Corpus and its Applications .This paper describes how to extract Chinese frequent strings without using a dictionary .In this paper , we generalize the notations of words and unknown words to those of frequent strings .", "label": "", "metadata": {}, "score": "76.50218"}
{"text": "By use of the peek command , certain embodiments provide direct peek results into the pre - processing agent 210 registers 212 .Certain embodiments also provide placement of received data into application space 124 .In block 906 , the pre - processing agent 210 notifies the Direct Memory Access ( DMA ) engine 220 to store \" n \" ( where \" n \" represents a positive integer value ) bytes of data for a protocol data unit into application space 124 .", "label": "", "metadata": {}, "score": "76.58319"}
{"text": "A simple example of the operation of a prior art speech recognition system is illustrated by the flow chart of FIG .3 .The speech recognition dictionary 218 contains only three words , namely the digits 3 , 4 and 5 .", "label": "", "metadata": {}, "score": "76.59806"}
{"text": "13/040,220 , filed Mar. 3 , 2011 , now U.S. Pat .No .8,321,445 , which is a continuation application of U.S. application Ser .No .10/917,739 , filed Aug. 13 , 2004 , now U.S. Pat .No .", "label": "", "metadata": {}, "score": "76.88132"}
{"text": "This can be exemplified by .Assume a decoder reconstructs these values to a predetermined value ( e.g. , floor ( \u00bdmin+\u00bdmax ) , or min+\u00bdQ , where Q is the quantization step size ) .For example , if the range of values is between 16 and 31 , then the decoder may assume the value is 24 .", "label": "", "metadata": {}, "score": "76.89728"}
{"text": "This can be exemplified by .Assume a decoder reconstructs these values to a predetermined value ( e.g. , floor ( \u00bdmin+\u00bdmax ) , or min+\u00bdQ , where Q is the quantization step size ) .For example , if the range of values is between 16 and 31 , then the decoder may assume the value is 24 .", "label": "", "metadata": {}, "score": "76.89728"}
{"text": "If the codestream indicates the RCT or ICT component transform should be used to decode the codestream , these will be performed by block 2502 .That is , inverse RCT / ICT block 2502 takes the components and the \" RCT Y / N \" indication ( RCT if yes , ICT is no ) and performs the specified inverse transform and provides ( non - display ) RGB pixels .", "label": "", "metadata": {}, "score": "76.9987"}
{"text": "This can be exemplified by .Assume a decoder reconstructs these values to a predetermined value ( e.g. , floor ( \u00bd min+\u00bd max ) , or min+\u00bd Q , where Q is the quantization step size ) .For example , if the range of values is between 16 and 31 , then the decoder may assume the value is 24 .", "label": "", "metadata": {}, "score": "77.1068"}
{"text": "In some cases , a protocol data unit for a Layer 4 + protocol is not fully contained in a transport layer segment .Thus , a protocol data unit may be contained in a single transport layer segment , a protocol data unit may be segmented across transport layer segments , a transport layer segment may contain multiple protocol data units or a combination of these .", "label": "", "metadata": {}, "score": "77.272736"}
{"text": "In certain embodiments , the I / O controller 240 may comprise Internet Small Computer System Interface ( iSCSI controllers ) , and it is understood that other types of network controllers , such as an Ethernet Media Access Controller ( MAC ) , or cards may be used .", "label": "", "metadata": {}, "score": "77.338776"}
{"text": "The small valued integers are received by the variable - length data encoder 306 , which encodes the data into a compressed format which can be efficiently decoded .One example of a suitable variable - length data encoder 306 is described more fully in co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "77.551025"}
{"text": "3A - C show input tile 301 , level 1 ( L1 ) ( 302 ) and level 2(L2 ) ( 303 ) memory areas aligned with an offset to indicate how reuse might be accomplished in one embodiment .The addition of two rows , rows 312 and 313 , to the memory space used to hold input tile 301 , is needed to generate the L1 coefficients when reusing the memory for input tile 301 for L1 coefficients .", "label": "", "metadata": {}, "score": "77.62622"}
{"text": "Computer system 2000 may further be coupled to a display device 2021 , such as a cathode ray tube ( CRT ) or liquid crystal display ( LCD ) , coupled to bus 2011 for displaying information to a computer user .", "label": "", "metadata": {}, "score": "77.63809"}
{"text": "Computer system 2000 may further be coupled to a display device 2021 , such as a cathode ray tube ( CRT ) or liquid crystal display ( LCD ) , coupled to bus 2011 for displaying information to a computer user .", "label": "", "metadata": {}, "score": "77.63809"}
{"text": "Computer system 2000 may further be coupled to a display device 2021 , such as a cathode ray tube ( CRT ) or liquid crystal display ( LCD ) , coupled to bus 2011 for displaying information to a computer user .", "label": "", "metadata": {}, "score": "77.63809"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Candidate______________________________________434445 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .", "label": "", "metadata": {}, "score": "77.688255"}
{"text": "1 .The illustrated system 10 has a programmed digital computer 12 which includes a central processing unit 12A connected with a memory unit 12B and with an input / output control unit 12C. The computer 12 can be any of numerous commercially available programmable digital computers .", "label": "", "metadata": {}, "score": "77.77101"}
{"text": "claim 3 , wherein returning the requested data further comprises : . providing a location of a header of the protocol data unit to a pre - processing agent .The method of .claim 3 , wherein returning the requested data further comprises : . providing a header of the protocol data unit to a pre - processing agent .", "label": "", "metadata": {}, "score": "78.59451"}
{"text": "26 illustrates one embodiment of a non - preferred camera encoder .Referring to .FIG .26 , a camera generates YCrCb pixels .A converter 2602 converts the YCrCb pixels to RGB pixels and provides those two a typical JPEG 2000 encoder .", "label": "", "metadata": {}, "score": "78.6013"}
{"text": "26 illustrates one embodiment of a non - preferred camera encoder .Referring to .FIG .26 , a camera generates YCrCb pixels .A converter 2602 converts the YCrCb pixels to RGB pixels and provides those two a typical JPEG 2000 encoder .", "label": "", "metadata": {}, "score": "78.6013"}
{"text": "26 illustrates one embodiment of a non - preferred camera encoder .Referring to .FIG .26 , a camera generates YCrCb pixels .A converter 2602 converts the YCrCb pixels to RGB pixels and provides those two a typical JPEG 2000 encoder .", "label": "", "metadata": {}, "score": "78.6013"}
{"text": "As noted there , the program runs only on Windows .For users of other operating systems , the only option is to run the program using a Windows emulator .This option works fairly well , thanks to the advanced state of many Windows emulation programs , and more information about installing Toolbox on Linux and MacOSX can be found on the Toolbox download homepage .", "label": "", "metadata": {}, "score": "78.65064"}
{"text": "4 . [0048 ] While the variable - length data encoder 306 provides a compressed format that facilitates fast and efficient decoding , other known encoding schemes can also be used in the document processing system 102 to compress a list of information ( e.g. , CCITT - G4 , LZW etc . ) .", "label": "", "metadata": {}, "score": "79.01388"}
{"text": "Wu , et al . , \" New Compression Paradigms in JPEG2000 \" , Applications of Digital Image Processing XXIII , San Diego , CA USA , Jul. 31-Aug . 3 , 2000 , vol .4115 , pp .", "label": "", "metadata": {}, "score": "79.0318"}
{"text": "3B ) is twice the tile width ( since each coefficient row is from an area corresponding to two lines ) .The width and height for level 2 coefficients is a quarter that of input tile 301 .The line offset for level 2 is four times the tile width ( since each coefficient row is from an area corresponding to two level 1 LL rows or four input lines ) .", "label": "", "metadata": {}, "score": "79.108315"}
{"text": "The server 700 generally includes one or more processing units ( CPUs ) 704 , one or more network or other communications interfaces 708 , memory 702 , and one or more communication buses 706 for interconnecting these components .The server 700 may optionally include a user interface , for instance a display and a keyboard .", "label": "", "metadata": {}, "score": "79.24567"}
{"text": "Coefficient buffers 502 1 - 502 N are used by the transform in the manner described above to perform the wavelet transform while reusing memory .Thus , coefficient buffers 502 1 - 502 N are both input and output to wavelet transform .", "label": "", "metadata": {}, "score": "79.249146"}
{"text": "Coefficient buffers 502 1 - 502 N are used by the transform in the manner described above to perform the wavelet transform while reusing memory .Thus , coefficient buffers 502 1 - 502 N are both input and output to wavelet transform .", "label": "", "metadata": {}, "score": "79.249146"}
{"text": "Coefficient buffers 502 1 - 502 N are used by the transform in the manner described above to perform the wavelet transform while reusing memory .Thus , coefficient buffers 502 1 - 502 N are both input and output to wavelet transform .", "label": "", "metadata": {}, "score": "79.249146"}
{"text": "0038 ]To provide a concrete example , in one embodiment the LTokenIDs in each mini - lexicon have values from 0 to 255 , each represented by an 8-bit unsigned integer , while the GTokenIDs are 32-bit unsigned integers .", "label": "", "metadata": {}, "score": "79.305756"}
{"text": "FIELD OF THE INVENTION .The present invention relates to the field of compression and decompression ; more particularly , the present invention relates to performing progressive order conversion .BACKGROUND OF THE INVENTION .The new JPEG 2000 decoding standard ( ITU - T Rec .", "label": "", "metadata": {}, "score": "79.4281"}
{"text": "FIELD OF THE INVENTION .The present invention relates to the field of compression and decompression ; more particularly , the present invention relates to performing progressive order conversion .BACKGROUND OF THE INVENTION .The new JPEG 2000 decoding standard ( ITU - T Rec .", "label": "", "metadata": {}, "score": "79.4281"}
{"text": "The transport layer ( Layer 4 ) provides transfer of data .The network layer ( Layer 3 ) provides switching and routing .The data link layer ( Layer 2 ) encodes and decodes data packets into bits .The physical layer ( Layer 1 ) conveys a bit stream through a physical network .", "label": "", "metadata": {}, "score": "79.813835"}
{"text": "A protocol segment may be described as a portion or all of a protocol data unit ( i.e. , a protocol data unit may form one or more protocol segments ) .In certain embodiments , the preprocessing agent 210 may be described as a dedicated processor that has a context sensitive register space ( registers 212 ) and may be used in conjunction with the segment processing engine 230 to achieve effective and programmable receive processing .", "label": "", "metadata": {}, "score": "79.93966"}
{"text": "One or more storage drivers 120 , one or more application programs 122 , and one or more network drivers 126 reside in memory 106 for execution by CPUs 104 and are capable of transmitting and retrieving packets from remote storage subsystem 140 over a network 176 .", "label": "", "metadata": {}, "score": "80.03522"}
{"text": "[ 0024 ] The query processing system 104 includes one or more query processors 114 coupled to the encoding / decoding system 110 and a tokenspace inverse index 116 .The tokenspace inverse index 116 maps all the GTokenIDs in the set of documents to their positions within the documents .", "label": "", "metadata": {}, "score": "80.08053"}
{"text": "The storage devices 190 may each comprise a storage device or an array of storage devices , such as Direct Access Storage Devices ( DASDs ) , Just a Bunch of Disks ( JBOD ) , Redundant Array of Independent Disks ( RAID ) , virtualization device , etc .", "label": "", "metadata": {}, "score": "80.13138"}
{"text": "3A is a block diagram of an embodiment of an encoding system for encoding documents for a tokenspace repository .[0010 ]FIG .3B is a block diagram of an embodiment of a decoding system for decoding documents in a tokenspace repository .", "label": "", "metadata": {}, "score": "80.23894"}
{"text": "QCD , QCC extra subbands , POC .For example , with respect to hiding data using AC termination , 0 to 7 bits are provided , at least , everytime the coder is terminated .However , this could be extended for a few bytes .", "label": "", "metadata": {}, "score": "80.429535"}
{"text": "QCD , QCC extra subbands , POC .For example , with respect to hiding data using AC termination , 0 to 7 bits are provided , at least , everytime the coder is terminated .However , this could be extended for a few bytes .", "label": "", "metadata": {}, "score": "80.429535"}
{"text": "QCD , QCC extra subbands , POC .For example , with respect to hiding data using AC termination , 0 to 7 bits are provided , at least , everytime the coder is terminated .However , this could be extended for a few bytes .", "label": "", "metadata": {}, "score": "80.429535"}
{"text": "Quantizers can also be used to assign bitplanes to layers .For example , Q 0 , Q 1 , and Q 2 may be quantizers that specify bitplanes of coding pass to quantize .Quantizer Q 0 causes the most loss , while quantizer Q 2 causes the least loss .", "label": "", "metadata": {}, "score": "80.46501"}
{"text": "Quantizers can also be used to assign bitplanes to layers .For example , Q 0 , Q 1 , and Q 2 may be quantizers that specify bitplanes of coding pass to quantize .Quantizer Q 0 causes the most loss , while quantizer Q 2 causes the least loss .", "label": "", "metadata": {}, "score": "80.46501"}
{"text": "Quantizers can also be used to assign bitplanes to layers .For example , Q 0 , Q 1 , and Q 2 may be quantizers that specify bitplanes of coding pass to quantize .Quantizer Q 0 causes the most loss , while quantizer Q 2 causes the least loss .", "label": "", "metadata": {}, "score": "80.46501"}
{"text": "This factor , for example , gives rise to different pronunciations of the same letters , such as the different pronunciations of the letters \" ch \" in the words \" chronic \" , \" cheat \" , and \" chauffeur \" .", "label": "", "metadata": {}, "score": "80.51446"}
{"text": "Each entry in a mini - lexicon 208 includes a GTokenID and a corresponding local token identifier ( LTokenID ) .The LTokenID for each entry is implied by the position of the entry in the mini - lexicon 208 , and therefore does not need to be explicitly stored .", "label": "", "metadata": {}, "score": "80.51544"}
{"text": "For Chinese sentiment classification , the test set of each domain contains 2000 positive reviews and 2000 negative reviews .There are two evaluation measures in our experiments : polarity assignment accuracy and sentiment classification accuracy .Specifically , polarity assignment accuracy equals to the number of correctly labeled words divided by the number of words labeled ; sentiment classification accuracy equals to the number of correctly classified documents divided by the number of documents classified .", "label": "", "metadata": {}, "score": "80.54216"}
{"text": "Programs and data in memory 106 may be swapped into storage 108 as part of memory management operations .The network 176 may comprise any type of network , such as , for example , a Storage Area Network ( SAN ) , a Local Area Network ( LAN ) , Wide Area Network ( WAN ) , the Internet , an Intranet , etc . .", "label": "", "metadata": {}, "score": "80.68529"}
{"text": "A suitable data structure and encoding / decoding method are described in co - pending U.S. patent application Ser .No .10/917,745 , entitled \" System and Method For Encoding And Decoding Variable - Length Data .\" [ 0044 ] To decompress a particular document , the mini - lexicons 208 associated with the range of token positions for that document are decompressed into translation tables or mappings built from entries of the mini - lexicons 208 which translate the LTokenIDs to their corresponding GTokenIDs .", "label": "", "metadata": {}, "score": "80.94748"}
{"text": "The skip length 1014 is useful in skipping Layer 4 + headers so that data is stored in the application space 124 .The skip length 1014 is followed by a scatter list of address / length pairs 1016 . . .", "label": "", "metadata": {}, "score": "81.10512"}
{"text": "418 - 429 , XP008013391 , Proceedings of the DPIE - The International Society for Optical Engineering , 2000 , SPIE - Int .Soc .Opt .Eng . , USA .", "label": "", "metadata": {}, "score": "81.11852"}
{"text": "The re - score stage 406 will only compute the exact results for the items of this candidate list .The resulting table could be the following : ._ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Probability of match with the spokenCandidates utterance ( exact calculation)______________________________________33 14443 13044 12253 8845 6034 50 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .", "label": "", "metadata": {}, "score": "81.2314"}
{"text": "Thus , during decoding / decompression it is possible to jump from one token position to another in the tokenspace repository 112 without the need of skip tables or equivalent data structures , which can slow down the decoding process .[ 0043 ] In some embodiments , the mini - lexicons 208 are encoded in a compressed format and stored until needed for document reconstruction .", "label": "", "metadata": {}, "score": "81.63876"}
{"text": "The header 310 includes the length of the entire protocol data unit , along with other information .The digest 312 , 318 may be derived using a cyclic redundancy check ( e.g. , a CRC-32C technique ) over the data covered .", "label": "", "metadata": {}, "score": "82.03218"}
{"text": "[ 0033 ] As will be explained more fully below , ordering the unique tokens based on frequency helps reduce the amount of space required for storing the mini - lexicons 208 .All other GTokenIDs can be offset by the last special GTokenID allocated to the prefix 205 .", "label": "", "metadata": {}, "score": "83.71205"}
{"text": "The compressor generates an ICC A for codestream .FIG .27 illustrates one embodiment of a simpler camera encoder .That is , instead of including RCT / ICT converter 2603 and compressor 2604 , a simple camera encoder includes only compressor block 2702 .", "label": "", "metadata": {}, "score": "83.79232"}
{"text": "The compressor generates an ICC A for codestream .FIG .27 illustrates one embodiment of a simpler camera encoder .That is , instead of including RCT / ICT converter 2603 and compressor 2604 , a simple camera encoder includes only compressor block 2702 .", "label": "", "metadata": {}, "score": "83.79232"}
{"text": "The compressor generates an ICC A for codestream .FIG .27 illustrates one embodiment of a simpler camera encoder .That is , instead of including RCT / ICT converter 2603 and compressor 2604 , a simple camera encoder includes only compressor block 2702 .", "label": "", "metadata": {}, "score": "83.79232"}
{"text": "The server 600 may optionally include a user interface , for instance a display and a keyboard .Memory 602 may include high speed random access memory and may also include non - volatile memory , such as one or more magnetic disk storage devices .", "label": "", "metadata": {}, "score": "83.87439"}
{"text": "They are layer - resolution - component - position progression ( LRCP ) , resolution - layer - component - position progression ( RLCP ) , resolution - position - component - layer progression ( RPCL ) , position - component - resolution - layer progression ( PCRL ) , component - position - resolution - layer progression ( CPRL ) .", "label": "", "metadata": {}, "score": "83.97464"}
{"text": "They are layer - resolution - component - position progression ( LRCP ) , resolution - layer - component - position progression ( RLCP ) , resolution - position - component - layer progression ( RPCL ) , position - component - resolution - layer progression ( PCRL ) , component - position - resolution - layer progression ( CPRL ) .", "label": "", "metadata": {}, "score": "83.97464"}
{"text": "They are layer - resolution - component - position progression ( LRCP ) , resolution - layer - component - position progression ( RLCP ) , resolution - position - component - layer progression ( RPCL ) , position - component - resolution - layer progression ( PCRL ) , component - position - resolution - layer progression ( CPRL ) .", "label": "", "metadata": {}, "score": "83.97464"}
{"text": "In the above discussion , the GTokenIDs are described as fixed length values , such as 32-bit unsigned integer values .However , these same GTokenIDs can also be considered to be variable length identifiers , because when the GTokenIDs are encoded for storage , the most significant bytes ( or bits ) that are equal to zero may be truncated or masked off during encoding .", "label": "", "metadata": {}, "score": "84.0242"}
{"text": "The resulting set of mappings of GTokenIDs to unique token values is herein called the global - lexicon 206 .In some embodiments , the global lexicon 206 actually comprises two mapping structures , one which maps GTokenIDs to tokens , and another that maps tokens to GTokenIDs .", "label": "", "metadata": {}, "score": "84.098495"}
{"text": "The wavelet transform processing logic 202 includes memory access logic 202 A to read data from and store data to memory 201 to enable wavelet transform 202 B to be applied to the data ( image data or coefficients depending on the level of coefficient ) .", "label": "", "metadata": {}, "score": "84.24417"}
{"text": "The wavelet transform processing logic 202 includes memory access logic 202 A to read data from and store data to memory 201 to enable wavelet transform 202 B to be applied to the data ( image data or coefficients depending on the level of coefficient ) .", "label": "", "metadata": {}, "score": "84.24417"}
{"text": "The wavelet transform processing logic 202 includes memory access logic 202 A to read data from and store data to memory 201 to enable wavelet transform 202 B to be applied to the data ( image data or coefficients depending on the level of coefficient ) .", "label": "", "metadata": {}, "score": "84.24417"}
{"text": "[ 0049 ] FIG .3B is a block diagram of an embodiment of a decoding system 308 for decoding documents in a tokenspace repository .The decoding system 308 includes a variable - length data decoder 310 and an optional delta decoder 312 .", "label": "", "metadata": {}, "score": "84.38556"}
{"text": "In certain embodiments , the network adapter 128 may implement the Ethernet protocol ( IEEE std .802.3 , published Mar. 8 , 2002 ) , Fibre Channel protocol ( American National Standards Institute ( ANSI )X3.269- 199X , Revision 012 , Dec. 4 , 1995 ) or any other network communication protocol known in the art .", "label": "", "metadata": {}, "score": "84.80499"}
{"text": "Each attribute record 318 may be encoded so as to compress the amount of space occupied by the attributes table while enabling very fast decoding of selected attribute records during query processing .One suitable methodology for encoding and decoding the attribute records 318 is described in co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "85.30887"}
{"text": "To facilitate compression of the documents , the LTokenIDs have a smaller width ( e.g. , 1 byte ) than the GTokenIDs ( e.g. , 4 bytes ) .The difference of these widths ( e.g. , 3 bytes ) represents a reduction in the number of bytes per token used to store the tokenized documents in the tokenspace repository 112 .", "label": "", "metadata": {}, "score": "85.644615"}
{"text": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Candidates Match Scores______________________________________43 13044 12245 60 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .", "label": "", "metadata": {}, "score": "86.17201"}
{"text": "This work was mainly supported by two funds , i.e. , the National Natural Science Foundation of China ( 60933005 & 61100083 ) .The funders had no role in study design , data collection and analysis , decision to publish , or preparation of the manuscript .", "label": "", "metadata": {}, "score": "88.6432"}
{"text": "4 illustrates three transport layer segments 410 , 420 , 430 in accordance with certain embodiments .Each transport layer segment 410 , 420 , 430 includes a Layer 4 header # 1 , # 2 , # 3 , respectively .", "label": "", "metadata": {}, "score": "89.1421"}
{"text": "\\lx aako \\ps N \\pt FEM \\ge mother \\ge aunt \\tkp mama \\nt Mo / FaBrWi \\sf KIN \\dt 29/Apr/2007 \\ex Aako avaoe eisire kovoa upiriko erisia .\\xp Mama em i go digim kaukau long gaden . \\xe Mother went to the garden to dig sweet potato .", "label": "", "metadata": {}, "score": "90.384186"}
{"text": "The addition of four rows , rows 341 - 342 , to the memory space used to hold the L1 coefficients is needed to generate the L2 coefficients when reusing the memory storing the L1 coefficients for L2 coefficients .( Note that there are two rows between rows 341 and 342 that are wasted space . )", "label": "", "metadata": {}, "score": "90.46936"}
{"text": "The addition of four rows , rows 341 - 342 , to the memory space used to hold the L1 coefficients is needed to generate the L2 coefficients when reusing the memory storing the L1 coefficients for L2 coefficients .( Note that there are two rows between rows 341 and 342 that are wasted space . )", "label": "", "metadata": {}, "score": "90.46936"}
{"text": "The parity generator 184 is capable of generating parity information in accordance with embodiments .Each network adapter 128 includes various components implemented in the hardware of the network adapter 128 .Each network adapter 128 is capable of transmitting and receiving packets of data over network 176 .", "label": "", "metadata": {}, "score": "91.57555"}
{"text": "The transport protocol layer unpacks a payload from the received Transmission Control Protocol / Internet Protocol ( TCP / IP ) packet and transfers the data to a network driver 126 to return to an application program 122 .Further , an application program 122 transmitting data transmits the data to a network driver 126 , which then sends the data to the transport protocol layer to package in a TCP / IP packet before transmitting over the network 176 .", "label": "", "metadata": {}, "score": "95.91128"}
{"text": "The GTokenIDs are received by the inverse index 408 , which includes a map 404 for mapping the GTokenIDs to index records 412 stored in the inverse index 408 .Each index record 412 identified using the map 404 contains a list of token positions , which directly correspond to token positions in the tokenspace repository 112 .", "label": "", "metadata": {}, "score": "100.41867"}
{"text": "Received : November 2 , 2012 ; Accepted : September 23 , 2013 ; Published : November 15 , 2013 .Copyright : \u00a9 2013 Lin et al .This is an open - access article distributed under the terms of the Creative Commons Attribution License , which permits unrestricted use , distribution , and reproduction in any medium , provided the original author and source are credited .", "label": "", "metadata": {}, "score": "100.96734"}
