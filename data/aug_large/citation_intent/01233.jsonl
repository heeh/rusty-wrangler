{"text": "Would this be a good fit for policies or should i just pass the file handle to global static functions or should i just create a class for each type of file ?I want to make sure the user errors are low :) and policies seem to be less error prone .", "label": "", "metadata": {}, "score": "39.51391"}
{"text": "Building an agent using policies .Policies decomposition .\" It is as if [ some_host_class ] acts as a little code generation engine and you configure the ways in which it generates code \" .Andrei Alexandrescu .Let 's start by building the dynamic model of our agent .", "label": "", "metadata": {}, "score": "40.521057"}
{"text": "Use Ctrl+Left / Right to switch messages , Ctrl+Up / Down to switch threads , Ctrl+Shift+Left / Right to switch pages .I 've been reading the book by Andrei Alexandrescu Modern C++ Design .And i have a question about the decomposition of a class into policies .", "label": "", "metadata": {}, "score": "42.67096"}
{"text": "Well , the setup method is defined on the Waveform class template .But the array is hold on the policy , as well as the accessors for the array and the size of the array .Plus , you can extend functionality for the policy .", "label": "", "metadata": {}, "score": "43.44017"}
{"text": "Signals and slots are for the next .Policies Class Design .I have run into Policy class design in the famous book of Andrei Alexandrescu \" Modern C++ design \" , see [ Alexandrescu , 2001].The basic idea is to assemble a class with complex behavior by combining little classes ( called . policies , each of which takes care of only one behavior or structural aspect ) .", "label": "", "metadata": {}, "score": "43.91335"}
{"text": "This configuration database handles the configuration data parameters that need to be passed to the dynamic webpage template stored in the dynamic webpage template file system 146 in order to render , at least in part , the desired target webpage .", "label": "", "metadata": {}, "score": "44.749043"}
{"text": "Specifying multiple policy files : policy.url .Note : By allowing command - line JVM parameters , Java provides a significantly more flexible and configurable environment , without conflicts among multiple JVM installations .Code Containment : Verification .In both environments , the respective VM starts out with bytecode , which it verifies and executes .", "label": "", "metadata": {}, "score": "45.44029"}
{"text": "A method for proofing a prototype dynamic webpage version referencing first configuration data is disclosed .The prototype dynamic webpage can be derived from a live version referencing second configuration data and accessible via a live link .Also disclosed is a dynamic webpage versioning system working off a configuration database and distinct versions of configuration data .", "label": "", "metadata": {}, "score": "45.53581"}
{"text": "Java platform provides a single GUI - based tool , policytool.exe , shown in Figure 2 , for setting code- and Principal - based security policies .This tool works with arbitrary policy files ( as long as they are in the proper format ) , as opposed to .", "label": "", "metadata": {}, "score": "46.123096"}
{"text": "Figure 2 .Policytool.exe screen .NET defines machine - wide and application - specific configuration files , and allows for enterprise , machine , and user security policy configuration , whose intersection provides the effective policy for the executing user .", "label": "", "metadata": {}, "score": "46.611404"}
{"text": "Idea is to inherit from file and create a different templates that can later be spawned when needed .Would this be a good fit for policies or should i just pass the file handle to global static functions or should i just create a class for each type of file ?", "label": "", "metadata": {}, "score": "46.901577"}
{"text": "Policies are a clever switch mechanism , they are used for any of the following : .A Factory pattern with one Template Factory that switches between products .A Strategy pattern with one Template class that switches behavior between behavior .", "label": "", "metadata": {}, "score": "47.3654"}
{"text": "However , a new problem emerges when dynamic webpage templating is extensively leveraged .The sophistication required in updating , modifying or altering the dynamic template or configuration data to produce a desired target webpage quickly approaches the complexity seen in conventional programming tasks , and a need for structured development of such templates , or at least configuration data becomes apparent .", "label": "", "metadata": {}, "score": "47.77261"}
{"text": "Responsive to these issues , the present invention is directed in part to a method for proofing a prototype dynamic webpage version referencing first configuration data , the prototype dynamic webpage being associated with a live dynamic webpage version referencing second configuration data and accessible via a live link .", "label": "", "metadata": {}, "score": "47.809002"}
{"text": "At this transition , the publication engine 130 performs several actions .First , it determines whether for backup purposes the previous LIVE version needs to retain static HTML files or in fact need only store configuration information .It should be realized that only configuration information need be stored in order to recreate the webpage at least dynamically for the previous version ( assuming the dynamic template and JSP include files remain unchanged , or , at worst are backwards compatible with the PREVIOUS_LIVE version ) .", "label": "", "metadata": {}, "score": "48.28295"}
{"text": "A dynamic webpage , on the other hand , through an appropriate code structure , can define numerous distinct rendered pages to the browser depending on e.g. input provided by the end - user which is passed to the dynamic webpage in the form of configuration and/or runtime data .", "label": "", "metadata": {}, "score": "48.32074"}
{"text": "An example structure is shown in .FIG .5 .As shown in .FIG .5 , each dynamic webpage maintained by the website manager 102 preferably has a number of subdirectories underneath it , one for each version .", "label": "", "metadata": {}, "score": "48.457615"}
{"text": "Andrei Alexandrescu spends an entire chapter about the Policy design , I will try to illustrate it below on the agent - behavior creation .How an autonomous agent works ?The agent is basically a body ( dynamics ) that moves accordingly to his brain ( behavior ) .", "label": "", "metadata": {}, "score": "48.750763"}
{"text": "Add the location of the header files , source files , and libraries to the VC++ Environment .Make the appropriate entry for the previously mentioned items in the drop down menu .Project Integration .This step will allow us to # include\"ecp.h \" , rather than including ecp.h and all of its dependencies , and specifying full or relative paths .", "label": "", "metadata": {}, "score": "49.34507"}
{"text": "Add the location of the header files , source files , and libraries to the VC++ Environment .Make the appropriate entry for the previously mentioned items in the drop down menu .Project Integration .This step will allow us to # include\"ecp.h \" , rather than including ecp.h and all of its dependencies , and specifying full or relative paths .", "label": "", "metadata": {}, "score": "49.34507"}
{"text": "It should be noted that after initial edit and save as work in progress , further configuration database information will thereafter be plucked from the WIP record contained in the configuration database until an activation transition is invoked .Once the initial configuration information or data has been retrieved from the version undergoing edit , a copy of that configuration information is stored and updated in the WIP record for the webpage .", "label": "", "metadata": {}, "score": "49.35554"}
{"text": "It should be appreciated that a relatively small number of dynamic webpage templates which include feature - rich custom and predefined tags and/or sophisticated coding can define quite a variety of HTML , XML , VML , or other static forms of webpages .", "label": "", "metadata": {}, "score": "49.432816"}
{"text": "For reading / navigating XML files .This uses dom4j under the covers and provides complete XPath support .Override specifier .In C++98 using polymorphic types can sometimes lead to head - scratching results : .On the face of it this code looks sound ; indeed it will compile with no errors or warnings .", "label": "", "metadata": {}, "score": "49.805405"}
{"text": "Use of abstract base classes and substitution , using pure virtual functions and dynamic polymorphism allows you to build flexible and adaptable solutions , particularly in areas of your system that will be subject to change over the life of the system .", "label": "", "metadata": {}, "score": "50.116028"}
{"text": "The idea is reminiscent of the Strategy Pattern , but uses templates rather than interfaces .Virtual functions .Virtual functions in C++ exist to maintain the consistent behaviour of polymorphism when accessing derived objects via base class pointers .( If that statement has made your head spin , I 'd suggest reading this article before carrying on ) .", "label": "", "metadata": {}, "score": "50.233383"}
{"text": "You 'll understand the behavior of a framework much better if you set a breakpoint and then look at all the calls that lead up to a specific point in the code .That 's what I 've been prompting you to do .", "label": "", "metadata": {}, "score": "50.37225"}
{"text": "You 'll understand the behavior of a framework much better if you set a breakpoint and then look at all the calls that lead up to a specific point in the code .That 's what I 've been prompting you to do .", "label": "", "metadata": {}, "score": "50.37225"}
{"text": "This measure works to preserve and prevent bogus code from being added to packages .Secure class loading is the cornerstone of JVM security -- a class loader is authorized to make decisions about which classes in which packages can be loaded , define its CodeSource , and even set any permissions of its choice .", "label": "", "metadata": {}, "score": "50.947987"}
{"text": "Here are the some of the guidelines that the project tries to follow : .Break down all classes into orthogonal policies ( I will talk about it later ) .Use signals and slots for rendering , .Use as much as possible STL and Boost .", "label": "", "metadata": {}, "score": "50.95623"}
{"text": "Configuration .Configuration on both platforms is handled through XML or plain - text files , which can be modified in any text editor , or through the supplied tools .However , the platforms differ significantly in how they handle configuration hierarchies .", "label": "", "metadata": {}, "score": "51.080864"}
{"text": "In addition , as noted in .FIG .7 , the publication and engine updates the links inside the dynamic webpage template 470 in order for it to point to the correct static HTML files 430 , 432 .In addition , the publication engine 130 apprises the user requesting the proof of the URL address in which to load and execute the PROTO version of the desired dynamic webpage .", "label": "", "metadata": {}, "score": "51.17828"}
{"text": "Thus , in this case , the static HTML files are preserved in the PREVIOUS_LIVE subdirectory of the file system 144 or the webpage in question as files 450 and 452 .Configuration data for the current LIVE version is stored in the PREVIOUS_LIVE record in the configuration database and orchestrated by the publication engine 130 .", "label": "", "metadata": {}, "score": "51.181076"}
{"text": "Moreover , it would be advantageous to provide a dynamic webpage versioning system capable of tracking at least one previous version of a published dynamic webpage to enhance recovery operations and reduce website down time when bugs or unexpected operation occurs when a current version is rendered .", "label": "", "metadata": {}, "score": "51.45247"}
{"text": "So you call setup in the Template Manager , as I said the manager receives an Array , but it calls a method of the policy to receive the array .This method in the policy maps a matrix into an array , or a database into an array .", "label": "", "metadata": {}, "score": "51.454613"}
{"text": "Remarks : Of course there is a problem with the steering norm , but , again , for the sake of clarity it is not addresed here .Merging together policies in the host class .Here comes the magic of the policies .", "label": "", "metadata": {}, "score": "51.742615"}
{"text": "3 ) as part of the configuration during rendition of the dynamic webpage to \" link \" code presented in the template , such as a custom JSP tag having awareness of the hierarchical file system 144 .Of course , other techniques for managing file links may be used as is known in the art .", "label": "", "metadata": {}, "score": "51.802597"}
{"text": "Significantly , we have changed the stack class 's definition , so all files that use the stack now need recompiling .This , then , has a knock on effect to the amount of regression testing that is required .An alternative strategy is to use dynamic polymorphism and interfaces to make our code more testable and reusable .", "label": "", "metadata": {}, "score": "51.879932"}
{"text": "The method of .claim 1 , wherein storing the first configuration data in a configuration database comprises storing the first configuration data in a hierarchical file system including a different subdirectory for each dynamic webpage version .The method of . claim 2 , wherein rendering further comprises including static components from a prototype subdirectory .", "label": "", "metadata": {}, "score": "51.981873"}
{"text": "You want to run a set of functions in one thread and another in another thread , thus you create a class manager of functions , with global static functions the refactoring needed could get tiresome .Class for each type of file .", "label": "", "metadata": {}, "score": "52.044327"}
{"text": "There are two ways you can deal with this , either change Crypto++ to export those classes , by using the CRYPTOPP_DLL macro , or link with both the DLL export library and a static library that contains the non - DLL classes and functions .", "label": "", "metadata": {}, "score": "52.135864"}
{"text": "There are two ways you can deal with this , either change Crypto++ to export those classes , by using the CRYPTOPP_DLL macro , or link with both the DLL export library and a static library that contains the non - DLL classes and functions .", "label": "", "metadata": {}, "score": "52.135864"}
{"text": "-For creating and manipulating URIs and URLs .The API for this tool is designed to closely resemble that of the VelocityView tool of the same name .- For working with arrays and lists , treats both transparently the same .", "label": "", "metadata": {}, "score": "52.287132"}
{"text": "It 's much better to look at code in a running dynamic process then to do endless static analysis .That should make this code kick in to create a class loader that loads classes , i.e. , the compiled templates , from your bundle .", "label": "", "metadata": {}, "score": "52.452724"}
{"text": "Implementing the ModelPolicy .A class that implements a policy is called a policy class .The simplest dynamic model is the point - mass model integrated by an explicit euler scheme : . class point_mass_model .protected : . vec m_acceleration ; . vec m_velocity ; .", "label": "", "metadata": {}, "score": "52.514"}
{"text": "That should make this code kick in to create a class loader that loads classes , i.e. , the compiled templates , from your bundle .Ok that 's maybe a solution , i can use it even as general switch for all generation task in the plugin .", "label": "", "metadata": {}, "score": "52.761814"}
{"text": "policy , $ HOME/. java.policy Machine and user security policy that grants evidence- and Principal - based code permissions .Additional / alternative files may be specified on the command line or in the java.security file .J2EE : % application dir%/WEB - INF / web . xml , % application dir%/META - INF / ejb - jar .", "label": "", "metadata": {}, "score": "52.794533"}
{"text": "Most examples show parts like construction , destruction , thread safety and so on .Simply put small policies :) .What if i want to create a file io class , that takes a file type as a policy , e.g. .", "label": "", "metadata": {}, "score": "52.921494"}
{"text": "A data storage system 145 is also provided as part of the website manager 102 .As discussed previously , this data storage system includes a number of logical file systems and databases in which one or more components of the dynamic pages are retained .", "label": "", "metadata": {}, "score": "53.74903"}
{"text": "This mechanism is known as dynamic polymorphism .Dynamic polymorphism is a very powerful mechanism for building flexible , maintainable solutions .Abstract Base Classes .Let 's take a common design problem .During design we identify a set of classes with some similar behaviour but some unique behaviour .", "label": "", "metadata": {}, "score": "53.8916"}
{"text": "The \" UAS \" section in Part 4 of this series will provide more detailed coverage of their elements .Certain JVM parameters may be configured only in $ JAVA_HOME / lib / security / java .security , as shown in the examples below : .", "label": "", "metadata": {}, "score": "53.903652"}
{"text": "In the other case it is always both required the plugin and the configuration in the genmodel to use the DT templates .To simplify this i like to merge all in the plugin and e.g. enabled it by an annotation in the genmodel .", "label": "", "metadata": {}, "score": "53.927933"}
{"text": "The web designer community is looking to dynamic webpages as a way to contain the problem of ever growing and increasingly complex websites , while providing richer features and more detailed and varied content .Without dynamic webpages , web designers would have to craft , track and maintain each distinct webpage individually , and interaction with a browser supporting an end - user would be limited at best .", "label": "", "metadata": {}, "score": "54.02904"}
{"text": "( e.g. registration ? ) UML2 does this , but it has its own extended GenModel and therefore has specialized adapters that kick in .You 'll understand the behavior of a framework much better if you set a breakpoint and then look at all the calls that lead up to a specific point in the code .", "label": "", "metadata": {}, "score": "54.156776"}
{"text": "More recently , the use of \" dynamic \" webpages has become commonplace in website design , in part to ease design and publication burdens faced when attempting to build and manage large and feature - rich websites .Dynamic webpages are a type of webpage that produces potentially differing web content and/or interfacing on - the - fly based on one or more variable parameters passed to the webpage by a client browser or otherwise .", "label": "", "metadata": {}, "score": "54.173103"}
{"text": "Compare this to the entry in row 210 , where only the configuration data for the dynamic page components need be referred to and utilized .This is because the static components have already been pre - rendered in HTML form equivalents , thus eliminating the need for consultation with the static component configuration data contained in the configuration database 147 .", "label": "", "metadata": {}, "score": "54.373264"}
{"text": "In an alternative embodiment , a conventional client - based WYSIWYG or other type of dynamic webpage editor may be utilized from e.g. the permitted user - client PC 105 as shown in .FIG .1 .Finally , the website manager 102 includes a publication engine 130 .", "label": "", "metadata": {}, "score": "54.638447"}
{"text": "The real reason for building another library was that OpenSteer was mainly a collection of C function wrapper into some C++ classes ( ok I 'm exagerating ... ) .MetaAgent plans ( and hopefully will succeed ) to use the full power of the C++ and Generic Programming to create behaviors .", "label": "", "metadata": {}, "score": "54.661827"}
{"text": "-For creating s to easily alternate over a set of values .-For simplifying reflective lookup of information about Classes and their fields , methods and constructors .-For convenient access to Context data and meta - data .", "label": "", "metadata": {}, "score": "54.98923"}
{"text": "Stephan , .Notice that the class loader of your derived generator adapter is used to find the compiled ( static ) template , so if you have compiled templates with the same qualified names as provided by EMF 's generator they 'll \" override \" the ones from the base .", "label": "", "metadata": {}, "score": "55.15554"}
{"text": "Note that in Wei 's first solution , we are rebuilding the DLL ( not the FIPS DLL ) to export the additional functions we require by using the CRYPTO_DLL macro .We may also have to add the source files to the cryptdll project in the solution .", "label": "", "metadata": {}, "score": "55.190773"}
{"text": "Note that in Wei 's first solution , we are rebuilding the DLL ( not the FIPS DLL ) to export the additional functions we require by using the CRYPTO_DLL macro .We may also have to add the source files to the cryptdll project in the solution .", "label": "", "metadata": {}, "score": "55.190773"}
{"text": "PROS .One master interface to rule them all .Creates code on compilation time , thus you are making ONE class for each one that you use .Easy to maintain compared to lots of boilerplatty classes .CONS .As Alexandrescu states , some template coding could render the compile optimizations useless .", "label": "", "metadata": {}, "score": "55.589638"}
{"text": "As you can see , agent inherits from ModelPolicy and BehaviorPolicy and thus it inherits all their methods ! agent is called a host class since it is built from policies .Determining the interface .Unlike classic interfaces ( collection of pure virtual methods ) , policies interfaces are loosely defined .", "label": "", "metadata": {}, "score": "55.61421"}
{"text": "It starts by looking at the overall class file format to check for specific tags , and ends up verifying opcodes and method arguments .The final pass is not performed until method invocation , and it verifies member access policies .", "label": "", "metadata": {}, "score": "55.80669"}
{"text": "For common escaping needs in Velocity templates ( e.g. escaping html , xml , javascript etc . ) .-For ( easy ) access to static fields in a class , such as string constants . -A convenience tool to use with # foreach loops .", "label": "", "metadata": {}, "score": "55.865746"}
{"text": "The static HTML equivalents are rendered as the dynamic webpage transitions from unpublished to PROOF , also known as an activation transition 460 shown in .FIG .4 for a JSP implementation .In particular , the publication engine 130 causes the static components of the JSP dynamic webpage to be rendered with relation to WIP configuration data contained in the configuration database 147 .", "label": "", "metadata": {}, "score": "55.89486"}
{"text": "The Java VM is responsible for loading , linking , verifying , and executing Java classes .In the HotSpot JVM , Java classes are always interpreted first , and then only certain , most frequently used sections of code are compiled and optimized .", "label": "", "metadata": {}, "score": "56.015472"}
{"text": "Use Ctrl+Left / Right to switch messages , Ctrl+Up / Down to switch threads , Ctrl+Shift+Left / Right to switch pages .A method for proofing a prototype dynamic webpage version referencing first configuration data is disclosed .The prototype dynamic webpage can be derived from a live version referencing second configuration data and accessible via a live link .", "label": "", "metadata": {}, "score": "56.2587"}
{"text": "Just so everyone knows , you do n't have to fight the libs .Just integrate the Crypto++ static lib into dll with the same settings , write an API for the dll and export the API functions through a . def file ( rather than integrated in the code using _ declspec ) and , in your application , use LoadLibrary ( ) and GetProcAddress ( ) to get the exported API functions .", "label": "", "metadata": {}, "score": "56.3504"}
{"text": "The latter associates CodeSource ( i.e. , URL and code signers ) with fixed sets of permissions , and is created by the appropriate class loaders ( URL , RMI , custom ) .These domains may be created on demand to account for dynamic policies , provided by JAAS mechanism ( to be covered in Part 4 , in the \" Authentication \" section ) .", "label": "", "metadata": {}, "score": "56.440544"}
{"text": "As mentioned above , these JSP files may be stored with the template file in the template database 146 , or could be stored within the WIP version subdirectory ( e.g. subdirectory 510 in .FIG .5 ) .However , the particular placement of the JSP files defining the static components dynamically is not important as long as it can be made accessible to the web logic server 140 when the dynamic page needs to be rendered .", "label": "", "metadata": {}, "score": "56.470615"}
{"text": "GenericTools is the set of classes that provide basic infrastructure for using tools in standard Java SE Velocity projects , as well as a set of tools for use in generic Velocity templates .These tools have no Java EE dependencies and are often safe to use as \" singletons \" .", "label": "", "metadata": {}, "score": "56.62313"}
{"text": "In either case of unpublished or published dynamic webpage , links are preserved to the shared file asset system 149 or to other places either locally or remotely accessible to the website manager 102 as is known in the art .The four dynamic webpage versions will now be discussed in greater detail with reference to .", "label": "", "metadata": {}, "score": "56.80915"}
{"text": "When most people use the term polymorphism they are actually referring to Dynamic Polymorphism .The expression b + c is related to Static Polymorphism .With static polymorphism , the actual code to run ( or the function to call ) is known at compile time .", "label": "", "metadata": {}, "score": "56.87545"}
{"text": "3 is a diagram of an example organization of the configuration database shown in .FIG .1 .FIG .4 diagrammatically illustrates publication stages of a dynamic webpage in accordance with an embodiment of the invention .FIG .5 diagrammatically illustrates an example of hierarchical storage in accordance with an embodiment of the invention .", "label": "", "metadata": {}, "score": "56.885002"}
{"text": "We make the unique behaviour virtual so that derived classes can provide their own ( overridden ) implementation .In the client code we can use dynamic polymorphism to decouple us from any particular implementation : .What 's to stop us creating a base class object , though ?", "label": "", "metadata": {}, "score": "57.11531"}
{"text": "Dynamic polymorphism is an incredibly powerful construct and , used well , creates code that can easily be adapted in the face of changing requirements with minimal impact .However it all comes at a cost .The run - time lookup for virtual functions requires additional code and data .", "label": "", "metadata": {}, "score": "57.11557"}
{"text": "Application security settings are determined by CLR on a per - domain basis , by default using host 's security settings to determine those for loaded assemblies .The CLR receives information about the assembly 's evidence from so - called trusted hosts : .", "label": "", "metadata": {}, "score": "57.127625"}
{"text": "Three security configuration files ( enterprise , machine , and user ) contain information about configured zones , trusted assemblies , permission classes , and so on .The general machine configuration file , on the other hand , contains machine - wide settings for algorithms , credentials , timeouts , and so on .", "label": "", "metadata": {}, "score": "57.23211"}
{"text": "Next , referring to .FIGS .4 and 8 , the PROTO versions of the static html equivalents 440 , 442 and configuration data are pushed to the LIVE storage areas in the file system 144 and configuration database 147 respectively by the publication engine 130 .", "label": "", "metadata": {}, "score": "57.4774"}
{"text": "In particular , this publication engine 130 renders the static HTML equivalents as discussed above ( see .FIG .7 ) at the activation transition 460 .Include links to the static component equivalents may be conveniently created on the fly through passing the version information ( column 310 , .", "label": "", "metadata": {}, "score": "57.533073"}
{"text": "So , in this case , four rows 315 , 320 , 325 , and 330 each define the different versions or flavors of a target webpage ( \" website 1 \" in .FIG .3 ) which utilize a common dynamic webpage template and potentially varying configuration data .", "label": "", "metadata": {}, "score": "57.827553"}
{"text": "The authors have used it for quite some time with both Visual Studio 8.0 and Visual Studio 9.0 .Unfortunately , the x64 build settings have been removed by the IDE because the x64 compiler and headers were not installed during installation .", "label": "", "metadata": {}, "score": "57.843483"}
{"text": "The authors have used it for quite some time with both Visual Studio 8.0 and Visual Studio 9.0 .Unfortunately , the x64 build settings have been removed by the IDE because the x64 compiler and headers were not installed during installation .", "label": "", "metadata": {}, "score": "57.843483"}
{"text": "This also enables the publication engine 130 to easily distinguish from a template designer 's perspective which components are static versus dynamic , by simply referring to the include statement in the main dynamic webpage template file 414 .However , in another embodiment , the static components 410 and 412 may be contained in - line in e.g. spaces 416 and 418 of the main template 414 , though doing so may complicate versioning from a template perspective .", "label": "", "metadata": {}, "score": "57.94236"}
{"text": "when setStaticTemplateClass is called .Yes I have one , but I think I need an example to explain what I want .I have an new template ResourceManager which is generated in my GenAdapter .( without a AdapterFactory )Now i have adapted the Editor.javajet template to use the ResourceManager .", "label": "", "metadata": {}, "score": "57.98658"}
{"text": "First , remove the declaration for suffix and change the switch statement . switch ( f ) .Next , add the following : .Using this library requires really huge patience ...Up to now , I 've been struggling with this and never succeeded yet .", "label": "", "metadata": {}, "score": "58.10283"}
{"text": "First , remove the declaration for suffix and change the switch statement . switch ( f ) .Next , add the following : .Using this library requires really huge patience ...Up to now , I 've been struggling with this and never succeeded yet .", "label": "", "metadata": {}, "score": "58.10283"}
{"text": "The new one can be overwritten again by the DT .At one point now I have to add a new file , so i wrote a plugin for it based on org.eclipse.emf.examples.generator.validator .Notice that the class loader of your derived generator adapter is used to find the compiled ( static ) template , so if you have compiled templates with the same qualified names as provided by EMF 's generator they 'll \" override \" the ones from the base .", "label": "", "metadata": {}, "score": "58.13771"}
{"text": "To evaluate and render arbitrary strings of VTL , including recursive rendering .- For simplified access to ResourceBundles for internationalization or other dynamic content needs . -Used to sort collections ( or arrays , iterators , etc ) on any arbitary set of properties exposed by the objects contained within the collection .", "label": "", "metadata": {}, "score": "58.19381"}
{"text": "In all other cases ( and with custom objects ) explicit conversion is required . ..NET defines the following accessibility modifiers : public , internal ( only for the current assembly ) , protected , protected internal ( union of protected and internal ) , and private .", "label": "", "metadata": {}, "score": "58.372097"}
{"text": "If you require strict thread - safety , be cautious in using any configurable tools and consider restricting the abilities of template authors to prevent circumvention of the lockdown placed on configuration methods .Default Configuration .The default configuration provided for GenericTools is here .", "label": "", "metadata": {}, "score": "58.43611"}
{"text": "FIG .1 .Turning to the static components column 235 , for the unpublished version , if there are additional static component files , such static component files will be in the dynamic format , as discussed above .In the case of published versions , the static components will have been rendered by the publication engine 130 and stored in the appropriate version subdirectory of the file system 144 .", "label": "", "metadata": {}, "score": "58.453026"}
{"text": "Also , I did not perform the ' copy libraries to crypto++ root ' .I just used C:\\CryptoPP(5.6.1)\\Win32\\Output\\Debug and C:\\CryptoPP(5.6.1)\\Win32\\Output\\Release .I also removed the ' No default library ' setting in your project .This could mask multiply defined symbols .", "label": "", "metadata": {}, "score": "58.623928"}
{"text": "Note : .NET 's AppDomains , which are modeled as processes in an OS , are more straightforward and easier to use than Java 's ProtectionDomains .Code Containment : Language Features .Both platforms ' languages have the following security features : .", "label": "", "metadata": {}, "score": "58.653748"}
{"text": "NET Security , Part 1 Security Configuration and Code Containment .This article initiates a series that will provide a side - by - side technical comparison of security features of Java v1.4.2/J2EE v1.4 ( beta2 ) and .NET v1.1 platforms .", "label": "", "metadata": {}, "score": "58.784447"}
{"text": "I understand the syntax of templates ( although it 's ugly ) .I get the idea of replacing function - like macros with template functions .I can see the application of template classes for containers .In this article we 're going to look at an application of templates beyond writing library code - replacing run - time polymorphism ( interfaces ) with compile - time polymorphism .", "label": "", "metadata": {}, "score": "59.018433"}
{"text": "Static linking is usually preferred ( versus the DLL or FIPS DLL ) .According to Wei Dai : . ...there should not be any problems linking a DLL against a DLL .But using the static library saves on code size and I 'd suggest it unless you need to use the DLL for some reason ( such as FIPS compliance ) .", "label": "", "metadata": {}, "score": "59.089806"}
{"text": "Static linking is usually preferred ( versus the DLL or FIPS DLL ) .According to Wei Dai : . ...there should not be any problems linking a DLL against a DLL .But using the static library saves on code size and I 'd suggest it unless you need to use the DLL for some reason ( such as FIPS compliance ) .", "label": "", "metadata": {}, "score": "59.089806"}
{"text": "For good measure , the setting should also be changed for Cryptest ( and the validation test re - run : issue cryptest v ) .Runtime Library Conflicts and the Crypto++ DLL / FIPS DLL .Runtime linking presents two difficult situations for the software author .", "label": "", "metadata": {}, "score": "59.144005"}
{"text": "For good measure , the setting should also be changed for Cryptest ( and the validation test re - run : issue cryptest v ) .Runtime Library Conflicts and the Crypto++ DLL / FIPS DLL .Runtime linking presents two difficult situations for the software author .", "label": "", "metadata": {}, "score": "59.144005"}
{"text": "cryptlibd.static.lib .cryptlib.dynamic.lib . cryptlibd.dynamic.lib .To use the configuration , unzip the files on top of the Crypto++ files , replacing as required .For those who are concerned with the library size ( before the linker removes unused functions ) , dynamic runtime linking produces considerably smaller code .", "label": "", "metadata": {}, "score": "59.232887"}
{"text": "cryptlibd.static.lib .cryptlib.dynamic.lib . cryptlibd.dynamic.lib .To use the configuration , unzip the files on top of the Crypto++ files , replacing as required .For those who are concerned with the library size ( before the linker removes unused functions ) , dynamic runtime linking produces considerably smaller code .", "label": "", "metadata": {}, "score": "59.232887"}
{"text": "This error is due to the FIPS DLL only exporting certified algorithms such as AES .Wei offers two solutions to the issue .First , you can statically link against the library .Second , you must use the DLL version of the library ( not the FIPS DLL ) .", "label": "", "metadata": {}, "score": "59.490623"}
{"text": "This error is due to the FIPS DLL only exporting certified algorithms such as AES .Wei offers two solutions to the issue .First , you can statically link against the library .Second , you must use the DLL version of the library ( not the FIPS DLL ) .", "label": "", "metadata": {}, "score": "59.490623"}
{"text": "You can go any way you just said , here are the pros / cons of each : .Global Static Functions .PROS .If you plan to do a small program then what 's the worry ?Just use them and release and stop developing .", "label": "", "metadata": {}, "score": "59.838196"}
{"text": "FIG .1 is capable of providing four distinct versions of each dynamic website it manages .The WIP version is unpublished , meaning it remains fully dynamic ( no pre - rendered static HTML equivalents for the static components ) .", "label": "", "metadata": {}, "score": "59.842373"}
{"text": "The alternate configuration renames the cryptlib project to cryptlib.static .It also adds cryptlib.dynamic ( with settings copied form cryptlib.static ) .Both the static and dynamic projects build debug and release libraries .\" dynamic \" and \" .static \" were chosen rather than 'd ' and 's ' suffixes so that debug builds would not be confused with dynamic C runtime linking builds .", "label": "", "metadata": {}, "score": "59.869698"}
{"text": "The alternate configuration renames the cryptlib project to cryptlib.static .It also adds cryptlib.dynamic ( with settings copied form cryptlib.static ) .Both the static and dynamic projects build debug and release libraries .\" dynamic \" and \" .static \" were chosen rather than 'd ' and 's ' suffixes so that debug builds would not be confused with dynamic C runtime linking builds .", "label": "", "metadata": {}, "score": "59.869698"}
{"text": "NET world , Mscorcfg.msc and Caspol.exe can be used to modify all aspects of security configuration .The former provides a GUI interface , shown in Figure 1 , to modify it .Figure 1 .Mscorcfg.msc screen .On the other hand , Caspol.exe provides a number of command - line options , appropriate for use in scripts and batch routines .", "label": "", "metadata": {}, "score": "59.882202"}
{"text": "So a 128 points per sample Policy would look like .And a 1024 points per sample Policy would look like .As you can see , things can get as long as you want .Another thing is that I implemented my Policies using composition rather than inheritance , which is something that Alexandrescu motivates in his other book of C++ Guidelines with Herb Sutter .", "label": "", "metadata": {}, "score": "59.929928"}
{"text": "BRIEF DESCRIPTION OF THE DRAWINGS .FIG .1 is a schematic diagram of a system including a website manager according to an embodiment of the present invention .FIG .2 describes the differences between unpublished and published dynamic webpages in accordance with an embodiment of the invention .", "label": "", "metadata": {}, "score": "60.07911"}
{"text": "I guess because the class is already loaded from the first time ?I will try it now with an other template name .But the behavior of the first generation i can not change , or is there a mistake in my conclusion ?", "label": "", "metadata": {}, "score": "60.087257"}
{"text": "Referring first to column 220 , it should be appreciated that both the unpublished and published versions of the dynamic webpage utilize a common dynamic webpage template herein stored in the template database 146 ( possibly , in one implementation as a JSP text file ) .", "label": "", "metadata": {}, "score": "60.459103"}
{"text": "FIG .3 , the configuration data for a dynamic webpage template is stored as a record in a flat relational database 147 as shown in .FIG .3 .Here , each column 315 , 320 , 325 and 330 define a different record .", "label": "", "metadata": {}, "score": "60.466682"}
{"text": "Dependencies .The dependencies required for GenericTools vary somewhat depending on which tools you use , whether you will rely on core tool management infrastructure , and if so , how you choose to configure your toolbox .More details can be found on the dependencies chart .", "label": "", "metadata": {}, "score": "60.509415"}
{"text": "In the Java Server Pages example , such code is called a tag .This code also causes the web server executing the dynamic webpage to interact with other applications and objects , such as pulling dynamic or runtime data from e.g. a separately maintained database .", "label": "", "metadata": {}, "score": "60.516983"}
{"text": "The remaining three versions are considered to be published since , in these cases , pre - rendered static html equivalents replace the dynamically coded static components of the dynamic webpage .The differences between published and unpublished webpages will be explored in more detail below with reference to .", "label": "", "metadata": {}, "score": "60.564472"}
{"text": "So modifying the stack class to become : . and main becomes .ms.push(10 ) ; .With template based code we revert back to static polymorphism from dynamic polymorphism , as the actual call to tm.lock ( ) will be compile time resolved at the possible expense of code readability and complexity .", "label": "", "metadata": {}, "score": "60.598938"}
{"text": "Moreover , to simplify database construction , management , and data lookup , each column of the configuration database 147 represents the same type of configuration data .However , such architecture is not required to practice the invention and in fact variably sized and dissimilar records of configuration data may be utilized , as long as the data can be recalled by version from the database .", "label": "", "metadata": {}, "score": "60.907608"}
{"text": "Accessibility modifiers : public , protected , package protected , private .Final classes and methods : final keyword can be applied to a class , method , or variable , and means that this entity can not be changed or overridden .", "label": "", "metadata": {}, "score": "61.265194"}
{"text": "when setStaticTemplateClass is called .( correct ? ? )( e.g. registration ? )I see .UML2 does this , but it has its own extended GenModel and therefore has specialized adapters that kick in .No , I keep pointing you to the specific class in which to set breakpoints .", "label": "", "metadata": {}, "score": "61.306244"}
{"text": "The Java platform 's specifications require the following configuration files : .J2SE : $ JAVA_HOME / lib / security / java .security This file defines security properties for VM : security providers , policy providers , package access restrictions , keystore types , and so on .", "label": "", "metadata": {}, "score": "61.377113"}
{"text": "Conclusions .This article covered security configuration issues and different aspects of code containment on .NET and Java platforms .Java offers a lot of advantages with its configurability .When it comes to code containment , both platforms have pretty strong offerings , with .", "label": "", "metadata": {}, "score": "61.414967"}
{"text": "Lots of tutorials on how to do it .CONS .As a program grows more classes to keep track of .Rewriting of a lot of ....... BOILERPLATE .It is basically the same as using templates , if you can come up with a Template Master Class then some execution problems are limited to that instead of being spread to the rest of the files .", "label": "", "metadata": {}, "score": "61.62835"}
{"text": "Update@?$IteratedHashBase@IVHashTransformation@CryptoPP@@@CryptoPP@@UAEXPBEI@Z ) .I ca n't explain why functions from iterbase.h and iterbase.cpp are affected by inclusion or exclusion of dll.cpp .Common Errors .This section will discuss common compiler and linker errors encountered when using the Crypto+ library .They are usually encountered because of an oversight in following these instructions .", "label": "", "metadata": {}, "score": "61.67867"}
{"text": "Update@?$IteratedHashBase@IVHashTransformation@CryptoPP@@@CryptoPP@@UAEXPBEI@Z ) .I ca n't explain why functions from iterbase.h and iterbase.cpp are affected by inclusion or exclusion of dll.cpp .Common Errors .This section will discuss common compiler and linker errors encountered when using the Crypto+ library .They are usually encountered because of an oversight in following these instructions .", "label": "", "metadata": {}, "score": "61.67867"}
{"text": "On the other hand , JVM always preserves the bytecode stack for runtime checks , while .NET relies on a combination of static analysis and injection of verification code at runtime .Code Containment : Application Isolation .In effect , each VM represents a mini OS by replicating many of its essential features .", "label": "", "metadata": {}, "score": "61.78218"}
{"text": "Even for compiled and optimized code , the JVM maintains two call stacks , preserving original bytecode information .It uses the bytecode stack to perform runtime security checks and verifications , like proper variable assignments , certain type casts , and array bounds ; that is , those checks that can not be deduced from static analysis of Java bytecode .", "label": "", "metadata": {}, "score": "61.841427"}
{"text": "Crypto++ DLL - New and Delete .At times , we might have to force Crypto++ to use new and delete from another library rather than the standard runtime .For this , we would want to call SetNewAndDeleteFunctionPointers .See dll.cpp for Wei 's use of setting the function pointers for the standard runtime .", "label": "", "metadata": {}, "score": "61.91773"}
{"text": "Crypto++ DLL - New and Delete .At times , we might have to force Crypto++ to use new and delete from another library rather than the standard runtime .For this , we would want to call SetNewAndDeleteFunctionPointers .See dll.cpp for Wei 's use of setting the function pointers for the standard runtime .", "label": "", "metadata": {}, "score": "61.91773"}
{"text": "Next , we add the third party component which only offers dynamic linking against the C Runtime .We now have the situation previously described .The preferred workaround is to contact the third party vendor and acquire a library which uses the same runtime settings as our project and Crypto++ .", "label": "", "metadata": {}, "score": "61.97511"}
{"text": "Next , we add the third party component which only offers dynamic linking against the C Runtime .We now have the situation previously described .The preferred workaround is to contact the third party vendor and acquire a library which uses the same runtime settings as our project and Crypto++ .", "label": "", "metadata": {}, "score": "61.97511"}
{"text": "Also shown in .FIG .1 is an application server 140 .This web logic application server may conveniently include a WebLogic \u2122 J2EE compliant Application Server product , version 6.1 or higher , from BEA Systems of San Jose , Calif.", "label": "", "metadata": {}, "score": "62.024193"}
{"text": "The issue is derived as follows : Dynamic C Runtime linking is used by ( /MD or /MDd ) the application , but the distributed FIPS DLL is static ( /MT or /MTd ) .The best solution is using the /NODEFAULTLIB switch and hoping that no runtime issues occur .", "label": "", "metadata": {}, "score": "62.295387"}
{"text": "The issue is derived as follows : Dynamic C Runtime linking is used by ( /MD or /MDd ) the application , but the distributed FIPS DLL is static ( /MT or /MTd ) .The best solution is using the /NODEFAULTLIB switch and hoping that no runtime issues occur .", "label": "", "metadata": {}, "score": "62.295387"}
{"text": "NET and Enterprise Java : Side by Side \" , which was written by Vincent Dovydaitis and me , and which appeared in Numbers 3 - 4 of Computer Security Journal in 2002 .It would be unrealistic to expect complete and detailed coverage of all aspects of platform security in the space available .", "label": "", "metadata": {}, "score": "62.56946"}
{"text": "The following switches can be passed to JVM to control verification : .-verifyremote : verifies only classes from the network ( default ) .-verify : verifies all classes .-noverify : turns off verification completely .Starting with the initial releases of Java , there have been multiple verification problems reported , where invalid / malicious bytecode could sneak beyond the verifier .", "label": "", "metadata": {}, "score": "62.6379"}
{"text": "FIG .1 , also provided within the storage system 145 is a file system 144 which is used to retain on a hierarchical basis , previously rendered static HTML equivalents of the static components of published versions of dynamic webpages .", "label": "", "metadata": {}, "score": "62.767933"}
{"text": "It is still the GenPackageGeneratorAdapter of the ecore.codegen plugin which generate the editor and I see at the moment no way how this plugin should find my class .( correct ? ? )So i expect i have to do more .", "label": "", "metadata": {}, "score": "62.79053"}
{"text": "When I searched for more reference for Policy based design after reading \" Modern C++ Design \" , I stumbled upon this one and this was a really good example of applying Policy based design .Thanks , Jonathan .Definitely !", "label": "", "metadata": {}, "score": "62.842983"}
{"text": "In C++11 the override specifier is a compile - time check to ensure you are , in fact , overriding a base class method , rather than simply overloading it .Introduction .Template functions and classes tend to cause consternation amongst programmers .", "label": "", "metadata": {}, "score": "62.84864"}
{"text": "Another type of dynamic webpage includes active server pages or ASP developed in accordance with the Internet Information Services v 3.0 and above Software Development Kit available from the Microsoft Corporation of Redmond , Wash. Other dynamic webpages could include , by means of example only , Perl pages , PHP pages from the PHP Group , ColdFusion pages from Macromedia , Inc. of San Francisco , Calif. , and servlets defined in Sun 's Java Servlet Specification 2.1 and above .", "label": "", "metadata": {}, "score": "62.85364"}
{"text": "Some of the checks include stack integrity , overflow and underflow , validity of bytecode structure , parameters ' types and values , proper object initialization before usage , assignment semantics , array bounds , type conversions , and accessibility policies .", "label": "", "metadata": {}, "score": "62.86924"}
{"text": "As illustrated via pseudocode in .As will be described in more detail below , in the case of published dynamic webpages , the web logic application server can also include static HTML files into the dynamic page to be rendered , which are stored in this embodiment within the hierarchical file system 144 .", "label": "", "metadata": {}, "score": "62.888195"}
{"text": "This common behaviour can be called from the overridden derived classes ' doStuff ( ) function : . ; void Active::doStuff ( )// Pure virtual function implementation !// Contains all the common behaviour .The design and use of pure virtual functions is two - fold : .", "label": "", "metadata": {}, "score": "63.018906"}
{"text": "Hence , we simply write a method that makes the agent and think and act : .First step , think and compute the steering .This will be the job of the BehaviorPolicy .Second step , apply the computed steering force to the model and integrate the equations : .", "label": "", "metadata": {}, "score": "63.02359"}
{"text": "Automatic memory management is an important feature of both environments -- it aids tremendously in writing stable , leak - free applications .The \" CAS \" section in Part 3 of this series will provide detailed discussion about permissions , policies , and access checks .", "label": "", "metadata": {}, "score": "63.023766"}
{"text": "These static pages 430 and 432 would be stored under the prototype subdirectory 515 shown in .FIG .5 .Moreover , the JSP files 410 and 412 dynamically defining the static components of the dynamic webpage 414 may be stored in this embodiment within the work in progress subdirectory 510 .", "label": "", "metadata": {}, "score": "63.025345"}
{"text": "As told previously , we want to use policies .So we want to decompose that model into orthogonal policies .Let 's take a look at the fact that .Regardless of the dynamical model type , you can always retreive the state of the center of mass .", "label": "", "metadata": {}, "score": "63.032524"}
{"text": "That should make this code kick in to create a class loader that loads classes , i.e. , the compiled templates , from your bundle .does n't find your versions of the classes .when setStaticTemplateClass is called .It is still the GenPackageGeneratorAdapter of the ecore.codegen plugin which generate the editor and I see at the moment no way how this plugin should find my class .", "label": "", "metadata": {}, "score": "63.669598"}
{"text": "The next article of this series , Part 2 , will cover cryptography and communication - protection mechanisms on the Java and .NET platforms .Denis Piliptchouk is a senior technical member of BEA 's AquaLogic Enterprise Security group , participates in OASIS WSS and WS - I BSP standards committees , and regularly contributes to industry publications .", "label": "", "metadata": {}, "score": "63.723442"}
{"text": "But at this time the editor is already generated .Where / When is it set ?The JETEmitterDescriptors is provided only in the generateJava call as far as I see .Ok I 'll take take a look .This is a multi - part message in MIME format .", "label": "", "metadata": {}, "score": "64.00494"}
{"text": "And in fact the wide variety of physical storage system alternatives may be interchangeably used in order to provide the necessary storage features .For example , the data storage system 145 may be provided on a distributed server farm , or any other combination of data storage units , including , as appropriate , a single storage system .", "label": "", "metadata": {}, "score": "64.03601"}
{"text": "Finally , include CryptlibInclude.h in the project .CryptlibInclude.h performs a switch based on _ DLL ( defined when using dynamic runtime linking ) and DEBUG : .Also note that both the static and dynamic libraries use dll.cpp , even though we are not building the DLL .", "label": "", "metadata": {}, "score": "64.19677"}
{"text": "Finally , include CryptlibInclude.h in the project .CryptlibInclude.h performs a switch based on _ DLL ( defined when using dynamic runtime linking ) and DEBUG : .Also note that both the static and dynamic libraries use dll.cpp , even though we are not building the DLL .", "label": "", "metadata": {}, "score": "64.19677"}
{"text": "Regarding upgrading to the new version , I would not recommend it for the time being .The older ASA versions ( 7.x , 8.0 , 8.1 , 8.2 ) are so stable and reliable that I would not rush to change them on my security infrastructure for the moment .", "label": "", "metadata": {}, "score": "64.31444"}
{"text": "( e.g. registration ? )getClassLoader ( ) .You could switch from platform:/plugin to platform:/resource while developing .Note that even with platform:/resource , if your project has a JETNature and hence has compiled templates that the JETEmitter should end up using those compiled versions ... .", "label": "", "metadata": {}, "score": "64.344864"}
{"text": "That is the first time where the editor is generated .So I see no change that in the first step he will ever find my template class because the plugin is always using the class loader of the generator adapter .", "label": "", "metadata": {}, "score": "64.41079"}
{"text": "Below , VerifyHash ( an ATL project which requires dynamic runtime linking ) is using cryptlib.dynamic without dll.cpp .We receive 20 errors ( 10 pairs ) similar to below .The first error claims that the program can not be linked because of a missing function in VerifyHash.obj .", "label": "", "metadata": {}, "score": "64.47046"}
{"text": "Below , VerifyHash ( an ATL project which requires dynamic runtime linking ) is using cryptlib.dynamic without dll.cpp .We receive 20 errors ( 10 pairs ) similar to below .The first error claims that the program can not be linked because of a missing function in VerifyHash.obj .", "label": "", "metadata": {}, "score": "64.47046"}
{"text": "FIG .4 , these JSP static component versions may be stored in - line with the rest of the dynamic webpage 414 in slots 416 and 418 respectively .Other subdirectories defined by the file system 144 will be used as the webpage transitions to other types of versions including the LIVE and previous - LIVE versions discussed in more detail below with reference to .", "label": "", "metadata": {}, "score": "64.707466"}
{"text": "The files ' names and locations are listed below : .User security configuration file : % userprofile%\\Application data\\Microsoft\\CLR security config\\vxx.xx\\Security.config .Machine security configuration file : % CLR install path%\\Config\\Security.config .Enterprise security configuration file : % CLR install path%\\Config\\Enterprisesec.config .", "label": "", "metadata": {}, "score": "64.75843"}
{"text": "Remember , adding ( at least one ) pure virtual functions to a class makes it an abstract class , meaning you can not create an instance of it .A pure virtual class is not required to have an implementation - but that does n't mean you ca n't provide an implementation .", "label": "", "metadata": {}, "score": "64.83292"}
{"text": "Derived concrete classes can be substituted for the abstract base class ( using dynamic polymorphism ) .The abstract base class designer must specify the ( only ) set of services the client can expect .To force derived classes to provide their own implementation of the function .", "label": "", "metadata": {}, "score": "64.84007"}
{"text": "Another important aspect of platform security is that it does not attempt to deal with all possible types of threats , thus requiring the services of an OS and third - party software ( such as using IIS in .NET ) .", "label": "", "metadata": {}, "score": "65.24513"}
{"text": "Second , make sure you specify cryptlib.lib as an additional input .Since you are using the pragma to include the library , I would expect that your project is not specifying its location .You will need to specify the library directory for Debug and Release , x86 and x64 .", "label": "", "metadata": {}, "score": "65.36104"}
{"text": "To call the polymorphic function the run - time system requires indexing into the v - table via the object 's vtptr to actually call the function .In certain environments this can be twice as slow as a normal function call .", "label": "", "metadata": {}, "score": "65.459175"}
{"text": "And also , added all the necessary header / library / source path to the project directories and additional include / lib paths .# include \" gzip.h \" USING_NAMESPACE ( CryptoPP ) .// Crypto++ Library # ifdef _ DEBUG # pragma comment ( lib , \" cryptlibd \" ) # else # pragma comment ( lib , \" cryptlib \" ) # endif .", "label": "", "metadata": {}, "score": "65.66706"}
{"text": "And also , added all the necessary header / library / source path to the project directories and additional include / lib paths .# include \" gzip.h \" USING_NAMESPACE ( CryptoPP ) .// Crypto++ Library # ifdef _ DEBUG # pragma comment ( lib , \" cryptlibd \" ) # else # pragma comment ( lib , \" cryptlib \" ) # endif .", "label": "", "metadata": {}, "score": "65.66706"}
{"text": "10/351,465 , filed on even date herewith and entitled REMOTE WEB SITE EDITING IN A STANDARD WEB BROWSER WITHOUT EXTERNAL SOFTWARE , the contents of which are incorporated herein by reference .Other server based WYSIWYG editors including those provided by Ektron Corporation of Nashua , N.H. may be used interchangeably , as long as they can be adapted to support versioning consistent with the present invention .", "label": "", "metadata": {}, "score": "65.75876"}
{"text": "_ Xran@_String_base@std@@SAXXZ ) .This library just requires so much pains and efforts which beyond my ability at the moment .By default Visual Studio creates a project which uses the dynamic ( DLL ) version of the C / C++ runtime .", "label": "", "metadata": {}, "score": "65.779335"}
{"text": "_ Xran@_String_base@std@@SAXXZ ) .This library just requires so much pains and efforts which beyond my ability at the moment .By default Visual Studio creates a project which uses the dynamic ( DLL ) version of the C / C++ runtime .", "label": "", "metadata": {}, "score": "65.779335"}
{"text": "Visit the Crypto++ homepage and fetch a version for download .This article is based on version 5.2.1 , but any version should do .We should review the \" Platforms \" Matrix when choosing a Crypto++ distribution .When using Visual Studio 6.0 , Microsoft 's Processor Pack is recommended for Crypto++ 5.1 and earlier ; and is required for Crypto++ 5.2 and later .", "label": "", "metadata": {}, "score": "65.791046"}
{"text": "Visit the Crypto++ homepage and fetch a version for download .This article is based on version 5.2.1 , but any version should do .We should review the \" Platforms \" Matrix when choosing a Crypto++ distribution .When using Visual Studio 6.0 , Microsoft 's Processor Pack is recommended for Crypto++ 5.1 and earlier ; and is required for Crypto++ 5.2 and later .", "label": "", "metadata": {}, "score": "65.791046"}
{"text": "/PROTO static HTML files can be found within the file system 144 and included as part of the rendered target webpage .The publication engine 130 also carries out the tasks noted in the pseudocode presented in .FIG .8 , including transitioning the prototype or . . .", "label": "", "metadata": {}, "score": "65.88408"}
{"text": "A stock Crypto++ distribution is built using static linking against the runtime ( /MT and /MTd ) .A default Visual Studio project created by the wizard will use dynamic runtime linking .The project would specify the /MD or /MDd linker switch for dynamic runtime linking , while the Crypto++ library would be using static linking ( /MT or /MTd ) from its build .", "label": "", "metadata": {}, "score": "65.94124"}
{"text": "A stock Crypto++ distribution is built using static linking against the runtime ( /MT and /MTd ) .A default Visual Studio project created by the wizard will use dynamic runtime linking .The project would specify the /MD or /MDd linker switch for dynamic runtime linking , while the Crypto++ library would be using static linking ( /MT or /MTd ) from its build .", "label": "", "metadata": {}, "score": "65.94124"}
{"text": "So , can you provide an implementation for a pure virtual function ?And why would I want to ?In our example , let 's assume there is some common behaviour that all our concrete classes have to perform as part of their doStuff ( ) function .", "label": "", "metadata": {}, "score": "65.97016"}
{"text": "FIG .4 ) .Finally , the publication engine tracks and manages versioning of the configuration database 147 .For example , as detailed with reference to pseudocode depicted in .FIG .7 , during the WIP to PROTO version transition ( aka activation 460 ) , the publication engine copies configuration data stored for the WIP version ( e.g. row 315 in .", "label": "", "metadata": {}, "score": "66.20026"}
{"text": "In C # , there are two choices for declaring constant data values : const for built - in value types , whose value is known at compile time ) ; and readonly for all others , whose value is set once at creation time : .", "label": "", "metadata": {}, "score": "66.52116"}
{"text": "The easier path may allure you and you may quit implementation and go back running to global static functions crying like a little girl .A run method may extend to thousands of lines of code depending on your algorithm .\" Most examples show parts like construction , destruction , thread saftey and so on .", "label": "", "metadata": {}, "score": "66.787506"}
{"text": "Dynamic Runtime Linking .When dynamically linking to the C Runtime ( /MD or /MDd ) , the Crypto++ library must be rebuilt using the same link settings as the main project .Open the Crypto++ project and change the Crypto++ project setting for both Cryptlib and CryptDll .", "label": "", "metadata": {}, "score": "66.92204"}
{"text": "Dynamic Runtime Linking .When dynamically linking to the C Runtime ( /MD or /MDd ) , the Crypto++ library must be rebuilt using the same link settings as the main project .Open the Crypto++ project and change the Crypto++ project setting for both Cryptlib and CryptDll .", "label": "", "metadata": {}, "score": "66.92204"}
{"text": "The new one can be overwritten again by the DT .Well I started in my EMF Addon project to write some DT for generation of a bit more structured EMF editor .At one point now I have to add a new file , so i wrote a plugin for it based on org.eclipse.emf.examples.generator.validator .", "label": "", "metadata": {}, "score": "66.94093"}
{"text": "Use the readObject / writeObject pair to control the content of a serialized object .Alternatively , implementing the Externalizable interface 's methods readExternal / writeExternal gives you complete control over the serialization process .Note : In terms of protective language features , both platforms rate approximately equal , with .", "label": "", "metadata": {}, "score": "66.94358"}
{"text": "And as you know , I got endless linking errors no matter what I did .So , I tried to rewrite my atl com project in vc2005 and did the same test .Now it compiles / links without any problem .", "label": "", "metadata": {}, "score": "66.97446"}
{"text": "4 .Referring now to row 210 , in the published case , looking at column 220 , only the dynamic components utilized from the JSP template are used .The static components are defined by the HTML equivalents stored in the file system 144 .", "label": "", "metadata": {}, "score": "67.074715"}
{"text": "The scope of the present invention should , therefore , be determined only by the following claims .Method for dynamically delivering contents encapsulated with capsule overviews corresonding to the plurality of documents , resolving co - referentiality related to frequency within document , determining topic stamps for each document segments .", "label": "", "metadata": {}, "score": "67.12761"}
{"text": "( e.g. registration ? )I see .UML2 does this , but it has its own extended GenModel and therefore has specialized adapters that kick in .[/quote ]I guess this is a yes ... .Well I did ... already on your last mail .", "label": "", "metadata": {}, "score": "67.1469"}
{"text": "What happens when you write code like this depends on your compiler .On most modern compilers - for example GCC , IAR or even Microsoft !- you will get a Linker error when you compile this code .This is because there is no implementation for the pure virtual function ( as expected ) .", "label": "", "metadata": {}, "score": "67.1771"}
{"text": "Using the automotive website example , runtime data may include used or new car inventory information pulled from a dealer or auto group database , or time sensitive advertising and promotion data .The shared asset file system 149 , another logical structure within the storage system 145 , contains information that is shared across different webpages managed by and possibly websites hosted by the website manager 102 .", "label": "", "metadata": {}, "score": "67.3133"}
{"text": "Compile Error 1001 .If you receive Internal Compile Error COMPILE 1001 ( C1001 ) shown below : .Verify config.h .Depending on the version of Visual Studio , some compile time changes are invoked .If using Visual Studio 7.1 or above , changing to below may do the trick .", "label": "", "metadata": {}, "score": "67.331375"}
{"text": "Compile Error 1001 .If you receive Internal Compile Error COMPILE 1001 ( C1001 ) shown below : .Verify config.h .Depending on the version of Visual Studio , some compile time changes are invoked .If using Visual Studio 7.1 or above , changing to below may do the trick .", "label": "", "metadata": {}, "score": "67.331375"}
{"text": "Default objects initialization : \" zero initialization \" for heap - allocated objects .Proper initialization of stack objects is checked by the VM at runtime .Choice of serialization and transient options : controls contents of serialized objects that are outside of VM protection domains .", "label": "", "metadata": {}, "score": "67.39222"}
{"text": "Source Code .Documentation .There are three sources of documentation for Crypto++ : the source code , the wiki , the Users Group .The Crypto++ wiki can be found here .The wiki has many topics with lots of sample code .", "label": "", "metadata": {}, "score": "67.53044"}
{"text": "Source Code .Documentation .There are three sources of documentation for Crypto++ : the source code , the wiki , the Users Group .The Crypto++ wiki can be found here .The wiki has many topics with lots of sample code .", "label": "", "metadata": {}, "score": "67.53044"}
{"text": "This means we can not build the Crypto++ DLL and claim it is FIPS compliant .Version 5.5.2 is the last version of the library which Wei plans to submit for testing and validation .Details can be found here .Single Threaded Versus Multi - threaded .", "label": "", "metadata": {}, "score": "67.576675"}
{"text": "This means we can not build the Crypto++ DLL and claim it is FIPS compliant .Version 5.5.2 is the last version of the library which Wei plans to submit for testing and validation .Details can be found here .Single Threaded Versus Multi - threaded .", "label": "", "metadata": {}, "score": "67.576675"}
{"text": "// Crypto++ Library # ifdef _ DEBUG # pragma comment ( lib , \" cryptlibd \" ) # else # pragma comment ( lib , \" cryptlib \" ) # endif .Additional ( Unsupported ) Configuration .If interested , a project configuration exists which allows for building Crypto++ using both static and dynamic runtime linking .", "label": "", "metadata": {}, "score": "67.57921"}
{"text": "// Crypto++ Library # ifdef _ DEBUG # pragma comment ( lib , \" cryptlibd \" ) # else # pragma comment ( lib , \" cryptlib \" ) # endif .Additional ( Unsupported ) Configuration .If interested , a project configuration exists which allows for building Crypto++ using both static and dynamic runtime linking .", "label": "", "metadata": {}, "score": "67.57921"}
{"text": "You are probably not using the proper C / C++ runtimes in the Crypto++ project .Fix the runtime library in ' cryptlib ' .Fix it in Debug and Release .Do n't worry about Dll - Import and Dll - Export since you are not using the FIPS DLL .", "label": "", "metadata": {}, "score": "67.58436"}
{"text": "Reading / trying all the stuffs here still does not work in my simple VC2010 ATL COM ( out - of - proc ) project .I built the library using cryptest.sln from cryptopp v5.6.1 under VC2005 .After successful build , I see Win32/dll - ouput and Win32/output folder each having debug / release subfolders .", "label": "", "metadata": {}, "score": "67.692566"}
{"text": "Reading / trying all the stuffs here still does not work in my simple VC2010 ATL COM ( out - of - proc ) project .I built the library using cryptest.sln from cryptopp v5.6.1 under VC2005 .After successful build , I see Win32/dll - ouput and Win32/output folder each having debug / release subfolders .", "label": "", "metadata": {}, "score": "67.692566"}
{"text": "When using the DLL or FIPS DLL , the newsgroup occasional receives reports of LNK2001 and LINK2019 such as below .This is because the DLL and FIPS DLL only includes certified algorithms .So the DLL exports AES , but it does not export DES ( DES has been deprecated in various standards ) .", "label": "", "metadata": {}, "score": "67.69511"}
{"text": "When using the DLL or FIPS DLL , the newsgroup occasional receives reports of LNK2001 and LINK2019 such as below .This is because the DLL and FIPS DLL only includes certified algorithms .So the DLL exports AES , but it does not export DES ( DES has been deprecated in various standards ) .", "label": "", "metadata": {}, "score": "67.69511"}
{"text": "getClassLoader ( ) ) ; .Look at JETEmitter.getObject ; it 's important that the template can be specialized to generate the right type of line feeds depending on preferences .does n't find your versions of the classes .when setStaticTemplateClass is called .", "label": "", "metadata": {}, "score": "67.89729"}
{"text": "Here the compile , based on the number and type of arguments , can determine which function to call .Dynamic polymorphism , which in C++ is called Overriding , allows us to determine the actual function method to be executed at run - time rather than compile time . class uCMutex .", "label": "", "metadata": {}, "score": "67.91136"}
{"text": "To resolve this , the Crypto++ library must be rebuilt .Table 1 below summarizes this discussion : .Desired Runtime Linking .Action Required .Static Runtime Linking ./MT or /MTd .Static .None .Dynamic Runtime Linking .", "label": "", "metadata": {}, "score": "68.10099"}
{"text": "To resolve this , the Crypto++ library must be rebuilt .Table 1 below summarizes this discussion : .Desired Runtime Linking .Action Required .Static Runtime Linking ./MT or /MTd .Static .None .Dynamic Runtime Linking .", "label": "", "metadata": {}, "score": "68.10099"}
{"text": "Locate the cryptest.dsw or cryptest.sln file , and open it .In this example , the Zip file was extracted to C:\\CryptoPP 5.2.1\\ .Integrating Crypto++ into the Visual C++ Environment .This document will add the library to the Visual Studio environment rather than the Project environment .", "label": "", "metadata": {}, "score": "68.51738"}
{"text": "Locate the cryptest.dsw or cryptest.sln file , and open it .In this example , the Zip file was extracted to C:\\CryptoPP 5.2.1\\ .Integrating Crypto++ into the Visual C++ Environment .This document will add the library to the Visual Studio environment rather than the Project environment .", "label": "", "metadata": {}, "score": "68.51738"}
{"text": "No verification is performed at runtime , but the Virtual Execution System ( VES ) is responsible for runtime checks that type signatures for methods are correct , and valid operations are performed on types , including array bounds checking .These runtime checks are accomplished by inserting additional code in the executing application , which is responsible for handling error conditions and raising appropriate exceptions .", "label": "", "metadata": {}, "score": "68.637245"}
{"text": "If the host process is granted a special SecurityPermission to control evidence , it is allowed to specify the AppDomain 's policy at creation time .However , it can only reduce the compound set of permissions granted by the enterprise , machine , and user policies from security policy files .", "label": "", "metadata": {}, "score": "68.8541"}
{"text": "exe.config ( or Web.config for ASP.NET ) in the application or web project 's main directory .Core Java and J2EE configuration files have specific locations , but locations of additional configuration files for extension and J2EE products vary by vendor .", "label": "", "metadata": {}, "score": "68.86981"}
{"text": "The Crypto++ library includes benchmarking capabilities through the test harness using the ' cryptest b ' command line .In addition , the benchmark can take arguments such as bounding time for each test and the CPU speed .See usage.dat for details or run ' cryptest ' with no arguments .", "label": "", "metadata": {}, "score": "68.90168"}
{"text": "The Crypto++ library includes benchmarking capabilities through the test harness using the ' cryptest b ' command line .In addition , the benchmark can take arguments such as bounding time for each test and the CPU speed .See usage.dat for details or run ' cryptest ' with no arguments .", "label": "", "metadata": {}, "score": "68.90168"}
{"text": "6 depicts pseudocode of dynamic webpage request processing undertaken by elements of the website manager shown in .FIG .1 .FIG .7 depicts pseudocode of WIP to PROOF stage transition processing undertaken by elements of the website manager shown in .", "label": "", "metadata": {}, "score": "69.19302"}
{"text": "What does its doStuff ( ) function do ?At best it may do some generic ( common ) behaviour ; at worst nothing at all .In reality we do n't want clients to create objects of the common base type .", "label": "", "metadata": {}, "score": "69.35005"}
{"text": "The Crypto++ output libraries are located at Win32\\output\\debug\\cryptlib.lib and Win32\\output\\release\\cryptlib.lib .The DLL and its export library are in Win32\\dll_output .Note the \" dll _ \" in the path name .Verify that you are using the correct paths .Link Error 2005 .", "label": "", "metadata": {}, "score": "69.409645"}
{"text": "The Crypto++ output libraries are located at Win32\\output\\debug\\cryptlib.lib and Win32\\output\\release\\cryptlib.lib .The DLL and its export library are in Win32\\dll_output .Note the \" dll _ \" in the path name .Verify that you are using the correct paths .Link Error 2005 .", "label": "", "metadata": {}, "score": "69.409645"}
{"text": "But for the sake of clarity , I merged them together in this example .The class point_mass_model is now almost ready to be used .We just need to add some getters for the states ( get_acceleration , etc .. since they are need by the BehaviorPolicy : . class point_mass_model .", "label": "", "metadata": {}, "score": "69.69508"}
{"text": "Note that rebuilding the DLL using dynamic runtime linking is not available since we are using the FIPS DLL .The second situation is created when using additional third party components .This includes MFC and ATL .Suppose we need to use the FIPS DLL .", "label": "", "metadata": {}, "score": "69.75961"}
{"text": "Note that rebuilding the DLL using dynamic runtime linking is not available since we are using the FIPS DLL .The second situation is created when using additional third party components .This includes MFC and ATL .Suppose we need to use the FIPS DLL .", "label": "", "metadata": {}, "score": "69.75961"}
{"text": "1 .FIG .8 depicts pseudocode of PROOF to LIVE stage transition processing undertaken by elements of the website manager shown in .FIG .1 . DETAILED DESCRIPTION .FIG .1 depicts a system including a website manager according to an embodiment of the present invention .", "label": "", "metadata": {}, "score": "69.900314"}
{"text": "I want to be able to use my Waveforms just like Matlab does , only in C++ .What do you mean Policy implementation could get big .Let 's say you are implementing Particle Swarm Optimization .You code the PSO in a template that receives an array of data an optimizes your problem based on it .", "label": "", "metadata": {}, "score": "69.91513"}
{"text": "To change the runtime library in Crypto++ , richt click on the ' cryptlib ' project in Visual Studio , and select properties .Change ' Multi - threaded Debug ' to ' Multi - threaded Debug DLL ' ; and ' Multi - threaded ' to ' Multi - threaded DLL ' for Release .", "label": "", "metadata": {}, "score": "70.015594"}
{"text": "To change the runtime library in Crypto++ , richt click on the ' cryptlib ' project in Visual Studio , and select properties .Change ' Multi - threaded Debug ' to ' Multi - threaded Debug DLL ' ; and ' Multi - threaded ' to ' Multi - threaded DLL ' for Release .", "label": "", "metadata": {}, "score": "70.015594"}
{"text": "For .NET v1.1 , the location is : C:\\WINNT\\Microsoft .NET\\Framework\\v1.1.4322\\CONFIG .Multiple versions of CLR may co - exist on the same computer , but each particular version can have only a single installation .Since security policy files can not be specified as runtime parameters of .", "label": "", "metadata": {}, "score": "70.520004"}
{"text": "FIPS 140 - 2 certification means the library produces correct results and complies with certain cryptographic protocols .Protocols would include zeroing the memory of key material after the library is finished using it .When we refer to the FIPS compliant DLL , we will state FIPS DLL .", "label": "", "metadata": {}, "score": "70.75871"}
{"text": "FIPS 140 - 2 certification means the library produces correct results and complies with certain cryptographic protocols .Protocols would include zeroing the memory of key material after the library is finished using it .When we refer to the FIPS compliant DLL , we will state FIPS DLL .", "label": "", "metadata": {}, "score": "70.75871"}
{"text": "Finally , it is run against the private version again , this time with -verify passed as a command - line argument to JVM : .The sources and the execute.bat file are available as a zip file for download .Note : JVM , as opposed to .", "label": "", "metadata": {}, "score": "70.92943"}
{"text": "The code compiles and links with no errors or warnings .When the code executes and the pure virtual function is called ( via the vtable ) it will execute a null pointer .On many processors this is the reset vector ; meaning your call to the base class pure virtual function will reset your system ( with no warning ! )", "label": "", "metadata": {}, "score": "70.959236"}
{"text": "It is very time consuming always redeploy the plugin for testing .Mmm i have to think about this .You could switch from platform:/plugin to platform:/resource while developing .Note that even with platform:/resource , if your project has a JETNature and hence has compiled templates that the JETEmitter should end up using those compiled versions ... .", "label": "", "metadata": {}, "score": "71.15675"}
{"text": "Please see John Deters ' comment below for reasons not to do so .It is a well crafted and explained commentary which should prove useful .Once the build is complete , drill into the C:\\CryptoPP 5.2.1\\Debug\\ folder .Rename the library file from cryptlib.lib to cryptlib d . lib ( notice the addition of the \" d \" for Debug ) .", "label": "", "metadata": {}, "score": "71.18992"}
{"text": "Please see John Deters ' comment below for reasons not to do so .It is a well crafted and explained commentary which should prove useful .Once the build is complete , drill into the C:\\CryptoPP 5.2.1\\Debug\\ folder .Rename the library file from cryptlib.lib to cryptlib d . lib ( notice the addition of the \" d \" for Debug ) .", "label": "", "metadata": {}, "score": "71.18992"}
{"text": "At the other end of the network 115 , an end - user computer 110 is provided which includes a client browser for accessing web content .Still referring to .Though in this embodiment , the web server 120 comprises an Apache web server , other web servers known in the art may be interchangeably used without departing from the teachings of the invention .", "label": "", "metadata": {}, "score": "71.42929"}
{"text": "However , the -verify switch is still required for local code to behave correctly , as the following example shows .Given class Intruder ... .A Victim class with a public method : .And another version of the Victim class with a private method : .", "label": "", "metadata": {}, "score": "71.76759"}
{"text": "Other shared assets could include sample pictures of new or used vehicles and new vehicle information , as well as trademarks and logos used by the OEM or manufacturers of automotive products and/or automobiles .Of course , such examples are not intended to be limiting in any way .", "label": "", "metadata": {}, "score": "71.98662"}
{"text": "If you do not install MFC Unicode Library Versions ( mfc42u.lib , mfc42ud.lib , etc . ) , but define UNICODE , LINK 1104 ( LNK1104 ) , then errors similar to those below will be displayed .This is a Visual C++ 6.0 and previous error , since Visual Studio 7.0 and above do not allow a non - Unicode installation .", "label": "", "metadata": {}, "score": "72.00188"}
{"text": "If you do not install MFC Unicode Library Versions ( mfc42u.lib , mfc42ud.lib , etc . ) , but define UNICODE , LINK 1104 ( LNK1104 ) , then errors similar to those below will be displayed .This is a Visual C++ 6.0 and previous error , since Visual Studio 7.0 and above do not allow a non - Unicode installation .", "label": "", "metadata": {}, "score": "72.00188"}
{"text": "Since seeker is inherited from seek_behavior and m_target is a public attribute .Small conclusion .Using policies , creating agents with different dynamics and behaviors is as simple as changing some templates parameters .This is a major idea behing MetaAgent .", "label": "", "metadata": {}, "score": "72.011475"}
{"text": "NET class can be marked as serializable by specifying [ Serializable ] attribute on the class .By default , its full state is stored , including private information .If this is not desirable , a member can be excluded by specifying a NonSerialized attribute , or by implementing a ISerializable interface to control the serialization process .", "label": "", "metadata": {}, "score": "72.228546"}
{"text": "Your implementation could require extra data from other places , meaning things could grow out of proportion .As a program grows you may want to share things between global static functions , so you remove the static , then you start using global variables , then chaos , it takes around 3 years for this to happen .", "label": "", "metadata": {}, "score": "72.25609"}
{"text": "Just add the code from my initial post to see if things get compiled / linked and works as expected .Then send me the whole project along with the crypto source projects please .I would simply rebuild and add up my stuff to that .", "label": "", "metadata": {}, "score": "72.26093"}
{"text": "In .NET , CLR always executes natively compiled code ; it never interprets it .Before IL is compiled to native code , it is subjected to validation and verification steps .The first step checks the overall file structure and code integrity .", "label": "", "metadata": {}, "score": "72.30089"}
{"text": "The method of .claim 4 , wherein the template comprises a Java Server Pages JSP template .Description .TECHNICAL FIELD .This invention is generally directed to aspects of website management , and is particularly concerned with techniques for staged publication and versioning control over dynamic webpages .", "label": "", "metadata": {}, "score": "72.3864"}
{"text": "Crypto++ uses the static ( non - DLL ) version of the C / C++ runtime .You need to use the same version of the C / C++ runtime for both your project and the Crypto++ library .Since COM requires the DLL version , you will need to change Crypto++ 's use of the C / C++ runtime library .", "label": "", "metadata": {}, "score": "72.3922"}
{"text": "Crypto++ uses the static ( non - DLL ) version of the C / C++ runtime .You need to use the same version of the C / C++ runtime for both your project and the Crypto++ library .Since COM requires the DLL version , you will need to change Crypto++ 's use of the C / C++ runtime library .", "label": "", "metadata": {}, "score": "72.3922"}
{"text": "For converting String values to richer object types .& - For manipulating , formatting , and comparing dates .-For controlling display of references ( e.g. truncating values , \" pretty printing \" lists , and displaying alternates when a reference is null ) .", "label": "", "metadata": {}, "score": "72.50113"}
{"text": "So , I see Multi - threaded ( /MT ) and Multi - threaed Debug ( /MTd ) for my ATL project .I still get the link errors ._ Xran@_String_base@std@@SAXXZ ) ._ Xlen@_String_base@std@@SAXXZ ) .In this case , Visual Studio can not find the library .", "label": "", "metadata": {}, "score": "72.62822"}
{"text": "The \" Web \" is now well developed and literally millions of Web sites have been deployed , hosted on various servers around the world .Web sites comprises one or more related \" pages , \" in some cases extending to scores or even hundreds of pages .", "label": "", "metadata": {}, "score": "72.76909"}
{"text": "I am not sure it is a bug , but it was very helpful to removed the .JETEmitter project from the workspace .In an clean environment where no compiled version 's of old JET Templates and Template classes exist somewhere It do what it should .", "label": "", "metadata": {}, "score": "72.79006"}
{"text": "In other words , in the initial WIP or work in progress state , the dynamic webpage is fully dynamic ( i.e. fully defined in terms of JSP or ASP files+configuration data ) .In such case both the static 410 , 412 and dynamic components 420 are presented in dynamic form , and configuration data contained in the configuration database is necessary to define a particular instance of the webpage .", "label": "", "metadata": {}, "score": "72.816055"}
{"text": "3 ) and places it in the PROTO version ( row 320 ) .Also , during the transition from PROOF to LIVE versions , as detailed with reference to .FIG .8 , the publication engine 130 causes configuration data for the current LIVE version ( row 325 ) to be preserved in the PREVIOUS_LIVE version ( row 330 ) , and then push PROOF configuration data ( row 320 ) into row 325 .", "label": "", "metadata": {}, "score": "72.89682"}
{"text": "Derived classes must implement the doStuff ( ) function ; they then become what are called Concrete classes .What happens if a derived class calls the base class ' ( pure ) virtual fuction ?C++ scope operator ( : : ) allows you to call a function outside your current scope ; and in fact anywhere in the class hierarchy .", "label": "", "metadata": {}, "score": "73.09899"}
{"text": "These include JSP files 410 and 412 and these may conveniently be stored in the . . ./WIP subdirectory for the webpage , or may be retained with the template containing the dynamic components within the template storage area 146 .", "label": "", "metadata": {}, "score": "73.12243"}
{"text": "FIG .1 to be in signal communication with the network 115 , which may conveniently comprise a LAN or local area network , a wide area network or WAN , or a combination thereof as is known in the art .", "label": "", "metadata": {}, "score": "73.56898"}
{"text": "I 've seen funny things in the past when using libraries on shared drives , especially if the drive auto disconnects after an idle time period .G is neither shared nor mapped drive .It just happens to be G : rather than D : .", "label": "", "metadata": {}, "score": "73.97683"}
{"text": "You need to be saving code , the less you code the more value you take home .But this does not mean it will not be hard .So again , it depends on your problem .To use my code for example I do the following .", "label": "", "metadata": {}, "score": "73.9807"}
{"text": "Let 's say you have a Waveform class that generates waveforms .But you need policies for 128 Samples and for 1024 Samples , you do n't do this on dynamic allocation because you need the sampling rate defined at compilation time rather than on runtime ...", "label": "", "metadata": {}, "score": "74.26022"}
{"text": "Personal Preference and some other reasons based on some books .You can use inheritance as long as you do n't go crazy on the base class functionality .Why so much methods in the Policy ?Because the waveform itself is private , a user may create sound , but not alter it .", "label": "", "metadata": {}, "score": "74.49812"}
{"text": "NET ) , but their use requires granting highly privileged code permissions .Application Domains ( AppDomains ) represent separate .NET applications running inside the same CLR process .Domain isolation is based on the memory safety property because applications from different domains can not directly access each other 's address spaces , and they have to use the .", "label": "", "metadata": {}, "score": "74.57384"}
{"text": "What I see in the new version is an attempt from Cisco to move away from the \" Interface based \" policy implementation and adopt a more \" global based \" or \" object based \" approach .The policy enforcement in Cisco ASA firewalls is mostly based on the \" interface \" concept .", "label": "", "metadata": {}, "score": "74.65076"}
{"text": "MetaAgent is not the only project around about steering behaviors .In fact it is the little sister of another project , OpenSteer initiated by Craig Reynolds .Why another library ?First of all , playing with autonomous characters is fun and is a great project if you plan to learn C++ .", "label": "", "metadata": {}, "score": "74.91504"}
{"text": "You are probably not using the proper C / C++ runtimes in the Crypto++ project .Fix the runtime library in ' cryptlib ' .What should I fix for the runtime library ?id / pw is jeff / jeffpw and the ip / port is ftp://ftp1.investware.net:1250 .", "label": "", "metadata": {}, "score": "74.944"}
{"text": "Dynamic .Rebuild Crypto++ Library .Rebuild Crypto++ Library means to rebuild the Crypto++ library after changing the settings to compile and link against dynamic versions of the runtime .Also see the section Unsupported Configuration below .Static Runtime Linking .", "label": "", "metadata": {}, "score": "75.10556"}
{"text": "Dynamic .Rebuild Crypto++ Library .Rebuild Crypto++ Library means to rebuild the Crypto++ library after changing the settings to compile and link against dynamic versions of the runtime .Also see the section Unsupported Configuration below .Static Runtime Linking .", "label": "", "metadata": {}, "score": "75.10556"}
{"text": "All . h and .cpp files are there .Now all the .h/. cpp files and release / debug version of .lib files are located inside CryptoPP(5.6.1 ) folder ._ Xran@_String_base@std@@SAXXZ ) .I was able to compile and link your project ( some problems , such as DLL registration because of missing macros ) .", "label": "", "metadata": {}, "score": "75.23057"}
{"text": "Btw ... why are the NL public in your compiled temples ... is there a special setting in JET ? ...Well tested and I does ( in my case ) not :) All I can suggest is looking at determining why the class loader for your derived generator adapter ( hmmm , you do have one ? ) does n't find your versions of the classes .", "label": "", "metadata": {}, "score": "75.26915"}
{"text": "Introduction .The Crypto++ User Group occasionally receives questions on Crypto++ and Microsoft 's environments .The questions are usually basic such as , \" VC++ ca n't find a header file - how [ where ] do I .. or a more ambiguous statement , \" I ca n't compile .", "label": "", "metadata": {}, "score": "75.54893"}
{"text": "Introduction .The Crypto++ User Group occasionally receives questions on Crypto++ and Microsoft 's environments .The questions are usually basic such as , \" VC++ ca n't find a header file - how [ where ] do I .. or a more ambiguous statement , \" I ca n't compile .", "label": "", "metadata": {}, "score": "75.54893"}
{"text": "ASA version 8.3 .Now forget everything you know about NAT configuration .In this version , NAT is implemented using network objects .Basically you create a network object which defines the Real IP / Network to be translated ( e.g the internal LAN network ) and inside the network object you can use a nat statement which specifies whether the translation will be dynamic or static together with the Mapped IP / network .", "label": "", "metadata": {}, "score": "76.18718"}
{"text": "( e.g. staring with .... templates.editor.Plugin if you generate the Editor \" .getClassLoader ( ) .loadClass(className ) ; \" the classloader of getClass is used .But getClass return , in the case of the Edior.javajet template ( which i like replace ) , the class .... genmodel.generator.", "label": "", "metadata": {}, "score": "76.53485"}
{"text": "4 .Referring again to .FIG .1 , also provided within the website manager 102 of the present embodiment is a WYSIWYG editor 130 .This is a server based WYSIWYG editor , the details of which may be provided with reference to U.S. patent application Ser .", "label": "", "metadata": {}, "score": "76.57181"}
{"text": "Server host ( ASP.NET ) : Runs code that handles requests submitted to a server .Shell host : Launches managed applications ( . exe files ) from the Windows shell .Custom hosts : An application that starts execution of CLR engine .", "label": "", "metadata": {}, "score": "76.61826"}
{"text": "FIG .2 , .FIG .2 discusses the differences in the configuration of unpublished and published dynamic webpages in accordance with the current embodiment .Here , the unpublished webpage elements are presented in row 205 , whereas the published dynamic webpage elements are presented in row 210 .", "label": "", "metadata": {}, "score": "76.767075"}
{"text": "- Founder and Director of Feabhas since 1995 .Niall has been designing and programming embedded systems for over 30 years .He has worked in different sectors , including aerospace , telecomms , government and banking .His current interest lie in IoT Security and Agile for Embedded Systems .", "label": "", "metadata": {}, "score": "76.76942"}
{"text": "Link Error 2005 When Using ATL .Should you encounter LNK2005 when using ATL , recompile the Crypto++ library using the Multithreaded DLL and Multithreaded Debug DLL choices of the runtime library .This was not an issue in Visual C++ 6.0 , but it is an issue in Visual Studio 2005 .", "label": "", "metadata": {}, "score": "76.842964"}
{"text": "Link Error 2005 When Using ATL .Should you encounter LNK2005 when using ATL , recompile the Crypto++ library using the Multithreaded DLL and Multithreaded Debug DLL choices of the runtime library .This was not an issue in Visual C++ 6.0 , but it is an issue in Visual Studio 2005 .", "label": "", "metadata": {}, "score": "76.842964"}
{"text": "There is no void type -- a single - root class hierarchy exists , with all classes deriving implicitly from Object root .No direct memory access : therefore , it is impossible to penetrate other applications ' memory space from managed code .", "label": "", "metadata": {}, "score": "76.865814"}
{"text": "Use Ctrl+Left / Right to switch messages , Ctrl+Up / Down to switch threads , Ctrl+Shift+Left / Right to switch pages .Cisco ASA version 8.3 is here .On March 8 , 2010 Cisco announced the newest Cisco ASA 5500 firewall software version 8.3 .", "label": "", "metadata": {}, "score": "76.983665"}
{"text": "This was an issue with Visual C++ 6.0 and previous .At times , the Project Wizard would output a project using a Singe Threaded project ( /ML and /MLd ) .Static Versus Dynamic Linking .C Runtime Library .When integrating Crypto++ , the Crypto++ library must use the same runtime library linker setting as our Visual Studio project .", "label": "", "metadata": {}, "score": "77.69588"}
{"text": "This was an issue with Visual C++ 6.0 and previous .At times , the Project Wizard would output a project using a Singe Threaded project ( /ML and /MLd ) .Static Versus Dynamic Linking .C Runtime Library .When integrating Crypto++ , the Crypto++ library must use the same runtime library linker setting as our Visual Studio project .", "label": "", "metadata": {}, "score": "77.69588"}
{"text": "AddPermission ( new SecurityPermission ( SecurityPermissionFlag .Execution ) ) ; // Give the policy level 's root code group a // new policy statement based on the new // permission set . domain . SetAppDomainPolicy(polLevel ) ; // Try to execute the assembly .", "label": "", "metadata": {}, "score": "77.7502"}
{"text": "Simply put polymorphism means : .Multiple functions with the same name .Yep , as simple as that .Most C programmers do n't realise they have been using polymorphic operations since they started programming .Take , for example , the following code : .", "label": "", "metadata": {}, "score": "77.765656"}
{"text": "2 .Transitioning between versions will be discussed in greater detail below with reference to .FIG .4 .Referring now back to .FIG .1 , the storage system 145 also includes a runtime database 148 .This runtime database includes runtime data collected from sources typically external to the website manager 102 .", "label": "", "metadata": {}, "score": "78.81769"}
{"text": "In order to inhibit creation of base class objects we make the virtual function pure .Active is now referred to as an Abstract class .You can not create an instance of an abstract class .This is because a pure virtual function does not require an implementation .", "label": "", "metadata": {}, "score": "79.72894"}
{"text": "The behavior policy classes only need to implement the think method .The following behaviors makes an agent .go in circle ( by taking the perpendicular to the velocity ) : .// this class makes the agent go round struct circle_move_behavior .", "label": "", "metadata": {}, "score": "80.14555"}
{"text": "This sounds for me I just put the compiled temples into the plugin and it should work ? ...Well tested and I does ( in my case ) not After that I added an generateJava call in my GenerationAdapter ... did not work either .", "label": "", "metadata": {}, "score": "80.268616"}
{"text": "NAT in Cisco ASA 8.3 has been completely redesigned compared with previous versions .It is now configured under a network object .ASA versions prior to 8.3 .To configure dynamic NAT : Use the nat ( internal interface name ) command to specify the internal addresses to be translated together with the global ( outside interface name ) command to specify the mapped IP pool which all internal addresses will be translated to .", "label": "", "metadata": {}, "score": "80.99541"}
{"text": "Then rebuild the DLL - Import project .Integer Class std::cout Formatting .As distributed , the Integer class displays a suffix ( ' o ' , ' . ' , or ' h ' ) to denote base .In addition , the library uses uppercase characters for all hexadecimal output .", "label": "", "metadata": {}, "score": "81.12995"}
{"text": "Then rebuild the DLL - Import project .Integer Class std::cout Formatting .As distributed , the Integer class displays a suffix ( ' o ' , ' . ' , or ' h ' ) to denote base .In addition , the library uses uppercase characters for all hexadecimal output .", "label": "", "metadata": {}, "score": "81.12995"}
{"text": "In comparison , conventional dynamic webpage management techniques require the entire page to rendered on the fly by the web server .Once rendered in separate files , 430 and 432 , they are stored under the PROTO subdirectory for the webpage of interest in the file system 144 .", "label": "", "metadata": {}, "score": "81.20177"}
{"text": "I for one have invested heavily into Fortinet - they are going(have ) taken the industry by storm .Search .RSS Subscribe .About Networks Training .We Provide Technical Tutorials and Configuration Examples about TCP / IP Networks with focus on Cisco Products and Technologies .", "label": "", "metadata": {}, "score": "81.36921"}
{"text": "The reason ?Derived 's version of op ( ) is not actually an override of Base::op since int and long are considered different types ( it 's actually a conversion between an int and a long , not a promotion ) .", "label": "", "metadata": {}, "score": "81.58667"}
{"text": "Network Address Translation changes .NAT is disabled by default on Cisco ASA however is one of the most important mechanisms that almost all firewall administrators use .The majority of network implementations make use of private IP addressing inside the Enterprise network and then employee Network Address Translation to translate their private IP addresses into publicly routable addresses in order to access the Internet .", "label": "", "metadata": {}, "score": "82.050316"}
{"text": "vec const & veloctiy , .vec const & position ) const . seek towards a target ( by pointing the velocity towards the target ) .struct seek_behavior .vec const & acceleration , .vec const & veloctiy , .", "label": "", "metadata": {}, "score": "82.481064"}
{"text": "Then you have a Class TCP_conn and Class UDP_conn that each define packets , headers , and methods , for example : . method send .method receive ( for TCP ) .method setup .Then you inherit like your example : .", "label": "", "metadata": {}, "score": "82.816055"}
{"text": "If , then , in our new design we are going to use VxWorks rather than uC / OS - II , our stack class would require reworking , thus : . class VxMutex .VxMutex ( ) ; void lock ( ) ; void unlock ( ) ; private : . class myStack .", "label": "", "metadata": {}, "score": "83.01943"}
{"text": "I ca n't explain this one , but it has worked for me in the past when working with Crypto++ Elliptic Curve functions .Compile Error 1083 .If you do not add the path to the Crypto++ header files to the Visual C++ environment or your Project , COMPILE 1083 ( C1083 ) Errors similar to below will be displayed .", "label": "", "metadata": {}, "score": "83.82143"}
{"text": "I ca n't explain this one , but it has worked for me in the past when working with Crypto++ Elliptic Curve functions .Compile Error 1083 .If you do not add the path to the Crypto++ header files to the Visual C++ environment or your Project , COMPILE 1083 ( C1083 ) Errors similar to below will be displayed .", "label": "", "metadata": {}, "score": "83.82143"}
{"text": "On the other hand , some competitor vendors ( like Checkpoint for example ) are based on \" object based \" approach with a \" global policy \" concept which is applied on objects irrespective of interfaces .Hmm , I think Cisco is moving towards the Checkpoint firewall approach .", "label": "", "metadata": {}, "score": "84.662865"}
{"text": "This article has no explicit license attached to it but may contain usage terms in the article text or the download files themselves .If in doubt please contact the author via the discussion board below .Share .About the Author .", "label": "", "metadata": {}, "score": "85.99475"}
{"text": "Crypto.obj : error LNK2019 : unresolved external symbol \" public : virtual void _ _ thiscall CryptoPP::Base64Encoder::IsolatedInitialize ( class CryptoPP::NameValuePairs const & ) \" ( ? 0Base64Encoder@CryptoPP@@QAE@PAVBufferedTransformation@1@_NH@Z ) .or .dlltest.obj : error LNK2001 : unresolved external symbol \" _ _ declspec(dllimport ) public : _ _ thiscall CryptoPP::DH_Domain ...", "label": "", "metadata": {}, "score": "87.32521"}
{"text": "Crypto.obj : error LNK2019 : unresolved external symbol \" public : virtual void _ _ thiscall CryptoPP::Base64Encoder::IsolatedInitialize ( class CryptoPP::NameValuePairs const & ) \" ( ? 0Base64Encoder@CryptoPP@@QAE@PAVBufferedTransformation@1@_NH@Z ) .or .dlltest.obj : error LNK2001 : unresolved external symbol \" _ _ declspec(dllimport ) public : _ _ thiscall CryptoPP::DH_Domain ...", "label": "", "metadata": {}, "score": "87.32521"}
{"text": "4 .In particular , .FIG .4 illustrates a transition diagram for a particular dynamic webpage in accordance with an embodiment of the invention .In particular , four successive versions are shown including WIP , PROTO , LIVE and PREVIOUS - LIVE .", "label": "", "metadata": {}, "score": "87.829544"}
{"text": "However I find that many people are still confused or do n't have a complete understanding of the advantages and disadvantages of using polymorphism .I have heard many different simplified definitions of the root term for polymorphism , usually relating to chemistry or biology .", "label": "", "metadata": {}, "score": "88.14808"}
{"text": "That 's a polymorphic expression .Why ?Well we know nothing about the types of b and c. If b and c are of type int then the code generated is significantly different to if they are double .But , I hear to shout , what about virtual functions and all that ?", "label": "", "metadata": {}, "score": "88.17694"}
{"text": "Jul 21 , 2009 .FPAY .Fee payment .Year of fee payment : 4 .Owner name : ADP DEALER SERVICES , INC . , WASHINGTON .Free format text : CHANGE OF NAME;ASSIGNOR : THE COBALT GROUP , INC.;REEL / FRAME:027873/0825 Project Documentation .", "label": "", "metadata": {}, "score": "88.60886"}
{"text": "INT8U err ; // not implemented .uCMutex ( const uCMutex & copyMe ) ; .And have also implemented a very simple stack class ( note this code is just for explanation purposes and has many shortcomings ) that requires mutual exclusion , it may look something along the flowing lines : . class myStack .", "label": "", "metadata": {}, "score": "89.18005"}
{"text": "the NL field is not public if you use the M2 T Jet project configuration in JET1 mode , i opened a bug for this .My problems were solved after the removing of the .JETEmitter project from my test environment workspace , without it always found old version 's of the classes ( maybe a bug ?", "label": "", "metadata": {}, "score": "89.646255"}
{"text": "- the atl project I uploaded and you tested after modifiying to suit your environment - the crypto++ v5.6.1 project source and libraries you built under your environment .I used VC2005 because the v5.6.1 has a solution file for vc2005 , not vc2010 .", "label": "", "metadata": {}, "score": "90.607895"}
{"text": "He finished his PhD in 2004 in the rainy country of Belgium .After 2 years in the Common Language Runtime ( i.e. .Comments and Discussions .How do you combine behaviors to make more complex one ?Eg .Let 's say we want to combine arrival , obstacle avoidance , path following and containment in one big ' navigate ' behavior .", "label": "", "metadata": {}, "score": "91.10897"}
{"text": "Free format text : CORRECTIVE ASSIGNMENT TO CORRECT THE ORIGINALLY SUBMITTED CONVEYING PARTY , WHICH WAS INCORRECTLY SPELLED PREVIOUSLY RECORDED ON REEL 019781 FRAME 0347 .ASSIGNOR(S ) HEREBY CONFIRMS THE DOCUMENTS SUBMITTED CORRECT THE CONVEYING PARTY NAME.;ASSIGNOR : THE COBALT GROUP , INC.;REEL / FRAME:020174/0761 .", "label": "", "metadata": {}, "score": "91.33664"}
{"text": "Effective date : 20070820 .Free format text : CORRECTIVE ASSIGNMENT TO CORRECT THE ORIGINALLY SUBMITTED CONVEYING PARTY , WHICH WAS INCORRECTLY SPELLED PREVIOUSLY RECORDED ON REEL 019781 FRAME 0347;ASSIGNOR: THE COBALT GROUP , INC.;REEL / FRAME:020174/0761 .Effective date : 20070820 .", "label": "", "metadata": {}, "score": "92.08696"}
{"text": "Thanks @Claudiordgz for a great indept answer .To give another example would be taking the network approach .UPD and TCP are very similar and very different at the same time .They both need a socket but one is connectionless the other connection - oriented .", "label": "", "metadata": {}, "score": "92.64749"}
{"text": "It seems I will never make this work myself .Initially I was attracted to the author 's assertion that the use of this library coudn't be simpler .Now it 's really overwhelming .So , if you do n't mind , I would love to send my ATL project ( almost an empty project just for testing this killing crypto library ) to your email .", "label": "", "metadata": {}, "score": "93.67348"}
{"text": "class myStack .Our main code now becomes : .uCMutex ucm ; myStack ms(ucm ) ; . or .VxMutex vxm ; myStack ms(vxm ) ; .This is dynamic polymorphism in operation .Depending on the actual object passed ( vxm or ucm ) , the actual code called when .", "label": "", "metadata": {}, "score": "95.19593"}
{"text": "The most important change regarding configuration is the way Network Address Translation ( NAT ) is implemented .Also , another big change regarding hardware is that you will need a serious memory upgrade to be able to run this software .", "label": "", "metadata": {}, "score": "95.353455"}
{"text": "If you do n't do it no one will .And remember Frodo ...This task was appointed to you , and if you do not find a way , no one will .it would at least for me make sense to use the transportlayer as a policy due to its place on the network stack .", "label": "", "metadata": {}, "score": "96.33833"}
{"text": "This blog is NOT affiliated or endorsed by Cisco Systems Inc.All product names , logos and artwork are copyrights / trademarks of their respective owners .", "label": "", "metadata": {}, "score": "98.47218"}
{"text": "I agree , please Cisco catch up with the other vendors with your ASA products .I love Cisco but your killing me .Moving away from the NAT 's per interface is n't much of a change .How about ACTIVE - ACTIVE - ACTIVE - ACTIVE Firewall Clusters , System based policies ( ACLs ) instead of ACL 's per interface .", "label": "", "metadata": {}, "score": "100.29657"}
{"text": "Memory upgrade changes .The downside of the new ASA version is that it requires significant memory upgrade for ASA models up to 5540 ( 5505 , 5510 , 5520 , 5540 ) .Newest ASA units purchased after February 2010 will have the minimum memory required by 8.3 version , however if you already have an older unit running a version prior to 8.3 then you will need to purchase extra memory if you want to upgrade to 8.3 .", "label": "", "metadata": {}, "score": "101.59593"}
{"text": "iMutex ( const iMutex & ) ; .We can alter the stack code so the mutex object is passed in as a constructor parameter ( also the mutex classes require changes to inherit from the iMutex interface ) : . class uCMutex : public iMutex .", "label": "", "metadata": {}, "score": "107.82123"}
{"text": "In which 60 is the frequency and 1000 is the amplitude .Both will return arrays , just of different size .The 1024 size will be far smoother when you graph it .This is really comfortable for me when testing things related to waveforms directly in c++ , and I can assemble different waveforms by adding or substracting .", "label": "", "metadata": {}, "score": "110.19061"}
{"text": "You think about a prehistoric RTS game where you have to attack a herd of bison that ... acts really acts like an herd , ... .There 's much more in the behavior design , specially when you start to build complex behaviors by combining simple ones .", "label": "", "metadata": {}, "score": "111.00102"}
