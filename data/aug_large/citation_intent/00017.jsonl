{"text": "This technique utilizes the gap and overlap error technique described previously .It optimizes a given path error at the sentence or partial sentence level rather than at the local optimization level employed by earlier tightly - coupled systems .In the preferred DP technique , the sentence recognizer 14 receives a word hypotheses from the word hypothesizer 12 and determines all of the nodes in the graph to which that word could apply .", "label": "", "metadata": {}, "score": "30.476612"}
{"text": "The speech recognition system described above makes a robust , low - cost system .The use of a decoupled word hypothesizer and sentence recognizer allow much greater flexibility in system operation , and a greater chance to recover from erroneous word hypotheses .", "label": "", "metadata": {}, "score": "31.289764"}
{"text": "More specifically , and as described further below , the ASR process is used to recognize a user 's utterance , representing a query .The ASR process includes generating an n - best list of hypotheses for the utterance .A query element is generated , containing values representing all of the hypotheses from the n - best list .", "label": "", "metadata": {}, "score": "33.26139"}
{"text": "A speech recognition system uses a word hypothesizer to generate hypothesized words for a sentence recognizer .The sentence recognizer receives information containing the hypothesized word and its beginning and end points .The sentence recognizer compares each incoming hypothesis with words allowed by a grammar , and generates a partial or complete sentence hypothesis for each state in which the hypothesis is allowed by the grammar .", "label": "", "metadata": {}, "score": "33.727383"}
{"text": "Advantageously , the step of performing recognition comprises : detecting connected word grammars bounded by semantically null words ; collapsing each list of semantically null words into a unique single - input single - output acoustic network ; and identifying stop nodes in the acoustic network .", "label": "", "metadata": {}, "score": "33.772614"}
{"text": "A reduction in the amount of computations required to perform the search in continuous speech recognition is achieved by incorporating semantic information into the recognizer .Search optimizations involve collapsing each list of semantically null words into a unique single - input single - output acoustic network , and identifying stop nodes in the acoustic network .", "label": "", "metadata": {}, "score": "34.11784"}
{"text": "The post processing delay is also reduced during , the re - scoring , pass since a more compact list of choices needs to be re - scored .Thus a single generic continuous speech recognizer may be used for all types of tasks , including those that may be optimized by incorporating semantic information at the recognizer level .", "label": "", "metadata": {}, "score": "34.131115"}
{"text": "In doing so , the backward pass is able to construct a word graph to be used later during the rescoring phase .FIG .3 shows an example of a search network for a simple prefix - core - suffix type of regular grammar .", "label": "", "metadata": {}, "score": "34.835136"}
{"text": "Multiple word hypotheses and plural sentence hypotheses are used .A speech recognition system uses a word hypothesizer to generate hypothesized words for a sentence recognizer .Speech recognition is improved using prestored words and prestored sentences which provide grammar or context rules .", "label": "", "metadata": {}, "score": "34.884254"}
{"text": "The query element is then applied to the plurality of items to identify one or more items which satisfy the query .A method of identifying one or more items from amongst a plurality of items in response to a spoken utterance , the method comprising : . using an automatic speech recognizer to recognize the utterance , including generating a plurality of hypotheses for the utterance ; and .", "label": "", "metadata": {}, "score": "35.421677"}
{"text": "The grammar of the sentence recognizer 14 , as represented by the graph of FIG .6 , can be used in different ways to assist in the recognition of an utterance .In this type of arrangement , the sentence recognizer 14 is used as a predictor , and is tightly coupled with the word hypothesizer 12 to attempt to improve the performance of the system .", "label": "", "metadata": {}, "score": "35.751156"}
{"text": "Free selection of hypotheses within the current vocabulary is still allowed by the bank - switched system .Within the scope of operation of any given vocabulary / grammar combination , the decoupling between the word hypothesizer 12 and the sentence recognizer 14 is complete .", "label": "", "metadata": {}, "score": "35.912117"}
{"text": "The sentence recognizer 14 creates a new data object each time a word hypothesis is associated with a node and a specific precursor node .Such a data object is shown in FIG .10 , and acts as a sentence hypothesis for a partial or complete sentence ending in that node .", "label": "", "metadata": {}, "score": "35.974552"}
{"text": "A word hypothesizer is then instructed to try to match the following utterance with that set .Such prior art solutions produce systems which are too tightly constrained in terms of vocabulary and grammar which can be handled , and result in unacceptably high recognition error rates .", "label": "", "metadata": {}, "score": "36.00415"}
{"text": "The word hypothesizer constantly generates word hypotheses based on an incoming speech signal .The sentence recognizer assembles the hypotheses into allowable partial and complete sentences .The output of the word hypothesizer is not restricted by feedback from the sentence recognizer .", "label": "", "metadata": {}, "score": "36.764633"}
{"text": "The path scores are based on different feature vectors for the segment .Systems of the prior art are to be considered as large vocabulary continuous speech recognizers ( LVCSR ) capable of recognizing only a limited number of words .In addition to the above described acoustic processing and pattern matching , such systems are based on a user lexicon ( ULX ) and a classical word language model ( LM ) .", "label": "", "metadata": {}, "score": "37.12685"}
{"text": "Since the grammar can detect the end of a sentence as defined in that grammar while speech continues , the terminal nodes of the subgrammars G1 , G2 and G3 can be located as desired , without reference to silences which may occur in the INPUT SPEECH .", "label": "", "metadata": {}, "score": "37.210175"}
{"text": "The most likely word sequence is taken as the recognized words .U.S. Pat .No .6,542,866 B1 discloses a method and an apparatus where multiple feature vectors are generated for a segment of an input signal .A decoder generates a path score that is indicative of the probability that a word is represented by the segment of the input signal .", "label": "", "metadata": {}, "score": "37.780094"}
{"text": "Recognition Algorithms .[ 0134 ] In order to carry out its role with regard to the GUI / Recognition interface , the Recognition module recognizes the graphical objects , textual content , and spatial structure of the diagram .This occurs in two stages .", "label": "", "metadata": {}, "score": "37.907112"}
{"text": "In the standard MAP decoding approach the recognizer outputs the string of words corresponding ... \" .We describe a new framework for distilling information from word lattices to improve the accuracy of speech recognition and obtain a more perspicuous representation of a set of alternative hypotheses .", "label": "", "metadata": {}, "score": "37.923416"}
{"text": "Recognition Algorithms .In order to carry out its role with regard to the GUI / Recognition interface , the Recognition module recognizes the graphical objects , textual content , and spatial structure of the diagram .This occurs in two stages .", "label": "", "metadata": {}, "score": "38.105427"}
{"text": "For example , TMS320 signal processors can be used for the word hypothesizer 12 and sentence recognizer 14 .The recognition procedure described above is easily implemented in machine language , FORTRAN , or as otherwise desired , in accordance with known principles .", "label": "", "metadata": {}, "score": "38.269165"}
{"text": "For purposes of illustration , it is again assumed that the word hypothesizer 12 does not generate any false hypotheses .For each utterance , Table II shows which nodes of the graph of FIG .6 become associated with it , and shows all back pointers to previously valid nodes .", "label": "", "metadata": {}, "score": "38.648884"}
{"text": "Thus , combining the LSI technique with IDF corrects for grammatical and syntactical errors in the query .The use of all ( or at least more than one ) of the hypotheses in the n - best list in forming the query reduces call routing or information retrieval errors due to speech recognition errors .", "label": "", "metadata": {}, "score": "39.069435"}
{"text": "extend the word for this entry by back - scoring its acoustic network with the Viterbi algorithm .find all word - ending nodes connected to the word - starting node of the extended word .for all these word - ending nodes , meet the forward score vector with the backward score vector to determine the best meeting time . return to step 1 until the queue is empty or the number of N of desired choices has been reached .", "label": "", "metadata": {}, "score": "39.23049"}
{"text": "A grammar specification is used to assist the recognizer 14 in assembling the hypotheses into sentences .The grammar is preferably a finite - state grammar , and restricts those sentences which are recognized as valid by the system 10 .Once the sentence recognizer 14 successfully recognizes a sentence , the recognized sentence is output from the speech recognition system 10 .", "label": "", "metadata": {}, "score": "39.46459"}
{"text": "In this paper , we introduce a new concept , the time frame error rate .Based on the time frame errors we derive a new decision rule and show that the word error rate can be reduced consistently with it on various recognition tasks .", "label": "", "metadata": {}, "score": "39.612705"}
{"text": "( i ) determining whether gap occurs between the beginning of each hypothesized sentence and the beginning of the first hypothesized word therein ; .( j ) assigning an error value to any gap determined in step ( i ) ; .", "label": "", "metadata": {}, "score": "39.648277"}
{"text": "This is done in order to compensate the acoustic errors of the phoneme recognizer .This is a HwLex independent method and practically only the most probably recognition errors have to be represented in the new phoneme sequence hypotheses in order to keep the tractability of the graph .", "label": "", "metadata": {}, "score": "39.66075"}
{"text": "The algorithm then outputs the True / False values of the best scoring True / False assignment found during the course of the search .This corresponds to a selection of a best group hypotheses in the diagram of , for example , .", "label": "", "metadata": {}, "score": "39.764282"}
{"text": "The first two passes , known as the fast match , prune the search space into a compact representation of a limited number of sentence hypothesis known as a word graph .The last two passes , known as rescoring , perform a more detailed search of the word graph produced by the fast match to output the most likely word hypothesis .", "label": "", "metadata": {}, "score": "39.941315"}
{"text": "In practice , some words are more salient than others .Consider the prefix - core - suffix grammar depicted in FIG .3 .This grammar essentially acts as a ( limited ) word spotter , where each word in the core list may be preceded by any prefix word , and succeeded by any suffix word .", "label": "", "metadata": {}, "score": "39.9897"}
{"text": "That is , the word hypothesizer 12 is constrained by the selection of a vocabulary by the sentence recognizer to hypothesize only certain words .Thus , in bank - switched systems , the decoupling of the word hypothesizer 12 and the sentence recognizer 14 is not complete .", "label": "", "metadata": {}, "score": "40.02597"}
{"text": "( g ) summing the word errors , gap errors and overlap errors for each hypothesized sentence , and .( h ) generating an indicator of the selected sentences as being the hypothesized sentence with the smallest sum as determined in step ( g ) .", "label": "", "metadata": {}, "score": "40.19501"}
{"text": "The phoneme recognition core can be any pattern matching based one .It is advantageous to provide a word - phoneme graph from a phoneme graph , since in this way a direct connection between words of the word - phoneme graph and corresponding phonemes is provided in order to decode the sequence of phonemes into sequences of word .", "label": "", "metadata": {}, "score": "40.342407"}
{"text": "processing the input signal at least in part based on the modified search network to derive a list of N - best salient words that potentially match at least one word of the spoken utterance .The method of .claim 1 , wherein the stop nodes comprise forward stop nodes and backward stop nodes .", "label": "", "metadata": {}, "score": "40.389244"}
{"text": "The sentence recognizer 14 calculates these gap durations , and the corresponding gap errors , by making use of the start time and stop time information transmitted from the word hypothesizer 12 as part of the word hypothesis .The inclusion of gap errors in partial and total sentence error calculations causes the sentence recognizer 14 to prefer hypotheses which explain a greater proportion of the total incoming utterance .", "label": "", "metadata": {}, "score": "40.605133"}
{"text": "An apparatus for identifying one or more items from amongst a plurality of items in response to a spoken utterance , the apparatus comprising : . means for using an automatic speech recognizer to recognize the utterance , including generating a plurality of hypotheses for the utterance ; and .", "label": "", "metadata": {}, "score": "40.69635"}
{"text": "When a complete sentence satisfies suitable criteria , it is output as a recognized sentence .Gaps and overlaps between hypothesized words are used in calculation of a sentence error for each partial and complete sentence hypothesis .( e ) determining whether any overlap occurs between consecutive hypothesized words in each hypothesized sentence ; .", "label": "", "metadata": {}, "score": "40.852116"}
{"text": "By the time all the computations shown in Table II are completed , the sentence recognizer 14 should recognize the actually uttered sentence as its best hypothesis .This hypothesis best accounts for all of the speech data received , minimizing gap and overlap errors between recognized words .", "label": "", "metadata": {}, "score": "40.860123"}
{"text": "A speech recognition system is disclosed which is capable of recognizing a huge number of words , and in principle even an unlimited number of words .The speech recognition system comprises a word recognizer for deriving a best path through a word graph , and wherein words are assigned to the speech based on the best path .", "label": "", "metadata": {}, "score": "40.937443"}
{"text": "This departs from the standard Spoken Language System modeling in which any notion of meaning is handled by the Natural Language Understanding ( NLU ) component .By expanding the task of the recognizer component from a simple acoustic match to allow semantic information to be fed to the recognizer , significant processing time savings are achieved .", "label": "", "metadata": {}, "score": "41.12738"}
{"text": "Moreover , since the speech recognition is based on a phonemic LM , the system can be set to handle free - style language , unexpected word sequences or even random word sequences better than a traditional word - based statistical LM .", "label": "", "metadata": {}, "score": "41.168907"}
{"text": "Language knowledge is separated into grammar and statistical information which are used by the CSR , and semantic information that is used by the NLU .In all these approaches , the CSR recognizer simply outputs a string of keywords and non - keywords for further processing using semantic information : it does not make use of semantic information during the search .", "label": "", "metadata": {}, "score": "41.251198"}
{"text": "Prior to run - time , the system of .FIG .1 is trained using standard vector - based call routing / information retrieval techniques .More specifically , training may be accomplished by using the technique of latent semantic indexing ( LSI ) .", "label": "", "metadata": {}, "score": "41.32763"}
{"text": "Note that most of the time spent during the backward pass is for back - scoring networks .Impact on Re - scoring .The re - scoring algorithm is very similar to the fast match algorithm previously described .It contains a forward pass to compute the forward score vectors at each word - ending node and a backward pass to decode the list of choices , just as described above .", "label": "", "metadata": {}, "score": "41.352463"}
{"text": "The main goal is to present and demonstrate by actual experiments that sequential coupling may be efficiently achieved by word - lattice syntactic analyzers , efficiently parsing the huge number of hypothesis ( i.e. possible sentences ) contained in the lattice produced by the speech recognizer . \" ...", "label": "", "metadata": {}, "score": "41.418724"}
{"text": "The recognition thresholds of word hypothesizer 12 are preferably set to a level where many hypotheses are generated .That is , the constraints for determining whether a valid hypothesis has been made are loosened , or broadened .This means that the hypothesizer 12 will often generate multiple hypotheses for a single utterance .", "label": "", "metadata": {}, "score": "41.42203"}
{"text": "The algorithm then outputs the True / False values of the best scoring True / False assignment found during the course of the search .This corresponds to a selection of a best group hypotheses in the diagram of , for example , FIG .", "label": "", "metadata": {}, "score": "41.619854"}
{"text": "The algorithm then outputs the True / False values of the best scoring True / False assignment found during the course of the search .This corresponds to a selection of a best group hypotheses in the diagram of , for example , FIG .", "label": "", "metadata": {}, "score": "41.619854"}
{"text": "( d ) determining whether any partial sentence hypotheses are complete sentence hypotheses within the grammar specification ; .( e ) calculating a complete sentence hypothesis error for each complete sentence hypothesis ; and .( f ) selecting a complete sentence hypothesis based on the results of step ( e ) .", "label": "", "metadata": {}, "score": "41.672356"}
{"text": "( a ) generating all possible word hypotheses for an utterance and comparing each hypothesized word to a grammar specification ; .( b ) determining whether , within the constraints of the grammar , each hypothesized word can be validly attached to the end of any existing partial sentence hypotheses and identifying such existing partial sentence hypotheses ; .", "label": "", "metadata": {}, "score": "41.708546"}
{"text": "The words inherit the accumulated scores of their phonemes .After scoring the words are recombined .Due to the recombination a new word graph arises , in which the phoneme sequence information is not needed any more .Again , dead paths may be present , and a path postprocessing 73 is applied to cancel the dead paths and optionally performs pruning as well .", "label": "", "metadata": {}, "score": "41.99179"}
{"text": "In the first module the well know ... \" .In this paper a new , tree - trellis based fast search for finding the N best sentence hypotheses in continuous speech recognition is proposed .The search consists of two parts : a forward , time - synchronous , trellis search and a backward , time asynchronous , tree search .", "label": "", "metadata": {}, "score": "42.023735"}
{"text": "When the current hypothesis is tested on a particular node , that node must have a valid sentence fragment leading to a preceding node in order to create a new valid sentence fragment .For example , when th first digit is hypothesized , the recognizer 14 will try to match that digit with the nodes described above .", "label": "", "metadata": {}, "score": "42.208954"}
{"text": "Sentence - level confidence geared toward the rejection of out - of - grammar utterances is also investigated .The combination of a word graph based technique and the acoustic score shows excellent performance across all the tasks we considered .only to the same speech data but also to the same fixed decoded script .", "label": "", "metadata": {}, "score": "42.251183"}
{"text": "If the vocabulary of the recognition system is limited due to limited processing or memory capacity , it may be necessary or desirable to switch in a new bank of vocabulary templates when a new grammar is loaded in .It is not necessary that the grammar and vocabularies be bank - switched at the same time , although such a break along common lines would tend to occur in many cases .", "label": "", "metadata": {}, "score": "42.304585"}
{"text": "Structure recognition is where the users ' strokes are interpreted in terms of a diagrammatic domain model , namely a node - link diagram regarded as a concept map .[ 0141 ] 5.1 Structure Recognition on Preprocessed Strokes : Form Structure Hypotheses .", "label": "", "metadata": {}, "score": "42.333267"}
{"text": "Structure recognition is where the users ' strokes are interpreted in terms of a diagrammatic domain model , namely a node - link diagram regarded as a concept map .[ 0141 ] 5.1 Structure Recognition on Preprocessed Strokes : Form Structure Hypotheses .", "label": "", "metadata": {}, "score": "42.333267"}
{"text": "As mentioned before , re - scoring is more efficient since we re - score only the list of N - best non - semantically - null words sequences , instead of re - scoring , the true N - best list .", "label": "", "metadata": {}, "score": "42.362785"}
{"text": "Preferably , the invention alleviates , mitigates or eliminates one or more of the above or other disadvantages of the prior art singly or in any combination .According to a first aspect of the present invention there is provided , a speech recognition system for identifying words from a sound block , the speech recognition system comprising : . word recognizer for deriving a best path through a word graph , each word having assigned a word score and a phonemic transcription , and wherein words are assigned to the sound block based on the best path , . wherein the word score of each word in the word graph includes the word score as obtained from applying a phonemic language model ( LM ) to each word of the word graph .", "label": "", "metadata": {}, "score": "42.511036"}
{"text": "The recognizer 14 will not recognize a complete sentence hypothesis if there is a better partial sentence hypothesis .If the speaker pauses in the middle of a sentence , the sentence recognizer 14 will merely wait for speech to continue .", "label": "", "metadata": {}, "score": "42.624474"}
{"text": "Hence , the re - scoring algorithm is forced to focus only on the meaningful choice alternatives , leaving aside the non - informative affixes .FIG .7 shows the optimized re - score graph .Care must be taken , however , when designing the grammar .", "label": "", "metadata": {}, "score": "42.637444"}
{"text": "According to another aspect of the invention there is provided software on a machine readable medium for performing a method of continuous speech recognition comprising : incorporating semantic information during searching by a continuous speech recognizer .Preferably , the method comprises searching using semantic information to identify semantically null words and thereby generate a list of N - best salient words .", "label": "", "metadata": {}, "score": "42.69523"}
{"text": "In summary , the search network of FIG .6 may be used to locate stop nodes , starting with the forward stop nodes .In this case , the right - most set of non - semantically - null words happen to be the core words , because they are connected to the suffix ( a collapsed acoustic network ) and no other salient words occur past the suffix .", "label": "", "metadata": {}, "score": "42.769783"}
{"text": "The error of a complete sentence hypothesis is calculated by a recursive procedure which traces backpointers from the current node to the previous node , following the path giving the lowest scores .Since the intermediate partial sentence errors are stored with each node , this procedure only has to check back one level of recursion .", "label": "", "metadata": {}, "score": "42.84669"}
{"text": "In addition to improving the accuracy of the recognizer , our method produces a new representation of the set of candidate hypotheses that specifies ... . by Frank Wessel , Ralf Schl\u00fcter , Klaus Macherey , Hermann Ney - IEEE Trans . on Speech and Audio Processing , 2001 . \" ...", "label": "", "metadata": {}, "score": "42.890095"}
{"text": "The HwLex may be adapted without any phoneme LM adaptation .The phoneme recognizer may acoustically process the sound block by applying any standard acoustic feature extraction technique , such as Mel - frequency cepstrum coefficients ( MFCC ) , Linear predictive coding ( LPC ) , Relative spectral coefficients ( RASTA ) , Perceptual linear prediction ( PLP ) , etc .", "label": "", "metadata": {}, "score": "43.15017"}
{"text": "2 shows a spoken language processing system comprising a continuous speech recognizer for search optimization according to a first embodiment of the present invention ; .FIG .3 shows an example of a search network for a prefix - core - suffix regular grammar ; .", "label": "", "metadata": {}, "score": "43.433586"}
{"text": "In a speech recognition system , an input sound block is processed by a computer system converting the sound features of the verbal content of the sound block into recognized words .Recognition of speech is a complicated task involving a number of steps .", "label": "", "metadata": {}, "score": "43.616966"}
{"text": "The present invention provides a method and apparatus for identifying one or more items from amongst multiple items in response to a spoken utterance .In an embodiment of the method , an automatic speech recognizer is used to recognize the utterance , including generating multiple hypotheses for the utterance .", "label": "", "metadata": {}, "score": "43.716408"}
{"text": "In one implementation of the architecture , the GUI module and Recognition module maintain separate , synchronized copies of the finished strokes , using hash tables or other known techniques to maintain the cross - references .Structure Recognition ( 268 ): . performStructureRecognitionOnPreprocessedStrokes ( ) ; .", "label": "", "metadata": {}, "score": "43.94744"}
{"text": "A method of identifying one or more items from amongst a plurality of items in response to a spoken utterance , the method comprising : . using an automatic speech recognizer to recognize the utterance , including generating a plurality of hypotheses for the utterance , wherein each of the hypotheses includes one or more words ; . generating a query element for use in identifying one or more items from amongst the plurality of items , wherein the query element includes a set of values representing all of the plurality of hypotheses , each value corresponding to one of said words ; and .", "label": "", "metadata": {}, "score": "43.974472"}
{"text": "We propose to estimate the confidence of a hypothesized word directly as its posterior probability , given all acoustic observations of the utterance .These probabilities are computed on ... \" .Abstract - In this paper , we present several confidence measures for large vocabulary continuous speech recognition .", "label": "", "metadata": {}, "score": "44.042145"}
{"text": "5 . illustrates an embodiment of a phoneme recognizer , .FIG .6 . illustrates an embodiment of a word - phoneme graph generator , .FIG .7 . illustrates an embodiment of a word graph generator .In the standard large vocabulary continuous speech recognizer ( LVCSR ) architecture , among others , the user lexicon ( ULX ) and language model ( LM ) are basic components .", "label": "", "metadata": {}, "score": "44.208668"}
{"text": "2 .This information consists of the hypothesized WORD , an ERROR value , and START and STOP TIMES for the word .The value ERROR indicates the confidence which the hypothesizer 12 places in its guess , and is determined by an appropriate metric indicating the \" distance \" between the template of the hypothesized word and the parameters of the actual word .", "label": "", "metadata": {}, "score": "44.34066"}
{"text": "The sentence recognizer 14 of the present invention makes this discrimination by introducing error terms for overlap of or gaps between words , in addition to those error terms which indicate confidence in recognition of the words themselves .The magnitude of the gap and overlap error terms increases with the degree of the misfit between consecutive words .", "label": "", "metadata": {}, "score": "44.390366"}
{"text": "Query expansion and weighting based on results of automatic speech recognition US 6856957 B1 .Resumen .A technique for identifying one or more items from amongst a plurality of items in response to a spoken utterance is used to improve call routing and information retrieval systems which employ automatic speech recognition ( ASR ) .", "label": "", "metadata": {}, "score": "44.45613"}
{"text": "processing the input signal at least in part based on the modified search network to derive a list of N - best salient words that potentially match at least one word of the spoken utterance .A system for continuous speech recognition , comprising : . an input for receiving an input signal derived from a spoken utterance of a set of words ; . means for providing a search network indicative of a plurality of recognizable words , the search network comprising a plurality of interconnected words , a given interconnection being established at least in part based on a connected word grammar , . means for providing , semantic information ; . means for detecting in the search network connected word grammars bounded by semantically null words ; . means for generating a modified search network by performing a process comprising : . collapsing each list of semantically null words into a unique single - input single - output search network portion , and . identifying stop nodes in the search network , the modified search network being indicative of a plurality of non - semantically - null words ; and .", "label": "", "metadata": {}, "score": "44.460968"}
{"text": "In other words , there is no direct feedback between the sentence recognizer 14 and the word hypothesizer 12 .The word hypothesizer 12 constantly generates all hypotheses which match its reference templates .This is a departure from prior art systems that use a sentence recognizer which controls the word hypothesizer , constraining it to hypothesize only words which are considered to be valid next words by the recognizer .", "label": "", "metadata": {}, "score": "44.47498"}
{"text": "The DM gathers the necessary information from the user to request the applications to perform the user 's goal by prompting the user for input .While the terms ' grammar ' and ' language model ' are often used interchangeably , in this application , a language model is defined as the graph that is used by the CSR search algorithm to perform recognition .", "label": "", "metadata": {}, "score": "44.580296"}
{"text": "In a first step , a phoneme recognizer 41 is applied to a sound block 40 .The phoneme recognizer processes the incoming sound blocks by using the acoustic resource 29 , resulting in a phoneme graph which is outputted 42 .", "label": "", "metadata": {}, "score": "44.617325"}
{"text": "4 is a timing diagram for an utterance ; .FIG .5 is a graph showing error to be attributed to overlap and gaps in speech signals ; .FIG .6 is a state diagram defining a grammar for use in speech recognition ; .", "label": "", "metadata": {}, "score": "44.63877"}
{"text": "[ 0196 ] 2 .A score vector is constructed listing the support - context scores of all Group nodes .It is possible to use intrinsic scores in the score vector , but this could significantly reduce search tree pruning and therefore increase search time .", "label": "", "metadata": {}, "score": "44.651913"}
{"text": "This buffer can continue to collect data while the vocabulary or grammar bank - switching operations are accomplished , and processing can then continue from the point where it left off .This allows a small system to make use of large and complex vocabularies and grammars , without missing any of the incoming speech .", "label": "", "metadata": {}, "score": "44.703842"}
{"text": "The Pre - Interpret stage breaks raw strokes into smaller fragments , and forms TextObject hypotheses .The second stage , called Structure Recognition , can require more processing time and operates asynchronously with the user 's writing and drawing .Structure recognition is where the users ' strokes are interpreted in terms of a diagrammatic domain model , namely a node - link diagram regarded as a concept map .", "label": "", "metadata": {}, "score": "44.916855"}
{"text": "The Pre - Interpret stage breaks raw strokes into smaller fragments , and forms TextObject hypotheses .The second stage , called Structure Recognition , can require more processing time and operates asynchronously with the user 's writing and drawing .Structure recognition is where the users ' strokes are interpreted in terms of a diagrammatic domain model , namely a node - link diagram regarded as a concept map .", "label": "", "metadata": {}, "score": "44.916855"}
{"text": "In this example , the vocabulary consists of two prefix words , five core words and two suffix words .Forward Pass .During the forward pass of the fast match , score vectors containing the likelihood of the best path starting at time 0 and ending in the last state of each word w , for all times t are computed .", "label": "", "metadata": {}, "score": "44.9814"}
{"text": "[0193 ] 2 .A score vector is constructed listing the support - context scores of all Group nodes .It is possible to use intrinsic scores in the score vector , but this could significantly reduce search tree pruning and therefore increase search time .", "label": "", "metadata": {}, "score": "45.014275"}
{"text": "[0193 ] 2 .A score vector is constructed listing the support - context scores of all Group nodes .It is possible to use intrinsic scores in the score vector , but this could significantly reduce search tree pruning and therefore increase search time .", "label": "", "metadata": {}, "score": "45.014275"}
{"text": "09/118,621 to Stubley et al .entitled \" Block algorithm for pattern recognition \" , filed Jul. 21 1998 ; and U.S. patent application Ser .No . 08/934736 to Robillard et al .entitled \" Search and rescoring method for a speech recognition system \" , filed Sep. 22 , 1997 , which are incorporated herein by reference .", "label": "", "metadata": {}, "score": "45.033096"}
{"text": "In this paper we study the use of confidence measures for an on - line handwriting recognizer .We investigate various confidence measures and their integration in an isolated word recognition system as well as in a sentence recognition system .In isolated word recognition tasks , the rejection mechanism is designed in order to reject the outputs of the recognizer that are possibly wrong , which is the case for badly written words , out - of - vocabulary words or general drawing .", "label": "", "metadata": {}, "score": "45.1847"}
{"text": "Sentence hypotheses having a first word which begins later than his will be penalized with a gap error .This will cause the sentence recognizer 14 to tend to prefer sentence hypotheses which account for speech starting at the beginning of an utterance .", "label": "", "metadata": {}, "score": "45.187103"}
{"text": "The phoneme sequence hypothesis creation method may be or may include such methods as confusion matrix , allowed word stem , collected pronunciation list , phoneme distance based , etc . .In a subsequent process step , a word hypotheses parser 62 processes the extended phoneme graph .", "label": "", "metadata": {}, "score": "45.242287"}
{"text": "In this paper , the confidence measure of a hypothesized word is derived from its posterior probability .In contrast to common approaches , in which N - best lists or word graphs / lattices are used , the posterior probabilities are derived from a concept graph .", "label": "", "metadata": {}, "score": "45.271317"}
{"text": "In this paper , the confidence measure of a hypothesized word is derived from its posterior probability .In contrast to common approaches , in which N - best lists or word graphs / lattices are used , the posterior probabilities are derived from a concept graph .", "label": "", "metadata": {}, "score": "45.271317"}
{"text": "0109 ] In one implementation of the architecture , the GUI module and Recognition module maintain separate , synchronized copies of the finished strokes , using hash tables or other known techniques to maintain the cross - references .[ 0110 ] Structure Recognition ( 268 ) : . [ 0111 ] performStructureRecognitionOnPreprocessedStrokes ( ) ; .", "label": "", "metadata": {}, "score": "45.329697"}
{"text": "Current CWR systems will attempt to generate a valid sentence when the speaker stops talking .That is , a silence longer than some threshold value causes the recognizer to assume an end of sentence , and try to find the best match .", "label": "", "metadata": {}, "score": "45.4611"}
{"text": "Conventionally , the word that yields the best total likelihood would be chosen for backward scoring .But because this node is a backward stop node , the backward scoring does not take place .Instead , the word is still backtracked , but only to construct the re - score graph properly .", "label": "", "metadata": {}, "score": "45.468273"}
{"text": "The method and system described above may be combined with other techniques to save processing time .For example , searching may alternatively be based on beam searches and lexical trees to provide benefits of those methods in addition to benefits of the method described above .", "label": "", "metadata": {}, "score": "45.472763"}
{"text": "Incorporation of semantic features into a lattice posterior probability based confidence measure provides significant improvements compared to posterior probability when used together in an air travel reservation task .At 5 % False Alarm ( FA ) rate relative improvements of 28 % and 61 % in Correct Acceptance ( CA ) rate are achieved for word level and concept level confidence measurements , respectively .", "label": "", "metadata": {}, "score": "45.49131"}
{"text": "In contrast , a spoken query may contain both grammatical and syntactical errors ( e.g. , skipped words , inversions , hesitations ) .Also , even the best natural language speech recognizers produce recognition errors .Consequently , an ASR - augmented call routing or information retrieval system is susceptible to recognition errors being propagated into the query , reducing the effectiveness of the resulting call routing or information retrieval operation .", "label": "", "metadata": {}, "score": "45.538532"}
{"text": "5,515,475 to Gupta et al .Many other background references are included in the above referenced copending applications .In order to provide speech recognition which works efficiently in real time , two approaches are generally considered .The first is to make use of specialized hardware or parallel processing architectures .", "label": "", "metadata": {}, "score": "45.54508"}
{"text": "Note that while it may be preferable to use all of the hypotheses in the n - best list to form the query vector , it is not necessary to do so .In other words , the system may use more than one , but not all , of the hypotheses in accordance with the present invention ; this would still provide a performance improvement over prior approaches .", "label": "", "metadata": {}, "score": "45.680504"}
{"text": "The phoneme sequence hypotheses are added to the phoneme graph by a phoneme sequence hypotheses generator .It is an advantage to extend the phoneme graph with phoneme sequence hypotheses , since in this way the phoneme sequence hypotheses may , at least to some extend , compensate acoustical errors of the phoneme recognizer , if such errors are present .", "label": "", "metadata": {}, "score": "45.686047"}
{"text": "If the system ever reaches an \" incorrect \" node , there is no method by which it can recover .In contrast , the preferred embodiment employs a dynamic programming ( DP ) technique which allows multiple hypotheses to be considered in parallel .", "label": "", "metadata": {}, "score": "45.738438"}
{"text": "Since not all word segmentations are produced with the optimized backward pass of the fast match , the re - scoring algorithm may be forced to score some words over a larder window than it should .The extent to which this is a problem is highly dependent on the mean word durations of non - semantically - null words with respect to semantically null words .", "label": "", "metadata": {}, "score": "45.756645"}
{"text": "[ 0242 ] II .Follow - on Processing Stage [ 0243 ] 3 .End linking .[ 0244 ] 3a .For all strokes ( stroke fragments ) that have not been determined to be cursive writing , stroke end objects are created representing the locations and orientations of the endpoints of each stroke .", "label": "", "metadata": {}, "score": "45.76316"}
{"text": "[0192 ] The following section describes the inputs and outputs , as well as steps of a search process which in one embodiment uses a depth - first search procedure for hierarchical groups under a nonoverlapping support constraint as follows : . [", "label": "", "metadata": {}, "score": "45.891415"}
{"text": "Such variations fall within the spirit of the present invention , the scope of which is defined by the appended claims . \" ...In this paper a new , tree - trellis based fast search for finding the N best sentence hypotheses in continuous speech recognition is proposed .", "label": "", "metadata": {}, "score": "45.892254"}
{"text": "We are looking for confidence scoring techniques that perform well on a broad variety of tasks .Our main focus is on word - level error rejection , but most results apply to other scenarios as well .A variation of the Normalized Cross Entropy that is adapted to that purpose is introduced .", "label": "", "metadata": {}, "score": "45.928696"}
{"text": "We are looking for confidence scoring techniques that perform well on a broad variety of tasks .Our main focus is on word - level error rejection , but most results apply to other scenarios as well .A variation of the Normalized Cross Entropy that is adapted to that purpose is introduced .", "label": "", "metadata": {}, "score": "45.928696"}
{"text": "The present invention is advantageous for a number of reasons .By basing the word graph on phonemic transcription and a phonemic LM , there is no need for a word LM , and the number of recognizable words are not limited by the number of words in the word LM of the recognition system .", "label": "", "metadata": {}, "score": "45.933277"}
{"text": "In order to improve the performance of the speech recognizer 10 , it is preferred to constrict the set of sentences which are allowed .The sentence recognizer 14 uses some type of grammar in order to restrict the choice of sentences which can be identified .", "label": "", "metadata": {}, "score": "45.941223"}
{"text": "FIG .3 is a flow diagram showing a run - time call routing or information retrieval process associated with the system of .FIG .1 ; and .FIG .4 is a flow diagram showing a process for generating a query based on an n - best list output by a speech recognizer .", "label": "", "metadata": {}, "score": "46.010956"}
{"text": "In the HVCSR the information sources are combined differently in comparison with the LVCSR , in order to be able to handle the large number of recognizable words .A HwLex is normally too big to integrate it into the recognizing process as a phoneme tree like in the integrated LVCSR .", "label": "", "metadata": {}, "score": "46.09061"}
{"text": "During the first pass , forward scores are computed for each word - ending node of the search graph .These forward scores measure , for each word in the graph , the likelihood of the best path which starts at time 0 and ends at the last node of w just before time t. During the forward pass , the path information is not preserved .", "label": "", "metadata": {}, "score": "46.262306"}
{"text": "For example , the user may be presented with an option of ordering the selectable list from more complex objects to less complex objects , among other orderings .With attention to another aspect of the present systems and methods provided is incremental structure recognition or incremental updating of the node - link diagram .", "label": "", "metadata": {}, "score": "46.27407"}
{"text": "As a result of the HwLex parsing , a word - phoneme graph 44 is built up which identifies the words on the graph paths .In a next processing step , a word graph generator 45 converts the word - phoneme graph into a word graph .", "label": "", "metadata": {}, "score": "46.289837"}
{"text": "The True / False determinations are made as part of optimization processing such as accomplished in block 512 of FIG .30 , which illustrates operations in the Recognition module that modify the hypothesis lattice .[0168 ] 3 .Forms Arrowhead hypotheses ( See FIG .", "label": "", "metadata": {}, "score": "46.32244"}
{"text": "The True / False determinations are made as part of optimization processing such as accomplished in block 512 of FIG .30 , which illustrates operations in the Recognition module that modify the hypothesis lattice .[0168 ] 3 .Forms Arrowhead hypotheses ( See FIG .", "label": "", "metadata": {}, "score": "46.32244"}
{"text": "1 illustrates an embodiment of a huge vocabulary continuous speech recognizer ( HVCSR ) in accordance with the present invention .The recognizer draws on the three resources the HwLex 12 , the acoustic resource 29 , and the phoneme LM 36 , these are further discussed in connection with .", "label": "", "metadata": {}, "score": "46.45086"}
{"text": "The sound features are subsequently scored , the acoustic scoring describes the probability that a feature was produced by a particular word or word part at a given position in the sound block .Pattern matching techniques are used to determine likely sequences of words or parts of words from the sequence of sound features .", "label": "", "metadata": {}, "score": "46.517868"}
{"text": "Next , at block 403 , optionally , each value in the query vector is further weighted according to its word confidence , i.e. , according to a confidence score of the particular word which the value represents .The word confidence score may be , for example , a measure of the number of times the word occurs in the n - best list .", "label": "", "metadata": {}, "score": "46.58794"}
{"text": "Moreover , the invention deals with an apparatus and a method for identifying words from a sound block and to computer readable code for implementing the method .A speech recognition system for identifying words from a sound block , the speech recognition system comprising : . a phoneme recognizer for extracting from the sound block a phoneme graph , the phoneme graph assigning a phoneme to each edge , and wherein the phonetic transcription of the words in the word graph are based on the phoneme graph ; and .", "label": "", "metadata": {}, "score": "46.608437"}
{"text": "BRIEF DESCRIPTION .[0007 ] A method and process provides a selection process designed to select optimized results from a plurality of possible results represented in a search tree .A tree search is employed , wherein bounds are used to prune at least one node or branch of the search tree .", "label": "", "metadata": {}, "score": "46.63495"}
{"text": "BRIEF DESCRIPTION .[0007 ] A method and process provides a selection process designed to select optimized results from a plurality of possible results represented in a search tree .A tree search is employed , wherein bounds are used to prune at least one node or branch of the search tree .", "label": "", "metadata": {}, "score": "46.63495"}
{"text": "Instead , new structure hypotheses generated due to newly added or deleted ink strokes are , if appropriate , grouped with existing structure hypotheses groups or new structure hypotheses groups are formed .Then any re - scoring ( i.e. , of intrinsic and/or context scores ) are propagated to update the existing hierarchical lattice ( e.g. , FIG .", "label": "", "metadata": {}, "score": "46.70273"}
{"text": "Instead , new structure hypotheses generated due to newly added or deleted ink strokes are , if appropriate , grouped with existing structure hypotheses groups or new structure hypotheses groups are formed .Then any re - scoring ( i.e. , of intrinsic and/or context scores ) are propagated to update the existing hierarchical lattice ( e.g. , FIG .", "label": "", "metadata": {}, "score": "46.70273"}
{"text": "However , even given optimal models , the MAP decoder does not necessarily minimize the commonly used performance metric , word error rate ( WER ) .We describe a method for explicitly minimizing WER by extracting word hypotheses with the highest posterior probabilities from word lattices .", "label": "", "metadata": {}, "score": "46.72528"}
{"text": "Time synchronous processing time , occurring while the utterance is being spoken , is reduced by computing only a subset of the search space .The amount of delay after a person finished speaking before the recognized word string is returned by the application is reduced .", "label": "", "metadata": {}, "score": "46.7959"}
{"text": "[ 0108 ] In one implementation of the architecture , the GUI module and Recognition module maintain separate , synchronized copies of the finished strokes , using hash tables or other known techniques to maintain the cross - references .[0109 ] Structure Recognition ( 268 ) : performStructureRecognitionOnPreprocessedStrokes ( ) ; .", "label": "", "metadata": {}, "score": "46.948128"}
{"text": "[ 0108 ] In one implementation of the architecture , the GUI module and Recognition module maintain separate , synchronized copies of the finished strokes , using hash tables or other known techniques to maintain the cross - references .[0109 ] Structure Recognition ( 268 ) : performStructureRecognitionOnPreprocessedStrokes ( ) ; .", "label": "", "metadata": {}, "score": "46.948128"}
{"text": "If the additional utterances do not generate a partial or complete sentence hypothesis having a lower error than the current sentence hypothesis , such hypothesis will be accepted .It is not necessary for speech to cease before generating a recognized sentence ; such generation is determined by the grammar .", "label": "", "metadata": {}, "score": "46.998146"}
{"text": "11/726,798 , filed on Mar. 23 , 2007 by Saund , entitled \" OPTIMIZATION METHODS AND PROCESSES USING A TREE SEARCHING OPERATION AND NON - OVERLAPPING SUPPORT CONSTRAINT . \"BACKGROUND .Pen / stylus interfaces to computers hold the promise of applications that are as intuitive as a paper or whiteboard but with the power and functionality of editing , search , and other processing provided by computer applications .", "label": "", "metadata": {}, "score": "47.116226"}
{"text": "A system and method for continuous speech recognition according to a first embodiment of the present invention is described with reference to FIGS . 2 representing schematically a spoken language system 100 comprising a CSR 120 and an NLU component 130 .", "label": "", "metadata": {}, "score": "47.14192"}
{"text": "The search concepts described herein , which employ the non - overlapping constraint , have been described with particular attention to structure recognition .The above discussion sets forth operation of the various procedures where the determination of the T / F value is used to prune the search tree in order to arrive at an optimized , nearly - optimized or desired obtainable solution .", "label": "", "metadata": {}, "score": "47.16548"}
{"text": "10 is a data object for a sentence hypothesis .DESCRIPTION OF THE PREFERRED EMBODIMENT .FIG .1 shows a block diagram of a speech recognition system 10 according to the present invention .A word hypothesizer 12 accepts incoming speech signals , compares them to reference templates in its vocabulary , and generates word hypotheses .", "label": "", "metadata": {}, "score": "47.23175"}
{"text": "A score vector is constructed listing the support - context scores of all Group nodes .It is possible to use intrinsic scores in the score vector , but this could significantly reduce search tree pruning and therefore increase search time .", "label": "", "metadata": {}, "score": "47.300514"}
{"text": "0189 ]The following section describes the inputs and outputs , as well as steps of a search process which in one embodiment uses a depth - first search procedure for hierarchical groups under a nonoverlapping support constraint as follows : .", "label": "", "metadata": {}, "score": "47.303547"}
{"text": "0189 ]The following section describes the inputs and outputs , as well as steps of a search process which in one embodiment uses a depth - first search procedure for hierarchical groups under a nonoverlapping support constraint as follows : .", "label": "", "metadata": {}, "score": "47.303547"}
{"text": "This application also describes the ontology of objects , algorithms for building a lattice of hypotheses , and constrained search processes to search the hypotheses space for the optimal , near - optimal , or desired obtainable global interpretation .Also , while the following generally discusses node - link diagrams , the present concepts provide particular benefits to the creation and editing of concept maps .", "label": "", "metadata": {}, "score": "47.36212"}
{"text": "This application also describes the ontology of objects , algorithms for building a lattice of hypotheses , and constrained search processes to search the hypotheses space for the optimal , near - optimal , or desired obtainable global interpretation .Also , while the following generally discusses node - link diagrams , the present concepts provide particular benefits to the creation and editing of concept maps .", "label": "", "metadata": {}, "score": "47.36212"}
{"text": "This application also describes the ontology of objects , algorithms for building a lattice of hypotheses , and constrained search processes to search the hypotheses space for the optimal , near - optimal , or desired obtainable global interpretation .Also , while the following generally discusses node - link diagrams , the present concepts provide particular benefits to the creation and editing of concept maps .", "label": "", "metadata": {}, "score": "47.36212"}
{"text": "This application also describes the ontology of objects , algorithms for building a lattice of hypotheses , and constrained search processes to search the hypotheses space for the optimal , near - optimal , or desired obtainable global interpretation .Also , while the following generally discusses node - link diagrams , the present concepts provide particular benefits to the creation and editing of concept maps .", "label": "", "metadata": {}, "score": "47.36212"}
{"text": "The second method uses a maximum entropy based semantic structured la ... \" .Abstract - This paper proposes two methods to incorporate semantic information into word and concept level confidence measurement .The first method uses tag and extension probabilities obtained from a statistical classer and parser .", "label": "", "metadata": {}, "score": "47.38327"}
{"text": "Thus , when the energy of the input speech signal indicates a value below some threshold , the sentence recognizer determines that nothing is being spoken and applies a low error value as shown by the lower curve 32 .This low error value can be zero if desired .", "label": "", "metadata": {}, "score": "47.39823"}
{"text": "The recognition module is involved because it possesses the knowledge of the diagram 's node - link structure , and is therefore in a position to direct how link graphics should be updated to follow the nodes they are attached to as the nodes are moved or otherwise transformed .", "label": "", "metadata": {}, "score": "47.40641"}
{"text": "The recognition module is involved because it possesses the knowledge of the diagram 's node - link structure , and is therefore in a position to direct how link graphics should be updated to follow the nodes they are attached to as the nodes are moved or otherwise transformed .", "label": "", "metadata": {}, "score": "47.40641"}
{"text": "The recognition module is involved because it possesses the knowledge of the diagram 's node - link structure , and is therefore in a position to direct how link graphics should be updated to follow the nodes they are attached to as the nodes are moved or otherwise transformed .", "label": "", "metadata": {}, "score": "47.40641"}
{"text": "A conventional system operates as follows .Speech input is received by the CSR , and a search is performed by the CSR using acoustic models that model speech sounds , and a language model or ' grammar ' that describes how words may be connected together .", "label": "", "metadata": {}, "score": "47.501846"}
{"text": "Breaks up TextObject hypotheses based on enclosure by ClosedPathObjects .Removes TextObject hypotheses that are redundant with each other or with any other graphic object , based on having common support .Performs handwriting recognition on all un - scored TextObject hypotheses .", "label": "", "metadata": {}, "score": "47.508476"}
{"text": "A more restrictive method would be to retain only a single sentence hypothesis for each word hypothesis .In the above example , only the best hypothesis would be assigned to a node , and multiple assignments to a node ( e.g. , 4a , 4b , 4c . . . ) would be eliminated .", "label": "", "metadata": {}, "score": "47.51011"}
{"text": "An information retrieval system as recited in .claim 30 , wherein the information retrieval engine uses the query to retrieve audio data satisfying the query from the database .A call routing system comprising : . a database ; . a call routing engine to identify and provide a caller with access to a call destination which satisfies a text - based query ; and . an automatic speech recognizer to generate the query in response to an utterance of the caller , the automatic speech recognizer configured to : . generate a plurality of hypotheses for the utterance ; and .", "label": "", "metadata": {}, "score": "47.562843"}
{"text": "wherein the word score of each word in the word graph includes the word score as obtained from applying a phonemic language model to each word of the word graph .The speech transducer may be a microphone or other means for converting captured speech to a digital representation for handling in the speech recognition system .", "label": "", "metadata": {}, "score": "47.569954"}
{"text": "A speech recognition system comprising : . a speech input device for receiving speech input and generating a continuous sequence of speech frames representing the speech ; . a plurality of reference templates , each template containing sequences of reference speech frames defining words to be recognized ; . a grammar specification which defines all allowable sentences to be recognized ; and .", "label": "", "metadata": {}, "score": "47.594086"}
{"text": "In return , the system has a greater flexibility and the ability to \" change its mind \" about its current location in the grammar .As used herein , the terms \" word \" and \" sentence \" are not restricted to their common meanings .", "label": "", "metadata": {}, "score": "47.616917"}
{"text": "START - TIME and STOP - TIME are the actual start and stop times of the input speech vocalizations which generated the word hypothesis .The length of the actual utterance is given by(STOP - TIME)-(START - TIME ) .These values are used by a sentence recognizer 14 , as described below , in order to improve overall recognition .", "label": "", "metadata": {}, "score": "47.67058"}
{"text": "This incremental structure recognition also occurs when a stroke is newly touched .For example , if the user touches or selects an existing element of the node - link structure to somehow change the lattice hypotheses , a whole new forest of hypotheses and a new lattice hypothesis graph does not need to be recreated .", "label": "", "metadata": {}, "score": "47.696053"}
{"text": "This incremental structure recognition also occurs when a stroke is newly touched .For example , if the user touches or selects an existing element of the node - link structure to somehow change the lattice hypotheses , a whole new forest of hypotheses and a new lattice hypothesis graph does not need to be recreated .", "label": "", "metadata": {}, "score": "47.696053"}
{"text": "[ 0180 ] 12 .Forms GraphNode and GraphLink hypotheses from CurvilinearObjects pointing to TextObjects , TextLines , or TextColumns .[0181 ] Each object will include a score and pointers to its support objects and the more complex objects it itself supports .", "label": "", "metadata": {}, "score": "47.697727"}
{"text": "The speech recognition system according to .claim 4 , wherein the extended phoneme graph is filtered by applying a lexicon of allowed words , so as to remove phoneme sequences of the extended phoneme graph comprising words which are not present in the lexicon .", "label": "", "metadata": {}, "score": "47.819267"}
{"text": "The method of claim 6 , further comprising the step of : .( n ) when a complete sentence is selected , changing to a second grammar specification , wherein additional partial and complete sentences are generated according to the second grammar specification .", "label": "", "metadata": {}, "score": "47.837963"}
{"text": "[0188 ] The algorithm is based on search concepts whereby bounds are used to prune the search tree .Use of bounds are well known in the art , and the particular bounds employed may be determined by the specific implementations in which the preset concepts are employed .", "label": "", "metadata": {}, "score": "47.866577"}
{"text": "[0188 ] The algorithm is based on search concepts whereby bounds are used to prune the search tree .Use of bounds are well known in the art , and the particular bounds employed may be determined by the specific implementations in which the preset concepts are employed .", "label": "", "metadata": {}, "score": "47.866577"}
{"text": "Thus an N - best list of only salient words is re - scored instead of a true N - best list .Advantageously , scoring comprises Viterbi scoring or other known methods .The method above may be combined with other techniques to save processing time .", "label": "", "metadata": {}, "score": "47.882782"}
{"text": "A transition to the appropriate initial state 54 , 56 of the new grammar G2 or G3 is then made automatically .The processor can then continue processing in the new grammar .The transition to a new grammar or vocabulary is made whenever a terminal node is reached in a previous grammar .", "label": "", "metadata": {}, "score": "47.94033"}
{"text": "Thus , the present invention can include any variety of combinations and/or integrations of the embodiments described herein .The technique described below can be used to improve call routing and information retrieval systems which employ automatic speech recognition ( ASR ) .", "label": "", "metadata": {}, "score": "47.986626"}
{"text": "A good confidence measure can largely benefit speech recognition systems in many practical applications .In this survey , I summarize most research works related to confidence measures which have been done during the past 10 - 12 years .I will present all these approaches as three major categories , namely CM as a combination of predictor features , CM as a posterior probability , and CM as utterance verification .", "label": "", "metadata": {}, "score": "48.1119"}
{"text": "FIG .1 is a block diagram of a speech recognition system ; .FIG .2 is a data object for a word hypothesis ; .FIG .3 is a timing diagram for three hypotheses of an utterance ; .", "label": "", "metadata": {}, "score": "48.12903"}
{"text": "First , because the acoustic network has a single input and a single output , greater graph compression may be achieved since the phonetic similarities of the words may be exploited from both ends .Second , the output score vector resulting from the backtracking of the collapsed acoustic network will yield the scores of the best paths ( for all times ) through that network , regardless of which word was traversed .", "label": "", "metadata": {}, "score": "48.12948"}
{"text": "The query element is then applied to the searchable items to identify one or more items which satisfy the query .FIG .1 is a high - level block diagram of a system which may be used to for call routing , information retrieval , or both , in accordance with the present invention .", "label": "", "metadata": {}, "score": "48.271297"}
{"text": "[0225 ]The search concepts described herein , which employ the non - overlapping constraint , have been described with particular attention to structure recognition .[0226 ] The above discussion sets forth operation of the various procedures where the determination of the T / F value is used to prune the search tree in order to arrive at an optimized , nearly - optimized or desired obtainable solution .", "label": "", "metadata": {}, "score": "48.27346"}
{"text": "The audio front end 1 is composed of conventional components designed for performing these operations and may be standard , off - the - shelf hardware and/or software .The ASR subsystem 2 performs natural language speech recognition on the endpointed speech of the user , and outputs a text - based query vector to the information retrieval / call routing engine 3 .", "label": "", "metadata": {}, "score": "48.512184"}
{"text": "For purposes of this description of the recognizer , during recognition of such an utterance it will be assumed that the word hypothesizer 12 generates no \" bad \" hypotheses .The hypothesis \" CALL \" is valid only for node 2 , so the sentence recognizer 12 will generate a partial sentence corresponding to node 2 and having the value CALL .", "label": "", "metadata": {}, "score": "48.521038"}
{"text": "A method and process provides a selection process designed to select optimized results from a plurality of possible results represented in a search tree .A tree search is employed , wherein bounds are used to prune at least one node or branch of the search tree .", "label": "", "metadata": {}, "score": "48.560787"}
{"text": "[0226 ] It is also noted the preceding discussions set forth operations by which an electronically formed node - link diagram is provided with intelligence which permits the structure of the diagram to be recognized .These operations allow editing of the node - link diagram .", "label": "", "metadata": {}, "score": "48.573853"}
{"text": "[0226 ] It is also noted the preceding discussions set forth operations by which an electronically formed node - link diagram is provided with intelligence which permits the structure of the diagram to be recognized .These operations allow editing of the node - link diagram .", "label": "", "metadata": {}, "score": "48.573853"}
{"text": "This approach allows us to use relatively complex and better language models along with acoustic models to compute word posterior probabilities .The language model used is comprised of stochastic context free grammars ( one for each concept ) and an - gram concept language model .", "label": "", "metadata": {}, "score": "48.652264"}
{"text": "During this processing a raw word - phoneme graph 63 is built up .This can be performed e.g. by applying time - synchronous word inserting .For each time point all the found allowed words are inserted into the raw word - phoneme graph , which ends exactly in that time point .", "label": "", "metadata": {}, "score": "48.722485"}
{"text": "Acoustic phonetic information in the form of an acoustic model represented by element 140 , and language knowledge 150 comprising grammar and statistical information 160 are fed to the CSR 120 in a conventional manner , typically to constrain the search space of the recognizer .", "label": "", "metadata": {}, "score": "48.842377"}
{"text": "More particularly , depicted are the steps to provide ( I ) stroke - by - stroke processing operations , and ( II ) follow - on processing operations as have been described herein : . I. Stroke - by - stroke Processing Stage .", "label": "", "metadata": {}, "score": "48.883614"}
{"text": "Throughout this section , without loss in generality , the prefix - core - suffix network of FIG .6 is used as an example .The first savings occur during the forward pass , when the prefix network is traversed .", "label": "", "metadata": {}, "score": "48.935574"}
{"text": "Numerous attempts have been made to improve the trade off between computational load , accuracy of recognition and speed of recognition .Examples are described , e.g. , in U.S. Pat .No . 5 , 390,278 to Gupta et al . , and U.S. Pat .", "label": "", "metadata": {}, "score": "49.052605"}
{"text": "No .461,884 , SPEAKER - DEPENDENT CONNECTED - SPEECH WORD RECOGNIZER , by George Doddington , et al , filed January 28 , 1983 , abandoned in favor of continuation application Ser .No . 013,154 filed February 10 , 1987 abandoned in favor of continuation application Ser .", "label": "", "metadata": {}, "score": "49.11934"}
{"text": "The LinkGraphic role must be filled by a CurvilinearConnector .The LinkLabel role may be filled optionally , by a TextObject , TextLine , or TextColumn .In addition , a GraphLink maintains a list of the GraphNodes that may be associated with ( pointed to by ) either end .", "label": "", "metadata": {}, "score": "49.203415"}
{"text": "The algorithm is based on search concepts whereby bounds are used to prune the search tree .Use of bounds are well known in the art , and the particular bounds employed may be determined by the specific implementations in which the preset concepts are employed .", "label": "", "metadata": {}, "score": "49.25722"}
{"text": "[ 0229 ] It is also noted the preceding discussions set forth operations by which an electronically formed node - link diagram is provided with intelligence which permits the structure of the diagram to be recognized .These operations allow editing of the node - link diagram .", "label": "", "metadata": {}, "score": "49.3319"}
{"text": "Processing of speech input falls into five main steps : audio channel adaptation , feature extraction , word end point detection , speech recognition , and accept / reject decision logic .Pattern recognition generally , and more particularly recognition of patterns in continuous signals such as speech signals , requires complex calculations and is dependent on providing sufficient processing power to meet the computational load .", "label": "", "metadata": {}, "score": "49.401833"}
{"text": "Equations ( 2 ) and ( 3 ) implement a DP algorithm .Tracing back through the selected nodes gives the sentence having the lowest error .Note that equations ( 2 ) and ( 3 ) are simply a recursive implementation of equation ( 1 ) .", "label": "", "metadata": {}, "score": "49.403275"}
{"text": "These probabilities are computed on word graphs using a forward - backward algorithm .We also study the estimation of posterior probabilities on - best lists instead of word graphs and compare both algorithms in detail .In addition , we compare the posterior probabilities with two alternative confidence measures , i.e. , the acoustic stability and the hypothesis density .", "label": "", "metadata": {}, "score": "49.458603"}
{"text": ".. improvement of a small bootstrap system trained using only a few hours of transcribed audio , using hundreds of hours of untranscribed data , as in [ 6 , 2].The use of acoustic models from one language as a starting point for traini ...", "label": "", "metadata": {}, "score": "49.46917"}
{"text": "Among other advantages , adding ASR capability to call routing and information retrieval technologies saves time and provides convenience for the user .One problem with using ASR to augment these technologies , however , is the potential for introducing additional error from the ASR process , thus degrading system performance .", "label": "", "metadata": {}, "score": "49.480396"}
{"text": "The user may then select one of the documents in the list to access that document .Call routing and information retrieval systems can be enhanced by adding automatic speech recognition ( ASR ) to their capabilities .By using ASR , a user can simply speak his or her request or selection .", "label": "", "metadata": {}, "score": "49.4899"}
{"text": "[0177 ] 12 .Forms GraphNode and GraphLink hypotheses from CurvilinearObjects pointing to TextObjects , TextLines , or TextColumns .[0178 ] Each object will include a score and pointers to its support objects and the more complex objects it itself supports .", "label": "", "metadata": {}, "score": "49.498367"}
{"text": "[0177 ] 12 .Forms GraphNode and GraphLink hypotheses from CurvilinearObjects pointing to TextObjects , TextLines , or TextColumns .[0178 ] Each object will include a score and pointers to its support objects and the more complex objects it itself supports .", "label": "", "metadata": {}, "score": "49.498367"}
{"text": "This code has been implemented on a TI - Speech system on a Texas Instruments Personal Computer , using a Texas Instruments TMS320 signal processor .In order to minimize gap and overlap errors , it is important to recognize that co - articulation and other effects often exist at the transitions between \" words \" .", "label": "", "metadata": {}, "score": "49.562653"}
{"text": "[ 0116 ] The second argument , b_last operation_was_select_objects , contributes to the intuitive selection logic of the Inferred Mode protocol .When true , it informs the Recognition module that the user is selecting multiple objects by sequential tapping , depending on the location of the tap point , and therefore the IDs of already - selected strokes should be included in the list of selected strokes returned by the call .", "label": "", "metadata": {}, "score": "49.57344"}
{"text": "We show that the posterior probabilities computed on word graphs outperform all other confidence measures .The relative reduction in confidence error rate ranges between 19 % and 35 % compared to the baseline confidence error rate .Index Terms - Confidence measures , forward - backward algorithm,-best lists , posterior probabilities , speech recognition , word graphs .", "label": "", "metadata": {}, "score": "49.59455"}
{"text": "3a .For all strokes ( stroke fragments ) that have not been determined to be cursive writing , stroke end objects are created representing the locations and orientations of the endpoints of each stroke .3b .End link data structures are formed representing pairs of stroke ends that are sufficiently near to one another according to a threshold .", "label": "", "metadata": {}, "score": "49.60298"}
{"text": "Once received , operation of the Recognition module moves to a decision block 108 , wherein the process moves to step 110 when it is determined the command is a pre - interpret command .At that point , the raw strokes from the unprocessed strokes queue are broken up at the corners into fragments ( This operation is for more complex strokes .", "label": "", "metadata": {}, "score": "49.622055"}
{"text": "Once received , operation of the Recognition module moves to a decision block 108 , wherein the process moves to step 110 when it is determined the command is a pre - interpret command .At that point , the raw strokes from the unprocessed strokes queue are broken up at the corners into fragments ( This operation is for more complex strokes .", "label": "", "metadata": {}, "score": "49.622055"}
{"text": "Once received , operation of the Recognition module moves to a decision block 108 , wherein the process moves to step 110 when it is determined the command is a pre - interpret command .At that point , the raw strokes from the unprocessed strokes queue are broken up at the corners into fragments ( This operation is for more complex strokes .", "label": "", "metadata": {}, "score": "49.622055"}
{"text": "Once received , operation of the Recognition module moves to a decision block 108 , wherein the process moves to step 110 when it is determined the command is a pre - interpret command .At that point , the raw strokes from the unprocessed strokes queue are broken up at the corners into fragments ( This operation is for more complex strokes .", "label": "", "metadata": {}, "score": "49.622055"}
{"text": "In contrast , the word \" of \" occurs only once in the n - best list , and therefore would be assigned the lowest weight in this operation .Of course , other ways of measuring word confidence are possible , as will be recognized by those skilled in the art .", "label": "", "metadata": {}, "score": "49.63744"}
{"text": "If the goal is to recognize unconstrained speech , the language knowledge usually takes the form of a statistical language model ( bigram or trigram ) .If the goal is to recognize a specific constrained vocabulary , then the language knowledge takes the form of a regular grammar .", "label": "", "metadata": {}, "score": "49.66961"}
{"text": "A selection process operates to determine which object hypotheses to promote to the status of being an accepted interpretation ( see FIG .15 ) , and thereby made available to the user through their Tap Selection commands , and through the Formalize / Roughen and other operations .", "label": "", "metadata": {}, "score": "49.726982"}
{"text": "A selection process operates to determine which object hypotheses to promote to the status of being an accepted interpretation ( see FIG .15 ) , and thereby made available to the user through their Tap Selection commands , and through the Formalize / Roughen and other operations .", "label": "", "metadata": {}, "score": "49.726982"}
{"text": "A selection process operates to determine which object hypotheses to promote to the status of being an accepted interpretation ( see FIG .15 ) , and thereby made available to the user through their Tap Selection commands , and through the Formalize / Roughen and other operations .", "label": "", "metadata": {}, "score": "49.726982"}
{"text": "The backward pass then takes over by first reverse - scoring the collapsed suffix acoustic network .Because the suffix network was collapsed , scoring all suffix words occurs simultaneously .The backward pass described above actually scores words on a \" need - to \" basis .", "label": "", "metadata": {}, "score": "49.7492"}
{"text": "A query element is then generated for use in identifying one or more items from amongst the plurality of items .The query element includes a set of values representing two or more of the hypotheses , each value corresponding to one of the words in the hypotheses .", "label": "", "metadata": {}, "score": "49.757248"}
{"text": "Another way of creating new phoneme sequence hypotheses is to apply the allowed transcriptions of the words from the HwLex .Here the allowed transcriptions act as the role of the new phoneme sequence hypotheses .They are not inserted directly from the HwLex into the phoneme graph , but they are detected in the word hypotheses parser 62 , as well as they are inserted into the raw word - phoneme graph 63 , if appropriate .", "label": "", "metadata": {}, "score": "49.77383"}
{"text": "FIG .1 , particularly the ASR subsystem 2 and the information retrieval / call routing engine 3 , may be implemented at least partially in software .Such software may be executed on one or more conventional computing platforms , such as personal computers ( PCs ) , workstations , or even hand - held computing devices such as personal digital assistants ( PDAs ) or cellular telephones .", "label": "", "metadata": {}, "score": "49.835148"}
{"text": "5.1 Structure Recognition on Preprocessed Strokes : Form Structure Hypotheses .Structure recognition occurs by grouping atomic stroke objects into more complex objects .The rules for grouping must be tolerant to variability and noise , and many hypotheses for complex objects are constructed .", "label": "", "metadata": {}, "score": "49.93506"}
{"text": "Thus , no back pointer is created from node 4 to node 12 until after node 12 has been associated with a hypothesis .This occurs only after the utterance \" 6 \" is received .Since multiple word hypotheses can be associated with each node , Table II differentiates between them with alphabetic suffixes .", "label": "", "metadata": {}, "score": "49.94738"}
{"text": "The generator creates phoneme - sequence hypotheses , which are similar to the ones that can be found in the phoneme - graph , and extends the phoneme graph with the hypotheses .Afterwards the extended phoneme graph is parsed by applying the HwLex 12 in order to filter those graph paths , which consist only of sequence of allowed words .", "label": "", "metadata": {}, "score": "50.128403"}
{"text": "0190 ] The optimization is performed in one embodiment by use of a procedure which searches hierarchical groups under a nonoverlapping support constraint .[ 0191 ] The algorithm is based on search concepts whereby bounds are used to prune the search tree .", "label": "", "metadata": {}, "score": "50.142967"}
{"text": "Formation of Atomic objects ( strokes , nodes ) .[ 0233 ] 1a .Remove the next available stroke from the stroke interpretation queue .[0234 ] 1b .Compute a measure for whether the stroke is cursive writing .", "label": "", "metadata": {}, "score": "50.17404"}
{"text": "For example , in our implementation hypothesized TextObjects obtain an intrinsic score of either 0.1 , 0.5 , or 0.9 , depending on the confidence score ( low , medium , or high ) of the Microsoft Handwriting Recognizer program called via the Microsoft TabletPC API .", "label": "", "metadata": {}, "score": "50.24449"}
{"text": "For example , in our implementation hypothesized TextObjects obtain an intrinsic score of either 0.1 , 0.5 , or 0.9 , depending on the confidence score ( low , medium , or high ) of the Microsoft Handwriting Recognizer program called via the Microsoft TabletPC API .", "label": "", "metadata": {}, "score": "50.24449"}
{"text": "For example , in our implementation hypothesized TextObjects obtain an intrinsic score of either 0.1 , 0.5 , or 0.9 , depending on the confidence score ( low , medium , or high ) of the Microsoft Handwriting Recognizer program called via the Microsoft TabletPC API .", "label": "", "metadata": {}, "score": "50.24449"}
{"text": "For example , in our implementation hypothesized TextObjects obtain an intrinsic score of either 0.1 , 0.5 , or 0.9 , depending on the confidence score ( low , medium , or high ) of the Microsoft Handwriting Recognizer program called via the Microsoft TabletPC API .", "label": "", "metadata": {}, "score": "50.24449"}
{"text": "14 ) .A selection process operates to determine which object hypotheses to promote to the status of being an accepted interpretation ( see .FIG .15 ) , and thereby made available to the user through their Tap Selection commands , and through the Formalize / Roughen and other operations .", "label": "", "metadata": {}, "score": "50.25046"}
{"text": "Workshop on Frontiers in Handwriting Recognition , 2002 . \" ...In this paper we study the use of confidence measures for an on - line handwriting recognizer .We investigate various confidence measures and their integration in an isolated word recognition system as well as in a sentence recognition system .", "label": "", "metadata": {}, "score": "50.253994"}
{"text": "Similar examples of hypotheses are shown in the following .FIGS .17 - 21 ) .The True / False determinations are made as part of optimization processing such as accomplished in block 512 of .FIG .30 , which illustrates operations in the Recognition module that modify the hypothesis lattice .", "label": "", "metadata": {}, "score": "50.269543"}
{"text": "A method and apparatus for using the output of an automatic speech recognizer to improve a query in a call routing or information retrieval system are described .Note that in this description , references to \" one embodiment \" or \" an embodiment \" mean that the feature being referred to is included in at least one embodiment of the present invention .", "label": "", "metadata": {}, "score": "50.36853"}
{"text": "[ 0217 ]As previously mentioned , FIG .26 is an illustration of a segment of a search tree ( or a very simplistic overall search tree ) , which is generated by operation of the search concepts being described herein .", "label": "", "metadata": {}, "score": "50.48591"}
{"text": "[ 0217 ]As previously mentioned , FIG .26 is an illustration of a segment of a search tree ( or a very simplistic overall search tree ) , which is generated by operation of the search concepts being described herein .", "label": "", "metadata": {}, "score": "50.48591"}
{"text": "In the second module a tree search is used to grow partial paths backward and time asynchronously .Each partial path in the backward tree search is rank ordered in a stack by the corresponding full path score , which is computed by adding the partial path score with the best possible score of the remaining path obtained from the trellis path map .", "label": "", "metadata": {}, "score": "50.571667"}
{"text": "FIG .1 is a high - level block diagram of a call routing or information retrieval system which employs ASR capability ; .FIG .2 is a flow diagram illustrating a training process associated with the system of .FIG .", "label": "", "metadata": {}, "score": "50.770523"}
{"text": "Thus , the sentence recognizer 14 now retains the partial sentence hypotheses \" CALL \" , \" CALL first - digit \" , \" CALL first - digit second - digit \" , and \" CALL second - digit \" .If a sentence recognizer were to stop at this point , the fragment \" CALL first - digit second - digit \" should be preferred because it best explains the received speech data .", "label": "", "metadata": {}, "score": "50.801346"}
{"text": "Thereafter , these structured processed fragments may , in one embodiment , be maintained in the Recognition module until strokes ( e.g. , in the form of objects ) are selected for some sort of command operation ( e.g. , formalize , move , etc . ) .", "label": "", "metadata": {}, "score": "50.82983"}
{"text": "It is also noted the preceding discussions set forth operations by which an electronically formed node - link diagram is provided with intelligence which permits the structure of the diagram to be recognized .These operations allow editing of the node - link diagram .", "label": "", "metadata": {}, "score": "50.877094"}
{"text": "As the process iterates , a tree - pointer walks up and down a search tree , setting node values to various combinations of True and False .The process is designed to prune the search in two ways .First , the process does not explore True values for nodes that are vetoed because they fail to satisfy the nonoverlapping support constraints .", "label": "", "metadata": {}, "score": "50.894882"}
{"text": "As the process iterates , a tree - pointer walks up and down a search tree , setting node values to various combinations of True and False .The process is designed to prune the search in two ways .First , the process does not explore True values for nodes that are vetoed because they fail to satisfy the nonoverlapping support constraints .", "label": "", "metadata": {}, "score": "50.894882"}
{"text": "As the process iterates , a tree - pointer walks up and down a search tree , setting node values to various combinations of True and False .The process is designed to prune the search in two ways .First , the process does not explore True values for nodes that are vetoed because they fail to satisfy the nonoverlapping support constraints .", "label": "", "metadata": {}, "score": "50.894882"}
{"text": "Precise location of the sentence beginning and end points is not necessary .It will be appreciated that all hypotheses will show gap error when the sentence beginning is before the beginning of the earliest hypothesized word .In fact , these gap errors will cancel out when comparing sentence errors .", "label": "", "metadata": {}, "score": "50.900833"}
{"text": "The forward stop nodes are located at the end nodes of the right - most ( i.e. closest to the network 's end node ) set of non - semantically - null words ( i.e. semantically meaningful words ) that are connected to a semantically null acoustic network .", "label": "", "metadata": {}, "score": "50.906006"}
{"text": "This de - synchronization provides flexibility to the ConceptSketch program , and the ability for realtime response to writing while executing recognition processes as a background job .[ 0051 ] FIG .3 illustrates a system architecture overview of the User Interface ( UI ) 60 , showing the relationship between GUI module 62 , and Recognition module 64 .", "label": "", "metadata": {}, "score": "51.09037"}
{"text": "This de - synchronization provides flexibility to the ConceptSketch program , and the ability for realtime response to writing while executing recognition processes as a background job .[ 0051 ] FIG .3 illustrates a system architecture overview of the User Interface ( UI ) 60 , showing the relationship between GUI module 62 , and Recognition module 64 .", "label": "", "metadata": {}, "score": "51.09037"}
{"text": "This de - synchronization provides flexibility to the ConceptSketch program , and the ability for realtime response to writing while executing recognition processes as a background job .[ 0051 ] FIG .3 illustrates a system architecture overview of the User Interface ( UI ) 60 , showing the relationship between GUI module 62 , and Recognition module 64 .", "label": "", "metadata": {}, "score": "51.09037"}
{"text": "Assume further that the ASR subsystem generates a simple three - hypothesis n - best list as follows : .Although an actual n - best list would likely be longer than this one , a simple example is chosen here to facilitate explanation .", "label": "", "metadata": {}, "score": "51.13514"}
{"text": "All Molecular objects and Atomic strokes that were assigned to an object in the next layer have their support removed from all other hypotheses in the hypothesis graph .7d .All affected Graph Structure and Molecular objects re - compute their confidence scores .", "label": "", "metadata": {}, "score": "51.222855"}
{"text": "That is , if approximately the same sound ends one word and begins a following word , that sound is usually uttered as only a single sound .The time t 0 will of course depend upon the particularities of an implementaion , but is preferably on the order of one - half phoneme in length , being approximately 60 milliseconds .", "label": "", "metadata": {}, "score": "51.27392"}
{"text": "[0165 ] The following describes the inputs and outputs , as well as the steps of one embodiment of a Structure Recognition procedure : . [0166 ] Input : new fragmented PenStrokes ; newly touched TextObject hypotheses ; existing TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes . [", "label": "", "metadata": {}, "score": "51.349373"}
{"text": "More particularly , depicted are the steps to provide ( I ) stroke - by - stroke processing operations , and ( II ) follow - on processing operations as have been described herein : . [ 0227 ] I. Stroke - By - Stroke Processing Stage .", "label": "", "metadata": {}, "score": "51.383156"}
{"text": "More particularly , depicted are the steps to provide ( I ) stroke - by - stroke processing operations , and ( II ) follow - on processing operations as have been described herein : . [ 0227 ] I. Stroke - By - Stroke Processing Stage .", "label": "", "metadata": {}, "score": "51.383156"}
{"text": "As will be discussed in greater detail below , the Recognition module 64 is designed to interpret the user 's input markings in terms of words , lines , columns of text , graphic objects and the model of node - link diagrams .", "label": "", "metadata": {}, "score": "51.440727"}
{"text": "[ 0160 ] Not shown in FIG .13 , is a Graph Node association , but which is understood to be used in conjunction with the present concepts .[ 0161 ] For each of these types of objects , methods are used to form object hypotheses from whatever simpler objects are present to support it .", "label": "", "metadata": {}, "score": "51.50984"}
{"text": "4 represents forward scoring of the search network ; .FIG .5 shows an example of a word graph using a backward pass using a known search optimization process ; .FIG .6 shows the search network of FIG .", "label": "", "metadata": {}, "score": "51.551514"}
{"text": "At that point , at least one valid complete sentence has been hypothesized , and a total sentence error is calculated as set forth in equation ( 1 ) .If the sentence error is too large , due to large errors in words or gap and overlap errors , the sentence hypothesis is rejected .", "label": "", "metadata": {}, "score": "51.574852"}
{"text": "A partial or complete sentence hypothesis is defined by backtracking pointers from the current word hypothesis to the start node .For example , according to Table II , the sentence hypothesis \" PLACE CALL OUTSIDE NUMBER 543 6789 \" follows backpointers from node 7 to node 0 in the order 7d , 6d , 5d , 4d , 12a , 11a , 10a , 9 , 8 , 2,1,0 .", "label": "", "metadata": {}, "score": "51.60369"}
{"text": "Note , however , that even without the proposed optimizations , it would have been possible to collapse the search network from the entry point , thus generating a tree instead of a graph .So the actual savings are the reduction in branches from a tree to a single - input single - output graph , which may or may not be significant , depending on the size of the prefix .", "label": "", "metadata": {}, "score": "51.62769"}
{"text": "For example , searching may alternatively be based on beam searches and lexical trees to provide benefits of those methods in addition to benefits of the method described above .Although specific embodiments of the invention have been described in detail , it will be that numerous variations and modifications to the embodiments may be made within the scope of the following claims .", "label": "", "metadata": {}, "score": "51.6885"}
{"text": "While these techniques are undisputedly effective at solving these specific problems , in all cases , the sole sources of \" language knowledge \" used to reduce the search space are the language model and the grammar layout ; semantic information is not used by the CSR .", "label": "", "metadata": {}, "score": "51.705795"}
{"text": "Hence alternate suffix words will be scored only if they belong to a path with a high total likelihood .So the backward scoring of the suffix network may end - up being more costly than individual scoring of suffix words on a \" need - to \" basis .", "label": "", "metadata": {}, "score": "51.735077"}
{"text": "Thus , the term - destination matrix contains a set of values , each of which represents the frequency of occurrence of a particular term in a particular destination .The term - destination matrix is then weighted according to a standard weighting technique used in call routing or information retrieval , such as inverse document frequency ( IDF ) .", "label": "", "metadata": {}, "score": "51.737392"}
{"text": "[0222 ] The search concepts described herein , which employ the non - overlapping constraint , have been described with particular attention to structure recognition .[0223 ] The above discussion sets forth operation of the various procedures where the determination of the T / F value is used to prune the search tree in order to arrive at an optimized , nearly - optimized or desired obtainable solution .", "label": "", "metadata": {}, "score": "51.799385"}
{"text": "[0222 ] The search concepts described herein , which employ the non - overlapping constraint , have been described with particular attention to structure recognition .[0223 ] The above discussion sets forth operation of the various procedures where the determination of the T / F value is used to prune the search tree in order to arrive at an optimized , nearly - optimized or desired obtainable solution .", "label": "", "metadata": {}, "score": "51.799385"}
{"text": "\" The Main Loop : Process Current Node , Step A2 of steps A1-A3 , is described in conjunction with .FIGS .25 - 29 , which provide details regarding processing used to obtain structure recognition .As the process iterates , a tree - pointer walks up and down a search tree , setting node values to various combinations of True and False .", "label": "", "metadata": {}, "score": "51.86552"}
{"text": "Yet the word lattice produced by the backward pass described in above will give a detailed segmentation of each N - best choice , which may look something like FIG .5 .On the other hand , when the fact that the affixes are semantically null is used , that is , they bring nothing to the meaning of the utterance , substantial savings may be achieved .", "label": "", "metadata": {}, "score": "51.869675"}
{"text": "Due to hypothesis recombination the word - phoneme graph changes , as well as the phoneme content information is no more necessary , so a word graph 46 is generated .In a final processing step , the best - path calculator 47 selects the most probably word sequence from the word graph which is presented as the recognized words 48 .", "label": "", "metadata": {}, "score": "51.91971"}
{"text": "More particularly , depicted are the steps to provide ( I ) stroke - by - stroke processing operations , and ( II ) follow - on processing operations as have been described herein : .[ 0230 ] I. Stroke - by - stroke Processing Stage .", "label": "", "metadata": {}, "score": "51.943977"}
{"text": "There are two types of stop nodes : forward and backward .The forward stop nodes are used during the forward pass of the search and signal the search to stop the forward scoring .Similarly the backward stop nodes signal the search to stop the backward scoring .", "label": "", "metadata": {}, "score": "51.952934"}
{"text": "This de - synchronization provides flexibility to the ConceptSketch program , and the ability for realtime response to writing while executing recognition processes as a background job .FIG .3 illustrates a system architecture overview of the User Interface ( UI ) 60 , showing the relationship between GUI module 62 , and Recognition module 64 .", "label": "", "metadata": {}, "score": "52.037933"}
{"text": "Nodes 5 , 6 , 7 , 10 , 11 and 12 will still not generate valid partial sentences because there does not exist a valid partial sentence terminating in a preceding node to any of these nodes .The DP technique generates a number of hypothesized partial sentences , all of which are considered in parallel .", "label": "", "metadata": {}, "score": "52.088257"}
{"text": "during the backward pass of the search , detecting backward stop nodes in the modified search network and signaling the search to stop backward scoring along a path currently being followed .The method of .claim 3 , wherein scoring comprises Viterbi scoring .", "label": "", "metadata": {}, "score": "52.11772"}
{"text": "An optimization search is performed under the nonoverlapping support constraint .The purpose of this search is to assign True / False values to each Group ( or hypothesis ) node .This is accomplished by search of a binary tree , where the left branch at each node of the tree corresponds to assigning the value True to a node , and the right branch corresponds to assigning False .", "label": "", "metadata": {}, "score": "52.157513"}
{"text": "An optimization search is performed under the nonoverlapping support constraint .The purpose of this search is to assign True / False values to each Group ( or hypothesis ) node .This is accomplished by search of a binary tree , where the left branch at each node of the tree corresponds to assigning the value True to a node , and the right branch corresponds to assigning False .", "label": "", "metadata": {}, "score": "52.157513"}
{"text": "An optimization search is performed under the nonoverlapping support constraint .The purpose of this search is to assign True / False values to each Group ( or hypothesis ) node .This is accomplished by search of a binary tree , where the left branch at each node of the tree corresponds to assigning the value True to a node , and the right branch corresponds to assigning False .", "label": "", "metadata": {}, "score": "52.157513"}
{"text": "the whole utterance is available , so the block may be set to the entire utterance ; .no pruning is done , since it is assumed that the fast match has already done the necessary pruning .Given these strong parallels with the least match steps , it is easy to see that all the optimization previously described may be applied to the re - scoring algorithm as well .", "label": "", "metadata": {}, "score": "52.187172"}
{"text": "An advantageous embodiment of the system according to the invention is defined in dependent claim 10 , wherein the phonemic language model is an m - gram language model or a compact variagram .Such types of language models are well known , thereby ensuring a robust language model .", "label": "", "metadata": {}, "score": "52.30461"}
{"text": "The dead paths are deleted in a path postprocessing 64 and optionally the word hypotheses are pruned .The resulting word - phoneme graph 44 also provides the access to the phoneme sequence content of the words , which is needed in the next step .", "label": "", "metadata": {}, "score": "52.31809"}
{"text": "This paper investigates the estimation of word posterior probabilities based on word lattices and presents applications of these posteriors in a large vocabulary speech recognition system .A novel approach to integrating these word posterior probability distributions into a conventional Viterbi deco ... \" .", "label": "", "metadata": {}, "score": "52.33246"}
{"text": "[0052 ] As will be discussed in greater detail below , the Recognition module 64 is designed to interpret the user 's input markings in terms of words , lines , columns of text , graphic objects and the model of node - link diagrams .", "label": "", "metadata": {}, "score": "52.421112"}
{"text": "[0052 ] As will be discussed in greater detail below , the Recognition module 64 is designed to interpret the user 's input markings in terms of words , lines , columns of text , graphic objects and the model of node - link diagrams .", "label": "", "metadata": {}, "score": "52.421112"}
{"text": "[0052 ] As will be discussed in greater detail below , the Recognition module 64 is designed to interpret the user 's input markings in terms of words , lines , columns of text , graphic objects and the model of node - link diagrams .", "label": "", "metadata": {}, "score": "52.421112"}
{"text": "Thus , persistence is added to the structure which is already created .5.2 Choose Globally Optimal Structure Hypotheses .As mentioned , the hierarchical lattice created by the grouping procedures contain many spurious hypotheses that do not correspond to perceptually salient and meaningful objects , and do not fit together as parts of a coherent node - link diagram ( see .", "label": "", "metadata": {}, "score": "52.45614"}
{"text": "Attempts to recognize all spoken sentences without any restraints does not appear to be within the capability of current technology .Prior attempts to narrow the problem area have resulted in use of grammars or other constricting methods to determine which words are allowed to follow other words .", "label": "", "metadata": {}, "score": "52.523155"}
{"text": "This indicates that the encircling action is a selection gesture .Then the Recognition module will determine what is selected .The Recognition module , for example , could select what was encircled or covered by a scratch - out , or it could interpret the intent of the gestures in terms of recognized strokes ( or other items ) that were or were not literally covered .", "label": "", "metadata": {}, "score": "52.605316"}
{"text": "This indicates that the encircling action is a selection gesture .Then the Recognition module will determine what is selected .The Recognition module , for example , could select what was encircled or covered by a scratch - out , or it could interpret the intent of the gestures in terms of recognized strokes ( or other items ) that were or were not literally covered .", "label": "", "metadata": {}, "score": "52.605316"}
{"text": "This indicates that the encircling action is a selection gesture .Then the Recognition module will determine what is selected .The Recognition module , for example , could select what was encircled or covered by a scratch - out , or it could interpret the intent of the gestures in terms of recognized strokes ( or other items ) that were or were not literally covered .", "label": "", "metadata": {}, "score": "52.605316"}
{"text": "This indicates that the encircling action is a selection gesture .Then the Recognition module will determine what is selected .The Recognition module , for example , could select what was encircled or covered by a scratch - out , or it could interpret the intent of the gestures in terms of recognized strokes ( or other items ) that were or were not literally covered .", "label": "", "metadata": {}, "score": "52.605316"}
{"text": "The speech recognition system according to . claim 1 , further comprising a word graph generator for converting the word - phoneme graph to the word graph , the word graph assigning a word to each edge .The speech recognition system according to . claim 1 , wherein the phonemic language model is an m - gram language model or a compact variagram .", "label": "", "metadata": {}, "score": "52.6064"}
{"text": "The IDs provide means for the two modules to communicate about strokes with each other , via stroke IDs .[ 0095 ] Along with breaking raw strokes into fragments , in the Pre - Interpret stage the Recognition module also forms groupings 222 of finished strokes that could belong to the same handwritten word .", "label": "", "metadata": {}, "score": "52.625565"}
{"text": "The IDs provide means for the two modules to communicate about strokes with each other , via stroke IDs .[ 0095 ] Along with breaking raw strokes into fragments , in the Pre - Interpret stage the Recognition module also forms groupings 222 of finished strokes that could belong to the same handwritten word .", "label": "", "metadata": {}, "score": "52.625565"}
{"text": "The IDs provide means for the two modules to communicate about strokes with each other , via stroke IDs .[ 0095 ] Along with breaking raw strokes into fragments , in the Pre - Interpret stage the Recognition module also forms groupings 222 of finished strokes that could belong to the same handwritten word .", "label": "", "metadata": {}, "score": "52.625565"}
{"text": "The Recognition module pre - interpretation process removes strokes from the raw - strokes - queue and places strokes on the processed ( finished ) strokes queue .These finished strokes may be identical to raw strokes obtained from the raw strokes queue , or they may be new strokes which are fragments of the raw strokes .", "label": "", "metadata": {}, "score": "52.70499"}
{"text": "The Recognition module pre - interpretation process removes strokes from the raw - strokes - queue and places strokes on the processed ( finished ) strokes queue .These finished strokes may be identical to raw strokes obtained from the raw strokes queue , or they may be new strokes which are fragments of the raw strokes .", "label": "", "metadata": {}, "score": "52.70499"}
{"text": "If this is all that is required under the recognition operation , these update structured object hypotheses are provided to hypothesis lattice 506 .On the other hand , the system may require a selection of accepted hypotheses ( i.e. , the optimization search must be undertaken 512 ) .", "label": "", "metadata": {}, "score": "52.725784"}
{"text": "If this is all that is required under the recognition operation , these update structured object hypotheses are provided to hypothesis lattice 506 .On the other hand , the system may require a selection of accepted hypotheses ( i.e. , the optimization search must be undertaken 512 ) .", "label": "", "metadata": {}, "score": "52.725784"}
{"text": "If this is all that is required under the recognition operation , these update structured object hypotheses are provided to hypothesis lattice 506 .On the other hand , the system may require a selection of accepted hypotheses ( i.e. , the optimization search must be undertaken 512 ) .", "label": "", "metadata": {}, "score": "52.725784"}
{"text": "If this is all that is required under the recognition operation , these update structured object hypotheses are provided to hypothesis lattice 506 .On the other hand , the system may require a selection of accepted hypotheses ( i.e. , the optimization search must be undertaken 512 ) .", "label": "", "metadata": {}, "score": "52.725784"}
{"text": "3 ) .On the other hand , at step 82 , if it is determined the action is not a tap action , processing proceeds to step 86 .Step 86 determines whether the stroke is possibly an encircling select gesture or possibly a scratch - out delete gesture , based on the stroke 's shape .", "label": "", "metadata": {}, "score": "52.759712"}
{"text": "The following describes the inputs and outputs , as well as the steps of one embodiment of a Structure Recognition procedure : .Input : new fragmented PenStrokes ; newly touched TextObject hypotheses ; existing TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes .", "label": "", "metadata": {}, "score": "52.763336"}
{"text": "FIG .7 shows a re - score graph generated during the optimized backward pass .DETAILED DESCRIPTION OF THE EMBODIMENTS .Another part of the language knowledge comprises semantic information 24 , which is fed to the NLU component 16 .", "label": "", "metadata": {}, "score": "52.845543"}
{"text": "SUMMARY OF THE INVENTION .Thus , the present invention seeks to provide a system and method for optimization of searching for continuous speech recognizers which overcomes or avoids the above mentioned problems .Therefore , according to a first aspect of the present invention there is provided a method for continuous speech recognition comprising : incorporating semantic information during searching by a continuous speech recognizer .", "label": "", "metadata": {}, "score": "52.8552"}
{"text": "By this design there is synchronization between data structures in the GUI layer and the Recognition layer .[ 0088 ] 4.2 Pre - Interpreting Drawn Strokes .[ 0089 ] The process of breaking raw strokes into fragments and establishing a synchronized list of stroke fragments in the GUI and Recognition modules as performed by the \" Pre - Interpreting \" command is detailed in flow diagram 210 of FIG .", "label": "", "metadata": {}, "score": "52.85781"}
{"text": "By this design there is synchronization between data structures in the GUI layer and the Recognition layer .[ 0088 ] 4.2 Pre - Interpreting Drawn Strokes .[ 0089 ] The process of breaking raw strokes into fragments and establishing a synchronized list of stroke fragments in the GUI and Recognition modules as performed by the \" Pre - interpreting \" command is detailed in flow diagram 210 of FIG .", "label": "", "metadata": {}, "score": "52.85781"}
{"text": "By this design there is synchronization between data structures in the GUI layer and the Recognition layer .[ 0088 ] 4.2 Pre - Interpreting Drawn Strokes .[ 0089 ] The process of breaking raw strokes into fragments and establishing a synchronized list of stroke fragments in the GUI and Recognition modules as performed by the \" Pre - Interpreting \" command is detailed in flow diagram 210 of FIG .", "label": "", "metadata": {}, "score": "52.85781"}
{"text": "A novel approach to integrating these word posterior probability distributions into a conventional Viterbi decoder is presented .The problem of the robust estimation of confidence scores from word posteriors is examined and a method based on decision trees is suggested .", "label": "", "metadata": {}, "score": "52.87582"}
{"text": "The search procedure is based on a two - pass algorithm .In the # rst pass , a word graph is constructed with standard time - synchronous beam search .The actual extraction of N best wo ... \" .In this paper , weintroduce an e#cient algorithm for the exhaustive search of N best sentence hypotheses in a word graph .", "label": "", "metadata": {}, "score": "52.87809"}
{"text": "This takes into account the fact that consecutive word hypotheses which are separated by a gap , while it is known that the speaker is speaking , are presumed to be missing part of the utterance and will tend to be rejected .", "label": "", "metadata": {}, "score": "52.894547"}
{"text": "4 shows the process of forming a query vector ( block 304 ) in greater detail , according to one embodiment .At block 401 , the information retrieval / call routing engine 3 forms a query vector from all of the hypotheses in the n - best list resulting from the speech recognition process .", "label": "", "metadata": {}, "score": "52.905956"}
{"text": "All inserted words include also its phoneme content .In this way also some dead paths come up in the raw word - phoneme graph , which have no connection either forward to the end point or backward to the start point of the graph .", "label": "", "metadata": {}, "score": "52.989193"}
{"text": "However , the forward processing stops there , since nodes 7 through 11 are forward stop nodes .This means that the score vector \" max - out \" at node 12 will not take place , and neither will the scoring of the suffix network .", "label": "", "metadata": {}, "score": "53.06697"}
{"text": "Thus , it is not necessary to rebuild the forest of hypotheses ( e.g. , FIG .14 ) each time a change is made to an existing node - link diagram .Instead , new structure hypotheses generated due to newly added or deleted ink strokes are , if appropriate , grouped with existing structure hypotheses groups or new structure hypotheses groups are formed .", "label": "", "metadata": {}, "score": "53.101097"}
{"text": "The method according to . claim 9 , wherein the word - phoneme graph includes time - synchronous information , the method further comprising : . removing from the word - phoneme graph based , at least in part , on the time - synchronous information , words having no connection either forward or backward in time .", "label": "", "metadata": {}, "score": "53.11424"}
{"text": "These are deleted and the next text entry is mapped to the location where the deleted text had been located .In some cases , previous alternative handwriting recognition results are displayed in a menu for the user to select .There is no requirement that shapes be drawn in a single stroke or for multiple strokes to be drawn in a particular order .", "label": "", "metadata": {}, "score": "53.170227"}
{"text": "These are deleted and the next text entry is mapped to the location where the deleted text had been located .In some cases , previous alternative handwriting recognition results are displayed in a menu for the user to select .There is no requirement that shapes be drawn in a single stroke or for multiple strokes to be drawn in a particular order .", "label": "", "metadata": {}, "score": "53.170227"}
{"text": "These are deleted and the next text entry is mapped to the location where the deleted text had been located .In some cases , previous alternative handwriting recognition results are displayed in a menu for the user to select .There is no requirement that shapes be drawn in a single stroke or for multiple strokes to be drawn in a particular order .", "label": "", "metadata": {}, "score": "53.170227"}
{"text": "These are deleted and the next text entry is mapped to the location where the deleted text had been located .In some cases , previous alternative handwriting recognition results are displayed in a menu for the user to select .There is no requirement that shapes be drawn in a single stroke or for multiple strokes to be drawn in a particular order .", "label": "", "metadata": {}, "score": "53.170227"}
{"text": "FIG .10 in greater detail ; .FIG .12 sets forth the various methods of the interface between the GUI and Recognizer modules ; .FIG .13 shows the ontology for the node - link diagram structure to which the concepts of the present application are directed ; .", "label": "", "metadata": {}, "score": "53.248497"}
{"text": "Current systems are able to perform acceptably well for some applications , although by no means is recognition under even highly constrained circumstances completely reliable .The problem of Continuous Word Recognition ( CWR ) is more difficult than isolated word recognition .", "label": "", "metadata": {}, "score": "53.34675"}
{"text": "( l ) assigning an error value to any gap determined in step ( k ) ; and .( m ) including the errors assigned in steps ( j ) and ( l ) with the summation of step ( g ) .", "label": "", "metadata": {}, "score": "53.468758"}
{"text": ", Kluwer Academic Publishers ( 1996 ) , pp 429 - 456 .This approach is appealing since the hardware and algorithmic optimizations are often orthogonal , so the latter can always be built on top of the former .The basic components of a spoken language processing ( SLP ) system include a continuous speech recognizer ( CSR ) for receiving spoken input from the user and a Natural Language Understanding component ( NLU ) , represented schematically in FIG .", "label": "", "metadata": {}, "score": "53.523064"}
{"text": "The CANCEL command can be used to back up to the beginning of the current grammar in a bank - switched grammar as described below .These type commands are especially useful where the recognizer system echoes the current best partial sentence hypothesis to a visual device such as a computer display screen .", "label": "", "metadata": {}, "score": "53.528214"}
{"text": "[ 0199 ] Input : A vector of object scores and a support table .[ 0200 ] Output : A labeling of True / False values for the objects , such that the sum or related arithmetic combination of object scores is maximized under the constraint that every True object supports at most one other True object according to the support table .", "label": "", "metadata": {}, "score": "53.689453"}
{"text": "[ 0199 ] Input : A vector of object scores and a support table .[ 0200 ] Output : A labeling of True / False values for the objects , such that the sum or related arithmetic combination of object scores is maximized under the constraint that every True object supports at most one other True object according to the support table .", "label": "", "metadata": {}, "score": "53.689453"}
{"text": "Thus , persistence is added to the structure which is already created .[0185 ] 5.2 Choose Globally Optimal Structure Hypotheses .[ 0186 ] As mentioned , the hierarchical lattice created by the grouping procedures contain many spurious hypotheses that do not correspond to perceptually salient and meaningful objects , and do not fit together as parts of a coherent node - link diagram ( see FIG .", "label": "", "metadata": {}, "score": "53.714073"}
{"text": "Thus , persistence is added to the structure which is already created .[0185 ] 5.2 Choose Globally Optimal Structure Hypotheses .[ 0186 ] As mentioned , the hierarchical lattice created by the grouping procedures contain many spurious hypotheses that do not correspond to perceptually salient and meaningful objects , and do not fit together as parts of a coherent node - link diagram ( see FIG .", "label": "", "metadata": {}, "score": "53.714073"}
{"text": "Thus , persistence is added to the structure which is already created .[0188 ] 5.2 Choose Globally Optimal Structure Hypotheses .[0189 ]As mentioned , the hierarchical lattice created by the grouping procedures contain many spurious hypotheses that do not correspond to perceptually salient and meaningful objects , and do not fit together as parts of a coherent node - link diagram ( see FIG .", "label": "", "metadata": {}, "score": "53.723335"}
{"text": "FIG .15 ) .This incremental structure recognition also occurs when a stroke is newly touched .For example , if the user touches or selects an existing element of the node - link structure to somehow change the lattice hypotheses , a whole new forest of hypotheses and a new lattice hypothesis graph does not need to be recreated .", "label": "", "metadata": {}, "score": "53.811195"}
{"text": "An optimized search tree is stored into a memory , following the invoking of the non - support constraint , and the optimized search tree is employed in additional processing operations .Claims : .The process according to claim 1 , wherein the tree search is a depth - first tree search .", "label": "", "metadata": {}, "score": "53.84634"}
{"text": "An optimized search tree is stored into a memory , following the invoking of the non - support constraint , and the optimized search tree is employed in additional processing operations .Claims : .The process according to claim 1 , wherein the tree search is a depth - first tree search .", "label": "", "metadata": {}, "score": "53.84634"}
{"text": "By this design there is synchronization between data structures in the GUI layer and the Recognition layer .4.2 Pre - Interpreting Drawn Strokes .The process of breaking raw strokes into fragments and establishing a synchronized list of stroke fragments in the GUI and Recognition modules as performed by the \" Pre - Interpreting \" command is detailed in flow diagram 210 of .", "label": "", "metadata": {}, "score": "53.871094"}
{"text": "the best features .In those work , those probabil ... . by Ruhi Sarikaya , Yuqing Gao , Michael Picheny , Hakan Erdogan - IEEE Trans . on SAP , 2005 . \" ...Abstract - This paper proposes two methods to incorporate semantic information into word and concept level confidence measurement .", "label": "", "metadata": {}, "score": "53.89196"}
{"text": "Formation of Atomic objects ( strokes , nodes ) .1a .Remove the next available stroke from the stroke interpretation queue .1b .Compute a measure for whether the stroke is cursive writing .This is based on the stroke 's sum squared curvature , length , speed , and optionally other properties .", "label": "", "metadata": {}, "score": "54.027473"}
{"text": "The Pre - Interpret operation includes logic for creating and updating initial hypotheses in the Recognition module about which groups of strokes form handwritten words , or \" Text Objects \" .[ 0090 ] With continuing attention to FIG .10 , when the pen touches the screen , the GUI module initiates a new \" PenPath \" object .", "label": "", "metadata": {}, "score": "54.106678"}
{"text": "The Pre - Interpret operation includes logic for creating and updating initial hypotheses in the Recognition module about which groups of strokes form handwritten words , or \" Text Objects \" .[ 0090 ] With continuing attention to FIG .10 , When the pen touches the screen , the GUI module initiates a new \" PenPath \" object .", "label": "", "metadata": {}, "score": "54.106678"}
{"text": "The Pre - Interpret operation includes logic for creating and updating initial hypotheses in the Recognition module about which groups of strokes form handwritten words , or \" Text Objects \" .[ 0090 ] With continuing attention to FIG .10 , when the pen touches the screen , the GUI module initiates a new \" PenPath \" object .", "label": "", "metadata": {}, "score": "54.106678"}
{"text": "In this way it is ensured that only allowed words are dealt with .An advantageous embodiment of the system according to the invention is defined in dependent claim 8 , wherein a time - synchronous word - phoneme graph is provided , and wherein words having no connection either forward or backward in time is removed from the word phoneme graph .", "label": "", "metadata": {}, "score": "54.11753"}
{"text": "The system employs a standard vector - based approach , which is augmented according to the present invention .One example of a vector - based call routing approach which may be used for purposes of this invention is described in J. Chu - Carroll et al . \" Vector - Based Natural Language Call Routing \" , Computational Linguistics , vol .", "label": "", "metadata": {}, "score": "54.14824"}
{"text": "The query element includes values representing two or more hypotheses of the multiple hypotheses .Other features of the present invention will be apparent from the accompanying drawings and from the detailed description - which follows .BRIEF DESCRIPTION OF THE DRAWINGS .", "label": "", "metadata": {}, "score": "54.173637"}
{"text": "The latter are referred to as non - keywords or semantically - null words .Thus semantically - meaningful words and semantically - null words are identified to provide understanding of the input , and in the process , the word strings are converted to a standard logical form .", "label": "", "metadata": {}, "score": "54.209435"}
{"text": "It is therefore an object of the present invention to provide a robust speech recognition system which can handle relatively complex vocabularies and grammars .It is another object of the present invention to provide a speech recognition system which can consider several sentence alternatives in parallel , and select the best one .", "label": "", "metadata": {}, "score": "54.319347"}
{"text": "The language knowledge is usually used for both the CSR component and the NLU component , as shown in FIG .1 , with information on grammar and/or statistical models being used by the CSR , and semantic information being used by the NLU .", "label": "", "metadata": {}, "score": "54.417908"}
{"text": "Winning hypotheses are selected from the hypothesis graph by best search .The highest scoring Graph Structure Node is selected to be \" accepted \" and all Molecular objects that support it are assigned to it .7b .For each such supporting Molecular object , all Atomic strokes supporting that Molecular object are assigned to it .", "label": "", "metadata": {}, "score": "54.482323"}
{"text": "The sound of the sound and text unit 23 is fed into an acoustic processor 26 .The acoustic processor extracts the essential information from the sound .The resulting acoustic representation 24 is information of a compressed form , which can not be converted back to the exact original sound , because some information is lost .", "label": "", "metadata": {}, "score": "54.580353"}
{"text": "[0009 ] FIG .2 provides a high - level view of the processes used to initiate the concepts of the present application ; . [0010 ]FIG .3 is an architectural relationship between the graphical user interface module and the recognition module of the present application ; .", "label": "", "metadata": {}, "score": "54.590763"}
{"text": "[0009 ] FIG .2 provides a high - level view of the processes used to initiate the concepts of the present application ; . [0010 ]FIG .3 is an architectural relationship between the graphical user interface module and the recognition module of the present application ; .", "label": "", "metadata": {}, "score": "54.590763"}
{"text": "At the base of the lattice are Atomic nodes .Above them are Group nodes .Each Group node is \" supported \" by some number of nodes lower in the hierarchy .Each Group node is assigned two scores , an intrinsic score as described above , and a support - context score , described below .", "label": "", "metadata": {}, "score": "54.615067"}
{"text": "20060798Q - US - NP / XERZ 2 01568 ) , filed on Mar. _ _ _ _ _ _ , 2007 by Saund , entitled \" METHODS AND PROCESSES FOR RECOGNITION OF ELECTRONIC INK STROKES . \"BACKGROUND .[ 0003 ] Pen / stylus interfaces to computers hold the promise of applications that are as intuitive as a paper or whiteboard but with the power and functionality of editing , search , and other processing provided by computer applications .", "label": "", "metadata": {}, "score": "54.62349"}
{"text": "20060798Q - US - NP / XERZ 2 01568 ) , filed on Mar. _ _ _ _ _ _ , 2007 by Saund , entitled \" METHODS AND PROCESSES FOR RECOGNITION OF ELECTRONIC INK STROKES . \"BACKGROUND .[ 0003 ] Pen / stylus interfaces to computers hold the promise of applications that are as intuitive as a paper or whiteboard but with the power and functionality of editing , search , and other processing provided by computer applications .", "label": "", "metadata": {}, "score": "54.62349"}
{"text": "In the preferred embodiment , a valid sentence hypothesis is accepted as the uttered sentence only if the speaker stops speaking or no better partial sentence hypothesis is generated within a short time .For example , if no utterances are made for 800 milliseconds , the sentence hypothesis can be accepted , as it is assumed that the speaker has finished a sentence in the grammar .", "label": "", "metadata": {}, "score": "54.630253"}
{"text": "Which alternative is considered most likely among the possible choices , and therefore displayed first , is a design parameter that can be tuned in the system .For concept maps , nodes and links are considered the most salient objects .", "label": "", "metadata": {}, "score": "54.638382"}
{"text": "Which alternative is considered most likely among the possible choices , and therefore displayed first , is a design parameter that can be tuned in the system .For concept maps , nodes and links are considered the most salient objects .", "label": "", "metadata": {}, "score": "54.638382"}
{"text": "Which alternative is considered most likely among the possible choices , and therefore displayed first , is a design parameter that can be tuned in the system .For concept maps , nodes and links are considered the most salient objects .", "label": "", "metadata": {}, "score": "54.638382"}
{"text": "Which alternative is considered most likely among the possible choices , and therefore displayed first , is a design parameter that can be tuned in the system .For concept maps , nodes and links are considered the most salient objects .", "label": "", "metadata": {}, "score": "54.638382"}
{"text": "1 . illustrates an embodiment of a word recognizer , .FIG .2 . illustrates an embodiment of creating a HwLex , .FIG .3 . illustrates an embodiment of performing acoustic training , .FIG .4 . illustrates an embodiment of creating a phoneme LM , .", "label": "", "metadata": {}, "score": "54.671276"}
{"text": "3 .In order for recognition grouping processes to operate effectively and users to achieve fine - grained control over their diagrams , the original input strokes drawn or written by users must be broken into smaller fragments .This may not be done in real time as the user is writing , but with some delay .", "label": "", "metadata": {}, "score": "54.675377"}
{"text": "While word spotting is generic , it is very costly and provides poor accuracy , especially when there is prior knowledge of which non - keywords are likely to be used .Because these latter models are so broad , they do not always efficiently model non - keywords which are likely to occur in an utterance ( for example , hesitations , and polite formulations ) .", "label": "", "metadata": {}, "score": "54.924786"}
{"text": "In practical systems , computational power and memory resources will not be unlimited , and any of several schemes may be employed to eliminate \" bad \" partial sentence hypotheses on the fly .The simplest would be to simply eliminate all partial sentence hypotheses which have a total error greater than predetermined threshold .", "label": "", "metadata": {}, "score": "54.966003"}
{"text": "The allowed transcription builder can use either previously stored lists of more often occurring pronunciation variants , or some phonetic distance measure , or linguistic considerations , like in unclear speech only central part of the word is pronounced .Finally , the modified entry gets into the created HwLex 12 .", "label": "", "metadata": {}, "score": "54.974113"}
{"text": "Therefore , in situations where an optimization search would otherwise find a True ( or False ) value , the system can be designed to override this determination , thereby having the nodes within this calculation as potentially acceptable ( or unacceptable ) .", "label": "", "metadata": {}, "score": "54.98555"}
{"text": "Therefore , in situations where an optimization search would otherwise find a True ( or False ) value , the system can be designed to override this determination , thereby having the nodes within this calculation as potentially acceptable ( or unacceptable ) .", "label": "", "metadata": {}, "score": "54.98555"}
{"text": "Therefore , in situations where an optimization search would otherwise find a True ( or False ) value , the system can be designed to override this determination , thereby having the nodes within this calculation as potentially acceptable ( or unacceptable ) .", "label": "", "metadata": {}, "score": "54.98555"}
{"text": "Therefore , in situations where an optimization search would otherwise find a True ( or False ) value , the system can be designed to override this determination , thereby having the nodes within this calculation as potentially acceptable ( or unacceptable ) .", "label": "", "metadata": {}, "score": "54.98555"}
{"text": "In our prefix - core - suffix example , this would be a list of only core entries .To achieve this , the search network is modified in at least two respects , which are described below .The optimizations work together to reduce search time .", "label": "", "metadata": {}, "score": "54.995342"}
{"text": "[ 0235 ] 1c .Strokes that are determined to be cursive writing are considered atomic , of type \" text \" , and are returned to the front of the stroke interpretation queue .[ 0236 ] 1d .Strokes that are not determined to be cursive writing are broken at corners according to means known in the art .", "label": "", "metadata": {}, "score": "55.00867"}
{"text": "[ 0202 ] Input : A vector of object scores and a support table .[0203 ] Output : A labeling of True / False values for the objects , such that the sum or related arithmetic combination of object scores is maximized under the constraint that every True object supports at most one other True object according to the support table .", "label": "", "metadata": {}, "score": "55.056183"}
{"text": "Abstract : .A method and process provides a selection process designed to select optimized results from a plurality of possible results represented in a search tree .A tree search is employed , wherein bounds are used to prune at least one node or branch of the search tree .", "label": "", "metadata": {}, "score": "55.104557"}
{"text": "In a more \" open - ended \" call routing system , the caller may simply specify a person or other destination and is not limited to a specified set of options .Information retrieval systems are commonly used on the World Wide Web , among other applications , to assist users in locating Web pages and other hypermedia content .", "label": "", "metadata": {}, "score": "55.15431"}
{"text": "This makes it possible to identify the allowed words of the language , and to retrieve the phoneme sequence(s ) describing the pronunciation of them .Under some non - ideal conditions the words are pronounced different compared to the standard pronunciation .", "label": "", "metadata": {}, "score": "55.16342"}
{"text": "Often , they have an additional characteristic in that they relate to data representations by identifying direction , for example , with a termination symbol such as an arrow symbol .Thus , labeled links explain the relationship between the nodes , and arrows or other terminators can describe the direction of the relationship , allowing the user to read the concept map .", "label": "", "metadata": {}, "score": "55.188538"}
{"text": "Often , they have an additional characteristic in that they relate to data representations by identifying direction , for example , with a termination symbol such as an arrow symbol .Thus , labeled links explain the relationship between the nodes , and arrows or other terminators can describe the direction of the relationship , allowing the user to read the concept map .", "label": "", "metadata": {}, "score": "55.188538"}
{"text": "Often , they have an additional characteristic in that they relate to data representations by identifying direction , for example , with a termination symbol such as an arrow symbol .Thus , labeled links explain the relationship between the nodes , and arrows or other terminators can describe the direction of the relationship , allowing the user to read the concept map .", "label": "", "metadata": {}, "score": "55.188538"}
{"text": "Often , they have an additional characteristic in that they relate to data representations by identifying direction , for example , with a termination symbol such as an arrow symbol .Thus , labeled links explain the relationship between the nodes , and arrows or other terminators can describe the direction of the relationship , allowing the user to read the concept map .", "label": "", "metadata": {}, "score": "55.188538"}
{"text": "The figure describes how the node states , A , B , and C in the search tree , keep track of current state of the search and direct the tree - pointer to the next node in the search .FIG .", "label": "", "metadata": {}, "score": "55.209152"}
{"text": "15 ) .This incremental structure recognition also occurs when a stroke is newly touched .For example , if the user touches or selects an existing element of the node - link structure to somehow change the lattice hypotheses , a whole new forest of hypotheses and a new lattice hypothesis graph does not need to be recreated .", "label": "", "metadata": {}, "score": "55.2388"}
{"text": "The system was trained and evaluated on recordings from the European Parliament , and included several state - of - the - art speech recognition techniques in addition to the use of unsupervised model training .Confidence based speaker adaptive training using features space transform adaptation , as well as vocal tract length normalization and maximum likelihood linear regression , was used to refine the acoustic model .", "label": "", "metadata": {}, "score": "55.267235"}
{"text": "There may be a one to one mapping between the language model and the grammar in the case where the language model is a constrained model .Connected Word Recognition ( CWR ) is an example of the latter .Nevertheless , known spoken language systems described above separate language knowledge into grammar and semantic information , and feed the former to the CSR and feed the latter to the NLU .", "label": "", "metadata": {}, "score": "55.317833"}
{"text": "[0105 ] Pre - Interpreting Strokes ( 266 ) : . [ 0106 ] preInterpretStrokesInInputStrokeQueue ( ) ; .[ 0107 ] The Recognition module implements a message passing method called preInterpretStrokesInInputStrokeQueue ( ) ; This may be called deliberately by the GUI , or it may be invoked automatically through a scheduler .", "label": "", "metadata": {}, "score": "55.348637"}
{"text": "Once some material has been selected , tapping over other markings causes their respective structure objects to be added to the highlighted selection .[0075 ]Thus , as may be understood from the preceding discussion , any given piece of digital ink may be part of multiple structured objects in the domain of node - link diagrams ( e.g. , concept maps ) .", "label": "", "metadata": {}, "score": "55.349327"}
{"text": "Once some material has been selected , tapping over other markings causes their respective structure objects to be added to the highlighted selection .[0075 ]Thus , as may be understood from the preceding discussion , any given piece of digital ink may be part of multiple structured objects in the domain of node - link diagrams ( e.g. , concept maps ) .", "label": "", "metadata": {}, "score": "55.349327"}
{"text": "Once some material has been selected , tapping over other markings causes their respective structure objects to be added to the highlighted selection .[0075 ]Thus , as may be understood from the preceding discussion , any given piece of digital ink may be part of multiple structured objects in the domain of node - link diagrams ( e.g. , concept maps ) .", "label": "", "metadata": {}, "score": "55.349327"}
{"text": "In the case of a call routing system , this may involve simply connecting the user to the destination which most closely matches the query .In an information retrieval system , this may involve outputting to the user a list of \" hits \" , i.e. , destinations which most closely match the query .", "label": "", "metadata": {}, "score": "55.35396"}
{"text": "0183 ] With attention to another aspect of the present systems and methods provided is incremental structure recognition or incremental updating of the node - link diagram .Thus , it is not necessary to rebuild the forest of hypotheses ( e.g. , FIG .", "label": "", "metadata": {}, "score": "55.39498"}
{"text": "0183 ] With attention to another aspect of the present systems and methods provided is incremental structure recognition or incremental updating of the node - link diagram .Thus , it is not necessary to rebuild the forest of hypotheses ( e.g. , FIG .", "label": "", "metadata": {}, "score": "55.39498"}
{"text": "[0145 ] Structure recognition occurs by grouping atomic stroke objects into more complex objects .The rules for grouping must be tolerant to variability and noise , and many hypotheses for complex objects are constructed .This form a lattice 310 .", "label": "", "metadata": {}, "score": "55.405533"}
{"text": "The word graph is such that the word score of each word includes the word score as obtained from applying a phonemic language model ( LM ) to each word of the word graph .The word score may be taken as the sum of an acoustic phoneme score and the phonemic LM score .", "label": "", "metadata": {}, "score": "55.43284"}
{"text": "BRIEF DESCRIPTION .[0007 ] A method and process provides structure recognition to a node - link diagram formed by a plurality of digital ink strokes drawn on a canvas of an electronic device by an input device .The method and process include grouping related strokes into multiple hypotheses reflecting structure interpretations of the strokes in a group .", "label": "", "metadata": {}, "score": "55.482014"}
{"text": "Finally , at block 405 , a pseudo - destination vector is formed from the query vector by reducing the dimensionality of the query vector from M to N , to allow a similarity comparison with the transformed term - destination matrix .", "label": "", "metadata": {}, "score": "55.5544"}
{"text": "This procedure is continued until the sentence hypothesis \" CALL first - digit second - digit third - digit fourth - digit \" is received .At this point , with \" fourth - digit \" assigned to node 7 , a complete sentence is hypothesized .", "label": "", "metadata": {}, "score": "55.559013"}
{"text": "7 ) .The GUI module 62 may be implemented in a different programming language and runtime environment than the Recognition module 64 , as long as they can communicate .The Recognition module 64 handles interpretation of the user 's input markings in terms of words , lines , and columns of text , graphic objects , and the document model of node - link diagrams .", "label": "", "metadata": {}, "score": "55.67939"}
{"text": "In step 104 a pre - interpret or process command is sent to the recognizer module to perform \" pre - interpret \" and/or \" process \" operations on the strokes in the unprocessed strokes queue .The operations performed in steps 72 through 104 , may be considered to take place in the GUI module ( e.g. , 62 of .", "label": "", "metadata": {}, "score": "55.68116"}
{"text": "Constraints are applied among the hypotheses , and a collectively high scoring assignment of accept / reject values of the hypotheses are determined under the applied constraints .The hypotheses with collectively high scoring assignments are accepted as a representation of the node - link diagram , where structure information is provided to the strokes of the node - link diagram , making the node - link diagram electronically editable .", "label": "", "metadata": {}, "score": "55.687958"}
{"text": "Constraints are applied among the hypotheses , and a collectively high scoring assignment of accept / reject values of the hypotheses are determined under the applied constraints .The hypotheses with collectively high scoring assignments are accepted as a representation of the node - link diagram , where structure information is provided to the strokes of the node - link diagram , making the node - link diagram electronically editable .", "label": "", "metadata": {}, "score": "55.687958"}
{"text": "On the other hand , at step 82 , if it is determined the action is not a tap action , processing proceeds to step 86 .Step 86 determines whether the stroke is possibly an encircling select gesture or possibly a scratch - out delete gesture , based on the stroke 's shape .", "label": "", "metadata": {}, "score": "55.73147"}
{"text": "On the other hand , at step 82 , if it is determined the action is not a tap action , processing proceeds to step 86 .Step 86 determines whether the stroke is possibly an encircling select gesture or possibly a scratch - out delete gesture , based on the stroke 's shape .", "label": "", "metadata": {}, "score": "55.73147"}
{"text": "On the other hand , at step 82 , if it is determined the action is not a tap action , processing proceeds to step 86 .Step 86 determines whether the stroke is possibly an encircling select gesture or possibly a scratch - out delete gesture , based on the stroke 's shape .", "label": "", "metadata": {}, "score": "55.73147"}
{"text": "End Linking .[ 0241 ] 3a .For all strokes ( stroke fragments ) that have not been determined to be cursive writing , stroke end objects are created representing the locations and orientations of the endpoints of each stroke .", "label": "", "metadata": {}, "score": "55.77124"}
{"text": "End Linking .[ 0241 ] 3a .For all strokes ( stroke fragments ) that have not been determined to be cursive writing , stroke end objects are created representing the locations and orientations of the endpoints of each stroke .", "label": "", "metadata": {}, "score": "55.77124"}
{"text": "Initialize node variables .A2 .Main Loop : Process Current Node until . . . .A3 .Exit : output best node T / F assignment .The initialization steps of A1 include : .I1 .Initialize a best - score variable to 0 . I2 .", "label": "", "metadata": {}, "score": "55.779045"}
{"text": "In the # rst pass , a word graph is constructed with standard time - synchronous beam search .The actual extraction of N best word sequences from the word graph takes place during the second pass .A method and system provides intelligent node - link diagram creation and editing , including an electronic display device having a surface on which a writing and/or drawing canvas is provided .", "label": "", "metadata": {}, "score": "55.784447"}
{"text": "Along with breaking raw strokes into fragments , in the Pre - Interpret stage the Recognition module also forms groupings 222 of finished strokes that could belong to the same handwritten word .These are Text Object hypotheses and are stored in a Text Object hypothesis list 224 .", "label": "", "metadata": {}, "score": "55.823822"}
{"text": "0177 ] 9 .Performs handwriting recognition on all un - scored TextObject hypotheses .[0178 ] 10 .Forms TextLine and TextColumn hypotheses from TextObjects .[ 0179 ] 11 .Forms GraphNode hypotheses ( see FIG .20 , 367a True ) from ClosedPathObjects enclosing TextObjects , TextLines , or TextColumns ( See FIG .", "label": "", "metadata": {}, "score": "55.872974"}
{"text": "This paper gives an overview of several strategies for integrating linguistic models into speech understanding systems and investigates several ways of producing sets of hypo ... \" .A lot of work remains to be done in the domain of a better integration of speech recognition and language processing systems .", "label": "", "metadata": {}, "score": "55.879383"}
{"text": "All semantically null words which originate ( directly or indirectly ) from the same search network node and which merge ( indirectly ) to the same node are collapsed into a unique single - input single - output acoustic network .As an example , refer to FIG .", "label": "", "metadata": {}, "score": "55.966507"}
{"text": "right - most semantically null networks are not computed .some non - semantically - null words are not backward - scored .an N - best list of only salient words is re - scored instead of a true N - best list .", "label": "", "metadata": {}, "score": "55.97963"}
{"text": "The language model provides knowledge to the NLU relating to understanding of the recognized word strings .More particularly the semantic information from the language knowledge is fed exclusively to the NLU component with information on how to construct a meaning representation of the CSR 's output .", "label": "", "metadata": {}, "score": "56.04254"}
{"text": "Once some material has been selected , tapping over other markings causes their respective structure objects to be added to the highlighted selection .Thus , as may be understood from the preceding discussion , any given piece of digital ink may be part of multiple structured objects in the domain of node - link diagrams ( e.g. , concept maps ) .", "label": "", "metadata": {}, "score": "56.044235"}
{"text": "FIG .7 is a flow diagram for the user action protocol for the ConceptSketch program of the present application based on the inferred - mode protocol ; .[ 0015 ] FIG .8 depicts the tapping operation and the ambiguity associated with such selection ; .", "label": "", "metadata": {}, "score": "56.103397"}
{"text": "The invention deals with speech recognition , such as a system for recognizing words in continuous speech .A speech recognition system is disclosed which is capable of recognizing a huge number of words , and in principle even an unlimited number of words .", "label": "", "metadata": {}, "score": "56.178543"}
{"text": "Finally , a well - established method of selecting image objects is to tap on them .An example of User Interaction with the UI is represented by Interaction Flow Diagram 140 of .FIG . 7 .( This version of the diagram omits the scratch - out delete gesture for easy understanding . )", "label": "", "metadata": {}, "score": "56.337643"}
{"text": "[0065 ] It is to be understood the pre - interpret and/or process operations can also be undertaken by having the Recognition module poll the unprocessed and processed queues to determine if there are any strokes on the queues for which the above operations are to be performed .", "label": "", "metadata": {}, "score": "56.348644"}
{"text": "[0065 ] It is to be understood the pre - interpret and/or process operations can also be undertaken by having the Recognition module poll the unprocessed and processed queues to determine if there are any strokes on the queues for which the above operations are to be performed .", "label": "", "metadata": {}, "score": "56.348644"}
{"text": "[0065 ] It is to be understood the pre - interpret and/or process operations can also be undertaken by having the Recognition module poll the unprocessed and processed queues to determine if there are any strokes on the queues for which the above operations are to be performed .", "label": "", "metadata": {}, "score": "56.348644"}
{"text": "Search optimization system and method for continuous speech recognition US 6397179 B2 .Abstract .A system and method for continuous speech recognition ( CSR ) is optimized to reduce processing time for connected word grammars bounded by semantically null words .", "label": "", "metadata": {}, "score": "56.353123"}
{"text": "The concepts of the present application include , among others , designing and implementing an easy to operate , intuitive user interface for a particular target application , that of creating and editing node - link diagrams , which include the genre of concept maps , mind maps , and others .", "label": "", "metadata": {}, "score": "56.41761"}
{"text": "The embodiments of dependent claims 6 to 8 may advantageously be combined and thereby ensuring that only relevant phoneme sequences are considered in the word - phoneme graph .An advantageous embodiment of the system according to the invention is defined in dependent claim 9 , wherein the speech recognition system further comprising a word graph generator for converting the word - phoneme graph to a word graph , the word graph assigning a word to each edge .", "label": "", "metadata": {}, "score": "56.423782"}
{"text": "From such attributes an overall score for each hypothesis is obtained .For example , in one embodiment the obtained information could be used to define a cost function of the attributes to determine the overall score ( e.g. , the intrinsic scores of FIG .", "label": "", "metadata": {}, "score": "56.44841"}
{"text": "From such attributes an overall score for each hypothesis is obtained .For example , in one embodiment the obtained information could be used to define a cost function of the attributes to determine the overall score ( e.g. , the intrinsic scores of FIG .", "label": "", "metadata": {}, "score": "56.44841"}
{"text": "From such attributes an overall score for each hypothesis is obtained .For example , in one embodiment the obtained information could be used to define a cost function of the attributes to determine the overall score ( e.g. , the intrinsic scores of FIG .", "label": "", "metadata": {}, "score": "56.44841"}
{"text": "As shown in FIG .9 , every state is a valid precursor state for the meta - commands M1 , and every state within a grammar is a valid precursor for the appropriate meta - command M2 , M3 or M4 .", "label": "", "metadata": {}, "score": "56.464825"}
{"text": "Input : 4 vector of object scores and a support table .Output : A labeling of True / False values for the objects , such that the sum or related arithmetic combination of object scores is maximized under the constraint that every True object supports at most one other True object according to the support table .", "label": "", "metadata": {}, "score": "56.486988"}
{"text": "The method according to . claim 9 , wherein the phonemic language model is an m - gram language model or a compact variagram .Description .The invention relates to a speech recognition system for identifying words from a sound block , and in particular to a continuous speech recognizer .", "label": "", "metadata": {}, "score": "56.53672"}
{"text": "The system of .claim 6 , wherein the stop nodes include forward stop nodes and backward stop nodes .The system of .claim 7 , wherein the means for processing the input signal is operative for implementing a search characterized by a forward pass and a backward pass ; .", "label": "", "metadata": {}, "score": "56.648285"}
{"text": "Of course , other embodiments may have different arrangements .[0156 ] GraphLink ( 302 ) : A GraphLink contains two roles , a LinkGraphic and a LinkLabel .The LinkGraphic role must be filled by a CurvilinearConnector .The LinkLabel role may be filled optionally , by a TextObject , TextLine , or TextColumn .", "label": "", "metadata": {}, "score": "56.662727"}
{"text": "Of course , other embodiments may have different arrangements .[0156 ] GraphLink ( 302 ) : A GraphLink contains two roles , a LinkGraphic and a LinkLabel .The LinkGraphic role must be filled by a CurvilinearConnector .The LinkLabel role may be filled optionally , by a TextObject , TextLine , or TextColumn .", "label": "", "metadata": {}, "score": "56.662727"}
{"text": "Then , an optimization procedure operates to select the combination of hypotheses that achieves collectively a best score , and obeys certain constraints to select a subset of the hypothesis lattice ( e.g. , 330 of .FIG .15 ) .", "label": "", "metadata": {}, "score": "56.724438"}
{"text": "Further , the links may have termination symbols on either end , or may not have any termination symbols .Also , links and nodes can be either labeled or unlabeled .At times , simply the existence of a directed or undirected link is sufficient to express a relationship , while in other situations , the label will provide more details of a relationship .", "label": "", "metadata": {}, "score": "56.809273"}
{"text": "Further , the links may have termination symbols on either end , or may not have any termination symbols .Also , links and nodes can be either labeled or unlabeled .At times , simply the existence of a directed or undirected link is sufficient to express a relationship , while in other situations , the label will provide more details of a relationship .", "label": "", "metadata": {}, "score": "56.809273"}
{"text": "Further , the links may have termination symbols on either end , or may not have any termination symbols .Also , links and nodes can be either labeled or unlabeled .At times , simply the existence of a directed or undirected link is sufficient to express a relationship , while in other situations , the label will provide more details of a relationship .", "label": "", "metadata": {}, "score": "56.809273"}
{"text": "Further , the links may have termination symbols on either end , or may not have any termination symbols .Also , links and nodes can be either labeled or unlabeled .At times , simply the existence of a directed or undirected link is sufficient to express a relationship , while in other situations , the label will provide more details of a relationship .", "label": "", "metadata": {}, "score": "56.809273"}
{"text": "Users can select node objects , link objects , or their constituent graphical figures and textural labels by a standard Tap gesture .Or , users can select by the standard encircling gesture .Once selected , users can manipulate these objects , by changing color , moving and resizing them , and most notably by beautifying or formalizing them .", "label": "", "metadata": {}, "score": "56.835125"}
{"text": "Users can select node objects , link objects , or their constituent graphical figures and textural labels by a standard Tap gesture .Or , users can select by the standard encircling gesture .Once selected , users can manipulate these objects , by changing color , moving and resizing them , and most notably by beautifying or formalizing them .", "label": "", "metadata": {}, "score": "56.835125"}
{"text": "Users can select node objects , link objects , or their constituent graphical figures and textural labels by a standard Tap gesture .Or , users can select by the standard encircling gesture .Once selected , users can manipulate these objects , by changing color , moving and resizing them , and most notably by beautifying or formalizing them .", "label": "", "metadata": {}, "score": "56.835125"}
{"text": "Assignment of confidence scores .[ 0253 ] 5a .Each Molecular object in the hypothesis graph is given a confidence score , based on how well its Atomic support fits the ideal model for that Molecular object 's type .[ 0254 ] 5b .", "label": "", "metadata": {}, "score": "56.864235"}
{"text": "Hence , once put in the table or other memory device , the stroke fragments replace the raw strokes on the canvas ( such replacement will be imperceptible to a user ) .In this way , the Recognizer module and the GUI module has the same stored information regarding the strokes .", "label": "", "metadata": {}, "score": "56.870674"}
{"text": "Hence , once put in the table or other memory device , the stroke fragments replace the raw strokes on the canvas ( such replacement will be imperceptible to a user ) .In this way , the Recognizer module and the GUI module has the same stored information regarding the strokes .", "label": "", "metadata": {}, "score": "56.870674"}
{"text": "Hence , once put in the table or other memory device , the stroke fragments replace the raw strokes on the canvas ( such replacement will be imperceptible to a user ) .In this way , the Recognizer module and the GUI module has the same stored information regarding the strokes .", "label": "", "metadata": {}, "score": "56.870674"}
{"text": "Hence , once put in the table or other memory device , the stroke fragments replace the raw strokes on the canvas ( such replacement will be imperceptible to a user ) .In this way , the Recognizer module and the GUI module has the same stored information regarding the strokes .", "label": "", "metadata": {}, "score": "56.870674"}
{"text": "This simply means that the grammar or vocabulary which applies to the entire system is larger than can be handled directly by the processor at one time .This is somewhat analogous to the concept of virtual memory in a computer system , where the virtual memory is much larger and can be accessed directly by the processor .", "label": "", "metadata": {}, "score": "56.871555"}
{"text": "Sometimes these simpler objects will fulfill defined roles in the more complex objects ( e.g. , a wedge will act to support a more complex object of an arrowhead ) .For the node - link concept sketching domain , the ontology of graphical and textual objects and parts 280 which have been defined in the present application is presented in .", "label": "", "metadata": {}, "score": "56.88427"}
{"text": "Examination Table II shows that certain decisions must be made each time a word hypothesis is associated with a node .These decisions involve deciding which node is the correct precursor for each node .For example , when \" CALL \" is assigned to node 2 , the precursor could be either node 0 or node 1 .", "label": "", "metadata": {}, "score": "56.893143"}
{"text": "( iv ) the hypotheses have confidence scores applied in accordance with interacting support such as surrounding strokes ( e.g. , support - context score ) ; .( v ) the hypotheses form a lattice according to their support relations ; .", "label": "", "metadata": {}, "score": "56.945267"}
{"text": "In general , because of the variability of human writing , no hard - and - fast rules can unequivocally form groupings that correspond to human interpretation .Instead , multiple hypotheses will be generated .For each new stroke , the process works to determine whether the new stroke clearly belongs to an existing Text Object , clearly does not belong to an existing Text Object , or is ambiguous .", "label": "", "metadata": {}, "score": "56.96985"}
{"text": "The process according to claim 1 , wherein the non - overlapping support constraint requires that any one node or branch must support at most one other accepted node or branch of the search tree which has been selected by the tree search process .", "label": "", "metadata": {}, "score": "56.982277"}
{"text": "The process according to claim 1 , wherein the non - overlapping support constraint requires that any one node or branch must support at most one other accepted node or branch of the search tree which has been selected by the tree search process .", "label": "", "metadata": {}, "score": "56.982277"}
{"text": "The first stage , the Pre - Interpret stage , as previously described , operates quickly in response to new strokes being added to the canvas .The Pre - Interpret stage breaks raw strokes into smaller fragments , and forms TextObject hypotheses .", "label": "", "metadata": {}, "score": "57.064907"}
{"text": "The first stage , the Pre - Interpret stage , as previously described , operates quickly in response to new strokes being added to the canvas .The Pre - Interpret stage breaks raw strokes into smaller fragments , and forms TextObject hypotheses .", "label": "", "metadata": {}, "score": "57.064907"}
{"text": "0228 ] The Stroke - By - Stroke Processing Stage Proceeds as Follows : [ 0229 ] 1 .Formation of Atomic Objects ( Strokes , Nodes ) .[ 0230 ] 1a .Remove the next available stroke from the stroke interpretation queue .", "label": "", "metadata": {}, "score": "57.091988"}
{"text": "0228 ] The Stroke - By - Stroke Processing Stage Proceeds as Follows : [ 0229 ] 1 .Formation of Atomic Objects ( Strokes , Nodes ) .[ 0230 ] 1a .Remove the next available stroke from the stroke interpretation queue .", "label": "", "metadata": {}, "score": "57.091988"}
{"text": "7 is a flow diagram for the user action protocol for the ConceptSketch program of the present application based on the inferred - mode protocol ; .FIG .8 depicts the tapping operation and the ambiguity associated with such selection ; .", "label": "", "metadata": {}, "score": "57.109444"}
{"text": "0079 ] 4 .Architecture .[ 0080 ] 4.1 Architecture Solution .[0081 ] The system architecture of the present application is described from three perspectives : ( i ) the functional organization of system modules , ( ii ) specification of the functions performed by each module , and ( iii ) the interfaces governing communication between the modules .", "label": "", "metadata": {}, "score": "57.118507"}
{"text": "0079 ] 4 .Architecture .[ 0080 ] 4.1 Architecture Solution .[0081 ] The system architecture of the present application is described from three perspectives : ( i ) the functional organization of system modules , ( ii ) specification of the functions performed by each module , and ( iii ) the interfaces governing communication between the modules .", "label": "", "metadata": {}, "score": "57.118507"}
{"text": "0079 ] 4 .Architecture .[ 0080 ] 4.1 Architecture Solution .[0081 ] The system architecture of the present application is described from three perspectives : ( i ) the functional organization of system modules , ( ii ) specification of the functions performed by each module , and ( iii ) the interfaces governing communication between the modules .", "label": "", "metadata": {}, "score": "57.118507"}
{"text": "As the user draws text and graphics , the markings are covertly interpreted as the nodes , links , and textual labels of a node - link diagram , such as a concept map .The recognized structure subsequently enables simple tap selection of meaningful objects , and incremental , user - directed , reversible beautification / formalization operations .", "label": "", "metadata": {}, "score": "57.17119"}
{"text": "As the user draws text and graphics , the markings are covertly interpreted as the nodes , links , and textual labels of a node - link diagram , such as a concept map .The recognized structure subsequently enables simple tap selection of meaningful objects , and incremental , user - directed , reversible beautification / formalization operations .", "label": "", "metadata": {}, "score": "57.17119"}
{"text": "As the user draws text and graphics , the markings are covertly interpreted as the nodes , links , and textual labels of a node - link diagram , such as a concept map .The recognized structure subsequently enables simple tap selection of meaningful objects , and incremental , user - directed , reversible beautification / formalization operations .", "label": "", "metadata": {}, "score": "57.17119"}
{"text": "As the user draws text and graphics , the markings are covertly interpreted as the nodes , links , and textual labels of a node - link diagram , such as a concept map .The recognized structure subsequently enables simple tap selection of meaningful objects , and incremental , user - directed , reversible beautification / formalization operations .", "label": "", "metadata": {}, "score": "57.17119"}
{"text": "Therefore the main difficulty to increase the number of recognizable words by the state - of - the - art LVCSRs is the need of collecting a sufficiently large corpora .Although user dictionaries and computer power steadily increase so that more words may be handled , only a limited number of words may be recognized .", "label": "", "metadata": {}, "score": "57.219208"}
{"text": "The system described herein has the look and feel of a normal whiteboard .The program can be used as a simple walk - up and draw / write device with no formal training .Then , with just a minimal amount of instruction the user gains access to the power of a behind - the - scenes recognition engine that enables them to easily manipulate anything they may have drawn that resembles a node - link diagram in terms of its meaningful parts and relations .", "label": "", "metadata": {}, "score": "57.2422"}
{"text": "The Recognition module removes strokes from the unprocessed stroke queue 214 and breaks the strokes into smaller fragments , which may be called \" finished strokes \" or \" fragmented strokes \" 216 .A multi - scale corner detection algorithm is applied to determine where the breaks should be .", "label": "", "metadata": {}, "score": "57.38185"}
{"text": "( k ) associating the new partial sentence hypothesis error with the new partial sentence hypothesis created in step ( c ) .The method of claim 10 , wherein the gap error of step ( h ) is zero whenever silence is associated with the gap between consecutive hypothesized words .", "label": "", "metadata": {}, "score": "57.421764"}
{"text": "4 .The arrow below the score vector indicates that this is a forward score vector .Backward Pass .During the forward pass , path information is not saved .The purpose of the backward pass is to recover this path information for the N - best choices required .", "label": "", "metadata": {}, "score": "57.439663"}
{"text": "9 elaborates on the relationship between the GUI module ( layer ) and Recognition Module ( layer ) ; .[0017 ]FIG .10 sets forth the more detailed view of the pre - interpret operation of the present application ; .", "label": "", "metadata": {}, "score": "57.46376"}
{"text": "9 elaborates on the relationship between the GUI module ( layer ) and Recognition Module ( layer ) ; .[0017 ]FIG .10 sets forth the more detailed view of the pre - interpret operation of the present application ; .", "label": "", "metadata": {}, "score": "57.46376"}
{"text": "9 elaborates on the relationship between the GUI module ( layer ) and Recognition Module ( layer ) ; .[0017 ]FIG .10 sets forth the more detailed view of the pre - interpret operation of the present application ; .", "label": "", "metadata": {}, "score": "57.46376"}
{"text": "At block 304 , a text - based query vector is formed by the information retrieval / call routing engine 3 based on the recognized utterance , as described further below .At block 305 , one or more destinations in database 4 which satisfy the query are identified by the information retrieval / call routing engine 3 .", "label": "", "metadata": {}, "score": "57.474327"}
{"text": "[ 0014 ]FIG .7 is a flow diagram for the user action protocol for the ConceptSketch program of the present application based on the inferred - mode protocol ; .[ 0015 ] FIG .8 depicts the tapping operation and the ambiguity associated with such selection ; .", "label": "", "metadata": {}, "score": "57.54876"}
{"text": "[ 0014 ]FIG .7 is a flow diagram for the user action protocol for the ConceptSketch program of the present application based on the inferred - mode protocol ; .[ 0015 ] FIG .8 depicts the tapping operation and the ambiguity associated with such selection ; .", "label": "", "metadata": {}, "score": "57.54876"}
{"text": "As shown in Table II , the selected precursor for node 2 is node 1 , which selects the partial sentence hypothesis \" PLACE CALL \" over \" CALL \" .This selection is made because the partial sentence hypothesis \" CALL \" includes a gap error - corresponding to the utterance of the word \" PLACE \" .", "label": "", "metadata": {}, "score": "57.587498"}
{"text": "Strokes that are determined to be cursive writing are considered atomic , of type \" text \" , and are returned to the front of the stroke interpretation queue . 1d .Strokes that are not determined to be cursive writing are broken at corners according to means known in the art .", "label": "", "metadata": {}, "score": "57.59482"}
{"text": "[ 0191 ] Output : A subset of Group nodes that maximizes the sum or related arithmetic combination of support - context scores of the nodes included in the subset such that each node supports at most one node above it in the hierarchy .", "label": "", "metadata": {}, "score": "57.60573"}
{"text": "[ 0191 ] Output : A subset of Group nodes that maximizes the sum or related arithmetic combination of support - context scores of the nodes included in the subset such that each node supports at most one node above it in the hierarchy .", "label": "", "metadata": {}, "score": "57.60573"}
{"text": "Some amount of time will be required for the grammar and vocabulary switching operations to take place .Even if this time is only a few tens of milliseconds , this is a long delay for a recognition system which uses data frames typically having a length of ten or twenty milliseconds .", "label": "", "metadata": {}, "score": "57.610077"}
{"text": "The word LM is used to score the sequence of words , thereby realizing a modeling on the language level above the acoustic one .The classical word LM is for each known word based on a statistic on word histories , which together consist of n words .", "label": "", "metadata": {}, "score": "57.68661"}
{"text": "In one implementation , this constraint states that any group or atomic PenStroke must support at most one other accepted group .However , in other implementations , the non - overlapping constraint may be relaxed , for example , the non - overlapping concept may be relaxed between TextObject hypotheses and Wedge , CurvilinearObject or ClosedPathObject hypotheses to permit support of more than one other accepted group .", "label": "", "metadata": {}, "score": "57.76319"}
{"text": "In one implementation , this constraint states that any group or atomic PenStroke must support at most one other accepted group .However , in other implementations , the non - overlapping constraint may be relaxed , for example , the non - overlapping concept may be relaxed between TextObject hypotheses and Wedge , CurvilinearObject or ClosedPathObject hypotheses to permit support of more than one other accepted group .", "label": "", "metadata": {}, "score": "57.76319"}
{"text": "In one implementation , this constraint states that any group or atomic PenStroke must support at most one other accepted group .However , in other implementations , the non - overlapping constraint may be relaxed , for example , the non - overlapping concept may be relaxed between TextObject hypotheses and Wedge , CurvilinearObject or ClosedPathObject hypotheses to permit support of more than one other accepted group .", "label": "", "metadata": {}, "score": "57.76319"}
{"text": "In one implementation , this constraint states that any group or atomic PenStroke must support at most one other accepted group .However , in other implementations , the non - overlapping constraint may be relaxed , for example , the non - overlapping concept may be relaxed between TextObject hypotheses and Wedge , CurvilinearObject or ClosedPathObject hypotheses to permit support of more than one other accepted group .", "label": "", "metadata": {}, "score": "57.76319"}
{"text": "The GUI module 62 is designed to be fast and responsive to user input , and display digital ink promptly as events are received from the pen , stylus , or mouse .In a separate thread , the Recognition module 64 can perform computationally intensive operations that may take considerable time to complete ( on the order of several seconds ) .", "label": "", "metadata": {}, "score": "57.779274"}
{"text": "The GUI module 62 is designed to be fast and responsive to user input , and display digital ink promptly as events are received from the pen , stylus , or mouse .In a separate thread , the Recognition module 64 can perform computationally intensive operations that may take considerable time to complete ( on the order of several seconds ) .", "label": "", "metadata": {}, "score": "57.779274"}
{"text": "The GUI module 62 is designed to be fast and responsive to user input , and display digital ink promptly as events are received from the pen , stylus , or mouse .In a separate thread , the Recognition module 64 can perform computationally intensive operations that may take considerable time to complete ( on the order of several seconds ) .", "label": "", "metadata": {}, "score": "57.779274"}
{"text": "The GUI module 62 is designed to be fast and responsive to user input , and display digital ink promptly as events are received from the pen , stylus , or mouse .In a separate thread , the Recognition module 64 can perform computationally intensive operations that may take considerable time to complete ( on the order of several seconds ) .", "label": "", "metadata": {}, "score": "57.779274"}
{"text": "Once an accepted lattice is formed , the atoms of the lattice are informed about which hypotheses they support .At least some of these hypotheses may be considered to be \" selectables .\" Each atom will keep a list of selectables , which may be considered selectable group hypotheses ( for example , an ink stroke atom may support a hypotheses of an Arrowhead , where the Arrowhead may be an item capable of being selected by a user ) .", "label": "", "metadata": {}, "score": "57.811306"}
{"text": "Once an accepted lattice is formed , the atoms of the lattice are informed about which hypotheses they support .At least some of these hypotheses may be considered to be \" selectables .\" Each atom will keep a list of selectables , which may be considered selectable group hypotheses ( for example , an ink stroke atom may support a hypotheses of an Arrowhead , where the Arrowhead may be an item capable of being selected by a user ) .", "label": "", "metadata": {}, "score": "57.811306"}
{"text": "Once an accepted lattice is formed , the atoms of the lattice are informed about which hypotheses they support .At least some of these hypotheses may be considered to be \" selectables .\" Each atom will keep a list of selectables , which may be considered selectable group hypotheses ( for example , an ink stroke atom may support a hypotheses of an Arrowhead , where the Arrowhead may be an item capable of being selected by a user ) .", "label": "", "metadata": {}, "score": "57.811306"}
{"text": "6 shows the search network of FIG .3 when the affixes are collapsed , with the new node labeling .Stop Nodes .The lion 's share of the savings resulting from the proposed optimizations are due to the presence of stop nodes in the search network .", "label": "", "metadata": {}, "score": "57.839195"}
{"text": "Further , in this context , and for the purposes of brevity and clarity , detailed descriptions of well - known apparatuses , circuits and methodologies have been omitted so as to avoid unnecessary detail and possible confusion .Reference signs are included in the claims , however the inclusion of the reference signs is only for clarity reasons and should not be construed as limiting the scope of the claims . \" ...", "label": "", "metadata": {}, "score": "57.84615"}
{"text": "Typically the fragments will be due to breaking the original raw strokes at corners .The GUI module continually tests for finished strokes on the processed ( finished ) strokes queue .When it finds finished strokes there , it removes them from the queue and replaces any obsolete raw strokes with new finished strokes .", "label": "", "metadata": {}, "score": "57.86369"}
{"text": "FIG .1 is shown in greater detail in .FIG .6 .As a first step , new phoneme sequence hypotheses are created by a phoneme sequence hypotheses generator 60 and inserted into the phoneme graph to create an extended phoneme graph 61 .", "label": "", "metadata": {}, "score": "57.941574"}
{"text": "Under the Inferred Mode protocol , the user is free to perform marking or selection gestures without prior specification of mode .The system attempts to infer user intent from context .If the intent is ambiguous , then a mediator button appears which the user may either tap or ignore .", "label": "", "metadata": {}, "score": "58.036037"}
{"text": "Under the Inferred Mode protocol , the user is free to perform marking or selection gestures without prior specification of mode .The system attempts to infer user intent from context .If the intent is ambiguous , then a mediator button appears which the user may either tap or ignore .", "label": "", "metadata": {}, "score": "58.036037"}
{"text": "Under the Inferred Mode protocol , the user is free to perform marking or selection gestures without prior specification of mode .The system attempts to infer user intent from context .If the intent is ambiguous , then a mediator button appears which the user may either tap or ignore .", "label": "", "metadata": {}, "score": "58.036037"}
{"text": "Under the Inferred Mode protocol , the user is free to perform marking or selection gestures without prior specification of mode .The system attempts to infer user intent from context .If the intent is ambiguous , then a mediator button appears which the user may either tap or ignore .", "label": "", "metadata": {}, "score": "58.036037"}
{"text": "FIG .30 illustrates operations of the recognition module that modify hypotheses lattices .DETAILED DESCRIPTION .[ 0038 ] 1 .Introduction .[ 0039 ] The following describes methods and systems for interactive creation and editing of node - link diagrams with stylus / pen computing systems , at times referred to herein as the ConceptSketch program or process which employs a User Interface ( UI ) .", "label": "", "metadata": {}, "score": "58.103065"}
{"text": "FIG .30 illustrates operations of the recognition module that modify hypotheses lattices .DETAILED DESCRIPTION .[ 0038 ] 1 .Introduction .[ 0039 ] The following describes methods and systems for interactive creation and editing of node - link diagrams with stylus / pen computing systems , at times referred to herein as the ConceptSketch program or process which employs a User Interface ( UI ) .", "label": "", "metadata": {}, "score": "58.103065"}
{"text": "FIG .30 illustrates operations of the recognition module that modify hypotheses lattices .DETAILED DESCRIPTION .[ 0038 ] 1 .Introduction .[ 0039 ] The following describes methods and systems for interactive creation and editing of node - link diagrams with stylus / pen computing systems , at times referred to herein as the ConceptSketch program or process which employs a User Interface ( UI ) .", "label": "", "metadata": {}, "score": "58.103065"}
{"text": "( i ) the strokes are fragmented if necessary ; .( ii ) related strokes are grouped to form multiple hypotheses reflecting structured interpretations of the strokes ( strokes are determined to be related based on any of a number of similarity characteristics , including but not limited to shape similarity and location proximity ) ; .", "label": "", "metadata": {}, "score": "58.106216"}
{"text": "Since there is no large gap error associated with gaps of silence , the overall sentence error calculation will not be affected .Theoretically , there is no limit to the length of the pause .A speaker could begin a sentence , stop , go home for the weekend , and return days later to complete the sentence .", "label": "", "metadata": {}, "score": "58.156143"}
{"text": "Selection of hypotheses .[ 0258 ] 7a .Winning hypotheses are selected from the hypothesis graph by best search .The highest scoring Graph Structure Node is selected to be \" accepted \" and all Molecular objects that support it are assigned to it .", "label": "", "metadata": {}, "score": "58.18984"}
{"text": "0130 ] 5 .Recognition Algorithms .[ 0131 ]In order to carry out its role with regard to the GUI / Recognition interface , the Recognition module recognizes the graphical objects , textual content , and spatial structure of the diagram .", "label": "", "metadata": {}, "score": "58.220474"}
{"text": "0130 ] 5 .Recognition Algorithms .[ 0131 ]In order to carry out its role with regard to the GUI / Recognition interface , the Recognition module recognizes the graphical objects , textual content , and spatial structure of the diagram .", "label": "", "metadata": {}, "score": "58.220474"}
{"text": "0062 ] If the command sent from the GUI module is a \" process \" command , rather than a \" pre - interpret \" command , then at step 106 , the process moves to step 114 where structured recognition operations are performed on the processed fragmented strokes .", "label": "", "metadata": {}, "score": "58.22953"}
{"text": "0062 ] If the command sent from the GUI module is a \" process \" command , rather than a \" pre - interpret \" command , then at step 106 , the process moves to step 114 where structured recognition operations are performed on the processed fragmented strokes .", "label": "", "metadata": {}, "score": "58.22953"}
{"text": "0062 ] If the command sent from the GUI module is a \" process \" command , rather than a \" pre - interpret \" command , then at step 106 , the process moves to step 114 where structured recognition operations are performed on the processed fragmented strokes .", "label": "", "metadata": {}, "score": "58.22953"}
{"text": "This is accomplished by search of a binary tree , where the left branch at each node of the tree corresponds to assigning the value True to a node , and the right branch corresponds to assigning False .The depth of the tree is the number of Group nodes ( see .", "label": "", "metadata": {}, "score": "58.230698"}
{"text": "Selection of hypotheses .[ 0255 ] 7a .Winning hypotheses are selected from the hypothesis graph by best search .The highest scoring Graph Structure Node is selected to be \" accepted \" and all Molecular objects that support it are assigned to it .", "label": "", "metadata": {}, "score": "58.329178"}
{"text": "Selection of hypotheses .[ 0255 ] 7a .Winning hypotheses are selected from the hypothesis graph by best search .The highest scoring Graph Structure Node is selected to be \" accepted \" and all Molecular objects that support it are assigned to it .", "label": "", "metadata": {}, "score": "58.329178"}
{"text": "10 .The Pre - Interpret operation includes logic for creating and updating initial hypotheses in the Recognition module about which groups of strokes form handwritten words , or \" Text Objects \" .With continuing attention to .FIG .10 , when the pen touches the screen , the GUI module initiates a new \" PenPath \" object .", "label": "", "metadata": {}, "score": "58.345383"}
{"text": "Copending U.S. application Ser .No .09/118,621 entitled \" Block algorithm for pattern recognition \" , referenced above describes in detail an example of a search algorithm and scoring method .For example , the Viterbi beam search , without a doubt the most widely used optimization , prunes the paths whose scores ( likelihoods ) are outside a beam determined by the best local score .", "label": "", "metadata": {}, "score": "58.383137"}
{"text": "9 elaborates on the relationship between the GUI module ( layer ) and Recognition Module ( layer ) ; .FIG .10 sets forth the more detailed view of the pre - interpret operation of the present application ; .FIG .", "label": "", "metadata": {}, "score": "58.38459"}
{"text": "29 sets forth an un - veto - conflicting support node operation during the structured recognition operations ; and .FIG .30 illustrates operations of the recognition module that modify hypotheses lattices .DETAILED DESCRIPTION .Introduction .The following describes methods and systems for interactive creation and editing of node - link diagrams with stylus / pen computing systems , at times referred to herein as the ConceptSketch program or process which employs a User Interface ( UI ) .", "label": "", "metadata": {}, "score": "58.428444"}
{"text": "The new tree - trellis search is different from the traditional time synchronous Viterbi search in its ability for finding not just the best but the N - best paths of different word content .When compared with the best candidate Viterbi search , the search complexities for finding the N - best strings are rather low , i.e. , only a fraction more computation is needed . \" ...", "label": "", "metadata": {}, "score": "58.480194"}
{"text": "Or , users can select by the standard encircling gesture .Once selected , users can manipulate these objects , by changing color , moving and resizing them , and most notably by beautifying or formalizing them .Users can also delete by the standard scratch - out gesture .", "label": "", "metadata": {}, "score": "58.52479"}
{"text": "Instead , the GUI and Recognition modules maintain representations of the existing strokes in synchrony with one another , named by common Identity or IDs .When strokes are referred to , only their IDs need to be passed , not the entire listing of points belonging to each stroke .", "label": "", "metadata": {}, "score": "58.547634"}
{"text": "Instead , the GUI and Recognition modules maintain representations of the existing strokes in synchrony with one another , named by common Identity or IDs .When strokes are referred to , only their IDs need to be passed , not the entire listing of points belonging to each stroke .", "label": "", "metadata": {}, "score": "58.547634"}
{"text": "Instead , the GUI and Recognition modules maintain representations of the existing strokes in synchrony with one another , named by common Identity or IDs .When strokes are referred to , only their IDs need to be passed , not the entire listing of points belonging to each stroke .", "label": "", "metadata": {}, "score": "58.547634"}
{"text": "The score vector and the associated Group nodes are sorted from biggest support - context score to smallest .Because of the score assignment at step 1 , the nodes will be ordered such that higher nodes in the lattice will come strictly after their support nodes .", "label": "", "metadata": {}, "score": "58.579243"}
{"text": "The score vector and the associated Group nodes are sorted from biggest support - context score to smallest .Because of the score assignment at step 1 , the nodes will be ordered such that higher nodes in the lattice will come strictly after their support nodes .", "label": "", "metadata": {}, "score": "58.579243"}
{"text": "5 , which shows a word graph representing the true N - best list .Consider the word labeled \" word 1 \" in the graph .Because this word is connected to two different suffixes , at different times ( \" suffix 1 \" and \" suffix 2 \" ) , it will have to be scored twice .", "label": "", "metadata": {}, "score": "58.593163"}
{"text": "Thus existing products with older processors may advantageously be upgraded to provide extended services .In newer products and processors , the number of simultaneous channels that can be supported is higher , reducing the cost of deploying services .Improved performance may enhance users perception of value and quality of service .", "label": "", "metadata": {}, "score": "58.702957"}
{"text": "Thus existing products with older processors may advantageously be upgraded to provide extended services .In newer products and processors , the number of simultaneous channels that can be supported is higher , reducing the cost of deploying services .Improved performance may enhance users perception of value and quality of service .", "label": "", "metadata": {}, "score": "58.702957"}
{"text": "The invention will now be described in greater detail with reference to the attached drawings wherein : .FIG .1 shows a known prior art spoken language processing system comprising a continuous speech recognition component ( CSR ) and a natural language understanding component ( NLU ) ; .", "label": "", "metadata": {}, "score": "58.725967"}
{"text": "FIG .6 shows a graph of a very simple finite - state grammar .This grammar would be useful for using spoken instructions to place telephone calls .As shown in FIG .6 , the grammar can be used to call an outside number , which requires that a 7-digit number be used , or an internal number which requires only the use of a 4-digit extension .", "label": "", "metadata": {}, "score": "58.75316"}
{"text": "0194 ] Output : A subset of Group nodes that maximizes the sum or related arithmetic combination of support - context scores of the nodes included in the subset such that each node supports at most one node above it in the hierarchy .", "label": "", "metadata": {}, "score": "58.797615"}
{"text": "This could distort the calculated error value for the sentence .FIG .8 shows the insertion of a transition state in a grammar whenever the digits 3 and 8 can form a valid utterance according to the grammar .FIG .", "label": "", "metadata": {}, "score": "58.852264"}
{"text": "p. The GUI then decides what strokes the user intended to select , and returns an array ( e.g. , int [ ] array ) with the IDs of these strokes .Under the Inferred Mode protocol , this decision is based on any stroke located under or in the near vicinity of Point p , and the recognized groups that this stroke belongs to .", "label": "", "metadata": {}, "score": "58.873535"}
{"text": "The GUI module 62 may be implemented in a different programming language and runtime environment than the Recognition module 64 , as long as they can communicate .[ 0083 ]The Recognition module 64 handles interpretation of the user 's input markings in terms of words , lines , and columns of text , graphic objects , and the document model of node - link diagrams .", "label": "", "metadata": {}, "score": "58.889603"}
{"text": "The GUI module 62 may be implemented in a different programming language and runtime environment than the Recognition module 64 , as long as they can communicate .[ 0083 ]The Recognition module 64 handles interpretation of the user 's input markings in terms of words , lines , and columns of text , graphic objects , and the document model of node - link diagrams .", "label": "", "metadata": {}, "score": "58.889603"}
{"text": "The GUI module 62 may be implemented in a different programming language and runtime environment than the Recognition module 64 , as long as they can communicate .[ 0083 ]The Recognition module 64 handles interpretation of the user 's input markings in terms of words , lines , and columns of text , graphic objects , and the document model of node - link diagrams .", "label": "", "metadata": {}, "score": "58.889603"}
{"text": "FIG .12 .These are all methods to be implemented by any Recognition module .These methods are called by the GUI .Some of the methods return values , others operate by side effect ( like removing and placing strokes on queues ) .", "label": "", "metadata": {}, "score": "58.95067"}
{"text": "As a next step , a word - phoneme graph generator 43 is applied to the resulting phoneme graph .The output of the word - phoneme graph generator is the word - phoneme graph 44 .The phonetic transcription is also made accessible for each word - edge .", "label": "", "metadata": {}, "score": "58.955517"}
{"text": "The Recognition module is then required to determine exactly which strokes the user probably intends to delete , as determined by the path of the scratch - out gesture and the structural groups the recognition algorithms have constructed .The argument , PenPath scratchout - path , is a listing of points ( including their time stamps ) of the gesture .", "label": "", "metadata": {}, "score": "58.963486"}
{"text": "The Recognition module is then required to determine exactly which strokes the user probably intends to delete , as determined by the path of the scratch - out gesture and the structural groups the recognition algorithms have constructed .The argument , PenPath scratchout - path , is a listing of points ( including their time stamps ) of the gesture .", "label": "", "metadata": {}, "score": "58.963486"}
{"text": "The Recognition module is then required to determine exactly which strokes the user probably intends to delete , as determined by the path of the scratch - out gesture and the structural groups the recognition algorithms have constructed .The argument , PenPath scratchout - path , is a listing of points ( including their time stamps ) of the gesture .", "label": "", "metadata": {}, "score": "58.963486"}
{"text": "A method and process provides structure recognition to a node - link diagram formed by a plurality of digital ink strokes drawn on a canvas of an electronic device by an input device .The method and process include grouping related strokes into multiple hypotheses reflecting structure interpretations of the strokes in a group .", "label": "", "metadata": {}, "score": "58.972366"}
{"text": "This permits a user to continually draw on the canvas without waiting for system updates or delays .However , this portion of the system does not provide \" intelligence \" , to the image on the canvas ( i.e. , it does not allow rough sketches to be formalized , objects to be moved , colored , cut , etc . ) .", "label": "", "metadata": {}, "score": "58.974796"}
{"text": "This permits a user to continually draw on the canvas without waiting for system updates or delays .However , this portion of the system does not provide \" intelligence \" , to the image on the canvas ( i.e. , it does not allow rough sketches to be formalized , objects to be moved , colored , cut , etc . ) .", "label": "", "metadata": {}, "score": "58.974796"}
{"text": "This permits a user to continually draw on the canvas without waiting for system updates or delays .However , this portion of the system does not provide \" intelligence \" , to the image on the canvas ( i.e. , it does not allow rough sketches to be formalized , objects to be moved , colored , cut , etc . ) .", "label": "", "metadata": {}, "score": "58.974796"}
{"text": "The HVCSR does not have a traditional LM and it applies a so - called huge word lexicon ( HwLex ) instead of the conventional ULX to determine the allowed words of the actually used language .The HwLex stores the words of the actual language and their phonetic transcriptions .", "label": "", "metadata": {}, "score": "58.98887"}
{"text": "Search is performed for perceptually closed paths formed by Atomic strokes , according to an algorithm known in the field .Each resulting closed path graphic object is added to the hypothesis lattice .[0247 ] 3d .All strokes not participating in a closed path graphic object are further processed to discover triples of strokes forming a wedge or arrowhead configuration .", "label": "", "metadata": {}, "score": "58.999332"}
{"text": "Search is performed for perceptually closed paths formed by Atomic strokes , according to an algorithm known in the field .Each resulting closed path graphic object is added to the hypothesis lattice .[ 0244 ] 3d .All strokes not participating in a closed path graphic object are further processed to discover triples of strokes forming a wedge or arrowhead configuration .", "label": "", "metadata": {}, "score": "59.0002"}
{"text": "Search is performed for perceptually closed paths formed by Atomic strokes , according to an algorithm known in the field .Each resulting closed path graphic object is added to the hypothesis lattice .[ 0244 ] 3d .All strokes not participating in a closed path graphic object are further processed to discover triples of strokes forming a wedge or arrowhead configuration .", "label": "", "metadata": {}, "score": "59.0002"}
{"text": "FIG .2 illustrates the LSI training process according to one embodiment .Initially , at block 201 , the term - destination matrix is constructed .At block 202 , the term - destination matrix is normalized so that each term vector ( row of the matrix ) is of unit length ( i.e. , by dividing each value by the number of values and its row ) .", "label": "", "metadata": {}, "score": "59.052402"}
{"text": "FIG .13 , is a Graph Node association , but which is understood to be used in conjunction with the present concepts .For each of these types of objects , methods are used to form object hypotheses from whatever simpler objects are present to support it .", "label": "", "metadata": {}, "score": "59.227962"}
{"text": "The present application presents systems and methods which overcome these and other shortcomings of existing pen based systems and methods .INCORPORATION BY REFERENCE .[ 0006 ] U.S. Pat .No .7,036,077 , entitled , \" Method For Gestural Interpretation In A System For Selecting And Arranging Visible Material In Document Images \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "59.27957"}
{"text": "The present application presents systems and methods which overcome these and other shortcomings of existing pen based systems and methods .INCORPORATION BY REFERENCE .[ 0006 ] U.S. Pat .No .7,036,077 , entitled , \" Method For Gestural Interpretation In A System For Selecting And Arranging Visible Material In Document Images \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "59.27957"}
{"text": "The present application presents systems and methods which overcome these and other shortcomings of existing pen based systems and methods .INCORPORATION BY REFERENCE .[ 0006 ] U.S. Pat .No .7,036,077 , entitled , \" Method For Gestural Interpretation In A System For Selecting And Arranging Visible Material In Document Images \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "59.27957"}
{"text": "FIG .14 ) each time a change is made to an existing node - link diagram .Instead , new structure hypotheses generated due to newly added or deleted ink strokes are , if appropriate , grouped with existing structure hypotheses groups or new structure hypotheses groups are formed .", "label": "", "metadata": {}, "score": "59.312782"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .No .5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al .", "label": "", "metadata": {}, "score": "59.31418"}
{"text": "3c .Search is performed for perceptually closed paths formed by Atomic strokes , according to an algorithm known in the field .Each resulting closed path graphic object is added to the hypothesis lattice .3d .All strokes not participating in a closed path graphic object are further processed to discover triples of strokes forming a wedge or arrowhead configuration .", "label": "", "metadata": {}, "score": "59.35424"}
{"text": "Strokes that are not determined to be cursive writing are broken at corners according to means known in the art .Each resulting stroke fragment is considered an Atomic stroke .The set of Atomic stroke fragments created is placed at the front of the stroke interpretation queue .", "label": "", "metadata": {}, "score": "59.35981"}
{"text": "Strokes that are not determined to be cursive writing are broken at corners according to means known in the art .Each resulting stroke fragment is considered an Atomic stroke .The set of Atomic stroke fragments created is placed at the front of the stroke interpretation queue .", "label": "", "metadata": {}, "score": "59.35981"}
{"text": "0197 ] 3 .The score vector and the associated Group nodes are sorted from biggest support - context score to smallest .Because of the score assignment at step 1 , the nodes will be ordered such that higher nodes in the lattice will come strictly after their support nodes .", "label": "", "metadata": {}, "score": "59.364407"}
{"text": "[0157 ] Not shown in FIG .13 , is a Graph Node association , but which is understood to be used in conjunction with the present concepts .[0158 ] For each of these types of objects , methods are used to form object hypotheses from whatever simpler objects are present to support it .", "label": "", "metadata": {}, "score": "59.3898"}
{"text": "[0157 ] Not shown in FIG .13 , is a Graph Node association , but which is understood to be used in conjunction with the present concepts .[0158 ] For each of these types of objects , methods are used to form object hypotheses from whatever simpler objects are present to support it .", "label": "", "metadata": {}, "score": "59.3898"}
{"text": "An optimized search tree is stored into a memory , following the invoking of the non - support constraint , and the optimized search tree is employed in additional processing operations .BRIEF DESCRIPTION OF THE DRAWINGS .[0008 ] FIG .", "label": "", "metadata": {}, "score": "59.442272"}
{"text": "An optimized search tree is stored into a memory , following the invoking of the non - support constraint , and the optimized search tree is employed in additional processing operations .BRIEF DESCRIPTION OF THE DRAWINGS .[0008 ] FIG .", "label": "", "metadata": {}, "score": "59.442272"}
{"text": "4 , set forth is a high - level flow chart 70 illustrating implementation of the present concepts .At step 72 , the GUI module is waiting for an event , such as an input ( e.g. , a stroke ) from the stylus or pen .", "label": "", "metadata": {}, "score": "59.51751"}
{"text": "Under the Inferred Mode protocol , this decision is based on any stroke located under or in the near vicinity of Point p , and the recognized groups that this stroke belongs to .The smarter the Recognition module is , the smarter it will be about identifying sensible sets of strokes the user intends to select when they tap at various locations on the canvas .", "label": "", "metadata": {}, "score": "59.54888"}
{"text": "Under the Inferred Mode protocol , this decision is based on any stroke located under or in the near vicinity of Point p , and the recognized groups that this stroke belongs to .The smarter the Recognition module is , the smarter it will be about identifying sensible sets of strokes the user intends to select when they tap at various locations on the canvas .", "label": "", "metadata": {}, "score": "59.54888"}
{"text": "Under the Inferred Mode protocol , this decision is based on any stroke located under or in the near vicinity of Point p , and the recognized groups that this stroke belongs to .The smarter the Recognition module is , the smarter it will be about identifying sensible sets of strokes the user intends to select when they tap at various locations on the canvas .", "label": "", "metadata": {}, "score": "59.54888"}
{"text": "( iii ) form a lattice of the hypotheses according to their support relations ; .( iv ) apply constraints among the hypotheses ; .( v ) search for hypotheses , under the applied constrains , having collectively high scoring assignments ; and .", "label": "", "metadata": {}, "score": "59.622257"}
{"text": "1 , in that the language knowledge 150 comprising semantic information 170 is fed not only to the NLU 130 , in a conventional manner , but also to the CSR 120 .The linkage 152 between the semantic information 170 and the CSR component 120 is represented by a heavy arrow .", "label": "", "metadata": {}, "score": "59.725822"}
{"text": "[0168 ] Once the appropriate inputs have been made , the process : [ 0169 ] 1 .Forms links among the proximal ends of all PenStrokes .Numerically Scores the degree to which each pair of linked PenStroke ends forms an alignment or a corner .", "label": "", "metadata": {}, "score": "59.769276"}
{"text": "This advantage is paramount for cost - effective real - time applications such as , for example , Nortel 's Personal Voice Dialer ( PVD ) and Voice Activated Business Directory ( VABD ) and Automated Directory Assistance Service Plus ( ADAS+ ) .", "label": "", "metadata": {}, "score": "59.87683"}
{"text": "The huge vocabulary continuous speech recognizer illustrated in .FIG .1 , is further elaborated upon in connection with .FIGS .5 - 7 .The phoneme recognizer denoted with 41 in .FIG .1 is shown in greater detail in .", "label": "", "metadata": {}, "score": "59.876915"}
{"text": "3 is an architectural relationship between the graphical user interface module and the recognition module of the present application ; .FIG .4 sets forth a high - level flow diagram for the operational aspects of the present application ; .", "label": "", "metadata": {}, "score": "59.957672"}
{"text": "Initialize the tree - pointer to the first node .The node pointed to by the tree - pointer is called the \" current - node .\" [ 0213 ] The Main Loop : Process Current Node , Step A2 of steps A1-A3 , is described in conjunction with FIGS .", "label": "", "metadata": {}, "score": "59.990044"}
{"text": "In this case , the system infers what underlying ink the user is likely to be indicating to be deleted , highlights it , and brings up a pop - up button saying , \" Delete ?\" If the user taps on the pop - up button then the material is deleted .", "label": "", "metadata": {}, "score": "60.042614"}
{"text": "The system can also be designed to undertake multiple pre - interpret operations and then process those pre - interpreted strokes as a group , or the system can be arranged so the pre - interpret operation is directly followed by a process operation of the same stroke .", "label": "", "metadata": {}, "score": "60.053894"}
{"text": "That is , of the nodes to which a digit can be a valid transition , none of them have a previous state of node 0 .If the utterance \" CALL \" has been received , an entry will be made as a partial sentence which brings the grammar to node 2 .", "label": "", "metadata": {}, "score": "60.096462"}
{"text": "Sometimes a poorly scoring hypothesis , such as a poorly formed Arrowhead , will turn out to be correct and effectively reinforced by top - down information if it plays a critical role in supporting a CurvilinearContour and thence a GraphLink .", "label": "", "metadata": {}, "score": "60.2147"}
{"text": "Sometimes a poorly scoring hypothesis , such as a poorly formed Arrowhead , will turn out to be correct and effectively reinforced by top - down information if it plays a critical role in supporting a CurvilinearContour and thence a GraphLink .", "label": "", "metadata": {}, "score": "60.2147"}
{"text": "Sometimes a poorly scoring hypothesis , such as a poorly formed Arrowhead , will turn out to be correct and effectively reinforced by top - down information if it plays a critical role in supporting a CurvilinearContour and thence a GraphLink .", "label": "", "metadata": {}, "score": "60.2147"}
{"text": "Sometimes a poorly scoring hypothesis , such as a poorly formed Arrowhead , will turn out to be correct and effectively reinforced by top - down information if it plays a critical role in supporting a CurvilinearContour and thence a GraphLink .", "label": "", "metadata": {}, "score": "60.2147"}
{"text": "That is , a back pointer from node 4 to node 2 shows that there is a sentence fragment corresponding to node 2 .When the second digit is received , it may be applied to node 5 because node 4 was associated with a valid partial sentence as a result of the first digit .", "label": "", "metadata": {}, "score": "60.237755"}
{"text": "When it finds finished strokes there , it removes them from the queue and replaces any obsolete raw strokes with new finished strokes .All raw and finished strokes maintain internal IDs which enable the GUI and Recognizer modules to keep track of them .", "label": "", "metadata": {}, "score": "60.269215"}
{"text": "When true , it informs the Recognition module that the user is selecting multiple objects by sequential tapping , depending on the location of the tap point , and therefore the IDs of already - selected strokes should be included in the list of selected strokes returned by the call .", "label": "", "metadata": {}, "score": "60.276566"}
{"text": "When true , it informs the Recognition module that the user is selecting multiple objects by sequential tapping , depending on the location of the tap point , and therefore the IDs of already - selected strokes should be included in the list of selected strokes returned by the call .", "label": "", "metadata": {}, "score": "60.276566"}
{"text": "When true , it informs the Recognition module that the user is selecting multiple objects by sequential tapping , depending on the location of the tap point , and therefore the IDs of already - selected strokes should be included in the list of selected strokes returned by the call .", "label": "", "metadata": {}, "score": "60.276566"}
{"text": "[ 0060 ] Thereafter , the stroke fragments and/or simple strokes are provided with identification information ( IDs ) and are then placed on the processed strokes queue 112 .Once this information has been placed on the processed strokes queue , the GUI layer 62 moves to step 116 and replaces the raw strokes with the stroke fragments from the processed strokes queue .", "label": "", "metadata": {}, "score": "60.28766"}
{"text": "[ 0060 ] Thereafter , the stroke fragments and/or simple strokes are provided with identification information ( IDs ) and are then placed on the processed strokes queue 112 .Once this information has been placed on the processed strokes queue , the GUI layer 62 moves to step 116 and replaces the raw strokes with the stroke fragments from the processed strokes queue .", "label": "", "metadata": {}, "score": "60.28766"}
{"text": "[ 0060 ] Thereafter , the stroke fragments and/or simple strokes are provided with identification information ( IDs ) and are then placed on the processed strokes queue 112 .Once this information has been placed on the processed strokes queue , the GUI layer 62 moves to step 116 and replaces the raw strokes with the stroke fragments from the processed strokes queue .", "label": "", "metadata": {}, "score": "60.28766"}
{"text": "FIG .2 illustrates an embodiment of how a huge word lexicon can be created , .FIG .3 , illustrates an embodiment of building an acoustic resource , and .FIG .4 illustrates an embodiment of providing a phoneme LM .", "label": "", "metadata": {}, "score": "60.302124"}
{"text": "Each word in the vocabulary has its dedicated acoustic network ; .The search network branches all have zero weight .These simplifying assumptions do not in any way reflect limitations of the proposed optimization and are merely made for the sake of clarity .", "label": "", "metadata": {}, "score": "60.3115"}
{"text": "The String returned is an XML string that needs to be parsed by the GUI for it to know what to do .The XML string contains three kinds of tags : , , and .The command informs the GUI that a new primitive , or atomic object is to be used by both the GUI and Recognition module sides .", "label": "", "metadata": {}, "score": "60.443336"}
{"text": "The information retrieval / call routing engine 3 receives the query vector and , in a conventional manner , accesses the database 4 to generate a list of one or more results which satisfy the query .Accordingly , the information retrieval / call routing engine 3 includes conventional components for performing vector - based call routing and or information retrieval .", "label": "", "metadata": {}, "score": "60.476765"}
{"text": "9 also illustrates another extremely useful feature for systems which have limited computing power .This involves the use of bank - switching of grammars and vocabulary .FIG .9 shows parts of three grammars , G1 , G2 and G3 , which form part of a larger , more complex grammar .", "label": "", "metadata": {}, "score": "60.559925"}
{"text": "5,553,224 , entitled \" Method For Dynamically Maintaining Multiple Structural Interpretations In Graphics System \" , by Saund et al ., all of which are hereby incorporated by reference in their entireties .BRIEF DESCRIPTION .A method and system provides intelligent node - link diagram creation and editing , including an electronic display device having a surface on which a writing and/or drawing canvas is provided .", "label": "", "metadata": {}, "score": "60.729134"}
{"text": "6 , if a digit is uttered the sentence recognizer 14 will try to make that digit correspond with all of nodes 4 , 5 , 6 , 7 , 11 and 12 .If the uttered digit is in the range 2 - 9 , the sentence recognizer 14 will attempt to associate it with node 10 as well .", "label": "", "metadata": {}, "score": "60.751022"}
{"text": "26 is an illustration of how states ( A , B , C ) keep track of node search in a search tree by directing a tree pointer .[ 0034 ] FIG .27 expands on the steps in a processing for the last group node in a node search ; .", "label": "", "metadata": {}, "score": "60.77668"}
{"text": "26 is an illustration of how states ( A , B , C ) keep track of node search in a search tree by directing a tree pointer .[ 0034 ] FIG .27 expands on the steps in a processing for the last group node in a node search ; .", "label": "", "metadata": {}, "score": "60.77668"}
{"text": "26 is an illustration of how states ( A , B , C ) keep track of node search in a search tree by directing a tree pointer .[ 0034 ] FIG .27 expands on the steps in a processing for the last group node in a node search ; .", "label": "", "metadata": {}, "score": "60.77668"}
{"text": "[ 0214 ] Turning to FIG .25 , shown is a Logic diagram of the Main Loop of the Depth - First Optimization under the Nonoverlapping Support Constraint Algorithm 400 .In step 402 , the current node is processed .", "label": "", "metadata": {}, "score": "60.79368"}
{"text": "during the backward pass of the search , the second processing means being operative for detecting backward stop nodes in the modified search network and signaling the search to stop backward scoring along a path currently being followed .The system of . claim 8 , wherein scoring comprises Viterbi scoring .", "label": "", "metadata": {}, "score": "60.808235"}
{"text": "( vii ) a search is made for hypotheses , under the applied constraints , having collectively high scoring assignments ( e.g. , based on an accept / reject value inquiry , hypotheses which have a higher accept value than other competing hypotheses ) , and ; .", "label": "", "metadata": {}, "score": "60.823902"}
{"text": "[ 0248 ] 3e .All strokes not participating in a closed path graphic object are further processed to discover chains of strokes linked end - to - end .These chains are entered as open path graphic objects on the hypothesis lattice .", "label": "", "metadata": {}, "score": "60.88414"}
{"text": "25 sets forth a logic diagram of a main loop for a depth - first search optimization using non - overlapping support constraint algorithms ; .FIG .26 is an illustration of how states ( A , B , C ) keep track of node search in a search tree by directing a tree pointer .", "label": "", "metadata": {}, "score": "60.89756"}
{"text": "[ 0245 ] 3e .All strokes not participating in a closed path graphic object are further processed to discover chains of strokes linked end - to - end .These chains are entered as open path graphic objects on the hypothesis lattice .", "label": "", "metadata": {}, "score": "60.95441"}
{"text": "[ 0245 ] 3e .All strokes not participating in a closed path graphic object are further processed to discover chains of strokes linked end - to - end .These chains are entered as open path graphic objects on the hypothesis lattice .", "label": "", "metadata": {}, "score": "60.95441"}
{"text": "Current UI designs for node - link diagrams such as concept mapping and mind mapping are adaptations of keyboard / mouse software in which graphics are entered by selecting from menus , and text is entered with a keyboard .This approach falls considerably short of what one would expect from an intelligent application that recognizes and assimilates what you are drawing and writing as you draw and write it without your having to perform extraneous user interface commands .", "label": "", "metadata": {}, "score": "60.97825"}
{"text": "This indicates the stroke action is ambiguous to the system as it can not determine if the stroke action is intended to be an inking action ( i.e. , a writing or drawing ) , or a deletion gesture .Therefore , in step 98 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "61.006447"}
{"text": "This indicates the stroke action is ambiguous to the system as it can not determine if the stroke action is intended to be an inking action ( i.e. , a writing or drawing ) , or a deletion gesture .Therefore , in step 98 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "61.006447"}
{"text": "This indicates the stroke action is ambiguous to the system as it can not determine if the stroke action is intended to be an inking action ( i.e. , a writing or drawing ) , or a deletion gesture .Therefore , in step 98 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "61.006447"}
{"text": "No . 687,103 , SPEAKER INDEPENDENT SPEECH RECOGNITION METHOD AND SYSTEM , by George Doddington , et al , filed December 27 , 1984 , abandoned in favor of continuation application Ser .No .224,224 filed July 22 , 1988 abandoned in favor of continuation application Ser .", "label": "", "metadata": {}, "score": "61.060196"}
{"text": "First , it would be desirable for a system to include \" meta - commands \" .These commands are defined to be those which are a valid transition from every state .Examples of such commands would be \" ABORT \" and \" CANCEL \" .", "label": "", "metadata": {}, "score": "61.103195"}
{"text": "The speech recognition system according to . claim 1 , wherein the speech recognition system is based on a lexicon of allowed words comprising more than 200,000 words .The speech recognition system according to . claim 1 , wherein an acoustic phoneme score is assigned to each phoneme .", "label": "", "metadata": {}, "score": "61.147808"}
{"text": "A method as recited in .claim 1 , further comprising applying the query element to the plurality of items to identify one or more items from amongst the plurality of items .A method as recited in . claim 8 , wherein each of the items is a destination in a call routing system .", "label": "", "metadata": {}, "score": "61.153297"}
{"text": "0260 ] 7d .The accepted Graph Structure Nodes and their supporting Molecular objects and Atomic strokes are registered in a data structure recording the logical node - link and support relations among the abstract objects and their supporting strokes .This data structure supports the user selection and editing operations described above .", "label": "", "metadata": {}, "score": "61.282013"}
{"text": "0260 ] 7d .The accepted Graph Structure Nodes and their supporting Molecular objects and Atomic strokes are registered in a data structure recording the logical node - link and support relations among the abstract objects and their supporting strokes .This data structure supports the user selection and editing operations described above .", "label": "", "metadata": {}, "score": "61.282013"}
{"text": "The finished strokes maintain pointers to the original raw \" parent \" stroke that each was derived from .Each finished stroke is assigned a unique ID .The new finished strokes are placed on the processed ( finished ) strokes queue 218 .", "label": "", "metadata": {}, "score": "61.31009"}
{"text": "The finished strokes maintain pointers to the original raw \" parent \" stroke that each was derived from .Each finished stroke is assigned a unique ID .The new finished strokes are placed on the processed ( finished ) strokes queue 218 .", "label": "", "metadata": {}, "score": "61.31009"}
{"text": "The finished strokes maintain pointers to the original raw \" parent \" stroke that each was derived from .Each finished stroke is assigned a unique ID .The new finished strokes are placed on the processed ( finished ) strokes queue 218 .", "label": "", "metadata": {}, "score": "61.31009"}
{"text": "The finished strokes maintain pointers to the original raw \" parent \" stroke that each was derived from .Each finished stroke is assigned a unique ID .The new finished strokes are placed on the processed ( finished ) strokes queue 218 .", "label": "", "metadata": {}, "score": "61.31009"}
{"text": "Likewise , these components may be implemented at least partially in specially - designed hardwired circuitry , such as application specific integrated circuits , programmable logic devices ( PLDs ) ; or the like .Thus , the present invention is not limited to any particular combination of hardware and/or software .", "label": "", "metadata": {}, "score": "61.3164"}
{"text": "RELATED APPLICATIONS .This application is related to U.S. patent application Ser .No . 08/997,824 to Stubley et al .entitled \" Order of matching observations to state models \" , filed Dec. 24 , 1997 ; U.S. patent application Ser .", "label": "", "metadata": {}, "score": "61.37279"}
{"text": "[ 0251 ]Similarly , if an open path object is found to have a \" pointing to \" relation to text type Molecular object or a closed path object , then a Graph Link and Graph Node object are created .", "label": "", "metadata": {}, "score": "61.40709"}
{"text": "Each word entry of the lexicon in addition to a grapheme representation and the phonetic transcription of the word may include the word stem of the word .The lexicon of allowed words is also referred to as the huge word lexicon ( HwLex ) .", "label": "", "metadata": {}, "score": "61.422806"}
{"text": "claim 20 , wherein the plurality of items are items of text data .An apparatus as recited in .claim 20 , wherein the plurality of items are items of audio data .An information retrieval system comprising : . a database ; . an information retrieval engine to identify and retrieve one or more items from the database which satisfy a text - based query ; and . an automatic speech recognizer to generate the query in response to an utterance of a user , the automatic speech recognizer configured to : . generate a plurality of hypotheses for the utterance ; and .", "label": "", "metadata": {}, "score": "61.48028"}
{"text": "[ 0063 ] Flowchart 70 outlines the process of determining whether a stroke is an inking action , a tap action , an encircling action or a scratch - out action , and the operations taken following such a determination .Employing the above process permits a user to create node - link diagrams as intuitively as using a paper or whiteboard , but with the power and functionality of computer applications .", "label": "", "metadata": {}, "score": "61.599545"}
{"text": "[ 0063 ] Flowchart 70 outlines the process of determining whether a stroke is an inking action , a tap action , an encircling action or a scratch - out action , and the operations taken following such a determination .Employing the above process permits a user to create node - link diagrams as intuitively as using a paper or whiteboard , but with the power and functionality of computer applications .", "label": "", "metadata": {}, "score": "61.599545"}
{"text": "[ 0063 ] Flowchart 70 outlines the process of determining whether a stroke is an inking action , a tap action , an encircling action or a scratch - out action , and the operations taken following such a determination .Employing the above process permits a user to create node - link diagrams as intuitively as using a paper or whiteboard , but with the power and functionality of computer applications .", "label": "", "metadata": {}, "score": "61.599545"}
{"text": "The acoustic phonetic knowledge 140 is provided , as is conventional , in the form of Hidden Markov Models ( HMM ) describing the acoustic space .In addition , the search is optimized to take advantage of available semantic information 170 .", "label": "", "metadata": {}, "score": "61.666695"}
{"text": "Although the present invention has been described with reference to specific exemplary embodiments , it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention as set forth in the claims .", "label": "", "metadata": {}, "score": "61.68581"}
{"text": "In speech recognition , confidence measures ( CM ) are used to evaluate reliability of recognition results .A good confidence measure can largely benefit speech recognition systems in many practical applications .In this survey , I summarize most research works related to confidence measures which have ... \" .", "label": "", "metadata": {}, "score": "61.75106"}
{"text": "Methods for determining the grouping of digital ink strokes into words are known in the art and available in the literature .In general , because of the variability of human writing , no hard - and - fast rules can unequivocally form groupings that correspond to human interpretation .", "label": "", "metadata": {}, "score": "61.751995"}
{"text": "Methods for determining the grouping of digital ink strokes into words are known in the art and available in the literature .In general , because of the variability of human writing , no hard - and - fast rules can unequivocally form groupings that correspond to human interpretation .", "label": "", "metadata": {}, "score": "61.751995"}
{"text": "Methods for determining the grouping of digital ink strokes into words are known in the art and available in the literature .In general , because of the variability of human writing , no hard - and - fast rules can unequivocally form groupings that correspond to human interpretation .", "label": "", "metadata": {}, "score": "61.751995"}
{"text": "In the phoneme graph each phoneme has a score representing its probability that it was pronounced once at the time position .Each phoneme graph corresponds to a time - interval .That means , that all paths having the same time interval ( and their scores ) are comparable .", "label": "", "metadata": {}, "score": "61.770138"}
{"text": "Since a substantial gap exists between the word \" CALL \" and the first digit , the shorter sentence hypothesis will result in a much larger error calculation when gap errors are included .Thus , the longer hypothesis will eventually be preferred by the sentence recognizer 14 .", "label": "", "metadata": {}, "score": "61.792015"}
{"text": "[ 0211 ] Turning to FIG .25 , shown is a Logic diagram of the Main Loop of the Depth - First Optimization under the Nonoverlapping Support Constraint Algorithm 400 .In step 402 , the current node is processed .", "label": "", "metadata": {}, "score": "61.811745"}
{"text": "[ 0211 ] Turning to FIG .25 , shown is a Logic diagram of the Main Loop of the Depth - First Optimization under the Nonoverlapping Support Constraint Algorithm 400 .In step 402 , the current node is processed .", "label": "", "metadata": {}, "score": "61.811745"}
{"text": "These are depicted in FIG .3 as solid circles and arrows , respectively .The hollow arrows and circles represent the acoustic networks for the words to be recognized .Each of the branches on an acoustic network is in fact an HMM , with its own collection of branches and nodes .", "label": "", "metadata": {}, "score": "61.865433"}
{"text": "It is to be appreciated in some embodiments the order of items on the selectable list may be determined by the user .For example , the user may be presented with an option of ordering the selectable list from more complex objects to less complex objects , among other orderings .", "label": "", "metadata": {}, "score": "61.8682"}
{"text": "It is to be appreciated in some embodiments the order of items on the selectable list may be determined by the user .For example , the user may be presented with an option of ordering the selectable list from more complex objects to less complex objects , among other orderings .", "label": "", "metadata": {}, "score": "61.8682"}
{"text": "It is to be appreciated in some embodiments the order of items on the selectable list may be determined by the user .For example , the user may be presented with an option of ordering the selectable list from more complex objects to less complex objects , among other orderings .", "label": "", "metadata": {}, "score": "61.8682"}
{"text": "End link data structures are formed representing pairs of stroke ends that are sufficiently near to one another according to a threshold .The degree to which each such end pair forms a corner and the degree to which each such end pair forms a smooth curvilinear alignment are computed and added to the end link data structure .", "label": "", "metadata": {}, "score": "61.971886"}
{"text": "End link data structures are formed representing pairs of stroke ends that are sufficiently near to one another according to a threshold .The degree to which each such end pair forms a corner and the degree to which each such end pair forms a smooth curvilinear alignment are computed and added to the end link data structure .", "label": "", "metadata": {}, "score": "61.971886"}
{"text": "End link data structures are formed representing pairs of stroke ends that are sufficiently near to one another according to a threshold .The degree to which each such end pair forms a corner and the degree to which each such end pair forms a smooth curvilinear alignment are computed and added to the end link data structure .", "label": "", "metadata": {}, "score": "61.971886"}
{"text": "The following discussion focuses on what is known in the art as depth - first search .However , it is to be appreciated other search types may be used including but not limited to \" best - first \" , among others .", "label": "", "metadata": {}, "score": "61.979492"}
{"text": "The following discussion focuses on what is known in the art as depth - first search .However , it is to be appreciated other search types may be used including but not limited to \" best - first \" , among others .", "label": "", "metadata": {}, "score": "61.979492"}
{"text": "The following discussion focuses on what is known in the art as depth - first search .However , it is to be appreciated other search types may be used including but not limited to \" best - first \" , among others .", "label": "", "metadata": {}, "score": "61.979492"}
{"text": "In that case the ( grammar ) syntax info may be used instead of , or in combination with , the phoneme LM .The speech recognition system may e.g. be used as an interface system between a user and a computer system .", "label": "", "metadata": {}, "score": "61.988724"}
{"text": "5 is a screen snapshot of the node - link diagram program of the present application ; . [ 0013 ] FIG .6 provides a summary of the various instructions / operations for the program ( e.g. , ConceptSketch ) of the present application ; .", "label": "", "metadata": {}, "score": "61.994755"}
{"text": "In the same embodiment , both roles are filled for a GraphNode , then the text is enclosed by the ClosedPathObject .In addition , a GraphNode maintains pointers to GraphLinks that are associated with it ( point to it ) .", "label": "", "metadata": {}, "score": "62.039318"}
{"text": "In the same embodiment , both roles are filled for a GraphNode , then the text is enclosed by the ClosedPathObject .In addition , a GraphNode maintains pointers to GraphLinks that are associated with it ( point to it ) .", "label": "", "metadata": {}, "score": "62.039318"}
{"text": "I3 .Initialize a veto - count variable to 0 for each node .I4 .Initialize a current - state value for each node to \" State A \" .I5 .Initialize the tree - pointer to the first node .", "label": "", "metadata": {}, "score": "62.09379"}
{"text": "For each such supporting Molecular object , all Atomic strokes supporting that Molecular object are assigned to it .[0257 ] 7c .All Molecular objects and Atomic strokes that were assigned to an object in the next layer have their support removed from all other hypotheses in the hypothesis graph .", "label": "", "metadata": {}, "score": "62.11358"}
{"text": "For each such supporting Molecular object , all Atomic strokes supporting that Molecular object are assigned to it .[0257 ] 7c .All Molecular objects and Atomic strokes that were assigned to an object in the next layer have their support removed from all other hypotheses in the hypothesis graph .", "label": "", "metadata": {}, "score": "62.11358"}
{"text": "5 .The sound block 40 is first acoustically processed 50 .The acoustic processing 50 extracts the essential information from the sound and outputs an acoustical representation 51 which is inputted into a pattern matching block 52 .The pattern matching block searches for the most probable phoneme sequence of the incoming acoustical representation 51 of the sound .", "label": "", "metadata": {}, "score": "62.29577"}
{"text": "Input : A hierarchical lattice of nodes .At the base of the lattice are Atomic nodes .Above them are Group nodes .Each Group node is \" supported \" by some number of nodes lower in the hierarchy .Each Group node is assigned two scores , an intrinsic score as described above , and a support - context score , described below .", "label": "", "metadata": {}, "score": "62.380592"}
{"text": "FIG .3 , in one embodiment block 305 involves comparing the pseudo - destination vector to each of the N eigenvectors to determine which is the closest , according to a standard dot product measure ( i.e. , cosine score between the vectors ) .", "label": "", "metadata": {}, "score": "62.39804"}
{"text": "Thereafter , the stroke fragments and/or simple strokes are provided with identification information ( IDs ) and are then placed on the processed strokes queue 112 .Once this information has been placed on the processed strokes queue , the GUI layer 62 moves to step 116 and replaces the raw strokes with the stroke fragments from the processed strokes queue .", "label": "", "metadata": {}, "score": "62.415283"}
{"text": "Compute a measure for whether the stroke is cursive writing .This is based on the stroke 's sum squared curvature , length , speed , and optionally other properties .[0232 ] 1c .Strokes that are determined to be cursive writing are considered atomic , of type \" text \" , and are returned to the front of the stroke interpretation queue .", "label": "", "metadata": {}, "score": "62.49829"}
{"text": "Compute a measure for whether the stroke is cursive writing .This is based on the stroke 's sum squared curvature , length , speed , and optionally other properties .[0232 ] 1c .Strokes that are determined to be cursive writing are considered atomic , of type \" text \" , and are returned to the front of the stroke interpretation queue .", "label": "", "metadata": {}, "score": "62.49829"}
{"text": "A call routing system as recited in .claim 37 , wherein the query element includes values representing all of the plurality of hypotheses .A call routing system as recited in .A call routing system as recited in .claim 39 , wherein the confidence measure of each hypothesis is based on a rank of the hypothesis among the plurality of hypotheses .", "label": "", "metadata": {}, "score": "62.5036"}
{"text": "Bank switching of vocabularies and grammars allows a relatively simple system to perform complex tasks , and the implementation of meta - commands allows a user to easily recover from any system errors that do arise .The system is easily implemented using available technology .", "label": "", "metadata": {}, "score": "62.56785"}
{"text": "For each such supporting Molecular object , all Atomic strokes supporting that Molecular object are assigned to it .[0260 ] 7c .All Molecular objects and Atomic strokes that were assigned to an object in the next layer have their support removed from all other hypotheses in the hypothesis graph .", "label": "", "metadata": {}, "score": "62.585808"}
{"text": "A method as recited in .claim 1 , wherein the query element includes values representing a best hypothesis and a hypothesis other than the best hypothesis from the plurality of hypotheses .A method as recited in .claim 1 , wherein the query element includes values representing all of the plurality of hypotheses .", "label": "", "metadata": {}, "score": "62.650757"}
{"text": "290,816 filed December 22 , 1988 .A description of the use of the PFV can be found in Doddington , et al , RECOGNITION OF SPEECH UNDER STRESS AND IN NOISE , Proceedings of the ICASSP , 1986 , number 14.10 , page 733 .", "label": "", "metadata": {}, "score": "62.690956"}
{"text": "FIG .2 illustrates a flow chart of the process of creating a lexicon of allowed word ( HwLex ) .The HwLex can be based on a corpora 1 consisting of written text units ( e.g. data files ) of a huge number of words , as well as corresponding grammar forms of the actual language .", "label": "", "metadata": {}, "score": "62.791183"}
{"text": "This output will form a hypothesis lattice , e.g. , 310 of .FIG .14 .There are a number of techniques available and known in the art for generating hypotheses to determine whether strokes on a canvas are of a particular object form .", "label": "", "metadata": {}, "score": "62.84207"}
{"text": "Similar functionality is available for the encircling and scratch - out actions .[0182 ] Turning to FIG .22 , operations related to the above discussed a selectable list is illustrated by flow diagram 370 .Initially , the user performs a tap operation on an image or part of an image ( such as an atom object ) 370a , causing a selection of a first item on the selectable list 370b .", "label": "", "metadata": {}, "score": "62.919785"}
{"text": "Similar functionality is available for the encircling and scratch - out actions .[0182 ] Turning to FIG .22 , operations related to the above discussed a selectable list is illustrated by flow diagram 370 .Initially , the user performs a tap operation on an image or part of an image ( such as an atom object ) 370a , causing a selection of a first item on the selectable list 370b .", "label": "", "metadata": {}, "score": "62.919785"}
{"text": "[0221 ] Turning now to step A3 of steps A1-A3 , \" Exit : output the best node T / F assignment \" , the algorithm exits when the tree - pointer reaches the top node and its current - state is State C. This occurs when all nodes below it have been explored or pruned .", "label": "", "metadata": {}, "score": "62.924576"}
{"text": "This indicates the encircling action is ambiguous to the system as it can not determine if the encircling action is intended to be an inking action ( i.e. , a writing or drawing ) , or a selection gesture .Therefore , in step 90 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "62.936367"}
{"text": "This indicates the encircling action is ambiguous to the system as it can not determine if the encircling action is intended to be an inking action ( i.e. , a writing or drawing ) , or a selection gesture .Therefore , in step 90 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "62.936367"}
{"text": "This indicates the encircling action is ambiguous to the system as it can not determine if the encircling action is intended to be an inking action ( i.e. , a writing or drawing ) , or a selection gesture .Therefore , in step 90 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "62.936367"}
{"text": "This indicates the encircling action is ambiguous to the system as it can not determine if the encircling action is intended to be an inking action ( i.e. , a writing or drawing ) , or a selection gesture .Therefore , in step 90 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "62.936367"}
{"text": "[ 0175 ] 10 .Forms TextLine and TextColumn hypotheses from TextObjects .[0176 ] 11 .Forms GraphNode hypotheses ( see FIG .20 , 367a True ) from ClosedPathObjects enclosing TextObjects , TextLines , or TextColumns ( See FIG .", "label": "", "metadata": {}, "score": "62.95468"}
{"text": "[ 0175 ] 10 .Forms TextLine and TextColumn hypotheses from TextObjects .[0176 ] 11 .Forms GraphNode hypotheses ( see FIG .20 , 367a True ) from ClosedPathObjects enclosing TextObjects , TextLines , or TextColumns ( See FIG .", "label": "", "metadata": {}, "score": "62.95468"}
{"text": "Similar functionality is available for the encircling and scratch - out actions .[0185 ] Turning to FIG .22 , operations related to the above discussed a selectable list is illustrated by flow diagram 370 .Initially , the user performs a tap operation on an image or part of an image ( such as an atom object ) 370a , causing a selection of a first item on the selectable list 370b .", "label": "", "metadata": {}, "score": "62.972046"}
{"text": "( i ) group related ink strokes to form multiple hypotheses reflecting structured interpretations of the ink strokes , wherein the ink strokes are determined to be related based on similarity characteristics , including but not limited to shape similarity and location proximity ; .", "label": "", "metadata": {}, "score": "63.00656"}
{"text": "( i ) group related ink strokes to form multiple hypotheses reflecting structured interpretations of the ink strokes , wherein the ink strokes are determined to be related based on similarity characteristics , including but not limited to shape similarity and location proximity ; .", "label": "", "metadata": {}, "score": "63.00656"}
{"text": "For example , when \" 7 \" is assigned to node 5d , possible precursor nodes are 4a , 4b , 4c and 4d .These four potential precursors must be examined , and the best selected .In our example , the partial sentence hypothesis 4d , when combined with 5d , yields the best next partial sentence hypothesis .", "label": "", "metadata": {}, "score": "63.02237"}
{"text": "[ 0159 ] GraphLink ( 302 ) : A GraphLink contains two roles , a LinkGraphic and a LinkLabel .The LinkGraphic role must be filled by a CurvilinearConnector .The LinkLabel role may be filled optionally , by a TextObject , TextLine , or TextColumn .", "label": "", "metadata": {}, "score": "63.038345"}
{"text": "This , therefore , is the alternative available when the current node state is found to be \" A \" at step 406 .[ 0218 ] The preceeding are the steps which occur when the current node state is \" B \" .", "label": "", "metadata": {}, "score": "63.045074"}
{"text": "( iii ) form a lattice of the hypotheses according to their support relations ; .( iv ) apply constraints among the hypotheses ; .( v ) search for hypotheses , under the applied constraints , having collectively high scoring assignments ; and .", "label": "", "metadata": {}, "score": "63.055885"}
{"text": "15 ) .[ 0146 ] In general , each complex object will be \" supported \" by one or more simpler objects .Sometimes these simpler objects will fulfill defined roles in the more complex objects ( e.g. , a wedge will act to support a more complex object of an arrowhead ) .", "label": "", "metadata": {}, "score": "63.07682"}
{"text": "[0092 ] The Recognition module removes strokes from the unprocessed stroke queue 214 and breaks the strokes into smaller fragments , which may be called \" finished strokes \" or \" fragmented strokes \" 216 .A multi - scale corner detection algorithm is applied to determine where the breaks should be .", "label": "", "metadata": {}, "score": "63.07733"}
{"text": "[0092 ] The Recognition module removes strokes from the unprocessed stroke queue 214 and breaks the strokes into smaller fragments , which may be called \" finished strokes \" or \" fragmented strokes \" 216 .A multi - scale corner detection algorithm is applied to determine where the breaks should be .", "label": "", "metadata": {}, "score": "63.07733"}
{"text": "[0092 ] The Recognition module removes strokes from the unprocessed stroke queue 214 and breaks the strokes into smaller fragments , which may be called \" finished strokes \" or \" fragmented strokes \" 216 .A multi - scale corner detection algorithm is applied to determine where the breaks should be .", "label": "", "metadata": {}, "score": "63.07733"}
{"text": "BACKGROUND OF THE INVENTION .Call routing systems and information retrieval system are technologies which help users to identify and select one or more items from among a number of similar items .Call routing systems are commonly used by businesses which handle a large volume of incoming telephone calls .", "label": "", "metadata": {}, "score": "63.080616"}
{"text": "0249 ] 5 .Assignment of Confidence Scores .[ 0250 ] 5a .Each Molecular object in the hypothesis graph is given a confidence score , based on how well its Atomic support fits the ideal model for that Molecular object 's type .", "label": "", "metadata": {}, "score": "63.174534"}
{"text": "0249 ] 5 .Assignment of Confidence Scores .[ 0250 ] 5a .Each Molecular object in the hypothesis graph is given a confidence score , based on how well its Atomic support fits the ideal model for that Molecular object 's type .", "label": "", "metadata": {}, "score": "63.174534"}
{"text": "The starting point of the backward pass is the last ( right - most ) network node of the search network .The value at time T is initialized to 0 because it is known for sure that the utterance must end at time T. .", "label": "", "metadata": {}, "score": "63.252274"}
{"text": "IDF involves weighting the value for each term inversely to the number of documents in which the term occurs , as is well - known in the art .At block 204 , the weighted matrix is reduced in dimensionality using SVD .", "label": "", "metadata": {}, "score": "63.26822"}
{"text": "As can be seen , while some of the wedge hypotheses 362a will be True , others will be False 362b .Similar examples of hypotheses are shown in the following FIGS .17 - 21 ) .The True / False determinations are made as part of optimization processing such as accomplished in block 512 of FIG .", "label": "", "metadata": {}, "score": "63.298683"}
{"text": "The database 4 stores the set of destinations , documents , or other types of data ( hereinafter simply \" destinations \" ) that can be searched on and potentially selected by a user .The destinations contained in database 4 may be essentially any type of information , such as text or audio or both .", "label": "", "metadata": {}, "score": "63.304005"}
{"text": "All prefix words originate indirectly from node 0 and merge indirectly at node 5 , so these words may be collapsed into a single acoustic network with a single input and a single output .Similarly , the suffix words may be collapsed into a single acoustic network , since they all originate from node 16 and merge at node 21 .", "label": "", "metadata": {}, "score": "63.343277"}
{"text": "The smarter the recognition module is , the better it will be at recognizing the user 's intent even when they have drawn ambiguous scratch - out gestures .[ 0123 ] The return value is a data structure containing the stroke IDs ( e.g. , an int [ ] array ) .", "label": "", "metadata": {}, "score": "63.35106"}
{"text": "A more complicated utterance would be \" PLACE CALL OUTSIDE NUMBER 543 6789(silence ) \" .As can be seen viewing the graph of FIG .6 , several partial sentence hypotheses will be considered in parallel by the sentence recognizer 14 .", "label": "", "metadata": {}, "score": "63.373238"}
{"text": "CROSS REFERENCE TO RELATED PATENTS AND APPLICATIONS .This application is related to co - pending U.S. patent application Ser .No .11/726,796 , filed on Mar. 23 , 2007 by Saund , entitled \" METHODS AND PROCESSES FOR RECOGNITION OF ELECTRONIC INK STROKES \" ; and co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "63.517826"}
{"text": "I5 .Initialize the tree - pointer to the first node .The node pointed to by the tree - pointer is called the \" current - node .\" [ 0210 ] The Main Loop : Process Current Node , Step A2 of steps A1-A3 , is described in conjunction with FIGS .", "label": "", "metadata": {}, "score": "63.538486"}
{"text": "I5 .Initialize the tree - pointer to the first node .The node pointed to by the tree - pointer is called the \" current - node .\" [ 0210 ] The Main Loop : Process Current Node , Step A2 of steps A1-A3 , is described in conjunction with FIGS .", "label": "", "metadata": {}, "score": "63.538486"}
{"text": "This corresponds to a selection of a best group hypotheses in the diagram of , for example , FIG .15 .[0222 ] With particular attention to FIG .27 , the operations related to and following the processing of the last group node 450 is shown in more detail .", "label": "", "metadata": {}, "score": "63.53859"}
{"text": "14 illustrates the multiple or forest of structure hypotheses which are obtained during the structure recognition process ; .FIG .15 sets forth a successful node - link structure hierarchy obtained by the structure recognition processing ; .FIG .16 illustrates the wedge hypotheses obtained by operation of the present application on a node - link diagram ; .", "label": "", "metadata": {}, "score": "63.538673"}
{"text": "All affected Graph Structure and Molecular objects re - compute their confidence scores .[ 0262 ] 7e .Control returns to 7a until no non - accepted Graph Structure hypothesis nodes remain with a confidence score above a threshold value .", "label": "", "metadata": {}, "score": "63.556683"}
{"text": "0154 ] TextColumn ( 298 ) : A TextColumn is a vertical stacking of TextObjects and/or TextLines .[ 0155 ] Graph Node ( 300 ) : A GraphNode contains two main roles , a Node - Graphic and a Node - Label .", "label": "", "metadata": {}, "score": "63.567257"}
{"text": "0154 ] TextColumn ( 298 ) : A TextColumn is a vertical stacking of TextObjects and/or TextLines .[ 0155 ] Graph Node ( 300 ) : A GraphNode contains two main roles , a Node - Graphic and a Node - Label .", "label": "", "metadata": {}, "score": "63.567257"}
{"text": "The word graph generator denoted with 45 in .FIG .1 is shown in greater detail in .FIG .7 .The word - phoneme graph is inserted into a raw word graph generator 71 , which applies the phoneme LM 36 to score each phoneme of the words of the word - phoneme graph .", "label": "", "metadata": {}, "score": "63.58069"}
{"text": "Employing the above process permits a user to create node - link diagrams as intuitively as using a paper or whiteboard , but with the power and functionality of computer applications .The node - link diagram has been automatically recognized by the system as having four graph nodes and three graph links .", "label": "", "metadata": {}, "score": "63.64643"}
{"text": "[0031 ] FIG .24 is an example of a hierarchical node lattice and representation of support relations in a support table obtained during the structure recognition operations ; . [ 0032 ] FIG .25 sets forth a logic diagram of a main loop for a depth - first search optimization using non - overlapping support constraint algorithms ; .", "label": "", "metadata": {}, "score": "63.67604"}
{"text": "[0031 ] FIG .24 is an example of a hierarchical node lattice and representation of support relations in a support table obtained during the structure recognition operations ; . [ 0032 ] FIG .25 sets forth a logic diagram of a main loop for a depth - first search optimization using non - overlapping support constraint algorithms ; .", "label": "", "metadata": {}, "score": "63.67604"}
{"text": "[0031 ] FIG .24 is an example of a hierarchical node lattice and representation of support relations in a support table obtained during the structure recognition operations ; . [ 0032 ] FIG .25 sets forth a logic diagram of a main loop for a depth - first search optimization using non - overlapping support constraint algorithms ; .", "label": "", "metadata": {}, "score": "63.67604"}
{"text": "This indicates the stroke action is ambiguous to the system as it can not determine if the stroke action is intended to be an inking action ( i.e. , a writing or drawing ) , or a deletion gesture .Therefore , in step , 98 , the system is positioned to collect user actions which will clarify the situation .", "label": "", "metadata": {}, "score": "63.690933"}
{"text": "All affected Graph Structure and Molecular objects re - compute their confidence scores .[ 0259 ] 7e .Control returns to 7a until no non - accepted Graph Structure hypothesis nodes remain with a confidence score above a threshold value .", "label": "", "metadata": {}, "score": "63.7349"}
{"text": "All affected Graph Structure and Molecular objects re - compute their confidence scores .[ 0259 ] 7e .Control returns to 7a until no non - accepted Graph Structure hypothesis nodes remain with a confidence score above a threshold value .", "label": "", "metadata": {}, "score": "63.7349"}
{"text": "15 , illustrated is an accepted hypothesis lattice 330 for the node - link diagram 332 .Only the correct final hypotheses are shown in the structure hierarchy ; the many spurious groupings ( e.g. , as in FIG .14 ) that may have been considered during the recognition process have been deleted .", "label": "", "metadata": {}, "score": "63.735634"}
{"text": "15 , illustrated is an accepted hypothesis lattice 330 for the node - link diagram 332 .Only the correct final hypotheses are shown in the structure hierarchy ; the many spurious groupings ( e.g. , as in FIG .14 ) that may have been considered during the recognition process have been deleted .", "label": "", "metadata": {}, "score": "63.735634"}
{"text": "Results are presented within the context of Colorado University ( CU ) Communicator System ; a telephone - based dialog system for making travel plans by accessing information about flights , hotels and car rentals .improves the performance , it is usually not much better than that of the best feature .", "label": "", "metadata": {}, "score": "63.749996"}
{"text": "( l ) selecting a partial sentence hypothesis to be a best complete sentence hypothesis if a predetermined period elapses wherein no words are hypothesized .The method of claim 6 , further including the step of : .( m ) aborting the best sentence determination if a predetermined period elapses wherein no words are hypothesized .", "label": "", "metadata": {}, "score": "63.757973"}
{"text": "The accepted Graph Structure Nodes and their supporting Molecular objects and Atomic strokes are registered in a data structure recording the logical node - link and support relations among the abstract objects and their supporting strokes .This data structure supports the user selection and editing operations described above .", "label": "", "metadata": {}, "score": "63.802338"}
{"text": "[ 0066 ] 3 .UI Design .[0067 ] The system described herein has the look and feel of a normal whiteboard .The program can be used as a simple walk - up and draw / write device with no formal training .", "label": "", "metadata": {}, "score": "63.820732"}
{"text": "[ 0066 ] 3 .UI Design .[0067 ] The system described herein has the look and feel of a normal whiteboard .The program can be used as a simple walk - up and draw / write device with no formal training .", "label": "", "metadata": {}, "score": "63.820732"}
{"text": "[ 0066 ] 3 .UI Design .[0067 ] The system described herein has the look and feel of a normal whiteboard .The program can be used as a simple walk - up and draw / write device with no formal training .", "label": "", "metadata": {}, "score": "63.820732"}
{"text": "11 sets forth the grouping operation of FIG .10 in greater detail ; . [ 0019 ]FIG .12 sets forth the various methods of the interface between the GUI and Recognizer modules ; .[ 0020 ] FIG .", "label": "", "metadata": {}, "score": "63.90631"}
{"text": "11 sets forth the grouping operation of FIG .10 in greater detail ; . [ 0019 ]FIG .12 sets forth the various methods of the interface between the GUI and Recognizer modules ; .[ 0020 ] FIG .", "label": "", "metadata": {}, "score": "63.90631"}
{"text": "11 sets forth the grouping operation of FIG .10 in greater detail ; . [ 0019 ]FIG .12 sets forth the various methods of the interface between the GUI and Recognizer modules ; .[ 0020 ] FIG .", "label": "", "metadata": {}, "score": "63.90631"}
{"text": "No . 7,136,082 , entitled , \" Method And Apparatus To Convert Digital Ink Images For Use In A Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .No .6,903,751 , entitled \" System And Method For Editing Electronic Images , \" by Saund et al . ; and U.S. Pat .", "label": "", "metadata": {}, "score": "63.97989"}
{"text": "[0143 ] In general , each complex object will be \" supported \" by one or more simpler objects .Sometimes these simpler objects will fulfill defined roles in the more complex objects ( e.g. , a wedge will act to support a more complex object of an arrowhead ) .", "label": "", "metadata": {}, "score": "64.03043"}
{"text": "[0143 ] In general , each complex object will be \" supported \" by one or more simpler objects .Sometimes these simpler objects will fulfill defined roles in the more complex objects ( e.g. , a wedge will act to support a more complex object of an arrowhead ) .", "label": "", "metadata": {}, "score": "64.03043"}
{"text": "To support the recognition for such cases as well , the HwLex can contain ' degraded ' pronunciations of the words .Formally these can be derived from the standard transcription by inserting , deleting or substituting phonemes .The creation of such biased transcriptions can be based either on artificial or more natural methods .", "label": "", "metadata": {}, "score": "64.04593"}
{"text": "if the stroke is determined to be partially compatible with no existing text type Molecular object hypothesis , then a new text type Molecular object hypothesis is formed with that stroke as its only support .II .Follow - on Processing Stage .", "label": "", "metadata": {}, "score": "64.0663"}
{"text": "15 .Once an accepted lattice is formed , the atoms of the lattice are informed about which hypotheses they support .At least some of these hypotheses may be considered to be \" selectables .\" Each atom will keep a list of selectables , which may be considered selectable group hypotheses ( for example , an ink stroke atom may support a hypotheses of an Arrowhead , where the Arrowhead may be an item capable of being selected by a user ) .", "label": "", "metadata": {}, "score": "64.06661"}
{"text": "14 illustrates the multiple or forest of structure hypotheses which are obtained during the structure recognition process ; .[ 0022 ] FIG .15 sets forth a successful node - link structure hierarchy obtained by the structure recognition processing ; .", "label": "", "metadata": {}, "score": "64.216125"}
{"text": "14 illustrates the multiple or forest of structure hypotheses which are obtained during the structure recognition process ; .[ 0022 ] FIG .15 sets forth a successful node - link structure hierarchy obtained by the structure recognition processing ; .", "label": "", "metadata": {}, "score": "64.216125"}
{"text": "14 illustrates the multiple or forest of structure hypotheses which are obtained during the structure recognition process ; .[ 0022 ] FIG .15 sets forth a successful node - link structure hierarchy obtained by the structure recognition processing ; .", "label": "", "metadata": {}, "score": "64.216125"}
{"text": "Normally m is greater than n ( n being the average number of phonemes in a word ) , so the model jumps over words .Therefore a space between words is also to be modeled as a special phoneme .The phoneme LM also has information about the non - seen words due to word - parts have been seen .", "label": "", "metadata": {}, "score": "64.31569"}
{"text": "Turning attention to .FIG .1 , illustrated is an environment or system 10 within which the concepts of the present methods or systems may be implemented .An electronic display 12 is in operative communication with a computing device 14 .", "label": "", "metadata": {}, "score": "64.317276"}
{"text": "In concept mapping nodes are defined as the representation of data that represent a concept , item or question .Nodes can have a wide number of non - exclusive attributes to represent the data , such as labels , colors , or shapes , among others .", "label": "", "metadata": {}, "score": "64.324326"}
{"text": "In concept mapping nodes are defined as the representation of data that represent a concept , item or question .Nodes can have a wide number of non - exclusive attributes to represent the data , such as labels , colors , or shapes , among others .", "label": "", "metadata": {}, "score": "64.324326"}
{"text": "In concept mapping nodes are defined as the representation of data that represent a concept , item or question .Nodes can have a wide number of non - exclusive attributes to represent the data , such as labels , colors , or shapes , among others .", "label": "", "metadata": {}, "score": "64.324326"}
{"text": "In concept mapping nodes are defined as the representation of data that represent a concept , item or question .Nodes can have a wide number of non - exclusive attributes to represent the data , such as labels , colors , or shapes , among others .", "label": "", "metadata": {}, "score": "64.324326"}
{"text": "12 .These are all methods to be implemented by any Recognition module .These methods are called by the GUI .Some of the methods return values , others operate by side effect ( like removing and placing strokes on queues ) .", "label": "", "metadata": {}, "score": "64.383194"}
{"text": "12 .These are all methods to be implemented by any Recognition module .These methods are called by the GUI .Some of the methods return values , others operate by side effect ( like removing and placing strokes on queues ) .", "label": "", "metadata": {}, "score": "64.383194"}
{"text": "12 .These are all methods to be implemented by any Recognition module .These methods are called by the GUI .Some of the methods return values , others operate by side effect ( like removing and placing strokes on queues ) .", "label": "", "metadata": {}, "score": "64.383194"}
{"text": "The acoustic processor 26 and the acoustic resource trainer 27 may optionally consult an actual acoustic resource 28 .The acoustic resource trainer 27 iteratively updates the previously trained acoustic resource 28 .But in lack of appropriate initial acoustic resource 28 , it starts from scratch .", "label": "", "metadata": {}, "score": "64.42612"}
{"text": "The rules for grouping must be tolerant to variability and noise , and many hypotheses for complex objects are constructed .This form a lattice 310 .Then , an optimization procedure operates to select the combination of hypotheses that achieves collectively a best score , and obeys certain constraints to select a subset of the hypothesis lattice ( e.g. , 330 of FIG .", "label": "", "metadata": {}, "score": "64.45467"}
{"text": "The rules for grouping must be tolerant to variability and noise , and many hypotheses for complex objects are constructed .This form a lattice 310 .Then , an optimization procedure operates to select the combination of hypotheses that achieves collectively a best score , and obeys certain constraints to select a subset of the hypothesis lattice ( e.g. , 330 of FIG .", "label": "", "metadata": {}, "score": "64.45467"}
{"text": "Because of the score assignment at step 1 , the nodes will be ordered such that higher nodes in the lattice will come strictly after their support nodes .A support - table , such as table 390 of .FIG .", "label": "", "metadata": {}, "score": "64.458626"}
{"text": "preInterpretStrokesInInputStrokeQueue ( ) ; .The Recognition module implements a message passing method called preInterpretStrokesInInputStrokeQueue ( ) ; This may be called deliberately by the GUI , or it may be invoked automatically through a scheduler .The Recognition module pre - interpretation process removes strokes from the raw - strokes - queue and places strokes on the processed ( finished ) strokes queue .", "label": "", "metadata": {}, "score": "64.464294"}
{"text": "re are many ways to define a confidence measure .Some other works use a post classifier to combine features such as likelihood and other statistics gathered from the decoding process ( e.g. the number of letters in word ... . by Jonas L\u00f6\u00f6f , Christian Gollan , Hermann Ney - IN : PROC .", "label": "", "metadata": {}, "score": "64.50917"}
{"text": "Breaks up TextObject hypotheses based on enclosure by ClosedPathObjects .[0173 ] 8 .Removes TextObject hypotheses that are redundant with each other or with any other graphic object , based on having common support .[0174 ] 9 .", "label": "", "metadata": {}, "score": "64.53806"}
{"text": "Breaks up TextObject hypotheses based on enclosure by ClosedPathObjects .[0173 ] 8 .Removes TextObject hypotheses that are redundant with each other or with any other graphic object , based on having common support .[0174 ] 9 .", "label": "", "metadata": {}, "score": "64.53806"}
{"text": "In step 78 , an initial decision is made as to whether the stroke is definitely an inking action ( i.e. , intended to be writing or drawing ) .If the process determines the stroke is definitely an inking action , the processing proceeds to step 80 where the stroke is placed on the unprocessed raw stroke queue ( e.g. , 64 b of .", "label": "", "metadata": {}, "score": "64.54251"}
{"text": "13 .More particularly , the ontology of graphical and textual objects are built from atoms to molecules , to Graph Nodes and Graph Links of Node - Link Diagrams ( as will be seen in more detail in FIGS .14 and 15 ) .", "label": "", "metadata": {}, "score": "64.5503"}
{"text": "13 .More particularly , the ontology of graphical and textual objects are built from atoms to molecules , to Graph Nodes and Graph Links of Node - Link Diagrams ( as will be seen in more detail in FIGS .14 and 15 ) .", "label": "", "metadata": {}, "score": "64.5503"}
{"text": "13 .More particularly , the ontology of graphical and textual objects are built from atoms to molecules , to Graph Nodes and Graph Links of Node - Link Diagrams ( as will be seen in more detail in FIGS .14 and 15 ) .", "label": "", "metadata": {}, "score": "64.5503"}
{"text": "The novel features which characterize the present invention are defined by the claims .The foregoing and other objects and advantages of the present invention will hereafter appear , and for purposes of illustration , but not of limitation , a preferred embodiment is shown in the accompanying drawings .", "label": "", "metadata": {}, "score": "64.56508"}
{"text": "[ 0248 ] Similarly , if an open path object is found to have a \" pointing to \" relation to text type Molecular object or a closed path object , then a Graph Link and Graph Node object are created .", "label": "", "metadata": {}, "score": "64.64003"}
{"text": "[ 0248 ] Similarly , if an open path object is found to have a \" pointing to \" relation to text type Molecular object or a closed path object , then a Graph Link and Graph Node object are created .", "label": "", "metadata": {}, "score": "64.64003"}
{"text": "When it is found to be \" very compatible \" the process moves to add the stroke to the existing Text Object hypothesis 234 , and it is then added to a list 236 ( or 224 of FIG .10 ) .", "label": "", "metadata": {}, "score": "64.73837"}
{"text": "When it is found to be \" very compatible \" the process moves to add the stroke to the existing Text Object hypothesis 234 , and it is then added to a list 236 ( or 224 of FIG .10 ) .", "label": "", "metadata": {}, "score": "64.73837"}
{"text": "When it is found to be \" very compatible \" the process moves to add the stroke to the existing Text Object hypothesis 234 , and it is then added to a list 236 ( or 224 of FIG .10 ) .", "label": "", "metadata": {}, "score": "64.73837"}
{"text": "0170 ] 2 .Forms Wedge hypotheses ( See FIG .16 , where some , but not all , wedge hypotheses identified by the process are illustrated .More particularly , the system interprets the node - link diagram 360 of FIG .", "label": "", "metadata": {}, "score": "64.77151"}
{"text": "Once the appropriate inputs have been made , the process : .Forms links among the proximal ends of all PenStrokes .Numerically Scores the degree to which each pair of linked PenStroke ends forms an alignment or a corner .Forms Wedge hypotheses ( See .", "label": "", "metadata": {}, "score": "64.77576"}
{"text": "This application is a continuation of application Ser .No . 856,534 filed Apr. 25 , 1986 , now abandoned .A microfiche appendix containing computer program listings and consisting of a single microfiche having 10 frames is submitted as part of the disclosure .", "label": "", "metadata": {}, "score": "64.821365"}
{"text": "5 is a screen snapshot of the node - link diagram program of the present application ; .FIG .6 provides a summary of the various instructions / operations for the program ( e.g. , ConceptSketch ) of the present application ; .", "label": "", "metadata": {}, "score": "64.88715"}
{"text": "A method as recited in . claim 13 , further comprising weighting each of the values in the query element based on a confidence measure of the word corresponding to said value .A method as recited in . claim 13 , further comprising applying the query element to the plurality of items to identify one or more items from amongst the plurality of items .", "label": "", "metadata": {}, "score": "64.89181"}
{"text": "[ 0107 ] The GUI module continually tests for finished strokes on the processed ( finished ) strokes queue .When it finds finished strokes there , it removes them from the queue and replaces any obsolete raw strokes with new finished strokes .", "label": "", "metadata": {}, "score": "64.98572"}
{"text": "[ 0107 ] The GUI module continually tests for finished strokes on the processed ( finished ) strokes queue .When it finds finished strokes there , it removes them from the queue and replaces any obsolete raw strokes with new finished strokes .", "label": "", "metadata": {}, "score": "64.98572"}
{"text": "\" If tapped on , the GUI will then pass these stroke IDs to the Recognizer as arguments to the deleteStrokes method .[0124 ] Formalization ( 262 ) : public String formalizeObjects(int [ ] stroke - ids ) ; . [", "label": "", "metadata": {}, "score": "65.00125"}
{"text": "7,139,004 , entitled , \" Method And Apparatus To Convert Bitmapped Images For Use In Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .No . 7,136,082 , entitled , \" Method And Apparatus To Convert Digital Ink Images For Use In A Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "65.01439"}
{"text": "7,139,004 , entitled , \" Method And Apparatus To Convert Bitmapped Images For Use In Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .No . 7,136,082 , entitled , \" Method And Apparatus To Convert Digital Ink Images For Use In A Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "65.01439"}
{"text": "7,139,004 , entitled , \" Method And Apparatus To Convert Bitmapped Images For Use In Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .No . 7,136,082 , entitled , \" Method And Apparatus To Convert Digital Ink Images For Use In A Structured Text / Graphics Editor \" , by Saund et al . ; U.S. Pat .", "label": "", "metadata": {}, "score": "65.01439"}
{"text": "If that is the case , then it may be more efficient to revert to the true N - best search .Another point to mention is that constrained window Viterbi scoring can only be used to a limited extent with the proposed optimizations .", "label": "", "metadata": {}, "score": "65.021545"}
{"text": "A call routing system as recited in .claim 37 , wherein the information retrieval engine uses the query to retrieve audio data satisfying the query from the database .Descripci\u00f3n .FIELD OF THE INVENTION .The present invention pertains to speech - responsive call routing and information retrieval systems .", "label": "", "metadata": {}, "score": "65.02821"}
{"text": "7 is a detailed diagram of a portion of FIG .6 ; .FIG .8 is a portion of a state diagram used in grammar definition illustrating transitional states ; .FIG .9 is a state diagram illustrating the use of multiple grammar subsets ; and .", "label": "", "metadata": {}, "score": "65.08743"}
{"text": "Pattern Analysis and Machine Intelligence , V. 25 , No . 4 , April 2003 , pp .475 - 491 .Wedges and Arrowheads are scored on heuristic criteria based on the geometry of their respective parts .Other score setting schemes are known and can be used in conjunction with the concepts of the present application .", "label": "", "metadata": {}, "score": "65.13826"}
{"text": "Pattern Analysis and Machine Intelligence , V. 25 , No . 4 , April 2003 , pp .475 - 491 .Wedges and Arrowheads are scored on heuristic criteria based on the geometry of their respective parts .Other score setting schemes are known and can be used in conjunction with the concepts of the present application .", "label": "", "metadata": {}, "score": "65.13826"}
{"text": "Pattern Analysis and Machine Intelligence , V. 25 , No . 4 , April 2003 , pp .475 - 491 .Wedges and Arrowheads are scored on heuristic criteria based on the geometry of their respective parts .Other score setting schemes are known and can be used in conjunction with the concepts of the present application .", "label": "", "metadata": {}, "score": "65.13826"}
{"text": "Pattern Analysis and Machine Intelligence , V. 25 , No . 4 , April 2003 , pp .475 - 491 .Wedges and Arrowheads are scored on heuristic criteria based on the geometry of their respective parts .Other score setting schemes are known and can be used in conjunction with the concepts of the present application .", "label": "", "metadata": {}, "score": "65.13826"}
{"text": "[0054 ]In step 78 , an initial decision is made as to whether the stroke is definitely an inking action ( i.e. , intended to be writing or drawing ) .[ 0055 ] If the process determines the stroke is definitely an inking action , the processing proceeds to step 80 where the stroke is placed on the unprocessed raw stroke queue ( e.g. , 64b of FIG .", "label": "", "metadata": {}, "score": "65.265785"}
{"text": "[0054 ]In step 78 , an initial decision is made as to whether the stroke is definitely an inking action ( i.e. , intended to be writing or drawing ) .[ 0055 ] If the process determines the stroke is definitely an inking action , the processing proceeds to step 80 where the stroke is placed on the unprocessed raw stroke queue ( e.g. , 64b of FIG .", "label": "", "metadata": {}, "score": "65.265785"}
{"text": "[0054 ]In step 78 , an initial decision is made as to whether the stroke is definitely an inking action ( i.e. , intended to be writing or drawing ) .[ 0055 ] If the process determines the stroke is definitely an inking action , the processing proceeds to step 80 where the stroke is placed on the unprocessed raw stroke queue ( e.g. , 64b of FIG .", "label": "", "metadata": {}, "score": "65.265785"}
{"text": "Generally the phoneme LM incorporates the morphologic information both within word and between words , and as a consequence of this , when applying the phoneme LM for hypothesis selection , the phoneme LM prefers the morphologically right word sequences .Additionally m must be greater then the longest word in the huge word lexicon , in order to have at least word bigram history for all words in HwLex .", "label": "", "metadata": {}, "score": "65.28387"}
{"text": "Examples of concept mapping software include MindJet from Mind Jet Corporation , SMART Ideas from SMART Technologies Inc. , and FreeMind an Open Source mind mapping program written in Java , among others .[ 0005 ] Current UI designs for node - link diagrams such as concept mapping and mind mapping are adaptations of keyboard / mouse software in which graphics are entered by selecting from menus , and text is entered with a keyboard .", "label": "", "metadata": {}, "score": "65.304665"}
{"text": "Examples of concept mapping software include MindJet from Mind Jet Corporation , SMART Ideas from SMART Technologies Inc. , and FreeMind an Open Source mind mapping program written in Java , among others .[ 0005 ] Current UI designs for node - link diagrams such as concept mapping and mind mapping are adaptations of keyboard / mouse software in which graphics are entered by selecting from menus , and text is entered with a keyboard .", "label": "", "metadata": {}, "score": "65.304665"}
{"text": "Examples of concept mapping software include MindJet from Mind Jet Corporation , SMART Ideas from SMART Technologies Inc. , and FreeMind an Open Source mind mapping program written in Java , among others .[ 0005 ] Current UI designs for node - link diagrams such as concept mapping and mind mapping are adaptations of keyboard / mouse software in which graphics are entered by selecting from menus , and text is entered with a keyboard .", "label": "", "metadata": {}, "score": "65.304665"}
{"text": "FIG .3 is an architectural relationship between the graphical user interface module and the recognition module of the present application ; .[ 0011 ] FIG .4 sets forth a high - level flow diagram for the operational aspects of the present application ; . [ 0012 ]", "label": "", "metadata": {}, "score": "65.34719"}
{"text": "0058 ] When an action is determined to be an ink stroke at step 80 , the process places the stroke -- identified as inking actions -- on the unprocessed ( raw ) strokes queue .In step 104 a pre - interpret or process command is sent to the recognizer module to perform \" pre - interpret \" and/or \" process \" operations on the strokes in the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "65.3988"}
{"text": "0058 ] When an action is determined to be an ink stroke at step 80 , the process places the stroke -- identified as inking actions -- on the unprocessed ( raw ) strokes queue .In step 104 a pre - interpret or process command is sent to the recognizer module to perform \" pre - interpret \" and/or \" process \" operations on the strokes in the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "65.3988"}
{"text": "0058 ] When an action is determined to be an ink stroke at step 80 , the process places the stroke -- identified as inking actions -- on the unprocessed ( raw ) strokes queue .In step 104 a pre - interpret or process command is sent to the recognizer module to perform \" pre - interpret \" and/or \" process \" operations on the strokes in the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "65.3988"}
{"text": "Moreover , I will discuss capabilities and limitations of the current CM techniques and generally comment on today\u00d5s CM approaches .Based on the discussion , I will conclude the paper with some clues for future works . \" ...In this paper , we introduce a new concept , the time frame error rate .", "label": "", "metadata": {}, "score": "65.41826"}
{"text": "Also , the electronic display 12 may be associated with or integrated into any one of these devices , as well as an electronic whiteboard system , which is a commonly used example in the following discussion .The foregoing described components and systems are not intended to be limiting to the present discussion , but rather are examples of environments in which the concepts of the present application may be employed .", "label": "", "metadata": {}, "score": "65.4439"}
{"text": "Also , the electronic display 12 may be associated with or integrated into any one of these devices , as well as an electronic whiteboard system , which is a commonly used example in the following discussion .The foregoing described components and systems are not intended to be limiting to the present discussion , but rather are examples of environments in which the concepts of the present application may be employed .", "label": "", "metadata": {}, "score": "65.4439"}
{"text": "Also , the electronic display 12 may be associated with or integrated into any one of these devices , as well as an electronic whiteboard system , which is a commonly used example in the following discussion .The foregoing described components and systems are not intended to be limiting to the present discussion , but rather are examples of environments in which the concepts of the present application may be employed .", "label": "", "metadata": {}, "score": "65.4439"}
{"text": "Also , the electronic display 12 may be associated with or integrated into any one of these devices , as well as an electronic whiteboard system , which is a commonly used example in the following discussion .The foregoing described components and systems are not intended to be limiting to the present discussion , but rather are examples of environments in which the concepts of the present application may be employed .", "label": "", "metadata": {}, "score": "65.4439"}
{"text": "0201 ]A1 .Initialize node variables .[ 0202 ]A2 .Main Loop : Process Current Node until . . .[0203 ]A3 .Exit : output best node T / F assignment .[ 0204 ] The initialization steps of A1 include : [ 0205 ] I1 .", "label": "", "metadata": {}, "score": "65.47215"}
{"text": "0201 ]A1 .Initialize node variables .[ 0202 ]A2 .Main Loop : Process Current Node until . . .[0203 ]A3 .Exit : output best node T / F assignment .[ 0204 ] The initialization steps of A1 include : [ 0205 ] I1 .", "label": "", "metadata": {}, "score": "65.47215"}
{"text": "At this point , the process again returns to the initial processing of a current node 402 .As previously mentioned , .FIG .26 is an illustration of a segment of a search tree ( or a very simplistic overall search tree ) , which is generated by operation of the search concepts being described herein .", "label": "", "metadata": {}, "score": "65.497795"}
{"text": "3 illustrates a flow chart of training an acoustic resource .The acoustic resource represents the acoustic properties of the phonemes used for the recognition .It consists of the acoustic models of the phonemes of the actual language .The acoustic resource is based on inputted training material 20 .", "label": "", "metadata": {}, "score": "65.541824"}
{"text": "The method according to . claim 9 , wherein the node - link diagram is a concept map .The method according to . claim 9 , wherein the GUI and Recognition modules operate asynchronously with respect to each other .The method according to . claim 9 , wherein the intelligent editing includes intelligent selection by use of tapping actions , encircling actions and scratchout actions .", "label": "", "metadata": {}, "score": "65.54416"}
{"text": "0190 ] Input : A hierarchical lattice of nodes .At the base of the lattice are Atomic nodes .Above them are Group nodes .Each Group node is \" supported \" by some number of nodes lower in the hierarchy .", "label": "", "metadata": {}, "score": "65.56412"}
{"text": "0190 ] Input : A hierarchical lattice of nodes .At the base of the lattice are Atomic nodes .Above them are Group nodes .Each Group node is \" supported \" by some number of nodes lower in the hierarchy .", "label": "", "metadata": {}, "score": "65.56412"}
{"text": "All strokes not participating in a closed path graphic object are further processed to discover chains of strokes linked end - to - end .These chains are entered as open path graphic objects on the hypothesis lattice .Creation of Graph or Node - Link Structure nodes . 4a .", "label": "", "metadata": {}, "score": "65.64455"}
{"text": "For each text type Molecular hypothesis , the stroke 's location , length , shape , and other properties are evaluated to determine an action to take : . if the stroke is fully compatible with the Text Object Molecular object hypothesis , then the stroke is added to the support of that Molecular object .", "label": "", "metadata": {}, "score": "65.7478"}
{"text": "Creation of Graph or Node - Link Structure Nodes .[ 0247 ] 4a .Sets of Molecular objects in the hypothesis lattice meeting the requirements of Graph Node and Graph Link objects defined above are found by exhaustive searching over pairs of Molecular objects that are of appropriate type and appropriate spatial proximity to one another .", "label": "", "metadata": {}, "score": "65.83439"}
{"text": "Creation of Graph or Node - Link Structure Nodes .[ 0247 ] 4a .Sets of Molecular objects in the hypothesis lattice meeting the requirements of Graph Node and Graph Link objects defined above are found by exhaustive searching over pairs of Molecular objects that are of appropriate type and appropriate spatial proximity to one another .", "label": "", "metadata": {}, "score": "65.83439"}
{"text": "Alternatively , a time limit for hypotheses generation may be included .These are just two of any number of hypotheses restrictions which could be included in the present system .[0097 ] FIG .11 illustrates in more detail the grouping of strokes with Text Object hypotheses , as introduced in block 222 of FIG .", "label": "", "metadata": {}, "score": "65.93332"}
{"text": "Alternatively , a time limit for hypotheses generation may be included .These are just two of any number of hypotheses restrictions which could be included in the present system .[0097 ] FIG .11 illustrates in more detail the grouping of strokes with Text Object hypotheses , as introduced in block 222 of FIG .", "label": "", "metadata": {}, "score": "65.93332"}
{"text": "Alternatively , a time limit for hypotheses generation may be included .These are just two of any number of hypotheses restrictions which could be included in the present system .[0097 ] FIG .11 illustrates in more detail the grouping of strokes with Text Object hypotheses , as introduced in block 222 of FIG .", "label": "", "metadata": {}, "score": "65.93332"}
{"text": "Control returns to 7a until no non - accepted Graph Structure hypothesis nodes remain with a confidence score above a threshold value .7d .The accepted Graph Structure Nodes and their supporting Molecular objects and Atomic strokes are registered in a data structure recording the logical node - link and support relations among the abstract objects and their supporting strokes .", "label": "", "metadata": {}, "score": "66.03405"}
{"text": "A huge number of words may be handled , since the phonemic language model uses the phoneme as the basic unit .The system therefore only needs to deal with language modeling on the phonemic level and not on the word level .", "label": "", "metadata": {}, "score": "66.06914"}
{"text": "[ 0072 ] When the user performs a scratch - out entry over existing markings , it is ambiguous as to whether they intend to delete the underlying markings versus enter digital ink showing cross - out .In this case , the system infers what underlying ink the user is likely to be indicating to be deleted , highlights it , and brings up a pop - up button saying , \" Delete ?", "label": "", "metadata": {}, "score": "66.0931"}
{"text": "[ 0072 ] When the user performs a scratch - out entry over existing markings , it is ambiguous as to whether they intend to delete the underlying markings versus enter digital ink showing cross - out .In this case , the system infers what underlying ink the user is likely to be indicating to be deleted , highlights it , and brings up a pop - up button saying , \" Delete ?", "label": "", "metadata": {}, "score": "66.0931"}
{"text": "[ 0072 ] When the user performs a scratch - out entry over existing markings , it is ambiguous as to whether they intend to delete the underlying markings versus enter digital ink showing cross - out .In this case , the system infers what underlying ink the user is likely to be indicating to be deleted , highlights it , and brings up a pop - up button saying , \" Delete ?", "label": "", "metadata": {}, "score": "66.0931"}
{"text": "Formal interface 64d provides a path for interaction between the two modules .The handwriting recognizer , in one embodiment may be handwriting software from Microsoft Corporation , such as may be used in its TabletPC operating systems .[0053 ] Turning now to FIG .", "label": "", "metadata": {}, "score": "66.1587"}
{"text": "Formal interface 64d provides a path for interaction between the two modules .The handwriting recognizer , in one embodiment may be handwriting software from Microsoft Corporation , such as may be used in its TabletPC operating systems .[0053 ] Turning now to FIG .", "label": "", "metadata": {}, "score": "66.1587"}
{"text": "Formal interface 64d provides a path for interaction between the two modules .The handwriting recognizer , in one embodiment may be handwriting software from Microsoft Corporation , such as may be used in its TabletPC operating systems .[0053 ] Turning now to FIG .", "label": "", "metadata": {}, "score": "66.1587"}
{"text": "FIG .3 illustrates the run - time process of the system , according to one embodiment .Initially , an utterance ( a request ) is received from the user at block 301 .The utterance is endpointed at block 302 , and then recognized by the ASR subsystem 2 at block 303 .", "label": "", "metadata": {}, "score": "66.227234"}
{"text": "The method according to claim 9 , wherein the tree search is a best - first tree search .The method according to claim 9 , wherein the non - overlapping support constraint requires that any one node or branch must support at most one other accepted node or branch of the search tree which has been selected by the tree search process .", "label": "", "metadata": {}, "score": "66.25952"}
{"text": "The method according to claim 9 , wherein the tree search is a best - first tree search .The method according to claim 9 , wherein the non - overlapping support constraint requires that any one node or branch must support at most one other accepted node or branch of the search tree which has been selected by the tree search process .", "label": "", "metadata": {}, "score": "66.25952"}
{"text": "First , descriptions of digital ink strokes are passed back and forth via buffers , or stroke queues .Second , selection and command operations are communicated via a defined interface .For efficiency , during operation selection and command operations do not pass digital ink strokes .", "label": "", "metadata": {}, "score": "66.2763"}
{"text": "Rather , the scope of the present invention is limited only by the accompanying claims .Certain specific details of the disclosed embodiment are set forth for purposes of explanation rather than limitation , so as to provide a clear and thorough understanding of the present invention .", "label": "", "metadata": {}, "score": "66.29102"}
{"text": "27 expands on the steps in a processing for the last group node in a node search ; .FIG .28 sets out a more detailed flow diagram for the veto - conflicting - support - node operation in the structured recognition operations ; .", "label": "", "metadata": {}, "score": "66.380356"}
{"text": "BRIEF DESCRIPTION OF THE DRAWINGS .FIG .1 illustrates the concepts of the present application within a stylus / pen computing environment ; .FIG .2 provides a high - level view of the processes used to initiate the concepts of the present application ; .", "label": "", "metadata": {}, "score": "66.39264"}
{"text": "The GUI process selectively queries the processed strokes queue .If any processed strokes are present , then it removes these strokes ' parent raw strokes from the canvas and replaces it with the processed smaller finished strokes .After this cycle , the GUI module and Recognition module each have identical copies of finished ( processed ) strokes and their associated shared IDs .", "label": "", "metadata": {}, "score": "66.41145"}
{"text": "A flow chart of the processing sequence of generating phoneme LM is shown in .FIG .4 .The phoneme LM is like the HwLex based on a corpora 1 consisting of written text units , and as described in connection with the HwLex creation , a preprocessing 31 of the corpora is done in order to avoid non - word forms .", "label": "", "metadata": {}, "score": "66.45615"}
{"text": "Initialize node variables .[0205 ] A2 .Main Loop : Process Current Node until . . . .[0206 ]A3 .Exit : output best node T / F assignment .[ 0207 ] The initialization steps of A1 include : [ 0208 ] I1 .", "label": "", "metadata": {}, "score": "66.48673"}
{"text": "[0008 ] FIG .1 illustrates the concepts of the present application within a stylus / pen computing environment ; .[0009 ] FIG .2 provides a high - level view of the processes used to initiate the concepts of the present application ; . [", "label": "", "metadata": {}, "score": "66.49823"}
{"text": "The core is also the left - most set of non - semantically - null words , since it is connected to the prefix ( a collapsed network ) and no other salient words occur before the suffix .So in this case , the same nodes , 7 , 8 , 9 , 10 and 11 , are also backward stop nodes .", "label": "", "metadata": {}, "score": "66.50078"}
{"text": "The method of claim 8 , wherein searching to apply the \" accept / reject \" type values includes forcing one of a true or false state to at least one of the hypotheses .The method of claim 1 , wherein the digital ink strokes are one of ( i ) strokes of the node - link diagram , or ( ii ) strokes that are not part of the node - link diagram .", "label": "", "metadata": {}, "score": "66.50876"}
{"text": "All menus are local and context sensitive .But failure of recognition does not prevent the user from selecting material they want to operate on by employing more deliberate encircling and tap selection of precisely the ink strokes they intend .Thus this UI design is resilient with respect to the recognizer 's capabilities while putting the user always in control .", "label": "", "metadata": {}, "score": "66.531425"}
{"text": "All menus are local and context sensitive .But failure of recognition does not prevent the user from selecting material they want to operate on by employing more deliberate encircling and tap selection of precisely the ink strokes they intend .Thus this UI design is resilient with respect to the recognizer 's capabilities while putting the user always in control .", "label": "", "metadata": {}, "score": "66.531425"}
{"text": "All menus are local and context sensitive .But failure of recognition does not prevent the user from selecting material they want to operate on by employing more deliberate encircling and tap selection of precisely the ink strokes they intend .Thus this UI design is resilient with respect to the recognizer 's capabilities while putting the user always in control .", "label": "", "metadata": {}, "score": "66.531425"}
{"text": "All menus are local and context sensitive .But failure of recognition does not prevent the user from selecting material they want to operate on by employing more deliberate encircling and tap selection of precisely the ink strokes they intend .Thus this UI design is resilient with respect to the recognizer 's capabilities while putting the user always in control .", "label": "", "metadata": {}, "score": "66.531425"}
{"text": "The present invention relates to machine recognition of speech .Computer recognition of speech has heretofore been a formidable problem .Rather than approach the entire problem , attempts have been made to restrict the problem to specific areas , thus simplifying the recognition task .", "label": "", "metadata": {}, "score": "66.63373"}
{"text": "claim 32 , wherein the automatic speech recognizer is further configured to weight each of the values in the query element based on a confidence measure of the word corresponding to said value .An information retrieval system as recited in .", "label": "", "metadata": {}, "score": "66.74903"}
{"text": "11 illustrates in more detail the grouping of strokes with Text Object hypotheses , as introduced in block 222 of .FIG .10 .When it is found to be \" very compatible \" the process moves to add the stroke to the existing Text Object hypothesis 234 , and it is then added to a list 236 ( or 224 of .", "label": "", "metadata": {}, "score": "66.78694"}
{"text": "The XML String returned is identical in syntax to the XML string returned by the formalizeObjects command , but typically will include only and tags .Transforming ( 270 ): public String affineTransform(int [ ] object - ids ) ; .The affineTransform command is used to communicate to the Recognizer module translation , scaling , stretch and rotation transformations to selected objects on the canvas .", "label": "", "metadata": {}, "score": "66.8159"}
{"text": "[ 0240 ] if the stroke is partially compatible with the Molecular object hypothesis , then two new Molecular object hypotheses are formed : one consisting of the stroke alone , and another consisting of the stroke plus the supporting Atomic strokes of that Molecular object .", "label": "", "metadata": {}, "score": "66.839005"}
{"text": "In the simple case , the functions EG and EO can be linear .That is , the gap and overlap errors increase linearly with increasing gap and overlap durations .To improve accuracy , non - linear error functions may be used .", "label": "", "metadata": {}, "score": "66.86818"}
{"text": "14 and 380 of FIG .23 ) .It is also to be appreciated , and as illustrated in FIG .30 , various operations permit the modification of the hypothesis lattice .For example , in system diagram 500 , when the pre - interpret stroke operation 502 is performed , updated text object hypotheses 504 are provided to the hypothesis lattice 506 .", "label": "", "metadata": {}, "score": "66.8776"}
{"text": "14 and 380 of FIG .23 ) .It is also to be appreciated , and as illustrated in FIG .30 , various operations permit the modification of the hypothesis lattice .For example , in system diagram 500 , when the pre - interpret stroke operation 502 is performed , updated text object hypotheses 504 are provided to the hypothesis lattice 506 .", "label": "", "metadata": {}, "score": "66.8776"}
{"text": "14 and 380 of FIG .23 ) .It is also to be appreciated , and as illustrated in FIG .30 , various operations permit the modification of the hypothesis lattice .For example , in system diagram 500 , when the pre - interpret stroke operation 502 is performed , updated text object hypotheses 504 are provided to the hypothesis lattice 506 .", "label": "", "metadata": {}, "score": "66.8776"}
{"text": "[0093 ] The GUI process selectively queries the processed strokes queue .If any processed strokes are present , then it removes these strokes ' parent raw strokes from the canvas and replaces it with the processed smaller finished strokes .", "label": "", "metadata": {}, "score": "66.8859"}
{"text": "[0093 ] The GUI process selectively queries the processed strokes queue .If any processed strokes are present , then it removes these strokes ' parent raw strokes from the canvas and replaces it with the processed smaller finished strokes .", "label": "", "metadata": {}, "score": "66.8859"}
{"text": "[0093 ] The GUI process selectively queries the processed strokes queue .If any processed strokes are present , then it removes these strokes ' parent raw strokes from the canvas and replaces it with the processed smaller finished strokes .", "label": "", "metadata": {}, "score": "66.8859"}
{"text": "4.1 Architecture Solution .The system architecture of the present application is described from three perspectives : ( i ) the functional organization of system modules , ( ii ) specification of the functions performed by each module , and ( iii ) the interfaces governing communication between the modules .", "label": "", "metadata": {}, "score": "66.89136"}
{"text": "[ 0255 ] 6 .Reinforcement of Graph Structure confidence scored .[ 0256 ] 6a .The confidence scores of Graph Structure objects are adjusted by the degree to which they reinforce one another .Confidence is increased to the degree that Graph Structure Node objects are pointed to by Graph Structure Link objects , to the degree that Graph Structure Link objects point to Graph Structure Node objects .", "label": "", "metadata": {}, "score": "66.93417"}
{"text": "In one embodiment , the NodeGraphic role may be filled by a ClosedPathObject , and a Node - Label role may be filled by a TextObject , TextLine , or TextColumn .In the same embodiment , both roles are filled for a GraphNode , then the text is enclosed by the ClosedPathObject .", "label": "", "metadata": {}, "score": "66.95123"}
{"text": "In one embodiment , the NodeGraphic role may be filled by a ClosedPathObject , and a Node - Label role may be filled by a TextObject , TextLine , or TextColumn .In the same embodiment , both roles are filled for a GraphNode , then the text is enclosed by the ClosedPathObject .", "label": "", "metadata": {}, "score": "66.95123"}
{"text": "INCORPORATION BY REFERENCE .U.S. Pat .No .7,036,077 , entitled , \" Method For Gestural Interpretation In A System For Selecting And Arranging Visible Material In Document Images \" , by Saund et al . ; U.S. Pat .No .", "label": "", "metadata": {}, "score": "66.988495"}
{"text": "Upon receipt of the ink stroke , the GUI module determines whether the ink stroke is : ( i ) an inking action , ( iii ) a tap action , ( iii ) an encircling action , or ( iv ) a scratch - out action 76 .", "label": "", "metadata": {}, "score": "67.00967"}
{"text": "Both of these latter hypotheses may have approximately the same word error .The sentence recognizer 14 determines the correct utterance by detecting and preferring the lack of overlap between the word \" SEVEN \" and \" AVAILABLE \" , whereas the hypothesis \" SEVEN UNAVAILABLE \" gives an overlap having duration t 3 -t 2 .", "label": "", "metadata": {}, "score": "67.02156"}
{"text": "The scratchOut method is called by the GUI when it suspects the user has drawn a stroke intended to be a scratch - out gesture ( typically a zig - zag ) .The Recognition module is then required to determine exactly which strokes the user probably intends to delete , as determined by the path of the scratch - out gesture and the structural groups the recognition algorithms have constructed .", "label": "", "metadata": {}, "score": "67.0835"}
{"text": "0249 ] 4 .Creation of Graph or Node - Link Structure nodes .[ 0250 ] 4a .Sets of Molecular objects in the hypothesis lattice meeting the requirements of Graph Node and Graph Link objects defined above are found by exhaustive searching over pairs of Molecular objects that are of appropriate type and appropriate spatial proximity to one another .", "label": "", "metadata": {}, "score": "67.11733"}
{"text": "For example the word \" pro - fuse \" did not occur in the LM training corpora , but \" pro - found \" and \" con - fuse \" did .Applying phoneme LM the probability of \" pro - fuse \" is estimated by combining the probability of \" pro \" which has been seen e.g. in \" pro - found \" and the probability of \" fuse \" which has been seen e.g. in \" con - fuse \" .", "label": "", "metadata": {}, "score": "67.14559"}
{"text": "5b .Each Node - Link Structure object in the hypothesis graph is assigned a score depending on the scores of its contributing Node - Link Molecular objects , and on their spatial configuration fulfilling the ideal configuration of parts defined for that Node - Link Structure object type .", "label": "", "metadata": {}, "score": "67.1852"}
{"text": "5b .Each Node - Link Structure object in the hypothesis graph is assigned a score depending on the scores of its contributing Node - Link Molecular objects , and on their spatial configuration fulfilling the ideal configuration of parts defined for that Node - Link Structure object type .", "label": "", "metadata": {}, "score": "67.1852"}
{"text": "An information retrieval system as recited in .claim 30 , wherein the query element includes values representing all of the plurality of hypotheses .An information retrieval system as recited in .An information retrieval system as recited in .claim 32 , wherein the confidence measure of each hypothesis is based on a rank of the hypothesis among the plurality of hypotheses .", "label": "", "metadata": {}, "score": "67.218445"}
{"text": "[ 0096 ] For each new stroke , the process works to determine whether the new stroke clearly belongs to an existing Text Object , clearly does not belong to an existing Text Object , or is ambiguous .This process can potentially lead to an explosion of hypotheses so the implementation of this strategy must be handled with care .", "label": "", "metadata": {}, "score": "67.33517"}
{"text": "[ 0096 ] For each new stroke , the process works to determine whether the new stroke clearly belongs to an existing Text Object , clearly does not belong to an existing Text Object , or is ambiguous .This process can potentially lead to an explosion of hypotheses so the implementation of this strategy must be handled with care .", "label": "", "metadata": {}, "score": "67.33517"}
{"text": "[ 0096 ] For each new stroke , the process works to determine whether the new stroke clearly belongs to an existing Text Object , clearly does not belong to an existing Text Object , or is ambiguous .This process can potentially lead to an explosion of hypotheses so the implementation of this strategy must be handled with care .", "label": "", "metadata": {}, "score": "67.33517"}
{"text": "The entries of the support - table are boolean values indicating whether or not the row - indexed Atomic or support Group node supports the column - indexed Group node in the lattice .An optimization search is performed under the nonoverlapping support constraint .", "label": "", "metadata": {}, "score": "67.36905"}
{"text": "The computer readable medium of claim 19 , wherein searching to apply the \" accept / reject \" values includes forcing one of a true or false state to at least one of the hypotheses .The computer readable medium of claim 12 , wherein the digital ink strokes are one of ( i ) strokes of the node - link diagram , or ( ii ) strokes that are not part of the node - link diagram .", "label": "", "metadata": {}, "score": "67.38628"}
{"text": "Thus , the system can operate in realtime as input is provided .Alternatively , the system can be designed to read ink strokes from a file of stored ink strokes , and thus realtime input operation is not a mandatory feature of the system .", "label": "", "metadata": {}, "score": "67.41549"}
{"text": "Thus , the system can operate in realtime as input is provided .Alternatively , the system can be designed to read ink strokes from a file of stored ink strokes , and thus realtime input operation is not a mandatory feature of the system .", "label": "", "metadata": {}, "score": "67.41549"}
{"text": "Thus , the system can operate in realtime as input is provided .Alternatively , the system can be designed to read ink strokes from a file of stored ink strokes , and thus realtime input operation is not a mandatory feature of the system .", "label": "", "metadata": {}, "score": "67.41549"}
{"text": "Thus , the system can operate in realtime as input is provided .Alternatively , the system can be designed to read ink strokes from a file of stored ink strokes , and thus realtime input operation is not a mandatory feature of the system .", "label": "", "metadata": {}, "score": "67.41549"}
{"text": "0085 ] Communication between the two layers is of at least two forms .First , descriptions of digital ink strokes are passed back and forth via buffers , or stroke queues .Second , selection and command operations are communicated via a defined interface .", "label": "", "metadata": {}, "score": "67.51828"}
{"text": "0085 ] Communication between the two layers is of at least two forms .First , descriptions of digital ink strokes are passed back and forth via buffers , or stroke queues .Second , selection and command operations are communicated via a defined interface .", "label": "", "metadata": {}, "score": "67.51828"}
{"text": "0085 ] Communication between the two layers is of at least two forms .First , descriptions of digital ink strokes are passed back and forth via buffers , or stroke queues .Second , selection and command operations are communicated via a defined interface .", "label": "", "metadata": {}, "score": "67.51828"}
{"text": "A material iterator 21 iterates through the whole training material breaking it down into material items .For each material item it returns among others the sound and text unit pairs ( e.g. files ) .The text 22 is fed into a phoneme sequence generator 25 .", "label": "", "metadata": {}, "score": "67.61459"}
{"text": "0159 ]The way objects are built from one another is illustrated in an example hypothesis lattice 310 in FIG .14 , which shows an object structure hierarchy for a set of digital ink strokes .For example , the dark ( bold ) chains 318a , 318b , 318c are considered accepted hypotheses , while the lighter ( non - bold ) chains 320a , 320b , 320c are discarded hypotheses .", "label": "", "metadata": {}, "score": "67.618454"}
{"text": "0159 ]The way objects are built from one another is illustrated in an example hypothesis lattice 310 in FIG .14 , which shows an object structure hierarchy for a set of digital ink strokes .For example , the dark ( bold ) chains 318a , 318b , 318c are considered accepted hypotheses , while the lighter ( non - bold ) chains 320a , 320b , 320c are discarded hypotheses .", "label": "", "metadata": {}, "score": "67.618454"}
{"text": "This UI design employs a novel architecture which divides the complex below - the - surface work of the UI into Graphical User Interface ( GUI ) and Recognition modules ( also called layers or processes ) .Digital ink strokes are maintained in parallel between the GUI and Recognition modules , and communication between modules takes place primarily in terms of Stroke IDs and XML strings .", "label": "", "metadata": {}, "score": "67.70869"}
{"text": "There are a number of procedures to limit the hypothesis , for example , a straightforward manner would be to simply include a maximum allowable hypotheses value .Alternatively , a time limit for hypotheses generation may be included .These are just two of any number of hypotheses restrictions which could be included in the present system .", "label": "", "metadata": {}, "score": "67.73698"}
{"text": "Also that various presently unforeseen or unanticipated alternatives , modifications , variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims .Sign up to receive free email alerts when patent applications with chosen keywords are published SIGN UP .", "label": "", "metadata": {}, "score": "67.78975"}
{"text": "Also that various presently unforeseen or unanticipated alternatives , modifications , variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims .Sign up to receive free email alerts when patent applications with chosen keywords are published SIGN UP .", "label": "", "metadata": {}, "score": "67.78975"}
{"text": "The invention can be implemented in any suitable form including hardware , software , firmware or any combination of these .The invention or some features of the invention can be implemented as computer software running on one or more data processors and/or digital signal processors .", "label": "", "metadata": {}, "score": "67.84393"}
{"text": "[ 0171 ] 3 .Forms Arrowhead hypotheses ( See FIG .17 , 364a True ; 364b False ) .[ 0172 ] 4 .Forms ClosedPathObject hypotheses ( See FIG .18 , 365a True ) .[0173 ] 5 .", "label": "", "metadata": {}, "score": "67.87392"}
{"text": "As shown by hierarchical lattice structure 380 of FIG .23 , each atomic node ( A1-A6 ) 382 is assigned a support - context score of 1 .Scores are propagated upward from Atomic nodes such that each Group node ( M1-M8 ) 384 has a support - context score 386 , which is the minimum of its intrinsic score 388 and the minimum support - context score among its support nodes minus an epsilon value .", "label": "", "metadata": {}, "score": "67.8802"}
{"text": "As shown by hierarchical lattice structure 380 of FIG .23 , each atomic node ( A1-A6 ) 382 is assigned a support - context score of 1 .Scores are propagated upward from Atomic nodes such that each Group node ( M1-M8 ) 384 has a support - context score 386 , which is the minimum of its intrinsic score 388 and the minimum support - context score among its support nodes minus an epsilon value .", "label": "", "metadata": {}, "score": "67.8802"}
{"text": "As shown by hierarchical lattice structure 380 of FIG .23 , each atomic node ( A1-A6 ) 382 is assigned a support - context score of 1 .Scores are propagated upward from Atomic nodes such that each Group node ( M1-M8 ) 384 has a support - context score 386 , which is the minimum of its intrinsic score 388 and the minimum support - context score among its support nodes minus an epsilon value .", "label": "", "metadata": {}, "score": "67.8802"}
{"text": "9 elaborates on the passing of stoke data between the modules of FIG .3 .In order for recognition grouping processes to operate effectively , and users to achieve fine - grained control over their diagrams , the original input strokes drawn or written by users must be broken into smaller fragments .", "label": "", "metadata": {}, "score": "67.996735"}
{"text": "9 elaborates on the passing of stoke data between the modules of FIG .3 .In order for recognition grouping processes to operate effectively , and users to achieve fine - grained control over their diagrams , the original input strokes drawn or written by users must be broken into smaller fragments .", "label": "", "metadata": {}, "score": "67.996735"}
{"text": "Every object introduced will be given a unique object ID , similarly to stroke IDs .[0124 ] When some or all of a hand - drawn diagram is first formalized , the formal graphic objects will be introduced and then added .", "label": "", "metadata": {}, "score": "68.02132"}
{"text": "Every object introduced will be given a unique object ID , similarly to stroke IDs .[0124 ] When some or all of a hand - drawn diagram is first formalized , the formal graphic objects will be introduced and then added .", "label": "", "metadata": {}, "score": "68.02132"}
{"text": "For example , the allowed sentence \" CALL EXTENSION dddd \" causes the grammar to pass through states 0 ( start ) , 2 , 4 , 5 , 6 and 7 .Node 7 has a square around it to indicate that it is a terminal node .", "label": "", "metadata": {}, "score": "68.051834"}
{"text": "Then the variable best node true - or - false assignment is set to the value current node true - or - false assignment 474 .Using this information , the system then exits the process .On the other hand , if at step 470 , the cumulative score is not found to be greater than the best score , the process is answered in the negative , and an exit is immediately entered .", "label": "", "metadata": {}, "score": "68.13757"}
{"text": "Then the variable best node true - or - false assignment is set to the value current node true - or - false assignment 474 .Using this information , the system then exits the process .On the other hand , if at step 470 , the cumulative score is not found to be greater than the best score , the process is answered in the negative , and an exit is immediately entered .", "label": "", "metadata": {}, "score": "68.13757"}
{"text": "Then the variable best node true - or - false assignment is set to the value current node true - or - false assignment 474 .Using this information , the system then exits the process .On the other hand , if at step 470 , the cumulative score is not found to be greater than the best score , the process is answered in the negative , and an exit is immediately entered .", "label": "", "metadata": {}, "score": "68.13757"}
{"text": "3 ) .At this point , the Recognition module will undertake the pre - interpret and/or process commands .However , as the GUI module and Recognition module are temporally de - synchronized in their operations , additional strokes may be placed on the canvas , during this time , and the GUI module will continue to operate independently .", "label": "", "metadata": {}, "score": "68.15674"}
{"text": "3 ) .At this point , the Recognition module will undertake the pre - interpret and/or process commands .However , as the GUI module and Recognition module are temporally de - synchronized in their operations , additional strokes may be placed on the canvas , during this time , and the GUI module will continue to operate independently .", "label": "", "metadata": {}, "score": "68.15674"}
{"text": "3 ) .At this point , the Recognition module will undertake the pre - interpret and/or process commands .However , as the GUI module and Recognition module are temporally de - synchronized in their operations , additional strokes may be placed on the canvas , during this time , and the GUI module will continue to operate independently .", "label": "", "metadata": {}, "score": "68.15674"}
{"text": "3 ) .At this point , the Recognition module will undertake the pre - interpret and/or process commands .However , as the GUI module and Recognition module are temporally de - synchronized in their operations , additional strokes may be placed on the canvas , during this time , and the GUI module will continue to operate independently .", "label": "", "metadata": {}, "score": "68.15674"}
{"text": "CONF .ON SPOKEN LANGUAGE PROCESSING , 2009 . \" ...This paper describes the rapid development of a Polish language speech recognition system .The system development was performed without access to any transcribed acoustic training data .This was achieved through the combined use of cross - language bootstrapping and confidence based unsupervised acous ... \" .", "label": "", "metadata": {}, "score": "68.17282"}
{"text": "In this case a pop - up button is shown saying \" Select ?\" If the user taps the pop - up button then the material is displayed in highlight mode to show it is selected , and locally icons for resizing and performing other operations are overlain on the canvas .", "label": "", "metadata": {}, "score": "68.18625"}
{"text": "In this case a pop - up button is shown saying \" Select ?\" If the user taps the pop - up button then the material is displayed in highlight mode to show it is selected , and locally icons for resizing and performing other operations are overlain on the canvas .", "label": "", "metadata": {}, "score": "68.18625"}
{"text": "In this case a pop - up button is shown saying \" Select ?\" If the user taps the pop - up button then the material is displayed in highlight mode to show it is selected , and locally icons for resizing and performing other operations are overlain on the canvas .", "label": "", "metadata": {}, "score": "68.18625"}
{"text": "Additionally each new phoneme sequence hypothesis can have an additive score , called penalty and representing the probability of replacing the original phoneme sequence hypothesis with the new one .If the number of phonemes is different in the new and the original phoneme sequence hypothesis , then an appropriate score smoothing technique is applied to compute the scores of the phonemes of the new phoneme sequence hypothesis .", "label": "", "metadata": {}, "score": "68.210236"}
{"text": "[ 0237 ] if the stroke is partially compatible with the Molecular object hypothesis , then two new Molecular object hypotheses are formed : one consisting of the stroke alone , and another consisting of the stroke plus the supporting Atomic strokes of that Molecular object .", "label": "", "metadata": {}, "score": "68.22868"}
{"text": "[ 0237 ] if the stroke is partially compatible with the Molecular object hypothesis , then two new Molecular object hypotheses are formed : one consisting of the stroke alone , and another consisting of the stroke plus the supporting Atomic strokes of that Molecular object .", "label": "", "metadata": {}, "score": "68.22868"}
{"text": "19 , 366a True ) .[0174 ] 6 .Finds sets of strokes enclosed by ClosedPathObjects .[ 0175 ] 7 .Breaks up TextObject hypotheses based on enclosure by ClosedPathObjects .[0176 ] 8 .Removes TextObject hypotheses that are redundant with each other or with any other graphic object , based on having common support .", "label": "", "metadata": {}, "score": "68.23214"}
{"text": "6a .The confidence scores of Graph Structure objects are adjusted by the degree to which they reinforce one another .Confidence is increased to the degree that Graph Structure Node objects are pointed to by Graph Structure Link objects , to the degree that Graph Structure Link objects point to Graph Structure Node objects .", "label": "", "metadata": {}, "score": "68.266266"}
{"text": "CROSS REFERENCE TO RELATED PATENTS AND APPLICATIONS .[ 0001 ] This application is related to co - pending U.S. patent application Ser .No . _ _ _ _ _ _ ( Docket No . 20060798-US - NP / XERZ 2 01508 ) , filed on Mar. _ _ _ _ _ _ , 2007 by Saund , et al . , entitled \" METHOD AND APPARATUS FOR CREATING AND EDITING NODE - LINK DIAGRAMS IN PEN COMPUTING SYSTEMS \" ; and co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "68.34387"}
{"text": "CROSS REFERENCE TO RELATED PATENTS AND APPLICATIONS .[ 0001 ] This application is related to co - pending U.S. patent application Ser .No . _ _ _ _ _ _ ( Docket No . 20060798-US - NP / XERZ 2 01508 ) , filed on Mar. _ _ _ _ _ _ , 2007 by Saund , et al . , entitled \" METHOD AND APPARATUS FOR CREATING AND EDITING NODE - LINK DIAGRAMS IN PEN COMPUTING SYSTEMS \" ; and co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "68.34387"}
{"text": "For example closed path objects and text type Molecular objects are compared and a Graph Node object is created if the closed path object is found to enclose the text object .Similarly , if an open path object is found to have a \" pointing to \" relation to text type Molecular object or a closed path object , then a Graph Link and Graph Node object are created .", "label": "", "metadata": {}, "score": "68.427635"}
{"text": "The method according to . claim 9 , further comprising : . assigning an acoustic phoneme score to each phoneme .The method according to . claim 9 , further comprising : . determining and adding phoneme sequence hypotheses to the phoneme graph thereby providing an extended phoneme graph , and wherein the word - phoneme graph is based on the extended phoneme graph .", "label": "", "metadata": {}, "score": "68.45488"}
{"text": "14 .[ 0179 ] There are a number of techniques available and known in the art for generating hypotheses to determine whether strokes on a canvas are of a particular object form .For example , with regard to a simple wedge hypothesis , the system could determine angles between two strokes which are in a certain proximity to each other , and the relative length of each of the strokes .", "label": "", "metadata": {}, "score": "68.45758"}
{"text": "14 .[ 0179 ] There are a number of techniques available and known in the art for generating hypotheses to determine whether strokes on a canvas are of a particular object form .For example , with regard to a simple wedge hypothesis , the system could determine angles between two strokes which are in a certain proximity to each other , and the relative length of each of the strokes .", "label": "", "metadata": {}, "score": "68.45758"}
{"text": "Circles 148a-148d represent choices for the user .[ 0074 ]The system of the present application exploits an alternative structure selection protocol ( e.g. , the tap cycle select technique ) which employs a lattice hierarchical structure , such as described in U.S. Pat .", "label": "", "metadata": {}, "score": "68.4835"}
{"text": "Circles 148a-148d represent choices for the user .[ 0074 ]The system of the present application exploits an alternative structure selection protocol ( e.g. , the tap cycle select technique ) which employs a lattice hierarchical structure , such as described in U.S. Pat .", "label": "", "metadata": {}, "score": "68.4835"}
{"text": "Circles 148a-148d represent choices for the user .[ 0074 ]The system of the present application exploits an alternative structure selection protocol ( e.g. , the tap cycle select technique ) which employs a lattice hierarchical structure , such as described in U.S. Pat .", "label": "", "metadata": {}, "score": "68.4835"}
{"text": "Every object introduced will be given a unique object ID , similarly to stroke IDs . [0127 ] When some or all of a hand - drawn diagram is first formalized , the formal graphic objects will be introduced and then added .", "label": "", "metadata": {}, "score": "68.56761"}
{"text": "Next , at block 402 each value in the query vector is weighted according to its hypothesis confidence , i.e. , according to the confidence score , or rank , of the hypothesis to which the value corresponds .For example , the individual vector values which represent the phrase \" books about the Internet \" are each assigned the highest weight , because that phrase corresponds to the highest - ranked hypothesis in the n - best list , i.e. , the hypothesis that the highest confidence level .", "label": "", "metadata": {}, "score": "68.598206"}
{"text": "FIG .2 , illustrated is a high - level diagram 38 that describes an embodiment of the initialization operations 40 used to arrange the environment 10 for operation of the present system and method .These operations include a canvas creation initialization process 42 ; a Graphical User Interface ( GUI ) initialization process 44 ; an unprocessed strokes queue initialization process 46 , a processed ( or interpretation ) strokes queue initialization process 50 , as well as a recognition initialization process 48 .", "label": "", "metadata": {}, "score": "68.6283"}
{"text": "Description : .CROSS REFERENCE TO RELATED PATENTS AND APPLICATIONS .[ 0001 ] This application is related to co - pending U.S. patent application Ser .No . _ _ _ _ _ _ ( Docket No . 20060798-US - NP / XERZ 2 01508 ) , filed on Mar. - - , 2007 by Saund , et al . , entitled \" METHOD AND APPARATUS FOR CREATING AND EDITING NODE - LINK DIAGRAMS IN PEN COMPUTING SYSTEMS \" ; and co - pending U.S. patent application Ser .", "label": "", "metadata": {}, "score": "68.6496"}
{"text": "FIG .14 and 380 of .FIG .23 ) .It is also to be appreciated , and as illustrated in .FIG .30 , various operations permit the modification of the hypothesis lattice .For example , in system diagram 500 , when the pre - interpret stroke operation 502 is performed , updated text object hypotheses 504 are provided to the hypothesis lattice 506 .", "label": "", "metadata": {}, "score": "68.65024"}
{"text": "Its only visual effect will be reflected when objects are selected and formalized .[ 0113 ]Tap Selection ( 258 ) : public int [ ] selectTap(Point p , boolean .[0114 ] b_last_operation_was_select_objects ) ; . [0115 ]", "label": "", "metadata": {}, "score": "68.662155"}
{"text": "This invention relates to a system and method for optimization of searching for continuous speech recognition .BACKGROUND OF THE INVENTION .Speech recognition for applications such as automated directory enquiry assistance and control of operation based on speech input requires a real time response .", "label": "", "metadata": {}, "score": "68.6703"}
{"text": "Forms GraphNode hypotheses ( see .FIG .20 , 367 a True ) from ClosedPathObjects enclosing TextObjects , TextLines , or TextColumns ( See .FIG .21 , 368 a True ) .Forms GraphNode and GraphLink hypotheses from CurvilinearObjects pointing to TextObjects , TextLines , or TextColumns .", "label": "", "metadata": {}, "score": "68.70378"}
{"text": "The GUI and Recognition modules are designed to work with each other through an Interface protocol .In one embodiment the protocol is called IConceptSketchRecognizer ( I stands for the Java Interface declaration ) .A number of ancillary functions are also provided .", "label": "", "metadata": {}, "score": "68.81881"}
{"text": "The phonetic transcriber 32 utilizes a transcription resource 33 .The phoneme representation of the corpora is inputted into a phoneme sequence iterator 34 , which iterates through each phoneme sequence passing it to the statistic computation block 35 , where the phoneme sequence statistic computations , LM grams estimation are performed .", "label": "", "metadata": {}, "score": "68.833984"}
{"text": "A method as recited in . claim 15 , wherein each of the items is a dataset in a database in an information retrieval system .A method as recited in . claim 13 , wherein the plurality of items are items of text data .", "label": "", "metadata": {}, "score": "68.88264"}
{"text": "Available commands include formalize / roughen ( i.e. , convert between digital ink and formatted graphics and text ) , cut , delete , and change color , among others .Additionally , drag handles are provided for rotating and scaling selected material , and anytime material is shown as selected , it may be moved by placing the pen on any highlighted object and dragging .", "label": "", "metadata": {}, "score": "68.92949"}
{"text": "Available commands include formalize / roughen ( i.e. , convert between digital ink and formatted graphics and text ) , cut , delete , and change color , among others .Additionally , drag handles are provided for rotating and scaling selected material , and anytime material is shown as selected , it may be moved by placing the pen on any highlighted object and dragging .", "label": "", "metadata": {}, "score": "68.92949"}
{"text": "Available commands include formalize / roughen ( i.e. , convert between digital ink and formatted graphics and text ) , cut , delete , and change color , among others .Additionally , drag handles are provided for rotating and scaling selected material , and anytime material is shown as selected , it may be moved by placing the pen on any highlighted object and dragging .", "label": "", "metadata": {}, "score": "68.92949"}
{"text": "Available commands include formalize / roughen ( i.e. , convert between digital ink and formatted graphics and text ) , cut , delete , and change color , among others .Additionally , drag handles are provided for rotating and scaling selected material , and anytime material is shown as selected , it may be moved by placing the pen on any highlighted object and dragging .", "label": "", "metadata": {}, "score": "68.92949"}
{"text": "16 illustrates the wedge hypotheses obtained by operation of the present application on a node - link diagram ; .[ 0024 ] FIG .17 illustrates the arrowhead hypotheses obtained in a node - link diagram ; .[ 0025 ] FIG .", "label": "", "metadata": {}, "score": "69.01288"}
{"text": "16 illustrates the wedge hypotheses obtained by operation of the present application on a node - link diagram ; .[ 0024 ] FIG .17 illustrates the arrowhead hypotheses obtained in a node - link diagram ; .[ 0025 ] FIG .", "label": "", "metadata": {}, "score": "69.01288"}
{"text": "16 illustrates the wedge hypotheses obtained by operation of the present application on a node - link diagram ; .[ 0024 ] FIG .17 illustrates the arrowhead hypotheses obtained in a node - link diagram ; .[ 0025 ] FIG .", "label": "", "metadata": {}, "score": "69.01288"}
{"text": "The nonoverlapping support constraint is invoked in the algorithm to further prune the search tree by dynamically vetoing branches based on decisions made higher in the search tree .The following discussion focuses on what is known in the art as depth - first search .", "label": "", "metadata": {}, "score": "69.04617"}
{"text": "FIG .23 is a hierarchical node diagram depicting the support context scores and intrinsic scores found during the structure recognition operations ; .FIG .24 is an example of a hierarchical node lattice and representation of support relations in a support table obtained during the structure recognition operations ; .", "label": "", "metadata": {}, "score": "69.09946"}
{"text": "This causes the selected informal finished strokes passed in the int [ ] stroke - ids argument to be replaced by formal graphic objects such as circles , ellipses , rectangles , polygons , arrows , arcs , and formatted text .", "label": "", "metadata": {}, "score": "69.09996"}
{"text": "In one embodiment , if it is not already running the Recognition module is started after the pen is lifted after drawing a stroke .Because recognition can be time - consuming , unprocessed strokes can be in the queue , and in this situation the Recognition module will take them in larger but less frequent reads of the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "69.11836"}
{"text": "In one embodiment , if it is not already running the Recognition module is started after the pen is lifted after drawing a stroke .Because recognition can be time - consuming , unprocessed strokes can be in the queue , and in this situation the Recognition module will take them in larger but less frequent reads of the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "69.11836"}
{"text": "In one embodiment , if it is not already running the Recognition module is started after the pen is lifted after drawing a stroke .Because recognition can be time - consuming , unprocessed strokes can be in the queue , and in this situation the Recognition module will take them in larger but less frequent reads of the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "69.11836"}
{"text": "In one embodiment , if it is not already running the Recognition module is started after the pen is lifted after drawing a stroke .Because recognition can be time - consuming , unprocessed strokes can be in the queue , and in this situation the Recognition module will take them in larger but less frequent reads of the unprocessed strokes queue .", "label": "", "metadata": {}, "score": "69.11836"}
{"text": "0158 ] Graph Node ( 300 ) : A GraphNode contains two main roles , a Node - Graphic and a Node - Label .At least one of these roles , and optionally both , are filled in order for a GraphNode to be supported .", "label": "", "metadata": {}, "score": "69.122375"}
{"text": "Of course , all of these numbers may be modified greatly depending upon circumstances such as talking speed of the speaker .Gap errors are preferably divided into two classes as shown on the left hand side of FIG .5 .", "label": "", "metadata": {}, "score": "69.179016"}
{"text": "Indeed , the functionality may be implemented in a single unit , in a plurality of units or as part of other functional units .As such , the invention may be implemented in a single unit , or may be physically and functionally distributed between different units and processors .", "label": "", "metadata": {}, "score": "69.187225"}
{"text": "The system development was performed without access to any transcribed acoustic training data .This was achieved through the combined use of cross - language bootstrapping and confidence based unsupervised acoustic model training .A Spanish acoustic model was ported to Polish , through the use of a manually constructed phoneme mapping .", "label": "", "metadata": {}, "score": "69.2814"}
{"text": "The method according to . claim 13 , further including , . determining an intended meaning of the ink stroke input by the input device is ambiguous ; and . displaying a pop - up button positioned near the ink stroke determined to be ambiguous , wherein selection or non - selection of the pop - up button eliminates the ambiguity .", "label": "", "metadata": {}, "score": "69.30179"}
{"text": "In the example illustrated in Table II , the partial hypotheses \" CALL 8 \" is considered valid .In actuality , due to the tremendously large gap errors between \" CALL \" and \" 8 \" , such a sentence is unlikely to result in a preferred complete sentence hypothesis .", "label": "", "metadata": {}, "score": "69.368546"}
{"text": "[0126 ] The String returned is an XML string that needs to be parsed by the GUI for it to know what to do .The objects that are introduced include formatted text string , and graphic objects of type rectangle , ellipse , polygon , polyline , arc , and arrowhead .", "label": "", "metadata": {}, "score": "69.395905"}
{"text": "14 .[0182 ] There are a number of techniques available and known in the art for generating hypotheses to determine whether strokes on a canvas are of a particular object form .For example , with regard to a simple wedge hypothesis , the system could determine angles between two strokes which are in a certain proximity to each other , and the relative length of each of the strokes .", "label": "", "metadata": {}, "score": "69.43748"}
{"text": "When some or all of a hand - drawn diagram is first formalized , the formal graphic objects will be introduced and then added .But once formalized , the user can toggle back and forth between formal and rough versions with already - created objects simply being added or removed from the canvas .", "label": "", "metadata": {}, "score": "69.44826"}
{"text": "If they tap in the background or keep on drawing , the scratch - out marking is registered as digital ink .Finally , a well - established method of selecting image objects is to tap on them .[0073 ]", "label": "", "metadata": {}, "score": "69.46887"}
{"text": "If they tap in the background or keep on drawing , the scratch - out marking is registered as digital ink .Finally , a well - established method of selecting image objects is to tap on them .[0073 ]", "label": "", "metadata": {}, "score": "69.46887"}
{"text": "If they tap in the background or keep on drawing , the scratch - out marking is registered as digital ink .Finally , a well - established method of selecting image objects is to tap on them .[0073 ]", "label": "", "metadata": {}, "score": "69.46887"}
{"text": "Formal interface 64 d provides a path for interaction between the two modules .The handwriting recognizer , in one embodiment may be handwriting software from Microsoft Corporation , such as may be used in its TabletPC operating systems .Turning now to .", "label": "", "metadata": {}, "score": "69.51431"}
{"text": "[0117 ] Enclosure Selection ( 254 ) : public int [ ] selectPath(Path path ) .[ 0118 ] The selectPath method allows selection of strokes by drawing a closed path around them .The decision about whether a closed path stroke is ambiguous by virtue of enclosing other strokes , and therefore requiring a \" Select ? \" mediator under the Inferred Mode protocol , is left to the GUI .", "label": "", "metadata": {}, "score": "69.58404"}
{"text": "The method of claim 9 , wherein the partial sentence hypothesis error calculation comprises the steps of : .( g ) associating a word error with each hypothesized word ; .( h ) associating a gap error with each hypothesized word which begins after the end of the last word in the partial sentence hypothesis identified in step ( b ) ; .", "label": "", "metadata": {}, "score": "69.617615"}
{"text": "Graph Node ( 300 ): A GraphNode contains two main roles , a Node - Graphic and a Node - Label .At least one of these roles , and optionally both , are filled in order for a GraphNode to be supported .", "label": "", "metadata": {}, "score": "69.6295"}
{"text": "( This version of the diagram omits the scratch - out delete gesture for easy understanding . )Squared boxes represent computer display of information to the user ( i.e. , square boxes are computer actions associated with information displayed to the user 142a-142d ) .", "label": "", "metadata": {}, "score": "69.63341"}
{"text": "( This version of the diagram omits the scratch - out delete gesture for easy understanding . )Squared boxes represent computer display of information to the user ( i.e. , square boxes are computer actions associated with information displayed to the user 142a-142d ) .", "label": "", "metadata": {}, "score": "69.63341"}
{"text": "( This version of the diagram omits the scratch - out delete gesture for easy understanding . )Squared boxes represent computer display of information to the user ( i.e. , square boxes are computer actions associated with information displayed to the user 142a-142d ) .", "label": "", "metadata": {}, "score": "69.63341"}
{"text": "16 , where some , but not all , wedge hypotheses identified by the process are illustrated .More particularly , the system interprets the node - link diagram 360 of .FIG .16 and identifies strokes it considers to be potential wedges .", "label": "", "metadata": {}, "score": "69.6669"}
{"text": "[0114 ] Enclosure Selection ( 254 ) : public int [ ] selectPath(Path path ) .[0115 ] The selectPath method allows selection of strokes by drawing a closed path around them .The decision about whether a closed path stroke is ambiguous by virtue of enclosing other strokes , and therefore requiring a \" Select ? \" mediator under the Inferred Mode protocol , is left to the GUI .", "label": "", "metadata": {}, "score": "69.67369"}
{"text": "[0114 ] Enclosure Selection ( 254 ) : public int [ ] selectPath(Path path ) .[0115 ] The selectPath method allows selection of strokes by drawing a closed path around them .The decision about whether a closed path stroke is ambiguous by virtue of enclosing other strokes , and therefore requiring a \" Select ? \" mediator under the Inferred Mode protocol , is left to the GUI .", "label": "", "metadata": {}, "score": "69.67369"}
{"text": "claim 39 , wherein the automatic speech recognizer is further configured to weight each of the values in the query element based on a confidence measure of the word corresponding to said value .A call routing system as recited in .", "label": "", "metadata": {}, "score": "69.67427"}
{"text": "The computing device 14 includes memory and processing capabilities sufficient to store and operate the ConceptSketch program when appropriate inputs are received by the computing device 14 .While various ones of the components described above are shown wired to each other , it is to be appreciated the system may act in a wired or wireless environment .", "label": "", "metadata": {}, "score": "69.77127"}
{"text": "The computing device 14 includes memory and processing capabilities sufficient to store and operate the ConceptSketch program when appropriate inputs are received by the computing device 14 .While various ones of the components described above are shown wired to each other , it is to be appreciated the system may act in a wired or wireless environment .", "label": "", "metadata": {}, "score": "69.77127"}
{"text": "The computing device 14 includes memory and processing capabilities sufficient to store and operate the ConceptSketch program when appropriate inputs are received by the computing device 14 .While various ones of the components described above are shown wired to each other , it is to be appreciated the system may act in a wired or wireless environment .", "label": "", "metadata": {}, "score": "69.77127"}
{"text": "The computing device 14 includes memory and processing capabilities sufficient to store and operate the ConceptSketch program when appropriate inputs are received by the computing device 14 .While various ones of the components described above are shown wired to each other , it is to be appreciated the system may act in a wired or wireless environment .", "label": "", "metadata": {}, "score": "69.77127"}
{"text": "[ 0040 ] This UI design employs a novel architecture which divides the complex below - the - surface work of the UI into Graphical User Interface ( GUI ) and Recognition modules ( also called layers or processes ) .Digital ink strokes are maintained in parallel between the GUI and Recognition modules , and communication between modules takes place primarily in terms of Stroke IDs and XML strings .", "label": "", "metadata": {}, "score": "69.77971"}
{"text": "[ 0040 ] This UI design employs a novel architecture which divides the complex below - the - surface work of the UI into Graphical User Interface ( GUI ) and Recognition modules ( also called layers or processes ) .Digital ink strokes are maintained in parallel between the GUI and Recognition modules , and communication between modules takes place primarily in terms of Stroke IDs and XML strings .", "label": "", "metadata": {}, "score": "69.77971"}
{"text": "[ 0040 ] This UI design employs a novel architecture which divides the complex below - the - surface work of the UI into Graphical User Interface ( GUI ) and Recognition modules ( also called layers or processes ) .Digital ink strokes are maintained in parallel between the GUI and Recognition modules , and communication between modules takes place primarily in terms of Stroke IDs and XML strings .", "label": "", "metadata": {}, "score": "69.77971"}
{"text": "The phonetic transcriber 5 generating the phonetic transcription can be statistically or deterministically depending on the actual setting and language .The word stem identifier 4 works e.g. by applying automatic language specific prefix and postfix filters .A raw HwLex 10 is thereby generated .", "label": "", "metadata": {}, "score": "69.78356"}
{"text": "These and other aspects , features and/or advantages of the invention will be apparent from and elucidated with reference to the embodiments described hereinafter .Embodiments of the invention will be described , by way of example only , with reference to the drawings , in which .", "label": "", "metadata": {}, "score": "69.81994"}
{"text": "BACKGROUND .[ 0003 ] Pen / stylus interfaces to computers hold the promise of applications that are as intuitive as a paper or whiteboard but with the power and functionality of editing , search , and other processing provided by computer applications .", "label": "", "metadata": {}, "score": "69.82062"}
{"text": "The apparatus may be such apparatuses as a dictaphone , a voice controlled apparatus in any form , etc . .According to a third aspect of the invention , is provided computer readable code for implementing the method of the second aspect of the invention .", "label": "", "metadata": {}, "score": "69.84871"}
{"text": "The meta - command CANCEL , which resets to the start of the current grammar , differs slightly for each grammar .The meta - commands M2 , M3 and M4 reset grammars G1 , G2 and G3 respectively .If the CANCEL command is implemented in a system , it should be valid for all combinations of vocabulary and grammar .", "label": "", "metadata": {}, "score": "69.87766"}
{"text": "0164 ] Turning to FIG .15 , illustrated is an accepted hypothesis lattice 330 for the node - link diagram 332 .Only the correct final hypotheses are shown in the structure hierarchy ; the many spurious groupings ( e.g. , as in FIG .", "label": "", "metadata": {}, "score": "69.89111"}
{"text": "0044 ] 2 .Overview .[0045 ] Turning attention to FIG .1 , illustrated is an environment or system 10 within which the concepts of the present methods or systems may be implemented .An electronic display 12 is in operative communication with a computing device 14 .", "label": "", "metadata": {}, "score": "69.89796"}
{"text": "0044 ] 2 .Overview .[0045 ] Turning attention to FIG .1 , illustrated is an environment or system 10 within which the concepts of the present methods or systems may be implemented .An electronic display 12 is in operative communication with a computing device 14 .", "label": "", "metadata": {}, "score": "69.89796"}
{"text": "0044 ] 2 .Overview .[0045 ] Turning attention to FIG .1 , illustrated is an environment or system 10 within which the concepts of the present methods or systems may be implemented .An electronic display 12 is in operative communication with a computing device 14 .", "label": "", "metadata": {}, "score": "69.89796"}
{"text": "The method of claim 1 , wherein gap errors are assigned in step ( d ) only to those gaps which correspond to speech which did not generate a hypothesized word .The method of claim 2 , wherein gap errors are assigned in steps ( j ) and ( l ) only to those gaps which correspond to speech which did not generate a hypothesized word .", "label": "", "metadata": {}, "score": "69.936295"}
{"text": "9 elaborates on the passing of stoke data between the modules of FIG .3 .In order for recognition grouping processes to operate effectively and users to achieve fine - grained control over their diagrams , the original input strokes drawn or written by users must be broken into smaller fragments .", "label": "", "metadata": {}, "score": "69.98129"}
{"text": "The formalizeObjects command could also be called beautifyObjects .This causes the selected informal finished strokes passed in the int [ ] stroke - ids argument to be replaced by formal graphic objects such as circles , ellipses , rectangles , polygons , arrows , arcs , and formatted text .", "label": "", "metadata": {}, "score": "70.190704"}
{"text": "[ 0104 ] As the GUI module collects digital ink from the pen input device , it is represented on the GUI side as \" raw strokes \" .These are placed on the raw - stroke - queue .[0105 ] Pre - Interpreting Strokes ( 266 ) : prelnterpretStrokeslnInputStrokeQueue ( ) ; . [", "label": "", "metadata": {}, "score": "70.240906"}
{"text": "[ 0104 ] As the GUI module collects digital ink from the pen input device , it is represented on the GUI side as \" raw strokes \" .These are placed on the raw - stroke - queue .[0105 ] Pre - Interpreting Strokes ( 266 ) : prelnterpretStrokeslnInputStrokeQueue ( ) ; . [", "label": "", "metadata": {}, "score": "70.240906"}
{"text": "13 .More particularly , the ontology of graphical and textual objects are built from atoms to molecules , to Graph Nodes and Graph Links of Node - Link Diagrams ( as will be seen in more detail in .FIGS .", "label": "", "metadata": {}, "score": "70.294975"}
{"text": "These finished strokes may be identical to raw strokes obtained from the raw strokes queue , or they may be new strokes which are fragments of the raw strokes .Typically the fragments will be due to breaking the original raw strokes at corners .", "label": "", "metadata": {}, "score": "70.325294"}
{"text": "[ 0209 ] I2 .Initialize a cumulative - score variable to 0 .[ 0210 ] I3 .Initialize a veto - count variable to 0 for each node .[ 0211 ] I4 .Initialize a current - state value for each node to \" State A \" .", "label": "", "metadata": {}, "score": "70.39554"}
{"text": "0099 ] The GUI and Recognition modules are designed to work with each other through an Interface protocol .In one embodiment the protocol is called IConceptSketchRecognizer ( I stands for the Java Interface declaration ) .A number of ancillary functions are also provided .", "label": "", "metadata": {}, "score": "70.4875"}
{"text": "0099 ] The GUI and Recognition modules are designed to work with each other through an Interface protocol .In one embodiment the protocol is called IConceptSketchRecognizer ( I stands for the Java Interface declaration ) .A number of ancillary functions are also provided .", "label": "", "metadata": {}, "score": "70.4875"}
{"text": "0099 ] The GUI and Recognition modules are designed to work with each other through an Interface protocol .In one embodiment the protocol is called IConceptSketchRecognizer ( I stands for the Java Interface declaration ) .A number of ancillary functions are also provided .", "label": "", "metadata": {}, "score": "70.4875"}
{"text": "In practice , this is rarely a desirable situation .In order to prevent arbitrarily large gaps from occurring in a sentence , a \" time - out \" may be used to limit them .Setting a time - out of , for example , one minute causes the system to assume that a user does not intend to finish his sentence , after a pause of that length .", "label": "", "metadata": {}, "score": "70.50039"}
{"text": "0206 ] I2 .Initialize a cumulative - score variable to 0 .[ 0207 ] I3 .Initialize a veto - count variable to 0 for each node .[ 0208 ] I4 .Initialize a current - state value for each node to \" State A \" .", "label": "", "metadata": {}, "score": "70.58448"}
{"text": "0206 ] I2 .Initialize a cumulative - score variable to 0 .[ 0207 ] I3 .Initialize a veto - count variable to 0 for each node .[ 0208 ] I4 .Initialize a current - state value for each node to \" State A \" .", "label": "", "metadata": {}, "score": "70.58448"}
{"text": "Its only visual effect will be reflected when objects are selected and formalized .Tap Selection ( 258 ): public int [ ] selectTap(Point p , boolean .b_last_operation_was_select_objects ) ; .The selectTap method is called by the GUI to tell the Recognition module that the user has tapped the pen at a certain location on the canvas , indicated by the x - y location of Point", "label": "", "metadata": {}, "score": "70.6008"}
{"text": "[0156 ] TextLine ( 296 ) : A TextLine is a group of TextObjects aligned roughly end - to - end , normally along a horizontal line .[0157 ] TextColumn ( 298 ) : A TextColumn is a vertical stacking of TextObjects and/or TextLines .", "label": "", "metadata": {}, "score": "70.6725"}
{"text": "First , the process does not explore True values for nodes that are vetoed because they fail to satisfy the nonoverlapping support constraints .Second , the process does not explore True values for nodes when the best cumulative score that could be obtained by accepting that node still falls below the best score found thus far .", "label": "", "metadata": {}, "score": "70.782425"}
{"text": "In still further alternative embodiments , a device ( e.g. , a graphics tablet ) that is written upon in order to enter the ink strokes , may be separate and apart from the display on which a user or others view the diagram .", "label": "", "metadata": {}, "score": "70.80342"}
{"text": "Its only visual effect will be reflected when objects are selected and formalized .[ 0111 ]Tap Selection ( 258 ) : public int [ ] selectTap(Point p , boolean b_last operation_was_select_objects ) ; .[ 0112 ] The selectTap method is called by the GUI to tell the Recognition module that the user has tapped the pen at a certain location on the canvas , indicated by the x - y location of Point", "label": "", "metadata": {}, "score": "70.86885"}
{"text": "Its only visual effect will be reflected when objects are selected and formalized .[ 0111 ]Tap Selection ( 258 ) : public int [ ] selectTap(Point p , boolean b_last operation_was_select_objects ) ; .[ 0112 ] The selectTap method is called by the GUI to tell the Recognition module that the user has tapped the pen at a certain location on the canvas , indicated by the x - y location of Point", "label": "", "metadata": {}, "score": "70.86885"}
{"text": "[0169 ] 4 .Forms ClosedPathObject hypotheses ( See FIG .18 , 365a True ) .[0170 ]5 .Forms CurvilinearConnector hypotheses ( See FIG .19 , 366a True ) .[ 0171 ] 6 .Finds sets of strokes enclosed by ClosedPathObjects .", "label": "", "metadata": {}, "score": "70.893616"}
{"text": "[0169 ] 4 .Forms ClosedPathObject hypotheses ( See FIG .18 , 365a True ) .[0170 ]5 .Forms CurvilinearConnector hypotheses ( See FIG .19 , 366a True ) .[ 0171 ] 6 .Finds sets of strokes enclosed by ClosedPathObjects .", "label": "", "metadata": {}, "score": "70.893616"}
{"text": "We present experimental results on five corpora , the Dutch Arise corpus , the German Verbmobil ' 98 corpus , the English North American Business ' 94 20k and 64k development corpora , and the English Broadcast News ' 96 corpus .", "label": "", "metadata": {}, "score": "70.953384"}
{"text": "FIG .15 ) .Such techniques and process as related to specific ink strokes and objects are known in the art .Attention is now directed to the tap cycle select techniques employed herein , and an accepted hierarchical lattice such as in .", "label": "", "metadata": {}, "score": "71.03529"}
{"text": "This indicates the inking action is a deletion gesture and the items covered by the gesture are deleted from the Recognition module and the UI canvas .On the other hand , if at step 100 , the user does not perform a tap select operation on the \" Delete ? \" button , but rather places the pen down in the background of the canvas , the system interprets this as indicating the scratchout stroke is intended to be a word or drawing , and the stroke is added to the canvas as digital ink at step 80 .", "label": "", "metadata": {}, "score": "71.13558"}
{"text": "This indicates the inking action is a deletion gesture and the items covered by the gesture are deleted from the Recognition module and the UI canvas .On the other hand , if at step 100 , the user does not perform a tap select operation on the \" Delete ? \" button , but rather places the pen down in the background of the canvas , the system interprets this as indicating the scratchout stroke is intended to be a word or drawing , and the stroke is added to the canvas as digital ink at step 80 .", "label": "", "metadata": {}, "score": "71.13558"}
{"text": "This indicates the inking action is a deletion gesture and the items covered by the gesture are deleted from the Recognition module and the UI canvas .On the other hand , if at step 100 , the user does not perform a tap select operation on the \" Delete ? \" button , but rather places the pen down in the background of the canvas , the system interprets this as indicating the scratchout stroke is intended to be a word or drawing , and the stroke is added to the canvas as digital ink at step 80 .", "label": "", "metadata": {}, "score": "71.13558"}
{"text": "This indicates the inking action is a deletion gesture and the items covered by the gesture are deleted from the Recognition module and the UI canvas .On the other hand , if at step 100 , the user does not perform a tap select operation on the \" Delete ? \" button , but rather places the pen down in the background of the canvas , the system interprets this as indicating the scratchout stroke is intended to be a word or drawing , and the stroke is added to the canvas as digital ink at step 80 .", "label": "", "metadata": {}, "score": "71.13558"}
{"text": "FIG .9 , the operations up to step 190 occur relatively in realtime .This permits a user to continually draw on the canvas without waiting for system updates or delays .However , this portion of the system does not provide \" intelligence \" , to the image on the canvas ( i.e. , it does not allow rough sketches to be formalized , objects to be moved , colored , cut , etc . ) .", "label": "", "metadata": {}, "score": "71.15406"}
{"text": "2 , illustrated is a high - level diagram 38 that describes an embodiment of the initialization operations 40 used to arrange the environment 10 for operation of the present system and method .These operations include a canvas creation initialization process 42 ; a Graphical User Interface ( GUI ) initialization process 44 ; an unprocessed strokes queue initialization process 46 , a processed ( or interpretation ) strokes queue initialization process 50 , as well as a recognition initialization process 48 .", "label": "", "metadata": {}, "score": "71.15616"}
{"text": "2 , illustrated is a high - level diagram 38 that describes an embodiment of the initialization operations 40 used to arrange the environment 10 for operation of the present system and method .These operations include a canvas creation initialization process 42 ; a Graphical User Interface ( GUI ) initialization process 44 ; an unprocessed strokes queue initialization process 46 , a processed ( or interpretation ) strokes queue initialization process 50 , as well as a recognition initialization process 48 .", "label": "", "metadata": {}, "score": "71.15616"}
{"text": "2 , illustrated is a high - level diagram 38 that describes an embodiment of the initialization operations 40 used to arrange the environment 10 for operation of the present system and method .These operations include a canvas creation initialization process 42 ; a Graphical User Interface ( GUI ) initialization process 44 ; an unprocessed strokes queue initialization process 46 , a processed ( or interpretation ) strokes queue initialization process 50 , as well as a recognition initialization process 48 .", "label": "", "metadata": {}, "score": "71.15616"}
{"text": "[0225 ]Under the stroke formalization operations 516 , the system performs select operations to determine which hypotheses are to be formalized 518 , and the selected hypotheses are converted to formal graphical objects 520 .Thereafter , these formal objects are exchanged or swapped with the informal hypotheses 522 in updating of the lattice 506 .", "label": "", "metadata": {}, "score": "71.18088"}
{"text": "[0225 ]Under the stroke formalization operations 516 , the system performs select operations to determine which hypotheses are to be formalized 518 , and the selected hypotheses are converted to formal graphical objects 520 .Thereafter , these formal objects are exchanged or swapped with the informal hypotheses 522 in updating of the lattice 506 .", "label": "", "metadata": {}, "score": "71.18088"}
{"text": "Anyway the creation of such transcription variants can depend on the words to where they belong .Additionally they can have a penalty representing the probability , that the word is pronounced according to the specific transcription variant instead of the original transcription form .", "label": "", "metadata": {}, "score": "71.22784"}
{"text": "These structure recognition operations can occur in a temporally desynchronized manner from the writing and drawing steps undertaken by a user .Particularly , as previously noted , the processed fragmented strokes 190 may be displayed on the canvas at the same time the same fragmented strokes in the Recognition layer are undergoing structure recognition operations , whereafter , the fragmented strokes are provided with formal objects and relationships 194 .", "label": "", "metadata": {}, "score": "71.27394"}
{"text": "These structure recognition operations can occur in a temporally desynchronized manner from the writing and drawing steps undertaken by a user .Particularly , as previously noted , the processed fragmented strokes 190 may be displayed on the canvas at the same time the same fragmented strokes in the Recognition layer are undergoing structure recognition operations , whereafter , the fragmented strokes are provided with formal objects and relationships 194 .", "label": "", "metadata": {}, "score": "71.27394"}
{"text": "These structure recognition operations can occur in a temporally desynchronized manner from the writing and drawing steps undertaken by a user .Particularly , as previously noted , the processed fragmented strokes 190 may be displayed on the canvas at the same time the same fragmented strokes in the Recognition layer are undergoing structure recognition operations , whereafter , the fragmented strokes are provided with formal objects and relationships 194 .", "label": "", "metadata": {}, "score": "71.27394"}
{"text": "These structure recognition operations can occur in a temporally desynchronized manner from the writing and drawing steps undertaken by a user .Particularly , as previously noted , the processed fragmented strokes 190 may be displayed on the canvas at the same time the same fragmented strokes in the Recognition layer are undergoing structure recognition operations , whereafter , the fragmented strokes are provided with formal objects and relationships 194 .", "label": "", "metadata": {}, "score": "71.27394"}
{"text": "claim 22 , wherein the apparatus further comprises means for weighting each of the values in the set of values based on a confidence measure of the word corresponding to said value .An apparatus as recited in .claim 20 , further comprising means for applying the set of values to the plurality of items to identify one or more items from amongst the plurality of items .", "label": "", "metadata": {}, "score": "71.31172"}
{"text": "It will be appreciated that various of the above - disclosed and other features and functions , or alternatives thereof , may be desirably combined into many other different systems or applications .Also that various presently unforeseen or unanticipated alternatives , modifications , variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims .", "label": "", "metadata": {}, "score": "71.47814"}
{"text": "The system according to . claim 1 , wherein the GUI module and recognition module are configured to employ an inferred mode protocol , to address ambiguous ink strokes .The system according to . claim 1 , further including , . an unprocessed strokes queue for holding unprocessed ink strokes and for passing the unprocessed strokes between the GUI module and the recognition module , and .", "label": "", "metadata": {}, "score": "71.70248"}
{"text": "[ 0152 ] TextObject ( 294 ) : A TextObject is a set of PenStrokes and PenDots that form a compact elongated clump , roughly corresponding to a handwritten word .[ 0153 ]TextLine ( 296 ) : A TextLine is a group of TextObjects aligned roughly end - to - end , normally along a horizontal line .", "label": "", "metadata": {}, "score": "71.77403"}
{"text": "[ 0152 ] TextObject ( 294 ) : A TextObject is a set of PenStrokes and PenDots that form a compact elongated clump , roughly corresponding to a handwritten word .[ 0153 ]TextLine ( 296 ) : A TextLine is a group of TextObjects aligned roughly end - to - end , normally along a horizontal line .", "label": "", "metadata": {}, "score": "71.77403"}
{"text": "Another decision must then be made whether to select the highlighted item 370k .When the item is selected a select command is sent to the recognition module 370l .On the other hand , if the item is not selected , an inquiry is made whether the item is the last item is on the selectable list 370 m .", "label": "", "metadata": {}, "score": "71.80486"}
{"text": "Another decision must then be made whether to select the highlighted item 370k .When the item is selected a select command is sent to the recognition module 370l .On the other hand , if the item is not selected , an inquiry is made whether the item is the last item is on the selectable list 370 m .", "label": "", "metadata": {}, "score": "71.80486"}
{"text": "Another decision must then be made whether to select the highlighted item 370k .When the item is selected a select command is sent to the recognition module 370l .On the other hand , if the item is not selected , an inquiry is made whether the item is the last item is on the selectable list 370 m .", "label": "", "metadata": {}, "score": "71.80486"}
{"text": "If it is not , a determination is made at decision diamond 406 , whether the current node state is one of A , B , or C ( See FIG .26 , where A is unexplored , B is True , C is True and False ) .", "label": "", "metadata": {}, "score": "71.85747"}
{"text": "If it is not , a determination is made at decision diamond 406 , whether the current node state is one of A , B , or C ( See FIG .26 , where A is unexplored , B is True , C is True and False ) .", "label": "", "metadata": {}, "score": "71.85747"}
{"text": "If it is not , a determination is made at decision diamond 406 , whether the current node state is one of A , B , or C ( See FIG .26 , where A is unexplored , B is True , C is True and False ) .", "label": "", "metadata": {}, "score": "71.85747"}
{"text": "The encircling action is an ink stroke that encircles other existing ink strokes or other items and may be an inking action or selection gesture .The scratch - out action is an act of writing or drawing in a zig - zag , back - and - forth , X - ing out , or other \" delete \" type action over existing ink strokes or other items .", "label": "", "metadata": {}, "score": "71.88473"}
{"text": "The encircling action is an ink stroke that encircles other existing ink strokes or other items and may be an inking action or selection gesture .The scratch - out action is an act of writing or drawing in a zig - zag , back - and - forth , X - ing out , or other \" delete \" type action over existing ink strokes or other items .", "label": "", "metadata": {}, "score": "71.88473"}
{"text": "The encircling action is an ink stroke that encircles other existing ink strokes or other items and may be an inking action or selection gesture .The scratch - out action is an act of writing or drawing in a zig - zag , back - and - forth , X - ing out , or other \" delete \" type action over existing ink strokes or other items .", "label": "", "metadata": {}, "score": "71.88473"}
{"text": "More particularly , the tap cycle select technique is used to select the intended strokes .[ 0076 ] When image material ( e.g. , ink strokes ) is selected , a small local button or icon is placed nearby .Tapping on this button or icon brings up a pop - up menu of available operations .", "label": "", "metadata": {}, "score": "71.89392"}
{"text": "More particularly , the tap cycle select technique is used to select the intended strokes .[ 0076 ] When image material ( e.g. , ink strokes ) is selected , a small local button or icon is placed nearby .Tapping on this button or icon brings up a pop - up menu of available operations .", "label": "", "metadata": {}, "score": "71.89392"}
{"text": "More particularly , the tap cycle select technique is used to select the intended strokes .[ 0076 ] When image material ( e.g. , ink strokes ) is selected , a small local button or icon is placed nearby .Tapping on this button or icon brings up a pop - up menu of available operations .", "label": "", "metadata": {}, "score": "71.89392"}
{"text": "If at step 444 it is determined the current node is the first node , the process is exited and reported the best node T / F assignment is made 448 .Returning to step 404 , when it is determined the current node is the last group , the process will then process the last group node 450 .", "label": "", "metadata": {}, "score": "71.91264"}
{"text": "Such techniques and process as related to specific ink strokes and objects are known in the art .[0183 ] Attention is now directed to the tap cycle select techniques employed herein , and an accepted hierarchical lattice such as in FIG .", "label": "", "metadata": {}, "score": "71.95174"}
{"text": "Turning to .FIG .22 , operations related to the above discussed a selectable list is illustrated by flow diagram 370 .Initially , the user performs a tap operation on an image or part of an image ( such as an atom object ) 370 a , causing a selection of a first item on the selectable list 370 b .", "label": "", "metadata": {}, "score": "72.08235"}
{"text": "For example , a \" word \" could be a phoneme and a \" sentence \" , which is a structure made up of such phonemes , could correspond to English words .Or , the basic unit of utterance could be a phrase , so that a \" word \" would actually consist of three or four English words , and a \" sentence \" would be a structure comprised of these phrases .", "label": "", "metadata": {}, "score": "72.08945"}
{"text": "Reinforcement of Graph Structure Confidence Scored .[ 0253 ] 6a .The confidence scores of Graph Structure objects are adjusted by the degree to which they reinforce one another .Confidence is increased to the degree that Graph Structure Node objects are pointed to by Graph Structure Link objects , to the degree that Graph Structure Link objects point to Graph Structure Node objects .", "label": "", "metadata": {}, "score": "72.09584"}
{"text": "Reinforcement of Graph Structure Confidence Scored .[ 0253 ] 6a .The confidence scores of Graph Structure objects are adjusted by the degree to which they reinforce one another .Confidence is increased to the degree that Graph Structure Node objects are pointed to by Graph Structure Link objects , to the degree that Graph Structure Link objects point to Graph Structure Node objects .", "label": "", "metadata": {}, "score": "72.09584"}
{"text": "When the user 's intent is ambiguous , then a choice is provided to the user in the form of the pop - up button or icon .[ 0071 ] Drawing a closed empty circle is clearly a drawing action , but drawing an encircling around some existing digital ink is ambiguous .", "label": "", "metadata": {}, "score": "72.126495"}
{"text": "When the user 's intent is ambiguous , then a choice is provided to the user in the form of the pop - up button or icon .[ 0071 ] Drawing a closed empty circle is clearly a drawing action , but drawing an encircling around some existing digital ink is ambiguous .", "label": "", "metadata": {}, "score": "72.126495"}
{"text": "When the user 's intent is ambiguous , then a choice is provided to the user in the form of the pop - up button or icon .[ 0071 ] Drawing a closed empty circle is clearly a drawing action , but drawing an encircling around some existing digital ink is ambiguous .", "label": "", "metadata": {}, "score": "72.126495"}
{"text": "[ 0047 ] In still further alternative embodiments , a device ( e.g. , a graphics tablet ) that is written upon in order to enter the ink strokes , may be separate and apart from the display on which a user or others view the diagram .", "label": "", "metadata": {}, "score": "72.13449"}
{"text": "[ 0047 ] In still further alternative embodiments , a device ( e.g. , a graphics tablet ) that is written upon in order to enter the ink strokes , may be separate and apart from the display on which a user or others view the diagram .", "label": "", "metadata": {}, "score": "72.13449"}
{"text": "[ 0047 ] In still further alternative embodiments , a device ( e.g. , a graphics tablet ) that is written upon in order to enter the ink strokes , may be separate and apart from the display on which a user or others view the diagram .", "label": "", "metadata": {}, "score": "72.13449"}
{"text": "[ 0123 ] The String returned is an XML string that needs to be parsed by the GUI for it to know what to do .The objects that are introduced include formatted text string , and graphic objects of type rectangle , ellipse , polygon , polyline , arc , and arrowhead .", "label": "", "metadata": {}, "score": "72.141464"}
{"text": "[ 0123 ] The String returned is an XML string that needs to be parsed by the GUI for it to know what to do .The objects that are introduced include formatted text string , and graphic objects of type rectangle , ellipse , polygon , polyline , arc , and arrowhead .", "label": "", "metadata": {}, "score": "72.141464"}
{"text": "The phonetic distance measure can be e.g. the number of phoneme differences between the transcriptions to be compared .The distance measure criterion can depend on the phoneme length of the transcription variant .The word stem in some extent can be used to recognize the unclear speech because it either does not change or changes just a bit due to the unclearness .", "label": "", "metadata": {}, "score": "72.15031"}
{"text": "Under the stroke formalization operations 516 , the system performs select operations to determine which hypotheses are to be formalized 518 , and the selected hypotheses are converted to formal graphical objects 520 .Thereafter , these formal objects are exchanged or swapped with the informal hypotheses 522 in updating of the lattice 506 .", "label": "", "metadata": {}, "score": "72.2724"}
{"text": "The return value is a data structure containing the stroke IDs ( e.g. , an int [ ] array ) .Normally the GUI should display these as highlighted along with a confirmation button saying something like , \" Delete ?\" If tapped on , the GUI will then pass these stroke IDs to the Recognizer as arguments to the deleteStrokes method .", "label": "", "metadata": {}, "score": "72.29326"}
{"text": "The transitions marked with \" d \" are shown in more detail in FIG .7 , which indicates that any digit may be used .The transition d 1 , found between state pairs 8 , 10 and 9 , 10 is more restricted in that the first digit of an exchange can not begin with 0 or 1 .", "label": "", "metadata": {}, "score": "72.35094"}
{"text": "0264 ] It will be appreciated that various of the above - disclosed and other features and functions , or alternatives thereof , may be desirably combined into many other different systems or applications .Also that various presently unforeseen or unanticipated alternatives , modifications , variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims .", "label": "", "metadata": {}, "score": "72.5645"}
{"text": "[ ] object - ids ) ; .The roughenObjects command is the inverse of the formalizeObjects command .The object IDs of selected objects are passed in the int [ ] object_ids argument .These could be formal objects or raw strokes .", "label": "", "metadata": {}, "score": "72.60416"}
{"text": "An apparatus as recited in .claim 20 , wherein the set of values includes values representing all of the plurality of hypotheses .An apparatus as recited in .An apparatus as recited in .claim 22 , wherein the confidence measure of each hypothesis is based on a rank of the hypothesis among the plurality of hypotheses .", "label": "", "metadata": {}, "score": "72.66317"}
{"text": "At this point , a decision must be made of whether or not to select the item 370e .When the decision is to select the highlighted item , the system sends a select command to the recognition module 370f .On the other hand , if the item is not selected ( e.g. , the user will again tap on the image ) 370 g , the process increments the selectable list by one to the next listed item ( e.g. , arrowhead ) 370h .", "label": "", "metadata": {}, "score": "72.87292"}
{"text": "At this point , a decision must be made of whether or not to select the item 370e .When the decision is to select the highlighted item , the system sends a select command to the recognition module 370f .On the other hand , if the item is not selected ( e.g. , the user will again tap on the image ) 370 g , the process increments the selectable list by one to the next listed item ( e.g. , arrowhead ) 370h .", "label": "", "metadata": {}, "score": "72.87292"}
{"text": "At this point , a decision must be made of whether or not to select the item 370e .When the decision is to select the highlighted item , the system sends a select command to the recognition module 370f .On the other hand , if the item is not selected ( e.g. , the user will again tap on the image ) 370 g , the process increments the selectable list by one to the next listed item ( e.g. , arrowhead ) 370h .", "label": "", "metadata": {}, "score": "72.87292"}
{"text": "Then in step 412 , the optimistic scores are summed .The operation \" Sum Optimistic Scores \" means to add the current cumulative score with the scores of nodes lower in the tree whose veto count is equal to zero ( 0 ) .", "label": "", "metadata": {}, "score": "72.887024"}
{"text": "4 sets forth a high - level flow diagram for the operational aspects of the present application ; . [ 0012 ]FIG .5 is a screen snapshot of the node - link diagram program of the present application ; . [ 0013 ] FIG .", "label": "", "metadata": {}, "score": "72.957664"}
{"text": "4 sets forth a high - level flow diagram for the operational aspects of the present application ; . [ 0012 ]FIG .5 is a screen snapshot of the node - link diagram program of the present application ; . [ 0013 ] FIG .", "label": "", "metadata": {}, "score": "72.957664"}
{"text": "TextObject ( 294 ): A TextObject is a set of PenStrokes and PenDots that form a compact elongated clump , roughly corresponding to a handwritten word .TextLine ( 296 ): A TextLine is a group of TextObjects aligned roughly end - to - end , normally along a horizontal line .", "label": "", "metadata": {}, "score": "73.068016"}
{"text": "[0228 ] Under the stroke formalization operations 516 , the system performs select operations to determine which hypotheses are to be formalized 518 , and the selected hypotheses are converted to formal graphical objects 520 .Thereafter , these formal objects are exchanged or swapped with the informal hypotheses 522 in updating of the lattice 506 .", "label": "", "metadata": {}, "score": "73.1357"}
{"text": "More particularly , the tap cycle select technique is used to select the intended strokes .When image material ( e.g. , ink strokes ) is selected , a small local button or icon is placed nearby .Tapping on this button or icon brings up a pop - up menu of available operations .", "label": "", "metadata": {}, "score": "73.16252"}
{"text": "Such techniques and process as related to specific ink strokes and objects are known in the art .[ 0180 ] Attention is now directed to the tap cycle select techniques employed herein , and an accepted hierarchical lattice such as in FIG .", "label": "", "metadata": {}, "score": "73.256325"}
{"text": "Such techniques and process as related to specific ink strokes and objects are known in the art .[ 0180 ] Attention is now directed to the tap cycle select techniques employed herein , and an accepted hierarchical lattice such as in FIG .", "label": "", "metadata": {}, "score": "73.256325"}
{"text": "When the determination is that the stroke is \" not compatible \" the process spawns a new Text Object hypothesis 242 , and it is added to the list of all hypotheses 236 .[ 0098 ] 4.3 GUI / Recognition Module Interface .", "label": "", "metadata": {}, "score": "73.55512"}
{"text": "When the determination is that the stroke is \" not compatible \" the process spawns a new Text Object hypothesis 242 , and it is added to the list of all hypotheses 236 .[ 0098 ] 4.3 GUI / Recognition Module Interface .", "label": "", "metadata": {}, "score": "73.55512"}
{"text": "When the determination is that the stroke is \" not compatible \" the process spawns a new Text Object hypothesis 242 , and it is added to the list of all hypotheses 236 .[ 0098 ] 4.3 GUI / Recognition Module Interface .", "label": "", "metadata": {}, "score": "73.55512"}
{"text": "When it receives a roughenObjects command the Recognizer determines which formal objects should be removed from the canvas and which strokes should be added .[ 0128 ] Transforming ( 270 ) : public String affineTransform(int [ ] object - ids ) ; .", "label": "", "metadata": {}, "score": "73.58212"}
{"text": "When it receives a roughenObjects command the Recognizer determines which formal objects should be removed from the canvas and which strokes should be added .[ 0128 ] Transforming ( 270 ) : public String affineTransform(int [ ] object - ids ) ; .", "label": "", "metadata": {}, "score": "73.58212"}
{"text": "16 and identifies strokes it considers to be potential wedges .As can be seen , while some of the wedge hypotheses 362a will be True , others will be False 362b .Similar examples of hypotheses are shown in the following FIGS .", "label": "", "metadata": {}, "score": "73.67354"}
{"text": "16 and identifies strokes it considers to be potential wedges .As can be seen , while some of the wedge hypotheses 362a will be True , others will be False 362b .Similar examples of hypotheses are shown in the following FIGS .", "label": "", "metadata": {}, "score": "73.67354"}
{"text": "When the answer no , then the value of the variable current node is decremented 446 , and the process moves back to the processing of a current node 402 .If at step 444 it is determined the current node is the first node , the process is exited and reported the best node T / F assignment is made 448 .", "label": "", "metadata": {}, "score": "73.67495"}
{"text": "0238 ] if the stroke is determined to be partially compatible with no existing text type Molecular object hypothesis , then a new text type Molecular object hypothesis is formed with that stroke as its only support .[ 0239 ] II .", "label": "", "metadata": {}, "score": "73.87706"}
{"text": "0238 ] if the stroke is determined to be partially compatible with no existing text type Molecular object hypothesis , then a new text type Molecular object hypothesis is formed with that stroke as its only support .[ 0239 ] II .", "label": "", "metadata": {}, "score": "73.87706"}
{"text": "As shown by hierarchical lattice structure 380 of .FIG .23 , each atomic node ( A 1 -A 6 ) 382 is assigned a support - context score of 1 .Scores are propagated upward from Atomic nodes such that each Group node ( M 1 -M 8 ) 384 has a support - context score 386 , which is the minimum of its intrinsic score 388 and the minimum support - context score among its support nodes minus an epsilon value .", "label": "", "metadata": {}, "score": "73.975464"}
{"text": "When strokes are referred to , only their IDs need to be passed , not the entire listing of points belonging to each stroke .Process flow diagram 180 of .FIG .9 elaborates on the passing of stoke data between the modules of .", "label": "", "metadata": {}, "score": "73.98786"}
{"text": "1 , Montreal , Quebec , Canada .Jennifer Chu - Carroll , Bob Carpenter , \" Vector - based Natural Language Call Routing \" , Computational Linguistics , Sep. 1999 , pp .361 - 388 , vol .25 , No . 3 , MIT Press for the Association of Computational Linguistics .", "label": "", "metadata": {}, "score": "74.02872"}
{"text": "3 , where a hypothesis of a gap while the speaker is actually saying \" TEEN \" results in a large gap error and rejection of the sentence .Gap and overlap error calculations can be used at the beginning and end of sentences .", "label": "", "metadata": {}, "score": "74.05132"}
{"text": "These attributes would then have values applied ( e.g. , if the angle between the two strokes is x then the angle score is 0.1 , and if the angle is z then the angle score is 0.9 ) .From such attributes an overall score for each hypothesis is obtained .", "label": "", "metadata": {}, "score": "74.076935"}
{"text": "Certain pen input , however , can also be interpreted as being intended by the user to select some subset of digital ink markings .For example , tapping on an object , encircling it , or scratching it out are all forms of input that are natural for initiating selection and deletion operations .", "label": "", "metadata": {}, "score": "74.15514"}
{"text": "When it receives a roughenobjects command the Recognizer determines which formal objects should be removed from the canvas and which strokes should be added .[ 0131 ] Transforming ( 270 ) : public String affineTransform(int [ ] object - ids ) ; .", "label": "", "metadata": {}, "score": "74.17767"}
{"text": "FIG .17 , 364 a True ; 364 b False ) .Forms ClosedPathObject hypotheses ( See .FIG .18 , 365 a True ) .Forms CurvilinearConnector hypotheses ( See .FIG .19 , 366 a True ) .", "label": "", "metadata": {}, "score": "74.38416"}
{"text": "5a .Each Molecular object in the hypothesis graph is given a confidence score , based on how well its Atomic support fits the ideal model for that Molecular object 's type .5b .Each Node - Link Structure object in the hypothesis graph is assigned a score depending on the scores of its contributing Node - Link Molecular objects , and on their spatial configuration fulfilling the ideal configuration of parts defined for that Node - Link Structure object type .", "label": "", "metadata": {}, "score": "74.57376"}
{"text": "It models the phoneme history - also jumping through the word boundaries if necessary - with the average history length of m , m typically being 8 - 10 .Therefore the phoneme LM captures also the information , which is represented by a word LM ( bigram , trigram ) .", "label": "", "metadata": {}, "score": "74.6117"}
{"text": "At step 72 , the GUI module is waiting for an event , such as an input ( e.g. , a stroke ) from the stylus or pen .When the user puts the pen to the surface of the canvas , the GUI module receives an ink stroke 74 .", "label": "", "metadata": {}, "score": "74.87085"}
{"text": "At step 72 , the GUI module is waiting for an event , such as an input ( e.g. , a stroke ) from the stylus or pen .When the user puts the pen to the surface of the canvas , the GUI module receives an ink stroke 74 .", "label": "", "metadata": {}, "score": "74.87085"}
{"text": "At step 72 , the GUI module is waiting for an event , such as an input ( e.g. , a stroke ) from the stylus or pen .When the user puts the pen to the surface of the canvas , the GUI module receives an ink stroke 74 .", "label": "", "metadata": {}, "score": "74.87085"}
{"text": "Jennifer Chu - Carroll , Bob Carpenter , \" Dialogue Management in Vector - Based Call Routing \" , COLING - ACL ' 98 , 36th Annual Meeting of the Association for Computational Linguistics , and 17th International Conference on Computational Linguistics , Proceeding of the Conference , Aug. 1998 , pp .", "label": "", "metadata": {}, "score": "74.88068"}
{"text": "On the other hand , if at step 470 , the cumulative score is not found to be greater than the best score , the process is answered in the negative , and an exit is immediately entered .[0223 ] Turning to FIG .", "label": "", "metadata": {}, "score": "74.99425"}
{"text": "The process according to claim 6 , further including non - vetoing previously vetoed nodes or branches of the search tree .The process according to claim 1 , wherein the non - overlapping constraint includes searching a binary tree where one branch corresponds to assigning true values and the other branch corresponds to assigning false values .", "label": "", "metadata": {}, "score": "75.12318"}
{"text": "The process according to claim 6 , further including non - vetoing previously vetoed nodes or branches of the search tree .The process according to claim 1 , wherein the non - overlapping constraint includes searching a binary tree where one branch corresponds to assigning true values and the other branch corresponds to assigning false values .", "label": "", "metadata": {}, "score": "75.12318"}
{"text": "claim 25 , wherein the apparatus is part of a call routing system , such that each of the plurality of items is a call destination .An apparatus as recited in .claim 25 , wherein the apparatus is part of an information retrieval system , such that each of the plurality of items is a dataset in a database of the information retrieval system .", "label": "", "metadata": {}, "score": "75.2137"}
{"text": "If the answer to this is no , the process moves to block 410 to see whether the cumulative score of the current node is equal to the current node score .Then in step 412 , the optimistic scores are summed .", "label": "", "metadata": {}, "score": "75.41022"}
{"text": "If the answer to this is no , the process moves to block 410 to see whether the cumulative score of the current node is equal to the current node score .Then in step 412 , the optimistic scores are summed .", "label": "", "metadata": {}, "score": "75.41022"}
{"text": "If the answer to this is no , the process moves to block 410 to see whether the cumulative score of the current node is equal to the current node score .Then in step 412 , the optimistic scores are summed .", "label": "", "metadata": {}, "score": "75.41022"}
{"text": "Decision diamond 146 represents the processes ' determination whether the ambiguous encircle actions can be disambiguated on the basis of context : Circles 148 a - 148 d represent choices for the user .The system of the present application exploits an alternative structure selection protocol ( e.g. , the tap cycle select technique ) which employs a lattice hierarchical structure , such as described in U.S. Pat .", "label": "", "metadata": {}, "score": "75.600655"}
{"text": "5 shows a graph of preferred functions for overlap and gap error calculations .When the amount of overlap is zero , no additional error term is introduced .When the amount of overlap is positive , an overlap has occured , and when the amount of overlap is negative a gap between word hypotheses has occurred .", "label": "", "metadata": {}, "score": "75.63757"}
{"text": "Enclosure Selection ( 254 ): public int [ ] selectPath(Path path ) .The selectPath method allows selection of strokes by drawing a closed path around them .The decision about whether a closed path stroke is ambiguous by virtue of enclosing other strokes , and therefore requiring a \" Select ? \" mediator under the Inferred Mode protocol , is left to the GUI .", "label": "", "metadata": {}, "score": "75.67069"}
{"text": "The system according to . claim 1 , further including , . an interface between the GUI module and recognition module for passing of selection operations and command operations therebetween .The system according to . claim 1 , wherein the input device configured to enter ink strokes , is further configured to select ink strokes , and specify commands to be performed on selected ink strokes , without selecting a mode of operation prior to entering the ink strokes .", "label": "", "metadata": {}, "score": "75.88162"}
{"text": "FIG .15 , illustrated is an accepted hypothesis lattice 330 for the node - link diagram 332 .Only the correct final hypotheses are shown in the structure hierarchy ; the many spurious groupings ( e.g. , as in .FIG .", "label": "", "metadata": {}, "score": "76.05918"}
{"text": "When this is answered in the positive , the variable best score is set to the value of the variable cumulative score 472 .Then the variable best node true - or - false assignment is set to the value current node true - or - false assignment 474 .", "label": "", "metadata": {}, "score": "76.15541"}
{"text": "[0163 ] Input : new fragmented PenStrokes ; newly touched TextObject hypotheses ; existing TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes . [0164 ] Output : lists of TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes . [", "label": "", "metadata": {}, "score": "76.2744"}
{"text": "[0163 ] Input : new fragmented PenStrokes ; newly touched TextObject hypotheses ; existing TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes . [0164 ] Output : lists of TextObjects , ClosedPathObjects , Wedges , Arrowheads , CurvilinearConnectors , NLLinks , NLNodes . [", "label": "", "metadata": {}, "score": "76.2744"}
{"text": "The method according to . claim 9 , further including , .passing selection operations and command operations between the GUI module and the recognition module by a system interface .The method according to . claim 9 , wherein in addition to entering the ink strokes by use of the input device , further including : . selecting ink strokes by the input device , and .", "label": "", "metadata": {}, "score": "76.311455"}
{"text": "At this point , a decision must be made of whether or not to select the item 370 e .When the decision is to select the highlighted item , the system sends a select command to the recognition module 370 f .", "label": "", "metadata": {}, "score": "76.33499"}
{"text": "3 .The GUI module 62 handles input and display of digital ink strokes on the canvas , and most of the command interaction logic of the system such as detecting encircling strokes , and presenting and handling pop - up buttons ( as illustrated in FIG .", "label": "", "metadata": {}, "score": "76.367676"}
{"text": "3 .The GUI module 62 handles input and display of digital ink strokes on the canvas , and most of the command interaction logic of the system such as detecting encircling strokes , and presenting and handling pop - up buttons ( as illustrated in FIG .", "label": "", "metadata": {}, "score": "76.367676"}
{"text": "3 .The GUI module 62 handles input and display of digital ink strokes on the canvas , and most of the command interaction logic of the system such as detecting encircling strokes , and presenting and handling pop - up buttons ( as illustrated in FIG .", "label": "", "metadata": {}, "score": "76.367676"}
{"text": "Of course , other types could also be introduced .Every object introduced will be given a unique object ID , similarly to stroke IDs .The tag is followed by a list of atomic object IDs ( normally stroke IDs ) that should be removed from the canvas , indicated by their IDs .", "label": "", "metadata": {}, "score": "76.371445"}
{"text": "Rounded boxes represent user actions , including : drawing strokes ; drawing an encircling gesture ; tapping on strokes or formal graphic objects to select objects or cycle through selections ; tapping in the background to deselect ; tapping on the pop - up \" Select ? \" button ; tapping on the pop - up command icon ; and choosing an item in the pop - up command menu , 144a-144h .", "label": "", "metadata": {}, "score": "76.42239"}
{"text": "Rounded boxes represent user actions , including : drawing strokes ; drawing an encircling gesture ; tapping on strokes or formal graphic objects to select objects or cycle through selections ; tapping in the background to deselect ; tapping on the pop - up \" Select ? \" button ; tapping on the pop - up command icon ; and choosing an item in the pop - up command menu , 144a-144h .", "label": "", "metadata": {}, "score": "76.42239"}
{"text": "Rounded boxes represent user actions , including : drawing strokes ; drawing an encircling gesture ; tapping on strokes or formal graphic objects to select objects or cycle through selections ; tapping in the background to deselect ; tapping on the pop - up \" Select ? \" button ; tapping on the pop - up command icon ; and choosing an item in the pop - up command menu , 144a-144h .", "label": "", "metadata": {}, "score": "76.42239"}
{"text": "26 ) .[0197 ] Thus , FIG .24 depicts an example of a hierarchical node lattice and a representation of support relations in Support Table 390 .Nodes ( M1 , M3 , M6 ) 392a-392c are accepted ( True ) while nodes ( M2 , M4 , M6 , M7 , M8 ) 394a-394d are rejected ( False ) .", "label": "", "metadata": {}, "score": "76.49533"}
{"text": "26 ) .[0197 ] Thus , FIG .24 depicts an example of a hierarchical node lattice and a representation of support relations in Support Table 390 .Nodes ( M1 , M3 , M6 ) 392a-392c are accepted ( True ) while nodes ( M2 , M4 , M6 , M7 , M8 ) 394a-394d are rejected ( False ) .", "label": "", "metadata": {}, "score": "76.49533"}
{"text": "A CurvilinearConnector contains optional roles for TerminatorGraphics , or objects that can serve as terminators of a connector , such as an arrowhead .Of course , other forms or items can serve as terminators .ClosedPathObject ( 288 ): A ClosedPathObject is a chain of PenStrokes that forms a non - self - intersecting closed path or nearly closed path .", "label": "", "metadata": {}, "score": "76.53887"}
{"text": "FIG .3 .The GUI module 62 handles input and display of digital ink strokes on the canvas , and most of the command interaction logic of the system such as detecting encircling strokes , and presenting and handling pop - up buttons ( as illustrated in .", "label": "", "metadata": {}, "score": "76.54892"}
{"text": "The set of Atomic stroke fragments created is placed at the front of the stroke interpretation queue .[ 0237 ] 2 .Formation of Molecular text object hypotheses based on groupings of Atomic stokes .[0238 ] Atomic strokes are removed from the stroke interpretation queue and considered with respect to the current set of Text Object type Molecular object hypotheses in the hypothesis lattice .", "label": "", "metadata": {}, "score": "76.65096"}
{"text": "21 illustrates graph - link hypotheses obtained by the present application for a node - link diagram ; .[ 0029 ] FIG .22 is a flow diagram associated with operation of the selectables list ; .[ 0030 ] FIG .", "label": "", "metadata": {}, "score": "76.7484"}
{"text": "21 illustrates graph - link hypotheses obtained by the present application for a node - link diagram ; .[ 0029 ] FIG .22 is a flow diagram associated with operation of the selectables list ; .[ 0030 ] FIG .", "label": "", "metadata": {}, "score": "76.7484"}
{"text": "21 illustrates graph - link hypotheses obtained by the present application for a node - link diagram ; .[ 0029 ] FIG .22 is a flow diagram associated with operation of the selectables list ; .[ 0030 ] FIG .", "label": "", "metadata": {}, "score": "76.7484"}
{"text": "6 is shown in Table I. .The allowed sentences shown in Table I are easily seen to be generated by tracing the connecting arrows on the directed graph of FIG .6 .The grammar can be .TABLE I______________________________________CALL ddddCALL EXTENSION ddddPLACE CALL ddddPLACE CALL EXTENSION ddddCALL OUTSIDE d 1 dd ddddCALL OUTSIDE NUMBER d 1 dd ddddPLACE CALL OUTSIDE NUMBER d 1 dd ddddPLACE CALL OUTSIDE d 1 dd dddd _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . considered to be a finite - state machine , with each of the possible states represented by a numbered node .", "label": "", "metadata": {}, "score": "76.8866"}
{"text": "[ 0103 ] Adding Strokes ( 252 ) via the raw - strokes - queue .[ 0104 ] As the GUI module collects digital ink from the pen input device , it is represented on the GUI side as \" raw strokes \" .", "label": "", "metadata": {}, "score": "76.92033"}
{"text": "A CurvilinearConnector contains optional roles for TerminatorGraphics , or objects that can serve as terminators of a connector , such as an arrowhead .Of course , other forms or items can serve as terminators .[0151 ] ClosedPathObject ( 288 ) : A ClosedPathObject is a chain of PenStrokes that forms a non - self - intersecting closed path or nearly closed path .", "label": "", "metadata": {}, "score": "76.94293"}
{"text": "A CurvilinearConnector contains optional roles for TerminatorGraphics , or objects that can serve as terminators of a connector , such as an arrowhead .Of course , other forms or items can serve as terminators .[0151 ] ClosedPathObject ( 288 ) : A ClosedPathObject is a chain of PenStrokes that forms a non - self - intersecting closed path or nearly closed path .", "label": "", "metadata": {}, "score": "76.94293"}
{"text": "The inking action is interpreted as an act of writing or drawing on the canvas .A tap action is the movement of the stylus or pen onto a spot of the canvas and is intended to select or deselect the item which is tapped .", "label": "", "metadata": {}, "score": "76.959305"}
{"text": "The inking action is interpreted as an act of writing or drawing on the canvas .A tap action is the movement of the stylus or pen onto a spot of the canvas and is intended to select or deselect the item which is tapped .", "label": "", "metadata": {}, "score": "76.959305"}
{"text": "The inking action is interpreted as an act of writing or drawing on the canvas .A tap action is the movement of the stylus or pen onto a spot of the canvas and is intended to select or deselect the item which is tapped .", "label": "", "metadata": {}, "score": "76.959305"}
{"text": "0212 ] If at step 414 , it is found that the optimistic score is greater than the best score , the process sets the variable current node T / F value to True 422 , and a process is called to veto - conflicting support nodes 424 .", "label": "", "metadata": {}, "score": "77.056076"}
{"text": "0212 ] If at step 414 , it is found that the optimistic score is greater than the best score , the process sets the variable current node T / F value to True 422 , and a process is called to veto - conflicting support nodes 424 .", "label": "", "metadata": {}, "score": "77.056076"}
{"text": "claim 1 , wherein the query element is a vector .A method as recited in .A method as recited in . claim 5 , wherein the confidence measure of each hypothesis is based on a rank of said hypothesis among the plurality of hypotheses .", "label": "", "metadata": {}, "score": "77.10316"}
{"text": "4 illustrates the related problem of overlap .It is assumed that the word hypothesizer 12 recognizes the words \" SEVEN \" , \" AVAILABLE \" and \" UNAVAILABLE \" .It is also assumed that the grammar allows the sentence fragments \" SEVEN AVAILABLE \" and \" SEVEN UNAVAILABLE \" .", "label": "", "metadata": {}, "score": "77.30815"}
{"text": "26 ) .Thus , .FIG .24 depicts an example of a hierarchical node lattice and a representation of support relations in Support Table 390 .Nodes ( M 1 , M 3 , M 6 ) 392 a - 392 c are accepted ( True ) while nodes ( M 2 , M 4 , M 6 , M 7 , M 8 ) 394 a - 394 d are rejected ( False ) .", "label": "", "metadata": {}, "score": "77.36523"}
{"text": "The stroke queues are used to hold raw and fragmented strokes until their respective recipient processes are ready to accept them .[ 0087 ] With more particular attention to flow diagram 180 , the UI layer provides raw strokes 182 to the unprocessed ( raw ) strokes queue .", "label": "", "metadata": {}, "score": "77.368645"}
{"text": "The stroke queues are used to hold raw and fragmented strokes until their respective recipient processes are ready to accept them .[ 0087 ] With more particular attention to flow diagram 180 , the UI layer provides raw strokes 182 to the unprocessed ( raw ) strokes queue .", "label": "", "metadata": {}, "score": "77.368645"}
{"text": "The stroke queues are used to hold raw and fragmented strokes until their respective recipient processes are ready to accept them .[ 0087 ] With more particular attention to flow diagram 180 , the UI layer provides raw strokes 182 to the unprocessed ( raw ) strokes queue .", "label": "", "metadata": {}, "score": "77.368645"}
{"text": "26 ) .[ 0200 ] Thus , FIG .24 depicts an example of a hierarchical node lattice and a representation of support relations in Support Table 390 .Nodes ( M1 , M3 , M6 ) 392a-392c are accepted ( True ) while nodes ( M2 , M4 , M6 , M7 , M8 ) 394a-394d are rejected ( False ) .", "label": "", "metadata": {}, "score": "77.66821"}
{"text": "The set of Atomic stroke fragments created is placed at the front of the stroke interpretation queue .Formation of Molecular text object hypotheses based on groupings of Atomic stokes .Atomic strokes are removed from the stroke interpretation queue and considered with respect to the current set of Text Object type Molecular object hypotheses in the hypothesis lattice .", "label": "", "metadata": {}, "score": "77.76907"}
{"text": "Forms links among the proximal ends of all PenStrokes .Numerically Scores the degree to which each pair of linked PenStroke ends forms an alignment or a corner .[ 0167 ] 2 .Forms Wedge hypotheses ( See FIG .16 , where some , but not all , wedge hypotheses identified by the process are illustrated .", "label": "", "metadata": {}, "score": "77.95243"}
{"text": "Forms links among the proximal ends of all PenStrokes .Numerically Scores the degree to which each pair of linked PenStroke ends forms an alignment or a corner .[ 0167 ] 2 .Forms Wedge hypotheses ( See FIG .16 , where some , but not all , wedge hypotheses identified by the process are illustrated .", "label": "", "metadata": {}, "score": "77.95243"}
{"text": "10 ) .If in step 232 the stroke is found to be \" somewhat compatible \" , the process will duplicate the existing Text Object hypothesis 238 , add the stroke to the duplicate hypothesis list 240 , and also add it to the existing list 236 .", "label": "", "metadata": {}, "score": "77.98573"}
{"text": "The method according to claim 14 , further including non - vetoing previously vetoed nodes or branches of the search tree .The method according to claim 9 , wherein the non - overlapping constraint includes searching a binary tree where one branch corresponds to assigning true values and the other branch corresponds to assigning false values .", "label": "", "metadata": {}, "score": "78.11305"}
{"text": "The method according to claim 14 , further including non - vetoing previously vetoed nodes or branches of the search tree .The method according to claim 9 , wherein the non - overlapping constraint includes searching a binary tree where one branch corresponds to assigning true values and the other branch corresponds to assigning false values .", "label": "", "metadata": {}, "score": "78.11305"}
{"text": "claim 9 , wherein each of the items is a dataset in an information retrieval system .A method as recited in .claim 1 , wherein the plurality of items are items of text data .A method as recited in .", "label": "", "metadata": {}, "score": "78.16559"}
{"text": "In this process , the system will determine whether the non - overlapping constraint of the system is met .[0221 ] Turning to FIG .29 , the process of un - veto conflicting support nodes 436 of FIG .", "label": "", "metadata": {}, "score": "78.26247"}
{"text": "In this process , the system will determine whether the non - overlapping constraint of the system is met .[0221 ] Turning to FIG .29 , the process of un - veto conflicting support nodes 436 of FIG .", "label": "", "metadata": {}, "score": "78.26247"}
{"text": "[ 0219 ] With particular attention to FIG .27 , the operations related to and following the processing of the last group node 450 is shown in more detail .More particularly , it is determined whether the cumulative score is greater than the best score 470 .", "label": "", "metadata": {}, "score": "78.53783"}
{"text": "[ 0219 ] With particular attention to FIG .27 , the operations related to and following the processing of the last group node 450 is shown in more detail .More particularly , it is determined whether the cumulative score is greater than the best score 470 .", "label": "", "metadata": {}, "score": "78.53783"}
{"text": "It is well known that this is a very difficult problem in the Artificial Intelligence and Computational Vision fields , due to richness and complexity of the diagram domain , imprecision on the part of human users , and ambiguity in the interpretation of constituent digital ink strokes .", "label": "", "metadata": {}, "score": "78.53804"}
{"text": "It is well known that this is a very difficult problem in the Artificial Intelligence and Computational Vision fields , due to richness and complexity of the diagram domain , imprecision on the part of human users , and ambiguity in the interpretation of constituent digital ink strokes .", "label": "", "metadata": {}, "score": "78.53804"}
{"text": "It is well known that this is a very difficult problem in the Artificial Intelligence and Computational Vision fields , due to richness and complexity of the diagram domain , imprecision on the part of human users , and ambiguity in the interpretation of constituent digital ink strokes .", "label": "", "metadata": {}, "score": "78.53804"}
{"text": "It is well known that this is a very difficult problem in the Artificial Intelligence and Computational Vision fields , due to richness and complexity of the diagram domain , imprecision on the part of human users , and ambiguity in the interpretation of constituent digital ink strokes .", "label": "", "metadata": {}, "score": "78.53804"}
{"text": "For example , it is very common for a speaker to insert transitional sound between speaking the consecutive digits \" 3 \" and \" 8 \" .The actual utterance often sounds similar to \" three-/IE/-eight \" , where /IE/ is the transitional sound between the final /I/ of \" three \" and the initial /E/ of \" eight \" .", "label": "", "metadata": {}, "score": "78.708466"}
{"text": "The vertical dimension ( row - index ) of the support - table consist of Atomic nodes , plus all Group nodes that support at least one other Group node higher in the lattice .The entries of the support - table are boolean values indicating whether or not the row - indexed Atomic or support Group node supports the column - indexed Group node in the lattice .", "label": "", "metadata": {}, "score": "78.70953"}
{"text": "The vertical dimension ( row - index ) of the support - table consist of Atomic nodes , plus all Group nodes that support at least one other Group node higher in the lattice .The entries of the support - table are boolean values indicating whether or not the row - indexed Atomic or support Group node supports the column - indexed Group node in the lattice .", "label": "", "metadata": {}, "score": "78.70953"}
{"text": "The vertical dimension ( row - index ) of the support - table consist of Atomic nodes , plus all Group nodes that support at least one other Group node higher in the lattice .The entries of the support - table are boolean values indicating whether or not the row - indexed Atomic or support Group node supports the column - indexed Group node in the lattice .", "label": "", "metadata": {}, "score": "78.70953"}
{"text": "[ 0026 ] FIG .19 depicts curvilinear connector hypotheses obtained by the system for a node - link diagram ; .[ 0027 ] FIG .20 depicts graph - node hypotheses obtained by the present application for a node - link diagram ; .", "label": "", "metadata": {}, "score": "78.72409"}
{"text": "[ 0026 ] FIG .19 depicts curvilinear connector hypotheses obtained by the system for a node - link diagram ; .[ 0027 ] FIG .20 depicts graph - node hypotheses obtained by the present application for a node - link diagram ; .", "label": "", "metadata": {}, "score": "78.72409"}
{"text": "[ 0026 ] FIG .19 depicts curvilinear connector hypotheses obtained by the system for a node - link diagram ; .[ 0027 ] FIG .20 depicts graph - node hypotheses obtained by the present application for a node - link diagram ; .", "label": "", "metadata": {}, "score": "78.72409"}
{"text": "Abstract .A method and system provides intelligent node - link diagram creation and editing , including an electronic display device having a surface on which a writing and/or drawing canvas is provided .The UI includes a graphical user interface ( GUI ) module , which controls input and display of the ink strokes applied to the canvas by the input device , and a recognition module which interprets the ink strokes by performance of structure recognition operations .", "label": "", "metadata": {}, "score": "79.622116"}
{"text": "In this process , the system will determine whether the non - overlapping constraint of the system is met .[ 0224 ] Turning to FIG .29 , the process of un - veto conflicting support nodes 436 of FIG .", "label": "", "metadata": {}, "score": "79.7799"}
{"text": "There are four primary ways the display can appear : the content of the canvas only ( including handwritten strokes and formal graphic objects ) 142 a ; the content of the canvas with the \" Select ? \" button displayed 142 b ; the content of the canvas with some items highlighted as selected , along with the Command Icon 142 c ; the contents of the canvas with some items selected , along with a pop - up command menu 142 d .", "label": "", "metadata": {}, "score": "80.0143"}
{"text": "The structural hierarchy will again be reviewed to identify the current selected item from the selectable list 370 i and that item will be highlighted on the canvas 370 j .Another decision must then be made whether to select the highlighted item 370 k .", "label": "", "metadata": {}, "score": "80.022156"}
{"text": "[0121 ] Formalization ( 262 ) : public String formalizeObjects(int [ ] stroke - ids ) ; . [0122 ] The formalizeObjects command could also be called beautifyobjects .This causes the selected informal finished strokes passed in the int [ ] stroke - ids argument to be replaced by formal graphic objects such as circles , ellipses , rectangles , polygons , arrows , arcs , and formatted text .", "label": "", "metadata": {}, "score": "80.564735"}
{"text": "[0121 ] Formalization ( 262 ) : public String formalizeObjects(int [ ] stroke - ids ) ; . [0122 ] The formalizeObjects command could also be called beautifyobjects .This causes the selected informal finished strokes passed in the int [ ] stroke - ids argument to be replaced by formal graphic objects such as circles , ellipses , rectangles , polygons , arrows , arcs , and formatted text .", "label": "", "metadata": {}, "score": "80.564735"}
{"text": "Drawing a closed empty circle is clearly a drawing action , but drawing an encircling around some existing digital ink is ambiguous .The user could be attempting to select the enclosed material , or they could simply be drawing a circle around it .", "label": "", "metadata": {}, "score": "80.68171"}
{"text": "The method according to . claim 9 , further including , . applying an inferred mode protocol to address ambiguous ink strokes entered on the canvas by the input device .The method according to . claim 9 , further including : . providing unprocessed ink strokes to an unprocessed strokes queue ; . passing the unprocessed ink strokes on the unprocessed strokes queue between the GUI module and the recognition module ; . providing processed ink strokes to a processed strokes queue ; and .", "label": "", "metadata": {}, "score": "80.72239"}
{"text": "5 shows the desired error function for overlap .When the amount of overlap is fairly small , up to time t 0 , the overlap error is small .For overlap greater than t 0 , the overlap error rises rapidly .", "label": "", "metadata": {}, "score": "80.774574"}
{"text": "At this point , the variable current node state is set to the value , \" B \" 426 , and the variable current node is incremented 428 .Thereafter , the process moves back to the input process current node block 402 .", "label": "", "metadata": {}, "score": "80.7921"}
{"text": "At this point , the variable current node state is set to the value , \" B \" 426 , and the variable current node is incremented 428 .Thereafter , the process moves back to the input process current node block 402 .", "label": "", "metadata": {}, "score": "80.7921"}
{"text": "FIG .1 , the electronic display 12 and computing device 14 are configured to form a writing area such as a canvas 22 on which a user operates the stylus or pen 16 to create a node - link diagram 24 in accordance with the concepts of the present application .", "label": "", "metadata": {}, "score": "80.96004"}
{"text": "In this process , the system will determine whether the non - overlapping constraint of the system is met .Turning to .FIG .29 , the process of un - veto conflicting support nodes 436 of .FIG .25 is shown in more detail .", "label": "", "metadata": {}, "score": "81.02339"}
{"text": "15 .With particular attention to .FIG .27 , the operations related to and following the processing of the last group node 450 is shown in more detail .More particularly , it is determined whether the cumulative score is greater than the best score 470 .", "label": "", "metadata": {}, "score": "81.4306"}
{"text": "FIG .6 presents an example instruction sheet 130 illustrating the small number of instructions 130a-130f which a user needs to know to operate the UI for the system of the present application .[0068 ] One of the most perplexing issues in user interface design for pen computing is the mode problem .", "label": "", "metadata": {}, "score": "81.501114"}
{"text": "FIG .6 presents an example instruction sheet 130 illustrating the small number of instructions 130a-130f which a user needs to know to operate the UI for the system of the present application .[0068 ] One of the most perplexing issues in user interface design for pen computing is the mode problem .", "label": "", "metadata": {}, "score": "81.501114"}
{"text": "FIG .6 presents an example instruction sheet 130 illustrating the small number of instructions 130a-130f which a user needs to know to operate the UI for the system of the present application .[0068 ] One of the most perplexing issues in user interface design for pen computing is the mode problem .", "label": "", "metadata": {}, "score": "81.501114"}
{"text": "\" If the user taps the pop - up button then the material is displayed in highlight mode to show it is selected , and locally icons for resizing and performing other operations are overlain on the canvas .Or , the user is free to ignore the pop - up button and keep drawing , in which case the encircling will be registered as digital ink .", "label": "", "metadata": {}, "score": "81.83952"}
{"text": "On the other hand , if the item is not selected , an inquiry is made whether the item is the last item is on the selectable list 370 m .When answered in the negative , the user may again tap on the image 370 g and steps 370 h - 370 k are repeated .", "label": "", "metadata": {}, "score": "81.93446"}
{"text": "14 , which shows an object structure hierarchy for a set of digital ink strokes .For example , the dark ( bold ) chains 318a , 318b , 318c are considered accepted hypotheses , while the lighter ( non - bold ) chains 320a , 320b , 320c are discarded hypotheses .", "label": "", "metadata": {}, "score": "82.01763"}
{"text": "With specific attention to FIG .13 : [ 0149 ] Atomic Stroke ( 282 ) : This is a fragmented digital ink stroke obtained by breaking up raw strokes at corners .Very short isolated strokes are called PenDots , longer strokes are called PenStrokes .", "label": "", "metadata": {}, "score": "82.11855"}
{"text": "With attention to .FIG .15 , for example , Atom \" 15 \" supports ( to at least some degree ) the \" wedge \" , \" arrowhead \" , and \" curvilinear connector \" , all of which would be on the selectable list of Atom \" 15 \" .", "label": "", "metadata": {}, "score": "82.714066"}
{"text": "The system according to . claim 1 , wherein the GUI module and recognition module operate to automatically determine the ink strokes on the canvas as part of a node - link diagram .The system according to . claim 1 , wherein the node - link diagram is a concept map .", "label": "", "metadata": {}, "score": "82.81887"}
{"text": "The GUI will typically render the selected strokes as highlighted in some fashion .[ 0116 ] Deleting Strokes ( 256 ) : public int [ ] deleteStrokes(int [ ] stroke - ids ) ; .[ 0117 ] deleteStrokes is called by the GUI to cause certain strokes to be removed from the canvas .", "label": "", "metadata": {}, "score": "82.88869"}
{"text": "The GUI will typically render the selected strokes as highlighted in some fashion .[ 0116 ] Deleting Strokes ( 256 ) : public int [ ] deleteStrokes(int [ ] stroke - ids ) ; .[ 0117 ] deleteStrokes is called by the GUI to cause certain strokes to be removed from the canvas .", "label": "", "metadata": {}, "score": "82.88869"}
{"text": "The GUI will typically render the selected strokes as highlighted in some fashion .[ 0119 ] Deleting Strokes ( 256 ) : public int [ ] deleteStrokes(int [ ] stroke - ids ) ; . [ 0120 ] deleteStrokes is called by the GUI to cause certain strokes to be removed from the canvas .", "label": "", "metadata": {}, "score": "82.88996"}
{"text": "The process according to claim 17 , wherein the non - overlapping support constraint includes dynamically vetoing nodes or branches of the search tree based on decisions made higher in the search tree by the tree search process .The process according to claim 20 , further including non - vetoing previously vetoed nodes or branches of the search tree .", "label": "", "metadata": {}, "score": "83.37694"}
{"text": "The process according to claim 17 , wherein the non - overlapping support constraint includes dynamically vetoing nodes or branches of the search tree based on decisions made higher in the search tree by the tree search process .The process according to claim 20 , further including non - vetoing previously vetoed nodes or branches of the search tree .", "label": "", "metadata": {}, "score": "83.37694"}
{"text": "It is also to be understood that not every stroke on a canvas must be part of the node - link diagram .For instance , ink stroke 34 may be interpreted by the present system and method as an \" other \" type of stroke or extraneous material .", "label": "", "metadata": {}, "score": "83.3943"}
{"text": "It is also to be understood that not every stroke on a canvas must be part of the node - link diagram .For instance , ink stroke 34 may be interpreted by the present system and method as an \" other \" type of stroke or extraneous material .", "label": "", "metadata": {}, "score": "83.3943"}
{"text": "It is also to be understood that not every stroke on a canvas must be part of the node - link diagram .For instance , ink stroke 34 may be interpreted by the present system and method as an \" other \" type of stroke or extraneous material .", "label": "", "metadata": {}, "score": "83.3943"}
{"text": "It is also to be understood that not every stroke on a canvas must be part of the node - link diagram .For instance , ink stroke 34 may be interpreted by the present system and method as an \" other \" type of stroke or extraneous material .", "label": "", "metadata": {}, "score": "83.3943"}
{"text": "The variable current node state is set to \" C \" 452 , and the variable current_node is decremented 446 .At this point , the process again returns to the initial processing of a current node 402 .[ 0220 ] As previously mentioned , FIG .", "label": "", "metadata": {}, "score": "83.48735"}
{"text": "A tap action is the movement of the stylus or pen onto a spot of the canvas and is intended to select or deselect the item which is tapped .Alternatively , when an item is selected , a tap in the background of the canvas acts to deselect that item .", "label": "", "metadata": {}, "score": "83.49047"}
{"text": "[ 0216 ] Returning to step 404 , when it is determined the current node is the last group , the process will then process the last group node 450 .The variable current node state is set to \" C \" 452 , and the variable current_node is decremented 446 .", "label": "", "metadata": {}, "score": "83.54034"}
{"text": "[ 0216 ] Returning to step 404 , when it is determined the current node is the last group , the process will then process the last group node 450 .The variable current node state is set to \" C \" 452 , and the variable current_node is decremented 446 .", "label": "", "metadata": {}, "score": "83.54034"}
{"text": "The return int [ ] is the IDs of strokes deleted from the canvas , and should be identical to the int [ ] stroke - ids passed .[0121 ] Scratchout ( 260 ) : public int [ ] scratchOut(PenPath scratchout - path ) ; . [", "label": "", "metadata": {}, "score": "83.60721"}
{"text": "17 illustrates the arrowhead hypotheses obtained in a node - link diagram ; .FIG .18 depicts closed - path object hypotheses obtained for a node - link diagram ; .FIG .19 depicts curvilinear connector hypotheses obtained by the system for a node - link diagram ; .", "label": "", "metadata": {}, "score": "83.782455"}
{"text": "The return int [ ] is the IDs of strokes deleted from the canvas , and should be identical to the int [ ] stroke - ids passed .[ 0118 ] Scratchout ( 260 ) : public int [ ] scratchOut(PenPath scratchout - path ) ; .", "label": "", "metadata": {}, "score": "83.98493"}
{"text": "The return int [ ] is the IDs of strokes deleted from the canvas , and should be identical to the int [ ] stroke - ids passed .[ 0118 ] Scratchout ( 260 ) : public int [ ] scratchOut(PenPath scratchout - path ) ; .", "label": "", "metadata": {}, "score": "83.98493"}
{"text": "In this situation if Atom \" 15 \" is tapped , the system moves up the structural hierarchy to the curvilinear connector , and selects ( e.g. , by highlighting ) the curvilinear connector on the canvas .This design allows the process to cycle through selection options .", "label": "", "metadata": {}, "score": "84.01816"}
{"text": "3 .This illustrates several hypotheses that may be generated by the utterance \" FOURTEEN DEGREES \" .Assuming the hypothesizer 's vocabulary includes the words \" FOUR \" , \" FORTY \" and \" FOURTEEN \" , it is likely that the hypothesizer 12 will generate all three of these words as valid hypotheses during the utterance of the word \" FOURTEEN \" .", "label": "", "metadata": {}, "score": "84.308105"}
{"text": "[0154 ] ClosedPathObject ( 288 ) : A ClosedPathObject is a chain of PenStrokes that forms a non - self - intersecting closed path or nearly closed path .A closed path generally must be of a relatively simple and compact shape in order to be considered a ClosedPathObject ; long snaky closed paths are not considered .", "label": "", "metadata": {}, "score": "84.37598"}
{"text": "The scratch - out action is an act of writing or drawing in a zig - zag , back - and - forth , X - ing out , or other \" delete \" type action over existing ink strokes or other items .", "label": "", "metadata": {}, "score": "84.672424"}
{"text": "FIG .14 , which shows an object structure hierarchy for a set of digital ink strokes .For example , the dark ( bold ) chains 318 a , 318 b , 318 c are considered accepted hypotheses , while the lighter ( non - bold ) chains 320 a , 320 b , 320 c are discarded hypotheses .", "label": "", "metadata": {}, "score": "84.68184"}
{"text": "FIG .25 , shown is a Logic diagram of the Main Loop of the Depth - First Optimization under the Nonoverlapping Support Constraint Algorithm 400 .In step 402 , the current node is processed .In this processing , the operation moves to decision diamond 404 to determine whether the node is a current node of the last group node .", "label": "", "metadata": {}, "score": "84.79001"}
{"text": "The return int [ ] is the IDs of strokes deleted from the canvas , and should be identical to the int [ ] stroke - ids passed .Scratchout ( 260 ): public int [ ] scratchOut(PenPath scratchout - path ) ; .", "label": "", "metadata": {}, "score": "84.88937"}
{"text": "0234 ] 2 .Formation of Molecular Text Object Hypotheses Based on Groupings of Atomic Stokes .[ 0235 ] Atomic strokes are removed from the stroke interpretation queue and considered with respect to the current set of Text Object type Molecular object hypotheses in the hypothesis lattice .", "label": "", "metadata": {}, "score": "85.03377"}
{"text": "0234 ] 2 .Formation of Molecular Text Object Hypotheses Based on Groupings of Atomic Stokes .[ 0235 ] Atomic strokes are removed from the stroke interpretation queue and considered with respect to the current set of Text Object type Molecular object hypotheses in the hypothesis lattice .", "label": "", "metadata": {}, "score": "85.03377"}
{"text": "The state of the art in pen computing user interfaces is to require the user to switch and consciously monitor which of several modes the system is in .Having to keep track of modes leads to errors , confusion , and frustration for users .", "label": "", "metadata": {}, "score": "85.12752"}
{"text": "The state of the art in pen computing user interfaces is to require the user to switch and consciously monitor which of several modes the system is in .Having to keep track of modes leads to errors , confusion , and frustration for users .", "label": "", "metadata": {}, "score": "85.12752"}
{"text": "The state of the art in pen computing user interfaces is to require the user to switch and consciously monitor which of several modes the system is in .Having to keep track of modes leads to errors , confusion , and frustration for users .", "label": "", "metadata": {}, "score": "85.12752"}
{"text": "The state of the art in pen computing user interfaces is to require the user to switch and consciously monitor which of several modes the system is in .Having to keep track of modes leads to errors , confusion , and frustration for users .", "label": "", "metadata": {}, "score": "85.12752"}
{"text": "[0120 ] The return value is a data structure containing the stroke IDs ( e.g. , an int [ ] array ) .Normally the GUI should display these as highlighted along with a confirmation button saying something like , \" Delete ?", "label": "", "metadata": {}, "score": "85.24327"}
{"text": "[0120 ] The return value is a data structure containing the stroke IDs ( e.g. , an int [ ] array ) .Normally the GUI should display these as highlighted along with a confirmation button saying something like , \" Delete ?", "label": "", "metadata": {}, "score": "85.24327"}
{"text": "The GUI will typically render the selected strokes as highlighted in some fashion .Deleting Strokes ( 256 ): public int [ ] deleteStrokes(int [ ] stroke - ids ) ; . deleteStrokes is called by the GUI to cause certain strokes to be removed from the canvas .", "label": "", "metadata": {}, "score": "85.262985"}
{"text": "The stroke fragmentation process fragments the strokes 186 and places these strokes on a processed stroke queue 188 , which may be then used to replace the existing stroke information on the canvas , with the processed fragmented strokes 190 .As can be seen by FIG .", "label": "", "metadata": {}, "score": "85.541626"}
{"text": "The stroke fragmentation process fragments the strokes 186 and places these strokes on a processed stroke queue 188 , which may be then used to replace the existing stroke information on the canvas , with the processed fragmented strokes 190 .As can be seen by FIG .", "label": "", "metadata": {}, "score": "85.541626"}
{"text": "The stroke fragmentation process fragments the strokes 186 and places these strokes on a processed stroke queue 188 , which may be then used to replace the existing stroke information on the canvas , with the processed fragmented strokes 190 .As can be seen by FIG .", "label": "", "metadata": {}, "score": "85.541626"}
{"text": "Adding Strokes ( 252 ) via the raw - strokes - queue .As the GUI module collects digital ink from the pen input device , it is represented on the GUI side as \" raw strokes \" .These are placed on the raw - stroke - queue .", "label": "", "metadata": {}, "score": "85.561714"}
{"text": "FIG .26 , where A is unexplored , B is True , C is True and False ) .If it is A , decision diamond 408 is investigated to see whether the current node has a veto count greater than zero ( 0 ) .", "label": "", "metadata": {}, "score": "85.65078"}
{"text": "Thereafter , the process moves back to the input process current node block 402 .Thereafter , the process moves to step 402 for the next processing of a current node .This , therefore , is the alternative available when the current node state is found to be \" A \" at step 406 .", "label": "", "metadata": {}, "score": "85.77365"}
{"text": "Thereafter , the process moves back to the input process current node block 402 .Thereafter , the process moves to step 402 for the next processing of a current node .This , therefore , is the alternative available when the current node state is found to be \" A \" at step 406 .", "label": "", "metadata": {}, "score": "85.77365"}
{"text": "0070 ] Under the Inferred Mode protocol , pen input is registered as digital ink as it is drawn on the canvas .Certain pen input , however , can also be interpreted as being intended by the user to select some subset of digital ink markings .", "label": "", "metadata": {}, "score": "86.15488"}
{"text": "0070 ] Under the Inferred Mode protocol , pen input is registered as digital ink as it is drawn on the canvas .Certain pen input , however , can also be interpreted as being intended by the user to select some subset of digital ink markings .", "label": "", "metadata": {}, "score": "86.15488"}
{"text": "0070 ] Under the Inferred Mode protocol , pen input is registered as digital ink as it is drawn on the canvas .Certain pen input , however , can also be interpreted as being intended by the user to select some subset of digital ink markings .", "label": "", "metadata": {}, "score": "86.15488"}
{"text": "20 depicts graph - node hypotheses obtained by the present application for a node - link diagram ; .FIG .21 illustrates graph - link hypotheses obtained by the present application for a node - link diagram ; .FIG .", "label": "", "metadata": {}, "score": "86.35707"}
{"text": "With specific attention to .FIG .13 : . Atomic Stroke ( 282 ): This is a fragmented digital ink stroke obtained by breaking up raw strokes at corners .Very short isolated strokes are called PenDots , longer strokes are called PenStrokes .", "label": "", "metadata": {}, "score": "86.59616"}
{"text": "0145 ] With specific attention to FIG .13 : [ 0146 ] Atomic Stroke ( 282 ) : This is a fragmented digital ink stroke obtained by breaking up raw strokes at corners .Very short isolated strokes are called PenDots , longer strokes are called PenStrokes .", "label": "", "metadata": {}, "score": "86.69452"}
{"text": "0145 ] With specific attention to FIG .13 : [ 0146 ] Atomic Stroke ( 282 ) : This is a fragmented digital ink stroke obtained by breaking up raw strokes at corners .Very short isolated strokes are called PenDots , longer strokes are called PenStrokes .", "label": "", "metadata": {}, "score": "86.69452"}
{"text": "When the pen is lifted the GUI module determines whether the PenPath object is a Tap or a Stroke .If it is a Stroke , the GUI module determines whether the stroke encircles other strokes .If not , the PenPath object is assigned an ID ( the raw - penpath - id ) and is placed on the unprocessed ( raw ) strokes queue 212 .", "label": "", "metadata": {}, "score": "86.99056"}
{"text": "When the pen is lifted the GUI module determines whether the PenPath object is a Tap or a Stroke .If it is a Stroke , the GUI module determines whether the stroke encircles other strokes .If not , the PenPath object is assigned an ID ( the raw - penpath - id ) and is placed on the unprocessed ( raw ) strokes queue 212 .", "label": "", "metadata": {}, "score": "86.99056"}
{"text": "When the pen is lifted the GUI module determines whether the PenPath object is a Tap or a Stroke .If it is a Stroke , the GUI module determines whether the stroke encircles other strokes .If not , the PenPath object is assigned an ID ( the raw - penpath - id ) and is placed on the unprocessed ( raw ) strokes queue 212 .", "label": "", "metadata": {}, "score": "86.99056"}
{"text": "When the pen is lifted the GUI module determines whether the PenPath object is a Tap or a Stroke .If it is a Stroke , the GUI module determines whether the stroke encircles other strokes .If not , the PenPath object is assigned an ID ( the raw - penpath - id ) and is placed on the unprocessed ( raw ) strokes queue 212 .", "label": "", "metadata": {}, "score": "86.99056"}
{"text": "[0125 ]Roughening ( 264 ) : public String roughenObjects(int[ ] object_ids ) ; .[0126 ] The roughenObjects command is the inverse of the formalizeObjects command .The object IDs of selected objects are passed in the int [ ] object_ids argument .", "label": "", "metadata": {}, "score": "87.02963"}
{"text": "[0125 ]Roughening ( 264 ) : public String roughenObjects(int[ ] object_ids ) ; .[0126 ] The roughenObjects command is the inverse of the formalizeObjects command .The object IDs of selected objects are passed in the int [ ] object_ids argument .", "label": "", "metadata": {}, "score": "87.02963"}
{"text": "This , therefore , is the alternative available when the current node state is found to be \" A \" at step 406 .The preceeding are the steps which occur when the current node state is \" B \" .However , if at step 406 , the current node state is \" C \" , then an inquiry is made as to whether the current node is the first node 444 .", "label": "", "metadata": {}, "score": "87.19221"}
{"text": "FIG .28 sets out a more detailed flow diagram for the veto - conflicting - support - node operation in the structured recognition operations ; . [ 0036 ] FIG .29 sets forth an un - veto - conflicting support node operation during the structured recognition operations ; and .", "label": "", "metadata": {}, "score": "87.59166"}
{"text": "FIG .28 sets out a more detailed flow diagram for the veto - conflicting - support - node operation in the structured recognition operations ; . [ 0036 ] FIG .29 sets forth an un - veto - conflicting support node operation during the structured recognition operations ; and .", "label": "", "metadata": {}, "score": "87.59166"}
{"text": "FIG .28 sets out a more detailed flow diagram for the veto - conflicting - support - node operation in the structured recognition operations ; . [ 0036 ] FIG .29 sets forth an un - veto - conflicting support node operation during the structured recognition operations ; and .", "label": "", "metadata": {}, "score": "87.59166"}
{"text": "FIG .26 shows that the node search state variable 460 which can take the value states , A , B , or C. These keep track of whether a node has not yet been explored ( State A ) 462 , explored as True ( State B ) 464 , or explored as both True and False ( State C ) 466 .", "label": "", "metadata": {}, "score": "88.29345"}
{"text": "FIG .26 shows that the node search state variable 460 which can take the value states , A , B , or C. These keep track of whether a node has not yet been explored ( State A ) 462 , explored as True ( State B ) 464 , or explored as both True and False ( State C ) 466 .", "label": "", "metadata": {}, "score": "88.29345"}
{"text": "FIG .26 shows that the node search state variable 460 which can take the value states , A , B , or C. These keep track of whether a node has not yet been explored ( State A ) 462 , explored as True ( State B ) 464 , or explored as both True and False ( State C ) 466 .", "label": "", "metadata": {}, "score": "88.29345"}
{"text": "6 presents an example instruction sheet 130 illustrating the small number of instructions 130 a - 130 f which a user needs to know to operate the UI for the system of the present application .One of the most perplexing issues in user interface design for pen computing is the mode problem .", "label": "", "metadata": {}, "score": "88.425"}
{"text": "With more particular attention to flow diagram 180 , the UI layer provides raw strokes 182 to the unprocessed ( raw ) strokes queue .These strokes are provided to the Recognition layer for a stroke fragmentation process 184 .The stroke fragmentation process fragments the strokes 186 and places these strokes on a processed stroke queue 188 , which may be then used to replace the existing stroke information on the canvas , with the processed fragmented strokes 190 .", "label": "", "metadata": {}, "score": "88.43334"}
{"text": "[0181 ] The system can organize the order of the selectable list , therefore in this discussion , it is considered that the curvilinear connector is first on the selectable list .In this situation if Atom \" 15 \" is tapped , the system moves up the structural hierarchy to the curvilinear connector , and selects ( e.g. , by highlighting ) the curvilinear connector on the canvas .", "label": "", "metadata": {}, "score": "88.81195"}
{"text": "[0181 ] The system can organize the order of the selectable list , therefore in this discussion , it is considered that the curvilinear connector is first on the selectable list .In this situation if Atom \" 15 \" is tapped , the system moves up the structural hierarchy to the curvilinear connector , and selects ( e.g. , by highlighting ) the curvilinear connector on the canvas .", "label": "", "metadata": {}, "score": "88.81195"}
{"text": "Then at step 494 , the process will determine whether or not the non - available support stack is empty .When , again , answering the affirmative , the process is exited .However , when answering in the negative , the node to consider is set to value pop node from the non - available support stack 496 , and the variable veto count of the node to consider will be incremented 498 .", "label": "", "metadata": {}, "score": "88.88873"}
{"text": "Then at step 494 , the process will determine whether or not the non - available support stack is empty .When , again , answering the affirmative , the process is exited .However , when answering in the negative , the node to consider is set to value pop node from the non - available support stack 496 , and the variable veto count of the node to consider will be incremented 498 .", "label": "", "metadata": {}, "score": "88.88873"}
{"text": "Then at step 494 , the process will determine whether or not the non - available support stack is empty .When , again , answering the affirmative , the process is exited .However , when answering in the negative , the node to consider is set to value pop node from the non - available support stack 496 , and the variable veto count of the node to consider will be incremented 498 .", "label": "", "metadata": {}, "score": "88.88873"}
{"text": "[ 0128 ] Roughening ( 264 ) : public String roughenObjects(int[ ] object - ids ) ; .[ 0129 ] The roughenobjects command is the inverse of the formalizeObjects command .The object IDs of selected objects are passed in the int [ ] object_ids argument .", "label": "", "metadata": {}, "score": "88.89278"}
{"text": "CurvilinearConnector ( 292 ) : A CurvilinearConnector is an open path , a single PenStroke or multiple PenStrokes chained end - to - end .A CurvilinearConnector contains optional roles for TerminatorGraphics , or objects that can serve as terminators of a connector , such as an arrowhead .", "label": "", "metadata": {}, "score": "89.32153"}
{"text": "a computing device , in operative association with the electronic display and the input device , and having stored therein for operation in connection with actions by the input device , a user interface ( UI ) including , .a graphical user interface ( GUI ) module which controls input and display of the ink strokes applied to the canvas by the input device , and .", "label": "", "metadata": {}, "score": "89.36406"}
{"text": "[ 0184 ] The system can organize the order of the selectable list , therefore in this discussion , it is considered that the curvilinear connector is first on the selectable list .In this situation if Atom \" 15 \" is tapped , the system moves up the structural hierarchy to the curvilinear connector , and selects ( e.g. , by highlighting ) the curvilinear connector on the canvas .", "label": "", "metadata": {}, "score": "89.48767"}
{"text": "When , again , answering the affirmative , the process is exited .However , when answering in the negative , the node to consider is set to value pop node from the non - available support stack 496 , and the variable veto count of the node to consider will be incremented 498 .", "label": "", "metadata": {}, "score": "89.63393"}
{"text": "Description .This invention was made with Government support under Contract Nos . F30602 - 82-C-0112 , awarded by the U.S. Department of the Air Force , and N00039 - 85-C-0162 awarded by the U.S. Department of the Navy .", "label": "", "metadata": {}, "score": "90.17283"}
{"text": "If it is empty , the process is exited .However , if it is not empty , the node to consider is set to value pop node from the non - available support stack 486 , and the variable veto count of the node to consider will be incremented 488 .", "label": "", "metadata": {}, "score": "92.781654"}
{"text": "If it is empty , the process is exited .However , if it is not empty , the node to consider is set to value pop node from the non - available support stack 486 , and the variable veto count of the node to consider will be incremented 488 .", "label": "", "metadata": {}, "score": "92.781654"}
{"text": "If it is empty , the process is exited .However , if it is not empty , the node to consider is set to value pop node from the non - available support stack 486 , and the variable veto count of the node to consider will be incremented 488 .", "label": "", "metadata": {}, "score": "92.781654"}
{"text": "However , if it is not empty , the node to consider is set to value pop node from the non - available support stack 486 , and the variable veto count of the node to consider will be incremented 488 .", "label": "", "metadata": {}, "score": "92.889694"}
{"text": "Arrowhead ( 286 ): An Arrowhead is formed by Wedge and a PenStroke that meet at a corner , where the PenStroke must fall between the sides of the Wedge .CurvilinearObject ( 290 ): A CurvilinearObject is a chain of PenStrokes that form a non - self - intersecting open path .", "label": "", "metadata": {}, "score": "93.502625"}
{"text": "FIG .8 a pen tap on stroke 152 could indicate the letter \" T \" 154 , the word \" Today \" 156 , or the node in the concept map consisting of the word \" Today \" and its enclosing rectangle 158 .", "label": "", "metadata": {}, "score": "93.63658"}
{"text": "[0151 ] Arrowhead ( 286 ) : An Arrowhead is formed by Wedge and a PenStroke that meet at a corner , where the PenStroke must fall between the sides of the Wedge .[ 0152 ] CurvilinearObject ( 290 ) : A CurvilinearObject is a chain of PenStrokes that form a non - self - intersecting open path .", "label": "", "metadata": {}, "score": "94.42859"}
{"text": "[ 0148 ]Arrowhead ( 286 ) : An Arrowhead is formed by Wedge and a PenStroke that meet at a corner , where the PenStroke must fall between the sides of the Wedge .[ 0149 ] CurvilinearObject ( 290 ) : A CurvilinearObject is a chain of PenStrokes that form a non - self - intersecting open path .", "label": "", "metadata": {}, "score": "94.70473"}
{"text": "[ 0148 ]Arrowhead ( 286 ) : An Arrowhead is formed by Wedge and a PenStroke that meet at a corner , where the PenStroke must fall between the sides of the Wedge .[ 0149 ] CurvilinearObject ( 290 ) : A CurvilinearObject is a chain of PenStrokes that form a non - self - intersecting open path .", "label": "", "metadata": {}, "score": "94.70473"}
{"text": "FIG .28 , greater detail is shown as to the veto conflicting support node operation 424 .Particularly , the variable node to consider is set to the value current node 480 .At this point , the system will look up supporting nodes of the node to be considered in the support table .", "label": "", "metadata": {}, "score": "95.30699"}
{"text": "150 of FIG .8 a pen tap on stroke 152 could indicate the letter \" T \" 154 , the word \" Today \" 156 , or the node in the concept map consisting of the word \" Today \" and its enclosing rectangle 158 .", "label": "", "metadata": {}, "score": "95.46042"}
{"text": "150 of FIG .8 a pen tap on stroke 152 could indicate the letter \" T \" 154 , the word \" Today \" 156 , or the node in the concept map consisting of the word \" Today \" and its enclosing rectangle 158 .", "label": "", "metadata": {}, "score": "95.46042"}
{"text": "The method of claim 4 , wherein the search algorithm is a tree search algorithm .The method of claim 5 , wherein the tree search algorithm is a depth - first tree algorithm .The method of claim 5 , wherein the tree search algorithm is a best - first tree search algorithm .", "label": "", "metadata": {}, "score": "95.75778"}
{"text": "Particularly , the variable node to consider is set to the value current node 480 .At this point , the system will look up supporting nodes of the node to be considered in the support table .The supporting nodes will be added to a non - available support stack 482 , and the system will determine whether the non - available support stack is empty 484 .", "label": "", "metadata": {}, "score": "96.09491"}
{"text": "28 , greater detail is shown as to the veto conflicting support node operation 424 .Particularly , the variable node to consider is set to the value current node 480 .At this point , the system will look up supporting nodes of the node to be considered in the support table .", "label": "", "metadata": {}, "score": "97.98439"}
{"text": "28 , greater detail is shown as to the veto conflicting support node operation 424 .Particularly , the variable node to consider is set to the value current node 480 .At this point , the system will look up supporting nodes of the node to be considered in the support table .", "label": "", "metadata": {}, "score": "97.98439"}
{"text": "However , if at step 406 , the current node state is \" C \" , then an inquiry is made as to whether the current node is the first node 444 .When the answer no , then the value of the variable current node is decremented 446 , and the process moves back to the processing of a current node 402 .", "label": "", "metadata": {}, "score": "98.85867"}
{"text": "However , if at step 406 , the current node state is \" C \" , then an inquiry is made as to whether the current node is the first node 444 .When the answer no , then the value of the variable current node is decremented 446 , and the process moves back to the processing of a current node 402 .", "label": "", "metadata": {}, "score": "98.85867"}
{"text": "Then a determination is made 414 whether the optimistic score is less than the best score .If yes , a variable current node T / F value is set to the value , False 416 .Then the variable current node state is set to the value \" C \" 418 and the value of the variable current node is decremented 420 , and the process moves back to the process current node input 402 .", "label": "", "metadata": {}, "score": "99.68169"}
{"text": "Then a determination is made 414 whether the optimistic score is less than the best score .If yes , a variable current node T / F value is set to the value , False 416 .Then the variable current node state is set to the value \" C \" 418 and the value of the variable current node is decremented 420 , and the process moves back to the process current node input 402 .", "label": "", "metadata": {}, "score": "99.68169"}
{"text": "Then a determination is made 414 whether the optimistic score is less than the best score .If yes , a variable current node T / F value is set to the value , False 416 .Then the variable current node state is set to the value \" C \" 418 and the value of the variable current node is decremented 420 , and the process moves back to the process current node input 402 .", "label": "", "metadata": {}, "score": "99.68169"}
{"text": "FIG .23 .FIG .24 illustrates how a support - table 390 encodes the support structure of a hierarchical group lattice 380 .The horizontal dimension ( column - index ) of the table lists all of the Group nodes , in order of support - context score .", "label": "", "metadata": {}, "score": "102.03926"}
{"text": "If yes , a variable current node T / F value is set to the value , False 416 .Then the variable current node state is set to the value \" C \" 418 and the value of the variable current node is decremented 420 , and the process moves back to the process current node input 402 .", "label": "", "metadata": {}, "score": "103.2087"}
{"text": "The computer readable medium of claim 15 , wherein the algorithm is a tree search algorithm .The computer readable medium of claim 16 , wherein the tree search algorithm is a depth - first tree search algorithm .The computer readable medium of claim 16 , wherein the tree search algorithm is a best - first search algorithm .", "label": "", "metadata": {}, "score": "103.46475"}
{"text": "A support - table , such as table 390 of FIG .24 , is constructed based on the hierarchical lattice , e.g. , of FIG .23 .FIG .24 illustrates how a support - table 390 encodes the support structure of a hierarchical group lattice 380 .", "label": "", "metadata": {}, "score": "116.50215"}
{"text": "A support - table , such as table 390 of FIG .24 , is constructed based on the hierarchical lattice , e.g. , of FIG .23 .FIG .24 illustrates how a support - table 390 encodes the support structure of a hierarchical group lattice 380 .", "label": "", "metadata": {}, "score": "116.50215"}
{"text": "A support - table , such as table 390 of FIG .24 , is constructed based on the hierarchical lattice , e.g. , of FIG .23 .FIG .24 illustrates how a support - table 390 encodes the support structure of a hierarchical group lattice 380 .", "label": "", "metadata": {}, "score": "116.50215"}
