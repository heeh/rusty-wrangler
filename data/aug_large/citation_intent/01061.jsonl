{"text": "To this end , a pre - processing of data is needed aimed at extracting relationships intimately connected to the temporal nature of data that will be make available to the discovery algorithm .The predicate logic language of ILP methods together with the recent advances as to efficiency makes them adequate for this task . 1 Introduction Knowledge Discovery in Databases is concerned with identifying interesting patterns in complex structured domains .", "label": "", "metadata": {}, "score": "37.382732"}
{"text": "Esra Erdem and Pierre Flener .Completing open logic programs by constructive induction .International Journal of Intelligent Systems , 14(10):995 - 1019 , 1999 .Floriana Esposito , Donato Malerba , and Francesca A. Lisi .Induction of recursive theories in the normal ilp setting : Issues and solutions .", "label": "", "metadata": {}, "score": "43.55964"}
{"text": "Institute of Cognitive Science , Universit\u00e4t Osnabr\u00fcck , 2007 .Induction is data - driven and based onstructural regularities between example terms .In our approach , functional programs are represented as constructor term rewriting systems containing recursive rewrite rules .In addition to the examples for the target functions , background knowledge functions that may be called by the induced functions can be given in form of ground equations .", "label": "", "metadata": {}, "score": "43.98316"}
{"text": "This problem is shown to be effectively solvable in .the general case and to lead to correct inference in the .limit of the pattern languages .There exists a polynomial .time algorithm for it in the restricted case of .", "label": "", "metadata": {}, "score": "44.272312"}
{"text": "Our theoretical analysis defines the class of logic programs for which our approach is complete , described in terms characteristic of other ILP approaches .Our current implementation is considerably faster than previously reported .We present evidence demonstrating that , given randomly selected inputs , increasing the number of positive examples increases accuracy and reduces the number of outputs .", "label": "", "metadata": {}, "score": "44.629875"}
{"text": "It inherits its logical decision tree formalism from the TILDE system , but instead of using class information to guide the search , it employs the principles of instance based learning in order to perform clustering .Various experiments are discussed , which show the promise of the approach . 1 Introduction A decision tree is usually seen as representing a theory for classification of examples .", "label": "", "metadata": {}, "score": "44.73372"}
{"text": "Keywords : supervised learning , representation , relational learning 1 Introduction Relational learning algorithms extend the capabilities of propositional or monadic supervised learning algorithms .Supervised learning algorithms input a set of instances , which are described by a set of predictor descriptors and a target descriptor .", "label": "", "metadata": {}, "score": "44.933083"}
{"text": "Similar problems can be found in the knowledge discovery field .For instance , finding integrity constraints holding in a database closely corresponds to finding classification rules with ILP , as we will show later on in this paper .In the past , research on knowledge discovery in databases ( KDD ) has focused mainly on propositional techniques ; this implies that relationships between the attributes of one tuple can be found , but no relationships b .. B [ E ) .", "label": "", "metadata": {}, "score": "45.173798"}
{"text": "Thirdly , we give a complete discussion of existence and non - existence of greatest specializations in each of the six ordered languages .Extracted Text .In ILP , the three most important generality orders are subsumption , implication and implication relative to background knowledge .", "label": "", "metadata": {}, "score": "45.730232"}
{"text": "Thirdly , we give a complete discussion of existence and non - existence of greatest specializations in each of the six ordered languages .Extracted Text .In ILP , the three most important generality orders are subsumption , implication and implication relative to background knowledge .", "label": "", "metadata": {}, "score": "45.730232"}
{"text": "On the other hand , second generation knowledge acquisition technology is characterized by two main features : the use of deep knowledge and machine learning .In the paper we review three second generation methods that partially automate the knowledge acquisition process : inductive learning of rules from examples , model - based rule learning , and qualitative model acquisition .", "label": "", "metadata": {}, "score": "45.807655"}
{"text": "From our experimental results with task ( 1 ) the best - performing algorithm was selected and a number of improvements were made .The principal extension to this generalisation method was to alter its representation from classical logic to a non - monotonic formalism .", "label": "", "metadata": {}, "score": "45.912254"}
{"text": "In this paper we describe an implemented refinement algorithm , which processes a logic program automatically generated from the theory .We overcame the size and expressiveness problems typically encountered when applying theory refinement to a logic program of this kind by designing focused , composite refinement operators within the algorithm .", "label": "", "metadata": {}, "score": "45.985878"}
{"text": "Emanuel Kitzelmann and Ute Schmid .Inducing constructor systems from example - terms by detecting syntactical regularities .Elsevier Science Publishers Ltd. .from few , well chosen input / output - examples ( I / O - examples ) .Potential applications for automatic program or algorithm . induction are to enable end users to create their own .", "label": "", "metadata": {}, "score": "45.997047"}
{"text": "First , we . introduce conditional higher - order term rewriting as a . common framework for inductive logic and inductive . functional program synthesis .Then we characterise the . several ILP systems which belong either to the most .recently researched or currently to the most powerful IP . systems within this framework .", "label": "", "metadata": {}, "score": "46.036102"}
{"text": "References Aha , D. W. ( 1992 ) .Relating relational learning algorithms .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .233 - 254 .Academic Press .", "label": "", "metadata": {}, "score": "46.044415"}
{"text": "References Aha , D. W. ( 1992 ) .Relating relational learning algorithms .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .233 - 254 .Academic Press .", "label": "", "metadata": {}, "score": "46.044415"}
{"text": "83 , 137 - 161 ( 2011 ) CrossRef MATH MathSciNet .Uno , T. , Asai , T. , Uchida , Y. , Arimura , H. : An efficient algorithm for enumerating closed patterns in transaction databases .In : Proceedings of the 7th International Conference on Discovery Science , pp .", "label": "", "metadata": {}, "score": "46.298496"}
{"text": "Background .knowledgeBackground knowledgeis given in the form of . operators and their conditions of application .Furthermore . synthesizing recursive program schemes instead of programs . in a predefined programming language enables us to combine . program synthesis and analogical reasoning .", "label": "", "metadata": {}, "score": "46.556835"}
{"text": "In a . second step , this initial program term is generalized into .recursive equations by searching for syntactical .regularities in the term .Our approach extends the . classical work in several aspects .The most important .extensions are that we are able to induce a set of .", "label": "", "metadata": {}, "score": "46.680958"}
{"text": "This approach re - expresses a . recursive program using a non - recursive application of a .higher - order function .It divides a program recursion . pattern into two parts : the recursion code and the . application of the code .", "label": "", "metadata": {}, "score": "46.926098"}
{"text": "information necessary for coding recursive loops and . branches in LISP .Information from the user concerning the .desired program is used to instantiate the schemas to yield . production rules , and then these rules generate executable .code in a strictly syntactic fashion .", "label": "", "metadata": {}, "score": "47.06324"}
{"text": "In this paper , we indicate some possible applications of ILP or similar techniques in the knowledge discovery field , and then discuss several methods for adapting and linking ILP - systems to relational database systems .The proposed methods range from \" pure ILP \" to \" based on techniques originating in ILP \" .", "label": "", "metadata": {}, "score": "47.464214"}
{"text": "deterministic multi - step environments.1 A stepwise . introduction to ACS is given .We start with the basic . algorithm and apply it in simple ' ' woods ' ' environments .Itwill be shown that this algorithm can only learn in a . special kind of deterministic multi - step environments .", "label": "", "metadata": {}, "score": "47.75381"}
{"text": "It inherits its logical decision tree formalism from the TILDE system , but instead of using class information to guide the search , it employs the principles of instance based learning in order to perform clustering .Various experimen ... \" .", "label": "", "metadata": {}, "score": "47.779716"}
{"text": "Robert P. Nix .Editing by example .ACM Transactions on Programming Languages and Systems , 7(4):600 - 621 , 1985 .Roland J. Olsson and D. M. W. Powers .Machine learning of human language through automatic programming .In ICCS'03 : Proceedings of the 4th International Conference on Cognitive Science ( Sydney , Australia , July13 - 17 , 2003 ) , pages 507 - 512 , 2003 .", "label": "", "metadata": {}, "score": "47.791054"}
{"text": "ACM , 2005 .Emanuel Kitzelmann .Data - driven induction of recursive functions from Inpuit / Output - examples .In Emanuel Kitzelmann and Ute Schmid , editors , AAIP'07 : Proceedings of the 2nd Workshop on Approaches and Applications of Inductive Programming ( Warsaw , Poland , September17 , 2007 ) , pages 15 - 26 , 2007 .", "label": "", "metadata": {}, "score": "47.911625"}
{"text": "Note that this set can be seen as a description of the even integers , learned from these examples .Thus induction of clausal theories is a form of learning from examples .For a more extensive introduction to ILP , we refer to ( Lavra^c & D^zeroski , 1994 ; Muggleton & De Raedt , 1994 ) .", "label": "", "metadata": {}, "score": "48.05664"}
{"text": "Note that this set can be seen as a description of the even integers , learned from these examples .Thus induction of clausal theories is a form of learning from examples .For a more extensive introduction to ILP , we refer to ( Lavra^c & D^zeroski , 1994 ; Muggleton & De Raedt , 1994 ) .", "label": "", "metadata": {}, "score": "48.05664"}
{"text": "Now ECAI : Proceedings of the 4th European Conference on Artificial Intelligence .Yves Kodratoff .A class of functions synthesized from a finite number of examples and a LISP program scheme .International Journal of Parallel Programming , 8(6):489 - 521 , December 1979 .", "label": "", "metadata": {}, "score": "48.07316"}
{"text": "We first overview past and .present achievements , focusing on the techniques that were . designed specifically for the inductive synthesis of .recursive logic programs but also discussing a few general .ILP techniques that can also induce non - recursive . hypotheses .", "label": "", "metadata": {}, "score": "48.437572"}
{"text": "may contain more than one recursive call , and additionally .Emanuel Kitzelmann and Ute Schmid .Induction of functional programs based on relations between Input / Output examples .In C. Freksa , M. Kohlhase , and K. Schill , editors , KI'06 : Proceedings of 29th Annual German Conference on Artificial Intelligence ( Bremen , June14 - 19 , 2006 ) , 2006 .", "label": "", "metadata": {}, "score": "48.490517"}
{"text": "As a consequence , independent execution of all queries may involve a lot of redundant computation .We propose a mechanism for executing a hierarchically structured set of queries ( a \" query pack \" ) through which a lot of redundancy in the computation is removed .", "label": "", "metadata": {}, "score": "48.57327"}
{"text": "Z. Alexin , T. Gyimothy , and H. Bostr\u00f6m .Integrating algorithmic debugging and unfolding transformation in an interactive learner .In W. Wahlster , editor , ECAI'96 : Proceedings of the 12th European Conference on Artificial Intelligence ( Budapest ) , pages 403 - 407 , 1996 .", "label": "", "metadata": {}, "score": "48.88007"}
{"text": "Machine Learning , 26(2 - 3):99 - 146 , February 1997 .Databases ; Data Mining ; Learning ; Induction ; Semantics for .CLAUDIEN is an inductive logic programming engine that fits .in the descriptive data mining paradigm .CLAUDIEN addresses .", "label": "", "metadata": {}, "score": "48.884754"}
{"text": "Experimental results demonstrate significant efficiency gains .Our query pack execution mechanism is very general in nature and could be incorporated in most other ILP systems , with similar efficiency improvements to be expected . ...LA tree size original disjoint packed speedup ratio ( nodes ) total comp exec total comp exec net exec 592 examples 0 27 2.0 4.2 2.26 0.52 1.79 0.35 0.12 1.1 4.3 1 15 4.95 9.13 5.06 1.54 3.04 0.77 0.2 ... . by Jan Ramon , Wim Van Laer , Maurice Bruynooghe - In Proceedings of the CompulogNet Area Meeting on & apos;Computational Logic and Machine Learning , 1998 . \" ...", "label": "", "metadata": {}, "score": "48.91871"}
{"text": "4 ] ) .Recently there is a growing interest in using more expressive first order representations of objects and in upgrading propositional learning systems into first order learning systems ( e.g. TILDE [ 2 ] , ICL [ 5 ] and CLAUDIEN [ 4 ] ) .", "label": "", "metadata": {}, "score": "48.951675"}
{"text": "The arguments of newly invented predicates in ILP .In ILP'94 : Proceedings of the 4th International Workshop on Inductive Logic Programming ( Bonn , Germany , Sept.12 - 14 , 1994 ) , volume 237 of GMD - Studien .Gesellschaft f\u00fcr Mathematik und Datenverarbeitung MBH , 1994 .", "label": "", "metadata": {}, "score": "48.967506"}
{"text": "The general scheme for constructing this system based on the given technology is described .The fundamental role played by the mechanism of partial evaluation in providing the efficiency of implementation and maintenance of the extension mode for inductively specified languages is stressed .", "label": "", "metadata": {}, "score": "48.98595"}
{"text": "Data - driven induction of functional programs .IOS Press .Emanuel Kitzelmann .Analytical inductive functional programming .In Michael Hanus , editor , Logic - Based Program Synthesis and Transformation . 18thInternational Symposium , LOPSTR'08 , Valencia , Spain , July17 - 18 , 2008 .", "label": "", "metadata": {}, "score": "49.01644"}
{"text": "Iterative Induction of Logic Programs .PhD thesis , Departamento de Ci\u00eancia de Computadores , Universidade do Porto , 1998 .J. P. Jouannaud and Yves Kodratoff .Characterization of a class of functions synthesized from examples by a Summers like method using a ' B.M.W.'matching technique .", "label": "", "metadata": {}, "score": "49.322723"}
{"text": "Efficient top - down induction of logic programs .SIGART Bulletin , 5(1):33 - 42 , January 1994 . induction ; inductive programming ; machine learning ; program .definitions of relations from example and extensionally . defined background relations .It demonstrates the . successful application of a general to specific approach to .", "label": "", "metadata": {}, "score": "49.417908"}
{"text": "In this paper , we examine these so - called \" nonmonotonic semantics \" definitions and show that non - monotonicity is only an incidental property of the data mining learning task , and that this task makes perfect sense without such an assumption .", "label": "", "metadata": {}, "score": "49.572243"}
{"text": "generalizes explanation structures and reports empirical .results that demonstrate the value of acquiring recursive .and iterative concepts .The BAGGER2 algorithm learns . recursive and iterative concepts , integrates results from .multiple examples , and extracts useful subconcepts during . generalization .", "label": "", "metadata": {}, "score": "49.821983"}
{"text": "Inductive Logic Programming system is a program that takes as an input logic theories and outputs a correct hypothesis H wrt theories An algorithm of an ILP system consists of two parts : hypothesis search and hypothesis selection .First a hypothesis is searched with an inductive logic programming procedure , then a subset of the found hypotheses ( in most systems one hypothesis ) is chosen by a selection algorithm .", "label": "", "metadata": {}, "score": "50.15365"}
{"text": "Martin M\u00fchlpfordt .Syntaktische Inferenz Rekursiver Programmschemata .Diplomarbeit , Technische Universit\u00e4t Berlin , 2000 .M. M\u00fcller and Ute Schmid .IPAL - a system that integrates problem solving , skill acquisition , and learning by analogy .Stephen H. Muggleton and Wray L. Buntine .", "label": "", "metadata": {}, "score": "50.23992"}
{"text": "It strives to extract maximal redundancy from examples , transforming structure into randomness .A major strength of the method is its application to learning problems where negative examples of concepts are scarce or unavailable .A new measure called model complexity is introduced , and its use is illustrated and compared with a proof complexity measure on relational learning tasks .", "label": "", "metadata": {}, "score": "50.24938"}
{"text": "Inductive Logic Programming ( ILP ) approach for the .discovery of mutual recursive patterns from text .Mutual . recursion allows dependencies among entities to be explored . in data and extraction models to be applied in a .context - sensitive mode .", "label": "", "metadata": {}, "score": "50.26448"}
{"text": "Logical settings for concept - learning .Artificial Intelligence , 95(1):187 - 201 , 1997 .logic ( as well as some variants ) are analyzed and related .It is shown that learning from interpretations reduces to .learning from entailment , which in turn reduces to learning .", "label": "", "metadata": {}, "score": "50.289265"}
{"text": "In an initial discussion round three focus topics were identified and further discussed in working groups .Comparing Inductive Logic and Inductive Functional Programming as well as other Approaches to Program Synthesis , .Potential New Areas of Applications and Challenges for Inductive Programming , .", "label": "", "metadata": {}, "score": "50.332"}
{"text": "In this field , we consider the problem of predicting the mutagenic activity of small molecules : a property that is related to carcinogenicity , and an important consideration in developing less hazardous drugs .By providing an ILP system with progressively more structural information concerning the molecules , we compare the predictive power of the logical theories constructed against benchmarks set by regression , neural , and tree - based methods .", "label": "", "metadata": {}, "score": "50.398502"}
{"text": "performed during the synthesis process consists in . deducations of term equations and inequalities .The . investigated synthesis algorithm is well - structured and . assumes some basic knowledge formalized as a heterogeneous . signature with some first order axioms .", "label": "", "metadata": {}, "score": "50.475365"}
{"text": "Recently , propositional learning was successfully applied to learn classification rules from spectra with assigned atom ...Least Generalizations and Greatest Specializations of Sets of Clauses .Abstract : The main operations in Inductive Logic Programming ( ILP ) are generalization and specialization , which only make sense in a generality order .", "label": "", "metadata": {}, "score": "50.498257"}
{"text": "35 - 42 ( 2003 ) .Di Mauro , N. , Basile , T. , Ferilli , S. , Esposito , F. , Fanizzi , N. : An exhaustive matching procedure for the improvement of learning efficiency .In : Proceedings 13th International Conference on Inductive Logic Programming , pp .", "label": "", "metadata": {}, "score": "50.563385"}
{"text": "Inductive synthesis of functional programs .In J. Calmet , B. Benhamou , O. Caprotti , L. Henocque , and V. Sorge , editors , Artificial Intelligence , Automated Reasoning , and Symbolic Computation .Joint International Conferences AISC'02 and Calculemus'02 , Marseille , France , July1 - 5 , 2002 .", "label": "", "metadata": {}, "score": "50.769264"}
{"text": "This leads to a particular approach to verification and transformation , which places emphasis on the arrows between programs , rather than the programs themselves .These arrows are the program morphisms of the title .Examples are given , together with certain extensions of the idea .", "label": "", "metadata": {}, "score": "50.7856"}
{"text": "Motivation and scope Inductive concept learning consists of finding mappings of individuals ( or objects ... . ... oceed by rewriting terms to simpler expressions . by Saso Dzeroski , Hendrik Blockeel , Boris Kompare , Stefan Kramer , Bernhard Pfahringer , Wim Van Laer - Applied Artificial Intelligence , 1999 .", "label": "", "metadata": {}, "score": "50.96436"}
{"text": "A general approach to inference of context - free programmed grammars .IEEE Transactions on Systems , Man , and Cybernetics , 14(2):191 - 202 , 1984 .Jianguo Lu and Jiafu Xu .Analogical program derivation based on type theory .", "label": "", "metadata": {}, "score": "51.04138"}
{"text": "In the second step we parse this automaton .Ehud Y. Shapiro .An algorithm that infers theories from facts .In A. Drinan , editor , IJCAI'81 : Proceedings of the 7th International Joint Conference on Artificial Intelligence ( Vancouver , BC , Canada , Aug.24 - 28 , 1981 ) , pages 446 - 451 , Los Altos , CA , 1981 .", "label": "", "metadata": {}, "score": "51.07066"}
{"text": "Or perhaps one might think that the decidability of implication for function - free clauses immediately implies the existence of an LGI .But in fact , decidability is not a sufficient condition for the existence of a least generalization .For example , it is decidable whether one function - free clause C implies another function - free clause D relative to function - free background knowledge .", "label": "", "metadata": {}, "score": "51.11833"}
{"text": "Or perhaps one might think that the decidability of implication for function - free clauses immediately implies the existence of an LGI .But in fact , decidability is not a sufficient condition for the existence of a least generalization .For example , it is decidable whether one function - free clause C implies another function - free clause D relative to function - free background knowledge .", "label": "", "metadata": {}, "score": "51.11833"}
{"text": "recursive program schemes .By this separation , the . induction of recursive program schemes can be reduced to a . pattern - matching problem which can be handled by a generic . algorithm .Construction of initial programs is performed .", "label": "", "metadata": {}, "score": "51.20142"}
{"text": "In Machine Intelligence , volume 12 , pages 139 - 148 .Oxford University Press , 1990 .J. M. Barzdin\u0161 , G. Barzdin\u0161 , K. Apsitis , and U. Sarkans .Towards efficient inductive synthesis of expressions from input / output examples .", "label": "", "metadata": {}, "score": "51.204025"}
{"text": "explanation - based learning involves relaxing constraints on .the variables in the explanation of a specific example , . rather than generalizing thegraphical structureof the .explanation itself .However , this precludes the acquisition . of concepts where an iterative or recursive process is . implicitly represented in the explanation by a fixed number . of applications .", "label": "", "metadata": {}, "score": "51.218807"}
{"text": "We prove that this schema .isstrongcomplete in tha way that , given some evidence , it . is possible to induce any program which could have .generated that evidence .We outline some possible . restrictions in order to improve the tractability of the . schema .", "label": "", "metadata": {}, "score": "51.28787"}
{"text": "Recent advances of grammatical inference .Theoretical Computer Science , 185(1):15 - 45 , October 1997 .K. Sch\u00e4dler , U. Schmid , B. Machenschalk , and H. L\u00fcbben .A neural net for determining structural similarity of recursive programs .In R. Bergmann and W. Wilke , editors , GWCBR'97 : Proceedings of the 5th German Workshop on Case - Based Reasoning .", "label": "", "metadata": {}, "score": "51.402477"}
{"text": "Inductive logic programming : Theory and methods .Journal of Logic Programming 19(20 ) , 629 - 679 .Opitz , D.W. and Shavlik , J.W. 1997 .Connectionist theory refinement : Genetically searching the space of network topologies .Journal of Artficial Intelligence Research , 6 , 177 - 209 .", "label": "", "metadata": {}, "score": "51.442276"}
{"text": "Automatic design of algorithms through evolution ( ADATE ) .In Emanuel Kitzelmann and Ute Schmid , editors , AAIP'07 : Proceedings of the 2nd Workshop on Approaches and Applications of Inductive Programming ( Warsaw , Poland , September17 , 2007 ) , page 1 , 2007 .", "label": "", "metadata": {}, "score": "51.544846"}
{"text": "their conditions of application .Furthermore synthesizing .recursive program schemes instead of programs in a .predefined programming language enables us to combine . program synthesis and analogical reasoning .A recursive . program scheme represents the class of structural identical . programs and can be assigned different semantics by . interpretation .", "label": "", "metadata": {}, "score": "51.729332"}
{"text": "speaking , attribute - based learning also includes such .approaches to learning as neural networks and nearest .neighbor techniques .The advantages of attribute - based .learning are : relative simplicity , efficiency , and .existence of effective techniques for handling noisy data .", "label": "", "metadata": {}, "score": "51.757214"}
{"text": "An Artificial Intelligence Approach , volume 2 , chapter 10 , pages 247 - 288 .Morgan Kaufmann , Los Altos , CA , 1986 .Ken Sadohara and Makoto Haraguchi .Analogical logic program synthesis from examples .In Nada Lavrac and Stefan Wrobel , editors , Machine Learning : ECML-95 .", "label": "", "metadata": {}, "score": "51.95169"}
{"text": "References . D. Angluin and C. H. Smith .Inductive inference : theory and methods . A. W. Biermann , G. Guiho , and Y. Kodratoff , editors .Automatic Program Construction Techniques .Macmillan , New York , 1984 .P. A. Carpenter , M. A. Just , and P. Shell .", "label": "", "metadata": {}, "score": "52.038803"}
{"text": "1297 of LNAI .Apt , K. and Bol , R. 1994 .Logic programming and negation : A survey .Journal of Logic Programming , 19(20 ) , 9 - 71 .Argamon - Engelson , S. and Koppel , M. 1998 .", "label": "", "metadata": {}, "score": "52.152954"}
{"text": "J. Ross Quinlan .Induction of decision trees .Machine Learning , 1(1):81 - 106 , March 1986 .inductive inference from examples has been demonstrated . successfully in several practical applications .This paper . summarizes an approach to synthesizing decision trees that . has been used in a variety of systems , and it describes one . such system , ID3 , in detail .", "label": "", "metadata": {}, "score": "52.280617"}
{"text": "( DFA)Mlabeled by the instructions of the program is learned .from a set of example traces and membership queries to the . user .It accepts all preffixes of traces of the target . program .withkbeing the total number of instructions in the initial .", "label": "", "metadata": {}, "score": "52.308098"}
{"text": "Thirdly , we give a complete discussion of existence and non - existence of greatest specializations in each of the six ordered languages .Introduction Inductive Logic Programming ( ILP ) is a subfield of Logic Programming and Machine Learning that tries to induce clausal theories from given sets of positive and negative examples .", "label": "", "metadata": {}, "score": "52.428246"}
{"text": "Thirdly , we give a complete discussion of existence and non - existence of greatest specializations in each of the six ordered languages .Introduction Inductive Logic Programming ( ILP ) is a subfield of Logic Programming and Machine Learning that tries to induce clausal theories from given sets of positive and negative examples .", "label": "", "metadata": {}, "score": "52.428246"}
{"text": "inductive programming ; program evolution ; program .Andreas Hamfelt , J\u00f8rgen Fischer Nilsson , and Nikolaj Oldager .Logic program synthesis as problem reduction using combining forms .Automated Software Engineering , 8(2):167 - 193 , 2001 .logic programs from examples using problem decomposition .", "label": "", "metadata": {}, "score": "52.45821"}
{"text": "CLAUDIEN also employs a novel declarative .bias mechanism to define the set of clauses that may appear .Luc De Raedt , editor .Advances in Inductive Logic Programming .IOS Press , 1996 .learning of recursive logic programs , thus interesting for .", "label": "", "metadata": {}, "score": "52.51712"}
{"text": "A Strong Complete Schema for Inductive Functional Logic Programming .In Saso Dzeroski and Peter A. Flach , editors , Inductive Logic Programming .9th International Workshop , ILP'99 , Bled , Slovenia , June24 - 27 , 1999 .Proceedings , volume 1634 of Lecture Notes in Computer Science .", "label": "", "metadata": {}, "score": "52.527206"}
{"text": "Peter Idestam - Almquist .Efficient induction of recursive definitions by structural analysis of saturations .In Luc De Raedt , editor , ILP'95 : Proceedings of the 5th International Workshop on Inductive Logic Programming ( Tokyo , Japan , June17 , 1995 , 1995 .", "label": "", "metadata": {}, "score": "52.554276"}
{"text": "It analyzes saturations .using path structures , which express streams of terms .processed by predicates and was originally introduced by .Identam - Almquist .We introduce extension and difference of . path structures .Recursive clauses can be expressed as a . difference among path structures .", "label": "", "metadata": {}, "score": "52.61396"}
{"text": "The task of discovering interesting regularities in ( large ) sets of data ( data mining , knowledge discovery ) has recently met with increased interest in Machine Learning in general and in Inductive Logic Programming ( ILP ) in particular .", "label": "", "metadata": {}, "score": "52.64649"}
{"text": "Abstract .Recent theoretical insights have led to the introduction of efficient algorithms for mining closed item - sets .This paper investigates potential generalizations of this paradigm to mine closed patterns in relational , graph and network databases .Several semantics and associated definitions for closed patterns in relational data have been introduced in previous work , but the differences among these and the implications of the choice of semantics was not clear .", "label": "", "metadata": {}, "score": "52.650047"}
{"text": "LSA-97 - 01E.Ute Schmid and Roland J. Olsson , editors .Special Topic on Approaches and Applications of Inductive Programming , volume 7 .MIT Press , 2006 .Ute Schmid and Jens Waltermann .Automatic synthesis of XSL - transformations from example documents .", "label": "", "metadata": {}, "score": "52.698837"}
{"text": "and Wadler 's Introduction to Functional Programming can be .Jos\u00e9 Meseguer and Joseph A. Goguen .Initiality , induction , and computability .In Maurice Nivat and John C. Reynolds , editors , Algebraic Methods in Semantics , pages 459 - 541 .", "label": "", "metadata": {}, "score": "52.765633"}
{"text": "the use of entailment can not be eliminated to learnACH(k ) .even with both equivalence and membership queries for . A. Armando , A. Smaill , and I. Green .Automatic synthesis of recursive programs : the proof - planning paradigm .", "label": "", "metadata": {}, "score": "52.82312"}
{"text": "functional Lisp programs of Summers ( 1977 ) .In a first . step , I / O - examples are rewritten to traces which explain .the outputs given the respective inputs based on a datatype . theory .These traces can be integrated into one conditional .", "label": "", "metadata": {}, "score": "52.853996"}
{"text": "proofs corresponding to the synthesis of recursive .functional programs .This plan provides a significant .degree of automation in the construction of recursive .programs from specifications , together with correctness . proofs .This plan makes use of meta - variables to allow . successive refinement of the identity of unknowns , and so . allows the program and the proof to be developed hand in . hand .", "label": "", "metadata": {}, "score": "52.942696"}
{"text": "Machine Learning , 19(2 ) , 95 - 131 .Sebag , M. and Rouveirol , C. 1996 .Constraint inductive logic programming .In L. De Raedt , editor , Proceedings of the 5th International Workshop on Inductive Logic Programming ( published as Advances in Inductive Logic Programming , IOS Press ) .", "label": "", "metadata": {}, "score": "52.99961"}
{"text": "Dana Angluin .Queries and concept learning .Machine Learning , 2(4):319 - 342 , April 1988 .Several types of queries are described and studied : membership , equivalence , subset , superset , disjointness , and exhaustiveness queries .Examples are given of efficient learning methods using various subsets of these queries for formal domains , including the regular languages , restricted classes of context - free languages , the pattern languages , and restricted types of prepositional formulas .", "label": "", "metadata": {}, "score": "53.06662"}
{"text": "Well - known ILP - systems such as Foil ( Quinlan & Cameron - Jones , 1993 ) , Linus ( Lavra^c & D^zeroski , 1994 ) and Mobal ( Morik , Wrobel , Kietz , & Emde , 1993 ) all use only function - free clauses .", "label": "", "metadata": {}, "score": "53.076805"}
{"text": "Well - known ILP - systems such as Foil ( Quinlan & Cameron - Jones , 1993 ) , Linus ( Lavra^c & D^zeroski , 1994 ) and Mobal ( Morik , Wrobel , Kietz , & Emde , 1993 ) all use only function - free clauses .", "label": "", "metadata": {}, "score": "53.076805"}
{"text": "to use a calculus to uniformly represent specification , . program , and the development from the former to the latter .Thus analogical reasoning can be discussed in a single . framework .In this framework , we first propose an analogy .", "label": "", "metadata": {}, "score": "53.082024"}
{"text": "but that , not even the class of regular languages is .Palem GopalaKrishna .Data - dependencies and learning in artificial systems .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1st", "label": "", "metadata": {}, "score": "53.20749"}
{"text": "For instance , Idestam - Almquist ( 1993 , 1995 ) studies least generalizations under T - implication as an approximation to LGI 's .Muggleton and Page ( 1994 ) investigate self - saturated clauses .A clause is self - saturated if it is subsumed by any clause which implies it .", "label": "", "metadata": {}, "score": "53.2502"}
{"text": "For instance , Idestam - Almquist ( 1993 , 1995 ) studies least generalizations under T - implication as an approximation to LGI 's .Muggleton and Page ( 1994 ) investigate self - saturated clauses .A clause is self - saturated if it is subsumed by any clause which implies it .", "label": "", "metadata": {}, "score": "53.2502"}
{"text": "In our approach , functional programs are . represented as constructor term rewriting systems ( CSs ) .containing recursive rules .I / O - examples for a target .function to be implemented are a set of pairs of terms .", "label": "", "metadata": {}, "score": "53.270844"}
{"text": "Our current focus is on Inductive Logic Programming methods which are based on previously developed systems for the generalisation and specialisation of normal logic programs .In the current work we are principally concerned with improving these methods to be able to handle more examples during learning .", "label": "", "metadata": {}, "score": "53.310684"}
{"text": "The background knowledge is given as a logic theory B , commonly in the form of Horn clauses used in logic programming .The positive and negative examples are given as a conjunction and of unnegated and negated ground literals , respectively .", "label": "", "metadata": {}, "score": "53.32088"}
{"text": "This is in contrast to .the prevailing logic program induction paradigm , which .relies on generalization of programs from examples .The . problem reduction is accomplished as a constrained top - down . search process , which eventually is to reach trivial . problems .", "label": "", "metadata": {}, "score": "53.46912"}
{"text": "These patterns are usually .constructed through generalisation ( or specialisation ) .operators .For every data structure , we can define . distances .In fact , we may find different distances for . sets , lists , atoms , numbers , ontologies , web pages , etc .", "label": "", "metadata": {}, "score": "53.511173"}
{"text": "The outcome of this investigation is summarized in Table 1 .The only remaining open question is the existence or non - existence of a least generalization under implication in C for sets of clauses which all contain function symbols .Table 1 makes explicit the trade - off between different generality orders .", "label": "", "metadata": {}, "score": "53.54997"}
{"text": "The outcome of this investigation is summarized in Table 1 .The only remaining open question is the existence or non - existence of a least generalization under implication in C for sets of clauses which all contain function symbols .Table 1 makes explicit the trade - off between different generality orders .", "label": "", "metadata": {}, "score": "53.54997"}
{"text": "A classic problem from chemistry is used to test a conjecture that in domains for which data are most naturally represented by graphs , theories constructed with Inductive Logic Programming ( ILP ) will significantly outperform those using simpler feature - based methods .", "label": "", "metadata": {}, "score": "53.59487"}
{"text": "higher - order functions ; iflp ; ifp ; igor2 ; ilp ; induction ; . inductive programming ; inproceedings ; machine learning ; .Martin Hofmann , Emanuel Kitzelmann , and Ute Schmid .A unifying framework for analysis and evaluation of inductive programming systems .", "label": "", "metadata": {}, "score": "53.673714"}
{"text": "Wrobel , S. 1996 .First order theory revision .In L. De Raedt , editor , Proceedings of the 5th International Workshop on Inductive Logic Programming ( published as Advances in Inductive Logic Programming , IOS Press ) .pp .", "label": "", "metadata": {}, "score": "53.760384"}
{"text": "The proposed approach has . been implementedin the ILP system ATRE and tested in the . specific context of the document understanding problem .within the WISDOM project .Experimental results are .V. Estruch , C. Ferri , J. Hern\u00e1ndez - Orallo , and M. J. Ram\u00edrez - Quintana .", "label": "", "metadata": {}, "score": "53.765457"}
{"text": "This knowledge is typically acquired from domain experts through exhaustive knowledge engineering sessions .On the other hand , second generation knowledge acquisition technology is characterized ... \" .First generation expert systems rely on the use of surface knowledge , such as associational or heuristic .", "label": "", "metadata": {}, "score": "53.88594"}
{"text": "recursive programs .This approach regards program synthesis . as a theorem - proving task and relies on a theorem - proving .method that combines the features of transformation rules , . unification , and mathematical induction within a single .", "label": "", "metadata": {}, "score": "53.96663"}
{"text": "Extensions of inversion of resolution applied to theory completion .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .63 - 92 .Academic Press .Shapiro , E. Y. ( 1981 ) .", "label": "", "metadata": {}, "score": "54.02764"}
{"text": "Extensions of inversion of resolution applied to theory completion .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .63 - 92 .Academic Press .Shapiro , E. Y. ( 1981 ) .", "label": "", "metadata": {}, "score": "54.02764"}
{"text": "in concrete inductive inference .A ' ' pattern ' ' is defined . to be a concatenation of constants and variables , and the .language of a pattern is defined to be the set of strings . obtained by substituting constant strings for the . variables .", "label": "", "metadata": {}, "score": "54.135338"}
{"text": "Inductive Programming Systems and Algorithms ( with an introductory talk by Stephen Muggleton ) , .Enduser Programming ( with an introductory talk by Sumit Gulwani ) , .Intelligent Tutoring and Grading , .Cognitive Aspects of Induction ( with an introductory talk by Jos\u00e9 Hern\u00e1ndez - Orallo ) , .", "label": "", "metadata": {}, "score": "54.172424"}
{"text": "Franz Baader and Tobias Nipkow .Term Rewriting and All That .Cambridge University Press , 1998 .Y. M. Barzdin ' , A. N. Brazma , and E. B. Kinber .Inductive synthesis of programs : State of the art , problems , prospects .", "label": "", "metadata": {}, "score": "54.247765"}
{"text": "Alan W. Biermann , R. I. Baum , and F. E. Petry .Speeding up the synthesis of programs from traces .IEEE Transactions on Computers , 24(2):122 - 136 , 1975 . from a trace of its behavior .Since the algorithm involves .", "label": "", "metadata": {}, "score": "54.267754"}
{"text": "our algorithm is to find a program which explains the . examples correctly and is similar to the source program .Although we can define a notion of similarity in various . ways , we consider a class of similarities from the .", "label": "", "metadata": {}, "score": "54.283394"}
{"text": "Donald S. Williams .Computer program organization induced from problem examples .In Herbert A. Simon and Laurent Siklossy , editors , Representation and Meaning : Experiments with Information Processing Systems , chapter 4 , pages 143 - 206 .Prentice - Hall , Englewood Cliffs , NJ , 1972 .", "label": "", "metadata": {}, "score": "54.30903"}
{"text": "Christoph Beierle .Synthesizing minimal programs from traces of observable behavior .Technical Report SEKI - BN-81 - 06 , SEKI , Institut f\u00fcr Informatik , Universit\u00e4t Bonn , 1981 .Margherita Berardi and Donato Malerba .Learning recursive patterns for biomedical information extraction .", "label": "", "metadata": {}, "score": "54.313793"}
{"text": "If S is a finite set of clauses from C , and S contains at least one non - tautologous function - free clause , then the LGI of S in C is computable .357 Nienhuys - Cheng & de Wolf 6 .", "label": "", "metadata": {}, "score": "54.353855"}
{"text": "If S is a finite set of clauses from C , and S contains at least one non - tautologous function - free clause , then the LGI of S in C is computable .357 Nienhuys - Cheng & de Wolf 6 .", "label": "", "metadata": {}, "score": "54.353855"}
{"text": "In : Proceedings 9th International Workshop on Inductive Logic Programming , pp .128 - 139 ( 1999 ) .Horv\u00e1th , T. , Tur\u00e1n , G. : Learning logic programs with structured background knowledge .Artif .Intell .128 , 31 - 97 ( 2001 ) CrossRef MATH .", "label": "", "metadata": {}, "score": "54.388195"}
{"text": "In IJCAI'75 : Advance Papers of the 4th International Joint Conference on Artificial Intelligence ( Tbilisi , Georgia , USSR , Sept.3 - 8 , 1975 ) , pages 268 - 273 , 1975 . A. Smaill and I. Green .Automating the synthesis of functional programs , 1995 .", "label": "", "metadata": {}, "score": "54.415825"}
{"text": "analytical approaches are fast and guarantee some .characteristics of the induced program by construction .( such as minimality and termination ) the class of inducable .programs is restricted to problems which can be specified . by few positive examples .", "label": "", "metadata": {}, "score": "54.485233"}
{"text": "decomposing the synthesis problem into a hierarchy of tasks . which can each be solved by application of a schema .The . method is demonstrated by showing how programs can be .synthesized from examples of their input - output .", "label": "", "metadata": {}, "score": "54.501328"}
{"text": "is specified , together with a method of presenting . information to the learner about an unknown language , which . is to be chosen from the class .The question is now asked , . ''Is the information sufficient to determine which of the . possible languages is the unknown language ? ' ' Many . definitions of learnability are possible , but only the . following is considered here : Time is quantized and has a .", "label": "", "metadata": {}, "score": "54.523438"}
{"text": "Inference from positive data is . re - examined , and a characterization given of when it is . possible for a family of recursive languages .Various . collateral results about patterns and pattern languages are . obtained .Section 1 is an introduction explaining the . context of this work and informally describing the problem . formulation .", "label": "", "metadata": {}, "score": "54.5755"}
{"text": "Bjarte M. \u00d8 stvold .Inductive synthesis of recursive functional programs ( poster abstract ) .In ICFP'97 : Proceedings of the 2nd ACM SIGPLAN international conference on Functional programming ( Amsterdam , The Netherlands , June9 - 11 , 1997 ) , page 323 , New York , NY , USA , 1997 .", "label": "", "metadata": {}, "score": "54.654984"}
{"text": "Riverson Rios and Stan Matwin .Efficient induction of recursive prolog definitions .In Advances in Artifical Intelligence .11th Biennial Conference of the Canadian Society for Computational Studies of Intelligence , AI'96 Toronto , Ontario , Canada , May21 - 24 , 1996 .", "label": "", "metadata": {}, "score": "54.77927"}
{"text": "generalization mechanisms nor to alternative forms of . resolution and unification , or predicate invention .The . search space is reduced by subjecting the induction process . to various constraints concerning syntactical form , modes , . data types , and computational resources .", "label": "", "metadata": {}, "score": "54.781937"}
{"text": "in the way that , actually , it represents a sample . computation of the program presented by the given dot . expression .A system of simple inductive inference rules .synthesizing dot expressions ( programs ) by their formal . examples ( sample computations ) is developed and proved to . synthesize a correct ( i.e. , asymptotically equivalent to .", "label": "", "metadata": {}, "score": "54.80136"}
{"text": "West , M.M. and McCluskey , T.L. 1998 .Ordinal operators in focused theory revision .In Proceedings : JICSLP'98 Post Conference Workshop on Computational Logic and Machine Learning .Manchester , UK , pp .56 - 62 .Wogulis , J. 1993a .", "label": "", "metadata": {}, "score": "54.837822"}
{"text": "recursive calls in each rule .Moreover , we present .Science : Inducing Constructor Systems from Example - Terms . functional programming ; igor2 ; induction ; inductive ; . inductive inference ; inductive program synthesis ; inductive .programming ; myown ; programming ; published ; rule - based .", "label": "", "metadata": {}, "score": "54.877083"}
{"text": "Invited Talk Abstract .Uwe Sch\u00f6ning .Logic for Computer Scientists .Modern Birkh\u00e4user Classics .Birkh\u00e4user Boston , 2008 .Stefan Schr\u00f6dl and Stefan Edelkamp .Inferring flow of control in program synthesis by example .In KI-99 : Advances in Artificial Intelligence .", "label": "", "metadata": {}, "score": "54.87777"}
{"text": "B. Wegbreit .Goal - directed program transformation .IEEE Transactions on Software Engineering , 2(2):69 - 80 , 1976 .clear programs into complex , involuted , but more efficient . ones .This paper examines ways this process can be rendered .", "label": "", "metadata": {}, "score": "54.87895"}
{"text": "We show how analysis of program .performance , partial evaluation of functions , and . abstraction of recursive function definitions from .recurring subgoals can be combined to yield many global . transformations in a methodical fashion .Examples are drawn .", "label": "", "metadata": {}, "score": "54.932804"}
{"text": "In a .word , two programs are said to be similar if they share a . common explanation structure at an abstract level .Using .this notion of similarity , we formalize an analogical logic . program synthesis and show that our algorithm based on a . framework of model inference can identify a desired .", "label": "", "metadata": {}, "score": "54.933853"}
{"text": "this implementation on artificially - generated data - sets are . reported .These results are in agreement with the .Stephen Muggleton .Learning the time complexity of logic programs .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1st", "label": "", "metadata": {}, "score": "54.94419"}
{"text": "In fact , a GSI of a finite set S is the same as the GSS of S , namely the union of the clauses in S after these are standardized apart .To see the reason for this dissymmetry , let us take a step back from the clausal framework and consider full first - order logic for a moment .", "label": "", "metadata": {}, "score": "54.95951"}
{"text": "In fact , a GSI of a finite set S is the same as the GSS of S , namely the union of the clauses in S after these are standardized apart .To see the reason for this dissymmetry , let us take a step back from the clausal framework and consider full first - order logic for a moment .", "label": "", "metadata": {}, "score": "54.95951"}
{"text": "characterise the ILP systemGolemand the inductive .functional systemMagicHaskellerwithin this framework .In . consequence , we propose the inductive functional . systemIgorII as a powerful and efficient approach to IP .Performance of all systems on a representative set of .", "label": "", "metadata": {}, "score": "55.01783"}
{"text": "matching method ; program reasoning ; specification ; theory . type ; Programming and algorithm theory ; Software .deriving programs from past programming experience .It is .commonly recognized that program development plays a .central role in analogical programming .", "label": "", "metadata": {}, "score": "55.08989"}
{"text": "Acta Press .Ute Schmid and Fritz Wysotzki .Induction of recursive program schemes .In Claire Nedellec and C\u00e9line Rouveirol , editors , Machine Learning : ECML-98 . 10th European Conference on Machine Learning , Chemnitz , Germany , April21 - 23 , 1998 .", "label": "", "metadata": {}, "score": "55.126953"}
{"text": "Applying the learned . recursive rules only requires a minor extension to a .PROLOG - like problem solver , namely , the ability to .explicitly call a specific rule .Empirical studies .demonstrate that generalizing the structure of explanations .", "label": "", "metadata": {}, "score": "55.1334"}
{"text": "As a way of .Jos\u00e9 Hern\u00e1ndez - Orallo and M. Jos\u00e9Ram\u00edrez - Quintana .Inverse narrowing for the induction of functional logic programs .In Jos\u00e9 Luis Freire - Nistal , Moreno Falaschi , and Manuel Vilares Ferro , editors , APPIA - GULP - PRODE'98 : Joint Conference on Declarative Programming ( A Coru\u00f1a , Spain , July20 - 23 , 1998 ) , pages 379 - 392 , 1998 .", "label": "", "metadata": {}, "score": "55.181374"}
{"text": "Finally , we outline different stages of expert system development .An extended expert system shell schema is presented which includes a knowledge acquisition and a knowledge explanation module .1 Introduction Knowledge acquisition is a field of artificial intelligence concerned with the development of methods , techniques and tools for buil ... . by David Lorenzo - In Data Mining with Inductive Logic Programming , 1996 . \" ...", "label": "", "metadata": {}, "score": "55.188595"}
{"text": "Besides providing an overall view we summarize the . individual research results achieved in the course of this .Alan W. Biermann and R. Krishnaswamy .Constructing programs from example computations .IEEE Transactions on Software Engineering , 2(3):141 - 153 , 1976 .", "label": "", "metadata": {}, "score": "55.24946"}
{"text": "Anthony , S. and Frisch , A. 1997 .Generating numerical literals during refinement .In N. Lavrac and S. Dzeroski , editors , Inductive Logic Programming : Proceedings of the 7th International Workshop , ILP-97 , pp .61 - 76 .", "label": "", "metadata": {}, "score": "55.26654"}
{"text": "Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors .AAIP'09 : Proceedings of the 3rd Workshop on Approaches and Applications of Inductive Programming ( ICFP'09 , Edinburgh , Scottland , Sept.4 , 2009 ) , number 81 in Bamberger Beitr\u00e4ge zur Wirtschaftsinformatik und Angewandten Informatik .", "label": "", "metadata": {}, "score": "55.365128"}
{"text": "Experimental results demonstrate that ATRE is . able to learn correct theories autonomously and to discover . concept dependencies .Finally , related works and their main .Zohar Manna and Richard Waldinger .Knowledge and reasoning in program synthesis .Artificial Intelligence , 6:175 - 208 , 1975 .", "label": "", "metadata": {}, "score": "55.394974"}
{"text": "knowledge of , e. g. , functional description 's syntactic . structure or assumptions about the process of function .evaluation .We show that synthesis of this kind is possible . by efficiently enumerating the hypothesis space and .J. M. Barzdin\u0161 , A. N. Brazma , and E. B. Kinber .", "label": "", "metadata": {}, "score": "55.570198"}
{"text": "There he gives a proof of the existence of a least generalization under T - implication of any finite set of ( not necessarily function - free ) clauses .We can adjust the proof in such a way that we can use it to establish the existence of an LGI of any finite set of clauses containing at least one non - tautologous function - free clause .", "label": "", "metadata": {}, "score": "55.580017"}
{"text": "There he gives a proof of the existence of a least generalization under T - implication of any finite set of ( not necessarily function - free ) clauses .We can adjust the proof in such a way that we can use it to establish the existence of an LGI of any finite set of clauses containing at least one non - tautologous function - free clause .", "label": "", "metadata": {}, "score": "55.580017"}
{"text": "programming language in which programs are combined from . elementary predicates by means of combinators conceived of .as problem reduction operators including list recursion .forms .The operator form admits inductive synthesis as a . top - down piecewise composition of semantically meaningful .", "label": "", "metadata": {}, "score": "55.58062"}
{"text": "In : Proc . of the ACM SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery , pp .21 - 30 ( 2000 ) .Plotkin , G.D. : A note on inductive generalization .In : Meltzer , B. , Michie , D. ( eds . )", "label": "", "metadata": {}, "score": "55.59845"}
{"text": "Learning recursive relations with randomly selected small training sets .In Wiliam W. Cohen and Haym Hirsh , editors , ICML'94 : Proceedings of the 11th International Conference on Machine Learning ( Rutgers University , New Brunswick , NJ , USA , July10 - 13 , 1994 ) , pages 12 - 18 .", "label": "", "metadata": {}, "score": "55.60344"}
{"text": "Ute Schmid , Martin Hofmann , and Emanuel Kitzelmann .Analytical inductive programming as a cognitive rule acquisition device .In B. Goertzel , P. Hitzler , and M. Hutter , editors , Artificial General Intelligence .AGI'09 : Proceedings of the 2nd Conference on Artificial General Intelligence ( Arlington , Virginia , March6 - 9 2009 ) , Advances in Intelligent Systems Research , pages 162 - 167 .", "label": "", "metadata": {}, "score": "55.664574"}
{"text": "AGI'10 : Proceedings of the 3rd Conference on Artificial General Intelligence ( Lugano , Switzerland , March5 - 8 , 2010 ) , Advances in Intelligent Systems Research .Atlantis Press , 2010 .Peter Idestam - Almquist .Generalization under implication by recursive anti - unification .", "label": "", "metadata": {}, "score": "55.669674"}
{"text": "SIGKDD Explor .Newsl .6 , 109 - 117 ( 2004 ) CrossRef .Gunopulos , D. , Khardon , R. , Mannila , H. , Saluja , S. , Toivonen , H. , Sharma , R. : Discovering all most specific sentences .", "label": "", "metadata": {}, "score": "55.707077"}
{"text": "Nevertheless , we mention it here , because least generalization under relative subsumption forms the basis of the well - known ILP system Golem ( Muggleton & Feng , 1992 ) .Least Generalizations under Implication Now we turn from subsumption to the implication order .", "label": "", "metadata": {}, "score": "55.739155"}
{"text": "Nevertheless , we mention it here , because least generalization under relative subsumption forms the basis of the well - known ILP system Golem ( Muggleton & Feng , 1992 ) .Least Generalizations under Implication Now we turn from subsumption to the implication order .", "label": "", "metadata": {}, "score": "55.739155"}
{"text": "Within a generality order , there are two approaches to generalization or specialization .The first approach generalizes or specializes individual clauses .We do not discuss this in any detail in this paper , and merely mention it for completeness ' sake .", "label": "", "metadata": {}, "score": "55.752876"}
{"text": "Within a generality order , there are two approaches to generalization or specialization .The first approach generalizes or specializes individual clauses .We do not discuss this in any detail in this paper , and merely mention it for completeness ' sake .", "label": "", "metadata": {}, "score": "55.752876"}
{"text": "This is very similar ... . by Hendrik Blockeel , Luc De Raedt - In Proceedings of the Sixth International Workshop on Inductive Logic Programming , 1996 .In this paper , we indicate some possible applications of ILP or similar techniques in the knowledge discovery field , and then discuss several methods for adapting and linking ILP - systems to relational database systems .", "label": "", "metadata": {}, "score": "55.802845"}
{"text": "A more efficient algorithm may exist , but since implication is harder than subsumption and the computation of an LGS is already quite expensive , we should not put our hopes too high .Nevertheless , the existence of the LGI - algorithm does establish the theoretical point that the LGI of any finite set of clauses containing at least one non - tautologous function - free clause is effectively computable .", "label": "", "metadata": {}, "score": "55.808975"}
{"text": "A more efficient algorithm may exist , but since implication is harder than subsumption and the computation of an LGS is already quite expensive , we should not put our hopes too high .Nevertheless , the existence of the LGI - algorithm does establish the theoretical point that the LGI of any finite set of clauses containing at least one non - tautologous function - free clause is effectively computable .", "label": "", "metadata": {}, "score": "55.808975"}
{"text": "In this framework , it is then possible to learn with incomplete information about the examples by exploiting the hypothetical reasoning of abduction .The paper presents the basic framework of ACL with its main characteristics and illustrates its potential in addressing several problems in ILP such as learning with incomplete information and multiple predicate learning .", "label": "", "metadata": {}, "score": "55.81793"}
{"text": "Learning first - order definitions of functions .Journal of Artificial Intelligence Research , 5:139 - 161 , 1996 .In this paper , a particular first - order learning system is modified to customize it for finding definitions of functional relations .", "label": "", "metadata": {}, "score": "55.82978"}
{"text": "Input / Output guided detection of list catamorphisms : Towards problem specific use of program templates in IP .In John Gallagher and Janis Voigtl\u00e4nder , editors , Proceedings of the ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation ( PEPM'10 , Madrid , Jan.18 - 19 , 2010 ) , pages 93 - 100 , New York , NY , USA , 2010 .", "label": "", "metadata": {}, "score": "55.939278"}
{"text": "Efficient induction of recursive definitions by structural analysis of saturations .In Luc De Raedt , editor , Advances in Inductive Logic Programming .IOS Press , 1996 .Nobuhiro Inuzuka , Masakage Kamo , Naohiro Ishii , Hirohisa Seki , and Hidenori Itoh .", "label": "", "metadata": {}, "score": "55.960632"}
{"text": "However , current Inductive Logic Programming systems have severe limitations when dealing with such complex domains due to inefficiencies of searching large hypothesis spaces .An important issue to make the hypothesis space search tractable and efficient is the use of background knowledge .", "label": "", "metadata": {}, "score": "56.026024"}
{"text": "Techniques are .given for preprocessing the trace information to reduce .enumeration , for pruning the search using a failure memory .technique , and for utilizing multiple traces to the best . advantage .The results of numerous tests are given to .", "label": "", "metadata": {}, "score": "56.047115"}
{"text": "Martin Hofmann , Andreas Hirschberger , Emanuel Kitzelmannn , and Ute Schmid .Inductive Synthesis of Recursive Functional Programs - A Comparison of Three Systems .In J. Hertzberg , M. Beetz , and R. Englert , editors , KI'07 : Advances in Artificial Intelligence .", "label": "", "metadata": {}, "score": "56.06276"}
{"text": "161 - 174 Bad Honnef / Bonn .Gesellschaft f\"ur Mathematik und Datenverarbeitung .Niblett , T. ( 1988 ) .A study of generalisation in logic programs .In Sleeman , D. ( Ed . ) , Proceedings of the 3rd European Working Sessions on Learning ( EWSL-88 ) , pp .", "label": "", "metadata": {}, "score": "56.103832"}
{"text": "161 - 174 Bad Honnef / Bonn .Gesellschaft f\"ur Mathematik und Datenverarbeitung .Niblett , T. ( 1988 ) .A study of generalisation in logic programs .In Sleeman , D. ( Ed . ) , Proceedings of the 3rd European Working Sessions on Learning ( EWSL-88 ) , pp .", "label": "", "metadata": {}, "score": "56.103832"}
{"text": "Software - Practice and Experience , 25(1 ) , 47 - 71 .McCluskey , T.L. , Porteous , J.M. , West , M.M. , and Bryant , C.H. 1996 .The validation of formal specifications of requirements .In Proceedings of the BCS - FACS Northern Formal Methods Workshop .", "label": "", "metadata": {}, "score": "56.162178"}
{"text": "and non - examples , is viewed here as a search problem .Existing programs that generalize from examples are .characterized in terms of the classes of search strategies .that they employ .Several classes of search strategies are .", "label": "", "metadata": {}, "score": "56.175808"}
{"text": "In F. Bergadano , L. De Raedt , S. Matwin , and S. Muggleton , editor , Proceedings of the IJCAI ' 93 Workshop on Inductive Logic Programming .pp .36 - 46 .Wogulis , J.L. 1993b .An approach to repairing and evaluating first - order theories containing multiple concepts and negation .", "label": "", "metadata": {}, "score": "56.23206"}
{"text": "The specifier must know the answers to such simple queries , because otherwise s / he would n't even feel the need for the synthesized program .DIALOGS can be used by any learner ( including itself ) that detects , or merely conjectures , the necessity of invention of a new predicate .", "label": "", "metadata": {}, "score": "56.23952"}
{"text": "P. Flener and S. Yilmaz .Inductive synthesis of recursive logic programs : Achievements and prospects .Sumit Gulwani .Synthesis from examples : Interaction models and algorithms .Sumit Gulwani .Example - based learning in computer - aided stem education .", "label": "", "metadata": {}, "score": "56.244022"}
{"text": "Applying inductive programm synthesis to macro learning .AAAI Press .Ute Schmid .Adaptation of non - isomorphic sources in analogical problem solving .New Bulgarian University Press .Ute Schmid .Analogical problem solving by adaptation of schemes .In F. E. Ritter and R. M. Young , editors , ECCM'98 : Proceedings of the 2nd European Conference on Cognitive Modelling ( Nottingham , UK , April1.-4 , 1998 ) .", "label": "", "metadata": {}, "score": "56.285164"}
{"text": "Instead , we might divide the positive examples into subsets , and take a separate LGS of each subset .That way we obtain a theory containing more than one clause .For this second approach , subsumption is again not fully satisfactory .", "label": "", "metadata": {}, "score": "56.29277"}
{"text": "Instead , we might divide the positive examples into subsets , and take a separate LGS of each subset .That way we obtain a theory containing more than one clause .For this second approach , subsumption is again not fully satisfactory .", "label": "", "metadata": {}, "score": "56.29277"}
{"text": "Kitzelmann , 2001 .Emanuel Kitzelmann .Inductive functional program synthesis - a term - construction and folding approach .Diplomarbeit , Technische Universit\u00e4t Berlin , 2003 .Unpublished .Ute Kitzelmann , Emanuel an Schmid .An ebg approach to the inductive synthesis of functional programs .", "label": "", "metadata": {}, "score": "56.31093"}
{"text": "classifier - learning systems can lead to substantial . improvements in predictive accuracy .This paper reports .early experimental results from applying boosting toffoil , .a first - order system that constructs definitions of .functional relations .Although the evidence is less . convincing than that for propositional - level learning . systems , it suggests that boosting will also prove .", "label": "", "metadata": {}, "score": "56.40486"}
{"text": "igor1 ; induction ; inductive ; inductive functional .programming ; inductive inference ; inductive program .synthesis ; inductive programming ; inproceedings ; myown ; .Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors .AAIP'05 : Proceedings of the 1st", "label": "", "metadata": {}, "score": "56.444714"}
{"text": "Tools . by P. A. Flach , Flach Giraud - Carrier , J. W. Lloyd - Proceedings of the 8th International Conference on Inductive Logic Programming , volume 1446 of Lecture Notes in Artificial Intelligence , 1998 .In this paper we argue that the use of a language with a type system , together with higher - order facilities and functions , provides a suitable basis for knowledge representation in inductive concept learning and , in particular , illuminates the relationship between attribute - value learning and indu ... \" .", "label": "", "metadata": {}, "score": "56.474716"}
{"text": "Adequate measures are available for attribute value learners .In recent years there is a growing interest in first order learners , however existing proposals ... \" .Many learning systems , e.g. systems based on clustering and instance based learning systems , need a measure for the distance between objects .", "label": "", "metadata": {}, "score": "56.55409"}
{"text": "In LNCS : Vol .Proceedings of the 10th international conference on logic programing and nonmonotonic reasoning ( pp . 169 - 181 ) .Berlin : Springer .^ Yoshitaka Yamamoto , Katsumi Inoue , and Koji Iwanuma .Inverse subsumption for complete explanatory induction .", "label": "", "metadata": {}, "score": "56.60476"}
{"text": "W. Bibel .Syntax - directed , semantic - supported program synthesis .Artificial Intelligence , 14(3):243 - 261 , 1980 .W. Bibel , D. Korn , C. Kreitz , and F. Kurucz .A multi - level approach to program synthesis .", "label": "", "metadata": {}, "score": "56.65745"}
{"text": "This work proposes an architecture integrating a Consistency Based with Fault Modes approach , together with domain speci c knowledge , to diagnosis of dynamic systems .Model - based diagnosis techniques have found several diculties when they have been applied to dynamic systems .", "label": "", "metadata": {}, "score": "56.700356"}
{"text": "structures ; generalizing to N ; generalizing number ; utility . D. Shaw , W. Swartout , and C. Green .Inferring LISP programs from examples .In IJCAI'75 : Advance Papers of the 4th International Joint Conference on Artificial Intelligence ( Tbilisi , Georgia , USSR , Sept.3 - 8 , 1975 ) , pages 260 - 267 , 1975 .", "label": "", "metadata": {}, "score": "56.721527"}
{"text": "This new system has been applied successfully to . rules ; inductive logic programming ; inductive programming ; .J. Ross Quinlan .Determinate literals in inductive logic programming .In John Mylopoulos and Raymond Reiter , editors , IJCAI'91 : Proceedings of the 12th International Joint Conference on Artificial Intelligence ( Sydney , Australia , Aug.24 - 30 , 1991 ) .", "label": "", "metadata": {}, "score": "56.737675"}
{"text": "When experimentally tested this combined approach did not at first deliver the expected performance gains due to restrictio ... . \" ...Relational learning algorithms are of special interest to members of the machine learning community ; they offer practical methods for extending the representations used in algorithms that solve supervised learning tasks .", "label": "", "metadata": {}, "score": "56.766335"}
{"text": "First , we will prove the equivalence between our definition of relative implication and a definition given by Niblett ( 1988 , p. 133 ) .D ) ( here ' ! ' is the implication - connective , and ' '' is an arbitrary complete proof procedure ) .", "label": "", "metadata": {}, "score": "56.863174"}
{"text": "First , we will prove the equivalence between our definition of relative implication and a definition given by Niblett ( 1988 , p. 133 ) .D ) ( here ' ! ' is the implication - connective , and ' '' is an arbitrary complete proof procedure ) .", "label": "", "metadata": {}, "score": "56.863174"}
{"text": "show ways in which the methodology can be modified to deal .with information that is noisy and/or incomplete .A . reported shortcoming of the basic algorithm is discussed .and two means of overcoming it are compared .The paper . concludes with illustrations of current research .", "label": "", "metadata": {}, "score": "56.89193"}
{"text": "( IE ) techniques are necessary to map this information into .structured representations that allow facts relating .domain - relevant entities to be automatically recognized .In . biomedical IE tasks , extracting patterns that model .implicit relations among entities is particularly important . since biological systems intrinsically involve interactions . among several entities .", "label": "", "metadata": {}, "score": "56.908768"}
{"text": "feature of intelligence in both natural and artificial .intelligent agents .In this paper , we study learnability of . term rewriting systems from positive examples alone .We . define a class of linear - bounded term rewriting systems .", "label": "", "metadata": {}, "score": "56.92489"}
{"text": "expression is defined in the way that , actually , it .represents a sample computation of the program presented by .the given dot expression .A system of simple inductive . inference rules synthesizing dot expressions ( programs ) by .", "label": "", "metadata": {}, "score": "56.936943"}
{"text": "Journal of Artificial Intelligence Research , 8 , 39 - 65 .Bergadano , F. and Gunetti , D. 1996 .Inductive Logic Programming , From Machine Learning to Software Engineering .Cambridge , Massachusetts , US : MIT Press .Bryant , C.H. 1997 .", "label": "", "metadata": {}, "score": "56.947315"}
{"text": "307 - 322 .Springer - Verlag .Least Generalizations and Greatest Specializations of Sets of Clauses .Abstract : The main operations in Inductive Logic Programming ( ILP ) are generalization and specialization , which only make sense in a generality order .", "label": "", "metadata": {}, "score": "56.96381"}
{"text": "Learning context - free grammars from structural data in polynomial time .Theoretical Computer Science , 76(2 - 3):223 - 242 , November 1990 .Yasubumi Sakakibara .Efficient learning of context - free grammars from positive structural examples .Information and Computation , 97:23 - 60 , 1992 .", "label": "", "metadata": {}, "score": "57.027527"}
{"text": "125 of Lecture Notes in Mathematics , pp .112 - 127 .Springer - Verlag .Lavra^c , N. , & D^zeroski , S. ( 1994 ) .Inductive Logic Programming : Techniques and Applications .Ellis Horwood .Lee , R. C.-T. A Completeness Theorem and a Computer Program for Finding Theorems Derivable from Given Axioms .", "label": "", "metadata": {}, "score": "57.052536"}
{"text": "125 of Lecture Notes in Mathematics , pp .112 - 127 .Springer - Verlag .Lavra^c , N. , & D^zeroski , S. ( 1994 ) .Inductive Logic Programming : Techniques and Applications .Ellis Horwood .Lee , R. C.-T. A Completeness Theorem and a Computer Program for Finding Theorems Derivable from Given Axioms .", "label": "", "metadata": {}, "score": "57.052536"}
{"text": "it is not always an easy task .There is an alternative . simply give one example output for a carefully chosen .Chowdhury R. Mofizur and Masayuki Numao .Top - down induction of recursive programs from small number of sparse examples .", "label": "", "metadata": {}, "score": "57.058556"}
{"text": "Ivan Bratko and Stephen H. Muggleton .Applications of inductive logic programming .Communications of the ACM , 38(11):65 - 70 , 1995 . applied to various problems .Most of these applications .rely on attribute - based learning , exemplified by the . induction of decision trees as in the program C4.5 .", "label": "", "metadata": {}, "score": "57.18819"}
{"text": "functional programming ; inductive program synthesis ; .Emanuel Kitzelmann .Data - driven learning of functions over algebraic datatypes from Input / Output - examples .In Peter Geibel and Brijnesh J. Jain , editors , LNVD'07 : Learning from Non - Vectorial Data .", "label": "", "metadata": {}, "score": "57.20635"}
{"text": "This study provides means for the challenging task of analytically comparing knowledge discovery techniques .These means comprise : the notions of applicability , complexity and accuracy of a technique with respect to a problem .We introduce various techniques and problems and derive concrete comparison results . 1 Introduction Knowledge discovery techniques are used to search for relationships and global patterns that exists in large databases but are \" hidden \" among vast amounts of data .", "label": "", "metadata": {}, "score": "57.223305"}
{"text": "To progress in establishing inductive programming as a specific area of research it was proposed to write a Wikipedia page , and to collect introductory literature from the different areas covered in the seminar .Furthermore , plans for joint publications and joint grant proposals were made .", "label": "", "metadata": {}, "score": "57.240486"}
{"text": "Featured by ICFP'06 : 11th ACM SIGPLAN International Conference on Functional Programming ( Portland , Oregon , Sept.18 - 20 , 2006 ) .higher - order functions ; ifp ; induction ; inductive .functions from user - provided specifications .", "label": "", "metadata": {}, "score": "57.306984"}
{"text": "We will show that using our .approach we can define a meaningful notion of correctness .for schemas , viz .that correct program schemas can be .expressed asparametricspecification frameworks containing . templates that aresteadfast , i.e. programs that are always .", "label": "", "metadata": {}, "score": "57.318"}
{"text": "Nienhuys - Cheng , S.-H. , & de Wolf , R. ( 1996 ) .The subsumption theorem in inductive logic programming : Facts and fallacies .In De Raedt , L. ( Ed . ) , Advances in Inductive Logic Programming , pp .", "label": "", "metadata": {}, "score": "57.351486"}
{"text": "Nienhuys - Cheng , S.-H. , & de Wolf , R. ( 1996 ) .The subsumption theorem in inductive logic programming : Facts and fallacies .In De Raedt , L. ( Ed . ) , Advances in Inductive Logic Programming , pp .", "label": "", "metadata": {}, "score": "57.351486"}
{"text": "This report describes experiments in learning models for basic flight manoeuvres from behavioural traces of a human pilot when using a flight simulator .A first set of experiments using decision trees is presented .The auto - pilot built with the generated decision trees flies more smoothly than the h ... \" .", "label": "", "metadata": {}, "score": "57.434536"}
{"text": "As this example also shows , the subsumption order is particularly unsatisfactory when we consider recursive clauses : clauses which can be resolved with themselves .There is also relative subsumption ( Plotkin , 1971b ) , which will be briefly touched in Section 4 .", "label": "", "metadata": {}, "score": "57.4665"}
{"text": "As this example also shows , the subsumption order is particularly unsatisfactory when we consider recursive clauses : clauses which can be resolved with themselves .There is also relative subsumption ( Plotkin , 1971b ) , which will be briefly touched in Section 4 .", "label": "", "metadata": {}, "score": "57.4665"}
{"text": "In the next subsection , we show that any finite set of clauses which contains at least one non - tautologous function - free clause , has an LGI in C. An immediate corollary of this result is the existence of an LGI of any finite set of function - free clauses .", "label": "", "metadata": {}, "score": "57.469093"}
{"text": "In the next subsection , we show that any finite set of clauses which contains at least one non - tautologous function - free clause , has an LGI in C. An immediate corollary of this result is the existence of an LGI of any finite set of function - free clauses .", "label": "", "metadata": {}, "score": "57.469093"}
{"text": "Since our characterization is entirely on the level of models , the definition applies independently of the ch ... . by Saso Dzeroski , Steffen Schulze - Kremer , Karsten R. Heidtke , Karsten Siems , Dietrich Wettschereck , 1996 .We present a novel application of ILP to the problem of diterpene structure elucidation from 13 C NMR spectra .", "label": "", "metadata": {}, "score": "57.490692"}
{"text": "One could also say , if there are k classes , that the tree defines k concepts .Another viewpoint is taken in Langley 's Elements of Machine Learning [ Langley , 1996 ] .Langley sees decision tree induction as a special case of the induction of concept hierarchies .", "label": "", "metadata": {}, "score": "57.597683"}
{"text": "Using the analogy of a human biography this paper recalls the development of the subject from its infancy through childhood and teenage years .We show how in each phase ILP has been characteri ... \" .Inductive Logic Programming ( ILP ) is an area of Machine Learning which has now reached its twentieth year .", "label": "", "metadata": {}, "score": "57.777008"}
{"text": "generation of generally applicable rules that can be used .for transfer between previously unseen source and target .QLFs .However , the experiment also shows that the system . suffers from producing overly specific rules , even when the . problem of disallowing the derivation of other target QLFs . than the correct one is not considered .", "label": "", "metadata": {}, "score": "57.786663"}
{"text": "On the other hand , F is a special LGI , so F and H must be subsume - equivalent .Suppose the number of distinct constants in S0 is c and the number of distinct variables in step 2 of the algorithm is m. Furthermore , suppose there are p distinct predicate symbols in S0 , with respective arities a1 ; : : : ; ap .", "label": "", "metadata": {}, "score": "57.789528"}
{"text": "On the other hand , F is a special LGI , so F and H must be subsume - equivalent .Suppose the number of distinct constants in S0 is c and the number of distinct variables in step 2 of the algorithm is m. Furthermore , suppose there are p distinct predicate symbols in S0 , with respective arities a1 ; : : : ; ap .", "label": "", "metadata": {}, "score": "57.789528"}
{"text": "The results show that .predicate invention may indeed be both necessary and . possible when learning from positive examples only as well . as it can be beneficial to keep the induced model . H.Bostr\u00f6m .Induction of recursive transfer rules .", "label": "", "metadata": {}, "score": "57.799103"}
{"text": "A Perspective on Inductive Logic Programming .The Workshop on Current and Future Trends in Logic Programming , Shakertown , to appear in Springer LNCS , 1999 .CiteSeerX : 10 .1 .1 .56 .1790 .^ a b c Muggleton , S. ( 1991 ) .", "label": "", "metadata": {}, "score": "57.820747"}
{"text": "applying random testing of program equivalences ( or .Monte - Carlo search for functional differences ) to the . search results of iterative deepening , by which we can .totally remove redundancies caused by semantically . equivalent programs .Our experimental results show that .", "label": "", "metadata": {}, "score": "57.841713"}
{"text": "Section 3 is results . concerning patterns and pattern languages .Section 4 . concerns the abstract question of inference from positive . data .Section 5 gives a polynomial time algorithm for .finding minimal one - variable pattern languages compatible .", "label": "", "metadata": {}, "score": "57.85492"}
{"text": "describing sets of words , on the other hand , it can be . considered as a programming language supporting quite a .wide class of programs .Equivalence and asymptotical . equivalence of dot expressions are defined and proved to be . decidable .", "label": "", "metadata": {}, "score": "57.95649"}
{"text": "More recent .approaches enumerate candidate programs and onlytestthem .against the examples until a program which correctly . computes the examples is found .Theoretically , large . program classes can be induced generate - and - test based , yet .", "label": "", "metadata": {}, "score": "58.069542"}
{"text": "The activity we want to predict is the biodegradability of chemical compounds in water .In particular , the target variable is the half - life in water for aer ... \" .We present a novel application of inductive logic programming ( ILP ) in the area of quantitative structure - activity relationships ( QSARs ) .", "label": "", "metadata": {}, "score": "58.07489"}
{"text": "the variables of a program scheme ) ; Lisp programs ; pattern .from example problems .The algorithmic representation of .these functions is the interpretation of a given scheme .The instantiation of the scheme variables is realized by a . new method which uses pattern matching then if necessary .", "label": "", "metadata": {}, "score": "58.091507"}
{"text": "Submitted to Logic - based Program Synthesis and Transformation ( LOPSTR'09 , 19th International Symposium , Coimbra , Portugal , Sept.2009 ) , 2009 .Emanuel Kitzelmann .Inductive programming : A survey of program synthesis techniques .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .", "label": "", "metadata": {}, "score": "58.12406"}
{"text": "A Cognitive Model of Learning by Doing .Models And Human Reasoning , pages 235 - 252 , 2005 .Ute Schmid , Martin M\u00fchlpfordt , and Fritz Wysotzki .Induction of recursive program schemes as inference of context free tree grammers .", "label": "", "metadata": {}, "score": "58.13919"}
{"text": "David W. Aha .Case - based learning algorithms .In I. Bareiss , R. Lewis , and S. Gravitis , editors , Proceedings of the DARPA Case - Based Reasoning Workshop ( Pensacola Beach , Florida , May - June , 1989 ) , volume 1 , pages 147 - 158 , Washington , D. C. , 1991 .", "label": "", "metadata": {}, "score": "58.174683"}
{"text": "LCM is attractive since its run time is linear in the number of closed patterns and since it does not need to store the patterns output in order to avoid duplicates , further reducing memory signature and run time .Our investigation shows that the choice of semantics has a dramatic effect on the properties of closed patterns and as a result , in some settings a generalization of the LCM algorithm is not possible .", "label": "", "metadata": {}, "score": "58.21575"}
{"text": "However , inductive reasoning can .solve problems outside the realm of machine learning , too .Formal methods to underpin inductive techniques are . emerging , but they have yet to be viewed , accepted , and .developed as a fundamental alternative to deductive . A. Passerini , P. Frasconi , and L. De Raedt .", "label": "", "metadata": {}, "score": "58.275574"}
{"text": "A prototype system has been developed and applied to lea ... . by Hendrik Blockeel , Luc Dehaspe , Bart Demoen , Gerda Janssens , Jan Ramon , Henk Vandecasteele - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE IN INDUCTIVE LOGIC PROGRAMMING , VOLUME 1866 OF LECTURE NOTES IN ARTIFICIAL INTELLIGENCE , 2000 . \" ...", "label": "", "metadata": {}, "score": "58.343956"}
{"text": "A Brazma and E. B. Kinber .Generalized regular expressions - a language for synthesis of programs with branching in loops .Theoretical Computer Science , 46:175 - 195 , 1986 . A. Brazma .Inductive synthesis of dot expressions .In J. M. Barzdin\u0161 and D. Bjorner , editors , Baltic Computer Science .", "label": "", "metadata": {}, "score": "58.349064"}
{"text": "We show how in each phase ILP has been characterised by an attempt to extend theory and implementations in tandem with the development of novel and challenging real - world applications .Lastly , by projection we suggest directions for research which will help the subject coming of age . \" ...", "label": "", "metadata": {}, "score": "58.39846"}
{"text": "synthesis ; recursion ; Inductive functional logic . programming ( IFLP ) ; inductive logic programming ( ILP ) ; .Functional Logic Programming ( IFLP ) framework in order to .learn functions in an incremental way .In general , . incremental learning is necessary when the number of . examples is infinite , very large orpresented one by one .", "label": "", "metadata": {}, "score": "58.41028"}
{"text": "synthesis algorithm in detail by means of a particular .Pat Langley and Dongkyu Choi .Learning recursive control programs from problem solving .Journal of Machine Learning Research , 7:493 - 518 , 2006 .Special Topic on Approaches and Applications of Inductive Programming .", "label": "", "metadata": {}, "score": "58.417263"}
{"text": "without using induction ; it also shows that the equations . true in the initial algebra are just those provable by . structural induction .The major results generalize , . simplify and rigorize Musser 's method for proving inductive .hypotheses with the Knuth - Bendix algorithm ; our approach . uses a very general result , that ( under certain conditions ) .", "label": "", "metadata": {}, "score": "58.449806"}
{"text": "subfield is inductive program synthesis , the .( semi-)automatic construction of programs from exemplary .behavior .Inductive program synthesis is not a unified .research field until today but scattered over several . different established research fields such as machine .", "label": "", "metadata": {}, "score": "58.508133"}
{"text": "Learning to program by examining and modifying cases .In John E. Laird , editor , ICML'88 : Proceedings of the 5th International Conference on Machine Learning ( Ann Arbor , Michigan , USA , June12 - 14 , 1988 ) , pages 318 - 324 .", "label": "", "metadata": {}, "score": "58.57634"}
{"text": "Morgan Kaufmann , 1979 .Jean - Pierre Jouannaud and Yves Kodratoff .Program synthesis from examples of behavior .In Alan W. Biermann and G\u00e9rard Guiho , editors , Computer Program Synthesis Methodologies , pages 213 - 250 . D. Reidel Publ . Co. , 1983 .", "label": "", "metadata": {}, "score": "58.580086"}
{"text": "Yuichiro Anzai and Herbert A. Simon .The theory of learning by doing .Psychological Review , 86(2):124 - 140 , 1979 .Y. Anzai and Y. Uesato .Learning recursive procedures by middleschool children .In CogSci'82 : Proceedings of the 4th Annual Conference of the Cognitive Science Society , pages 100 - 102 , 1982 .", "label": "", "metadata": {}, "score": "58.598244"}
{"text": "In this paper new .results are presented which show that within a Bayesian . framework not only grammars , but also logic programs are .learnable with arbitrarily low expected error from positive . examples only .In addition , we show that the upper bound .", "label": "", "metadata": {}, "score": "58.603283"}
{"text": "Predicate invention in inductive logic programming .In Luc De Raedt , editor , Advances in Inductive Logic Programming , pages 34 - 47 .IOS Press , 1996 .Wolfgang Stolzmann .An introduction to anticipatory classifier systems .In Learning Classifier Systems .", "label": "", "metadata": {}, "score": "58.65296"}
{"text": "On the other hand , in case of specialization there is no problem .Here we can take OE1 .OE2 as GSI , since OE1 .OE2 is equivalent to a clause , if we handle the universal quantifiers in front of a clause properly .", "label": "", "metadata": {}, "score": "58.659306"}
{"text": "On the other hand , in case of specialization there is no problem .Here we can take OE1 .OE2 as GSI , since OE1 .OE2 is equivalent to a clause , if we handle the universal quantifiers in front of a clause properly .", "label": "", "metadata": {}, "score": "58.659306"}
{"text": "However , since in ILP we usually have to deal with individual clauses rather than with equivalence classes of clauses , it is convenient for us to define ' lattice ' for a quasi - order here .These two different languages and three different quasi - orders give a total of six combinations .", "label": "", "metadata": {}, "score": "58.689693"}
{"text": "However , since in ILP we usually have to deal with individual clauses rather than with equivalence classes of clauses , it is convenient for us to define ' lattice ' for a quasi - order here .These two different languages and three different quasi - orders give a total of six combinations .", "label": "", "metadata": {}, "score": "58.689693"}
{"text": "Computer scientists may use inductive techniques to explore .a philosophy of cognition , develop a theory of adaptive . behavior , or find a way around a particularly awkward . problem , but they do not use it to create programs .", "label": "", "metadata": {}, "score": "58.69817"}
{"text": "The lattice structure from which these queries are typically selected causes many of these queries to be highly similar .As a consequence , independent execution of all queries may involve a lot of redundant co ... \" .Inductive logic programming systems usually send large numbers of queries to a database .", "label": "", "metadata": {}, "score": "58.718605"}
{"text": "For clauses which all contain functions , the existence of an LGI is still an open question , and even for the case where S contains at least one non - tautologous function - free clause , the proof was far from trivial .", "label": "", "metadata": {}, "score": "58.78203"}
{"text": "For clauses which all contain functions , the existence of an LGI is still an open question , and even for the case where S contains at least one non - tautologous function - free clause , the proof was far from trivial .", "label": "", "metadata": {}, "score": "58.78203"}
{"text": "A higher - order function approach to evolve recursive programs .In Tina Yu , Rick L. Riolo , and Bill Worzel , editors , Genetic Programming Theory and Practice III , volume 9 of Genetic Programming , chapter 7 , pages 93 - 108 .", "label": "", "metadata": {}, "score": "58.802307"}
{"text": "Srinivasan , A. and Camacho , R. 1999 .Numerical reasoning with an ILP system capable of lazy evaluation and customized search .Journal of Logic Programming , 40(3 ) , 185 - 213 .Vermesan , A. and Bench - Capon , T. 1995 .", "label": "", "metadata": {}, "score": "58.832043"}
{"text": "various program schemata is proved .A detailed description . of the construction of four programs is presented to .Lappoon R. Tang , Mary E Califf , and Raymond J. Mooney .An experimental comparison of genetic programming and inductive logic programming on learning recursive list functions .", "label": "", "metadata": {}, "score": "58.875072"}
{"text": "The approach , when applied to the problem of .proof generalization , makes it possible to synthesize a . general proof from a concrete example proof and establish a .method of proving by example .Cases in which a program and .", "label": "", "metadata": {}, "score": "58.893166"}
{"text": "Finally , a straightforward . extension of the IFLP schema to function invention is .Thomas Hieber and Martin Hofmann .Automated Method Induction : Functional Goes Object Oriented .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .", "label": "", "metadata": {}, "score": "58.919903"}
{"text": "Particularly , we .deal with a subclass of first - order Horn sentencesACH(k ) , . calledacyclic constrained Horn programs of constant arity . k . ACH(k ) allows recursions , disjunctive definitions , and .the use of function symbols .", "label": "", "metadata": {}, "score": "58.93521"}
{"text": "ACM , 2014 .Sumit Gulwani , William R. Harris , and Rishabh Singh .Spreadsheet data manipulation using examples .Commun . E. Kitzelmann and U. Schmid .Inductive synthesis of functional programs : An explanation based generalization approach .Tessa Lau .", "label": "", "metadata": {}, "score": "58.98433"}
{"text": "IP addresses the problem of . learning ( recursive ) programs from incomplete . specifications , such as input / output examples .First , we . introduce conditional higher - order term rewriting as a . common framework for inductive program synthesis .", "label": "", "metadata": {}, "score": "59.006607"}
{"text": "The correctness of this algorithm follows from the proof of Theorem 6 .Furthermore , note that all I(Ci ; V ) 's mentioned in the proof of Theorem 6 , are elements of the set fU1 ; : : : ; Ung .", "label": "", "metadata": {}, "score": "59.013706"}
{"text": "The correctness of this algorithm follows from the proof of Theorem 6 .Furthermore , note that all I(Ci ; V ) 's mentioned in the proof of Theorem 6 , are elements of the set fU1 ; : : : ; Ung .", "label": "", "metadata": {}, "score": "59.013706"}
{"text": "that of functions .Our learning method is based on the type .maintenance , the generalization given by Plotkin and .Arimura et al .and the technique finding recursion given by .Alon Itai and Michael Slavkin .Detecting data structures from traces .", "label": "", "metadata": {}, "score": "59.039257"}
{"text": "Finding least generalizations of sets of clauses is common practice in ILP .On the other hand , the greatest specialization , which is the dual of the least generalization , is used hardly ever .Nevertheless , the GSI of two clauses D1 and D2 might be useful .", "label": "", "metadata": {}, "score": "59.039715"}
{"text": "Finding least generalizations of sets of clauses is common practice in ILP .On the other hand , the greatest specialization , which is the dual of the least generalization , is used hardly ever .Nevertheless , the GSI of two clauses D1 and D2 might be useful .", "label": "", "metadata": {}, "score": "59.039715"}
{"text": "Emanuel Kitzelmann .Analytical inductive functional programming .In Michael Hanus , editor , LOPSTR'08 : Pre - Proceedings of the 18thInternational Symposium on Logic - Based Program Synthesis and Transformation ( Valencia , Spain , July17 - 18 , 2008 ) , pages 166 - 180 , 2008 .", "label": "", "metadata": {}, "score": "59.052933"}
{"text": "Reprinted in J.-L. Lassez , G. Plotkin ( Eds . ) , Computational Logic , The MIT Press , Cambridge , MA , 1991 , pp .199 - 254 .^ Shapiro , Ehud Y. ( 1983 ) .Algorithmic program debugging .", "label": "", "metadata": {}, "score": "59.06046"}
{"text": "The transformations . consist of ( 1 ) deriving the specific computation associated .with a specific example , ( 2 ) deriving control flow . predicates , and ( 3 ) deriving an equivalent program .specification in the form of recurrence relations .", "label": "", "metadata": {}, "score": "59.06163"}
{"text": "Hence the concept of self - saturation can not solve our question in general .Use of the third generality order , relative implication , is even more desirable than the use of \" plain \" implication .Relative implication allows us to take background knowledge into account , which can be used to formalize many useful properties and relations of the domain of application .", "label": "", "metadata": {}, "score": "59.094635"}
{"text": "Hence the concept of self - saturation can not solve our question in general .Use of the third generality order , relative implication , is even more desirable than the use of \" plain \" implication .Relative implication allows us to take background knowledge into account , which can be used to formalize many useful properties and relations of the domain of application .", "label": "", "metadata": {}, "score": "59.094635"}
{"text": "programs by including primitive recursion as a control . operation .The technique used here was gene expression .programming [ 2 ] , a variation of grammatical evolution [ 8].Grammatical evolution avoids the problem of program bloat ; . its separation of genotype ( string of symbols ) and . phenotype ( expression tree ) permits to optimise the .", "label": "", "metadata": {}, "score": "59.11035"}
{"text": "Then the system . automatically synthesizes the shortest possible program .which is capable of executing the observed examples .The . paper describes the computational environment provided by .the system , proves that the program synthesis technique is . both \" sound \" and \" complete , \" describes the design of the .", "label": "", "metadata": {}, "score": "59.14179"}
{"text": "On the inference of Turing machines from sample computations .Artificial Intelligence , 3(3):181 - 198 , 1972 .Alan W. Biermann .The inference of regular LISP programs from examples .IEEE Transactions on Systems , Man and Cybernetics , 8(8):585 - 600 , 1978 . finite - state automata is defined , and an algorithm is given . for constructing such programs from examples of their . input - output behavior .", "label": "", "metadata": {}, "score": "59.172005"}
{"text": "Morgan Kaufmann .361 Nienhuys - Cheng & de Wolf Gottlob , G. ( 1987 ) .Subsumption and implication .Information Processing Letters , 24 ( 2 ) , 109 - 111 .Idestam - Almquist , P. ( 1993 ) .", "label": "", "metadata": {}, "score": "59.292835"}
{"text": "Morgan Kaufmann .361 Nienhuys - Cheng & de Wolf Gottlob , G. ( 1987 ) .Subsumption and implication .Information Processing Letters , 24 ( 2 ) , 109 - 111 .Idestam - Almquist , P. ( 1993 ) .", "label": "", "metadata": {}, "score": "59.292835"}
{"text": "John R. Anderson and Christian Lebiere .The Atomic Components of Thought .Lawrence Erlbaum Associates , Inc. , 1998 .John R. Anderson , R. Farrell , and R. Sauers .Learning to program in lisp .Cognitive Science , 8:87 - 129 , 1984 .", "label": "", "metadata": {}, "score": "59.319107"}
{"text": "from example computations executed by the user .The example .calculations are done in a scratch pad fashion at a . computer display using a light pen or other graphic input .device , and the system stores a detailed history of all of .", "label": "", "metadata": {}, "score": "59.33866"}
{"text": "with the aim of synthesising well - moded , procedurally .acceptable programs .Preliminary experiments with the .proposed induction method lead us to tentatively conclude .that the presented approach forms a viable alternative to .the prevailing inductive logic programming methods applying . induction ; inductive programming ; program synthesis ; .", "label": "", "metadata": {}, "score": "59.351593"}
{"text": "knowledge engineering , anddata mining .One of the most . important and challenging research areas in GP is the . investigation of ways to successfully evolverecursive . programs .A recursive program is one that calls itself .either directly or indirectly through other programs .", "label": "", "metadata": {}, "score": "59.36181"}
{"text": "relationship between the data type and the implementation , .but this relationship may be complex .This paper describes .a solution : given a single example of the generic function .on one data type , we can infer the relationship between a .", "label": "", "metadata": {}, "score": "59.38632"}
{"text": "The converse does not hold , as the examples in the introduction showed .We now proceed to define a proof procedure for logical implication between clauses , using resolution and subsumption .Definition 3 If two clauses have no variables in common , then they are said to be standardized apart .", "label": "", "metadata": {}, "score": "59.38826"}
{"text": "The converse does not hold , as the examples in the introduction showed .We now proceed to define a proof procedure for logical implication between clauses , using resolution and subsumption .Definition 3 If two clauses have no variables in common , then they are said to be standardized apart .", "label": "", "metadata": {}, "score": "59.38826"}
{"text": "Database Syst .28 , 140 - 174 ( 2003 ) CrossRef .Han , J. , Pei , J. , Yin , Y. Mining frequent patterns without candidate generation .In : Proc . of the ACM SIGMOD International Conference on Management of Data , pp . 1 - 12 ( 2000 ) .", "label": "", "metadata": {}, "score": "59.388992"}
{"text": "the relationship between abstraction and its natural .counterparts , but also give novel technical details on .automatic invention of functions .Basically , abstraction is .the reverse of the inlining transformation performed by .induction ; inductive programming ; olsson ; program .", "label": "", "metadata": {}, "score": "59.431293"}
{"text": "programming ; inproceedings ; machine learning ; program .Emanuel Kitzelmann and Ute Schmid .Inductive synthesis of functional programs : An explanation based generalization approach .Journal of Machine Learning Research , 7(Feb):429 - 454 , 2006 .inductive programming ; program synthesis ; recursive program .", "label": "", "metadata": {}, "score": "59.43922"}
{"text": "Ronald J. Olsson and Brock Wilcox .Self - improvement for the ADATE automatic programming system .In GECCO'02 : Proceedings of the 4th Annual Conference on Genetic and Evolutionary Computation ( New York , USA , July09 - 13 , 2002 ) , pages 893 - 897 , San Francisco , CA , USA , 2002 .", "label": "", "metadata": {}, "score": "59.44211"}
{"text": "International Conference , ALT 2005 , Singapore , October 8 - 11 , 2005 .from positive examples alone .We define a class of Prolog . programs called recursion bounded programs that can capture .non - linear relationships between inputs and outputs and yet . inferable from positive examples .", "label": "", "metadata": {}, "score": "59.46585"}
{"text": "286 - 295 ( 2003 ) .Zaki , M. : Mining non - redundant association rules .Data Min .Knowl .Disc . 4 , 223 - 248 ( 2004 ) CrossRef MathSciNet .Zaki , M. , Hsiao , C. : CHARM : an efficient algorithm for closed itemset mining .", "label": "", "metadata": {}, "score": "59.585667"}
{"text": "P. L. Pirolli and John R. Anderson .The role of learning from examples in the acquisition of recursive programming skills .Canadian Journal of Psychology , 39:240 - 272 , 1985 .P. L. Pirolli .A cognitive model and computer tutor for programming recursion .", "label": "", "metadata": {}, "score": "59.592583"}
{"text": "be generated by evolutionary approaches is , in principle , . unrestricted , but generation times are typically high and .there is no guarantee that such a program is found for . which the fitness is optimal .We present a first study .", "label": "", "metadata": {}, "score": "59.61598"}
{"text": "Our main new results are , firstly , the existence of a computable least generalization under implication of every finite set of clauses containing at least one non - tautologous function - free clause ( among other , not necessarily function - free clauses ) .", "label": "", "metadata": {}, "score": "59.62395"}
{"text": "Our main new results are , firstly , the existence of a computable least generalization under implication of every finite set of clauses containing at least one non - tautologous function - free clause ( among other , not necessarily function - free clauses ) .", "label": "", "metadata": {}, "score": "59.62395"}
{"text": "Our main new results are , firstly , the existence of a computable least generalization under implication of every finite set of clauses containing at least one non - tautologous function - free clause ( among other , not necessarily function - free clauses ) .", "label": "", "metadata": {}, "score": "59.62395"}
{"text": "Our main new results are , firstly , the existence of a computable least generalization under implication of every finite set of clauses containing at least one non - tautologous function - free clause ( among other , not necessarily function - free clauses ) .", "label": "", "metadata": {}, "score": "59.62395"}
{"text": "Journal of the ACM , 24(1):44 - 67 , January 1977 .with the programs in the form of recursion equations .An . initially very simple , lucid , and hopefully correct program .is transformed into a more efficient one by altering the . recursion structure .", "label": "", "metadata": {}, "score": "59.744965"}
{"text": "Function - free clauses are also sufficient for most applications concerning databases .Our second contribution shows that a set S need not have a least generalization relative to some background knowledge Sigma , not even when S and Sigma are both function - free .", "label": "", "metadata": {}, "score": "59.81143"}
{"text": "Function - free clauses are also sufficient for most applications concerning databases .Our second contribution shows that a set S need not have a least generalization relative to some background knowledge Sigma , not even when S and Sigma are both function - free .", "label": "", "metadata": {}, "score": "59.81143"}
{"text": "Thus , regularities about the dynamics of these databases can not be discovered as the current state might depend i ... \" .Most of KDD applications consider databases as static objects , and however many databases are inherently temporal , i.e. , they store the evolution of each object with the passage of time .", "label": "", "metadata": {}, "score": "59.82026"}
{"text": "Hence the set of clauses which can be constructed from those literals is finite as well .G0 is a subset of this set , so G0 is a finite set of clauses .Let E be an LGS of I(C ; V ) ( note that E must be function - free ) .", "label": "", "metadata": {}, "score": "59.82198"}
{"text": "Hence the set of clauses which can be constructed from those literals is finite as well .G0 is a subset of this set , so G0 is a finite set of clauses .Let E be an LGS of I(C ; V ) ( note that E must be function - free ) .", "label": "", "metadata": {}, "score": "59.82198"}
{"text": "All that . contributes to the clarification of the exact role of PS in .AI and in Software Engineering , and its possible .Pieter W. M. Koopman and Rinus Plasmeijer .Generic generation of the elements of data types .", "label": "", "metadata": {}, "score": "59.82676"}
{"text": "Terese .Term Rewriting Systems , volume 55 of Cambridge Tracts in Theoretical Computer Science .Cambridge University Press , 2003 .J. Toussaint , Ute Schmid , and Fritz Wysotzki .Using recursive control rules in planning .In H. R. Arabnia , editor , ICAI'10 : Proceedings of the 12th International Conference on Artificial Intelligence ( Las Vegas , Nevada , USA , July12 - 15 , 2010 ) , volume 2 , pages 1012 - 1015 , Las Vegas , 2001 .", "label": "", "metadata": {}, "score": "59.885315"}
{"text": "Learning logical definitions from relations .Machine Learning , 5(3):239 - 266 , August 1990 .Original foil paper . clauses from data expressed as relations .FOIL is based on .ideas that have proved effective in attribute - value .", "label": "", "metadata": {}, "score": "59.961617"}
{"text": "277 - 294 .Shapiro 1983 .Algorithmic Program Debugging .Cambridge , MA : MIT Press .Sommer , E. , Morik , K. , Andre , J.M. , and Uszynski , M. 1994 .What online machine learning can do for knowledge acquisition - A case - study .", "label": "", "metadata": {}, "score": "60.101933"}
{"text": "T - implication is decidable , weaker than logical implication and stronger than subsumption .Idestam - Almquist ( 1993 , 1995 ) gives the result that any finite set of clauses has a least generalization under T - implication w.r.t . any term set T .", "label": "", "metadata": {}, "score": "60.13307"}
{"text": "T - implication is decidable , weaker than logical implication and stronger than subsumption .Idestam - Almquist ( 1993 , 1995 ) gives the result that any finite set of clauses has a least generalization under T - implication w.r.t . any term set T .", "label": "", "metadata": {}, "score": "60.13307"}
{"text": "The . main features of this problem are : i ) more than one rule . may need to be produced from a single example , ii ) only .positive examples are provided and iii ) the produced .hypothesis should be recursive .", "label": "", "metadata": {}, "score": "60.16667"}
{"text": "Therefore it does not fit into our general framework here .For this reason , we will not discuss it fully here , and for the same reason we have not included a row for T - implication in Table 1 .", "label": "", "metadata": {}, "score": "60.18815"}
{"text": "Therefore it does not fit into our general framework here .For this reason , we will not discuss it fully here , and for the same reason we have not included a row for T - implication in Table 1 .", "label": "", "metadata": {}, "score": "60.18815"}
{"text": "way of solving one problem after another , efficiently . searching the space of programs that compute solution . candidates , including those programs that organize and . manage and adapt and reuse earlier acquired knowledge .The .Optimal Ordered Problem Solver ( OOPS ) draws inspiration .", "label": "", "metadata": {}, "score": "60.2847"}
{"text": "are simply a language describing sets of words , on the . other hand , it can be considered as a programming language . supporting quite a wide class of programs .Equivalence and .asymptotical equivalence of dot expressions are defined and . proved to be decidable .", "label": "", "metadata": {}, "score": "60.324493"}
{"text": "We have used our method .in the Derive tool , allowing the implementation of 60\\% of .Neil Mitchell .Deriving a relationship from a single example .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .", "label": "", "metadata": {}, "score": "60.423355"}
{"text": "higher - order functions ; ifp ; induction ; inductive .Susumu Katayama .Library for systematic search for expressions .In AIC'06 : Proceedings of the 6th WSEAS International Conference on Applied Informatics and Communications ( Elounda , Agios Nikolaos , Crete Island , Greece , Aug.18 - 20 , 2006 ) , pages 381 - 387 , Stevens Point , Wisconsin , USA , 2006 .", "label": "", "metadata": {}, "score": "60.440125"}
{"text": "According to the presented experiments , . programs consisted of several function applications can be .found within some seconds even if we always use the library .designed for general use .In addition , the proposed .algorithm can efficiently tell the number of possible .", "label": "", "metadata": {}, "score": "60.46297"}
{"text": "Abstract .A new original approach to the formalization and implementation methods for the problem of inductive programming is described .This approach makes it possible for the first time to describe a wide range of problems within the given formalization based on examples from the implementation of problem - oriented languages to the development of applied systems with the help of these languages .", "label": "", "metadata": {}, "score": "60.47072"}
{"text": "In order to represent proofs as terms and generalize proof . terms by higher - order unification , we extend Logical .Lutz Hamel and Chi Shen .Inductive acquisition of algebraic specifications .In WADT'06 : Proceedings of the Workshop for Algebraic Development Techniques ( La Roche en Ardenne , Belgium , June1 - 3 , 2006 ) , 2006 .", "label": "", "metadata": {}, "score": "60.573498"}
{"text": "Thus , taken together with its companion paper , .this paper establishes a boundary of efficient learnability .Darrell Conklin and Ian H. Witten .Complexity - based induction .Machine Learning , 16(3):203 - 225 , September 1994 .Without some sort of preference criterion , any two theories that explain a set of examples are equally acceptable .", "label": "", "metadata": {}, "score": "60.58064"}
{"text": "Apart from distinguishing between these three orders , we also distinguish between languages of general clauses and more restricted languages of Horn clauses .Though most researchers in ILP restrict attention to Horn clauses , general clauses are also sometimes used ( Plotkin , 1970 , 1971b ; Shapiro , 1981 ; De Raedt & Bruynooghe , 1993 ; Idestam - Almquist , 1993 , 1995 ) .", "label": "", "metadata": {}, "score": "60.61226"}
{"text": "Apart from distinguishing between these three orders , we also distinguish between languages of general clauses and more restricted languages of Horn clauses .Though most researchers in ILP restrict attention to Horn clauses , general clauses are also sometimes used ( Plotkin , 1970 , 1971b ; Shapiro , 1981 ; De Raedt & Bruynooghe , 1993 ; Idestam - Almquist , 1993 , 1995 ) .", "label": "", "metadata": {}, "score": "60.61226"}
{"text": "between two specifications based on a generalization . procedure .Secondly , the analogical correspondence is used . as a basis for transforming existing program derivations to . new ones .The corresponding program can be obtained by .simple calculation of its type .", "label": "", "metadata": {}, "score": "60.62384"}
{"text": "A given term is considered as the k - th unfolding of an unknown recursive program .If a recurrence relations can be identified in the term , it can be folded into a recursive program which : ( a ) can reproduce the term and ( b ) generalizes over it .", "label": "", "metadata": {}, "score": "60.641117"}
{"text": "Software Testing , Verification and Reliability , 5 , 233 - 271 .West , M.M. , Bryant , C.H. , and McCluskey , T.L. 1997 .Transforming general program proofs : A meta interpreter which expands negative literals .In Proceedings : LOPSTR ' 97 .", "label": "", "metadata": {}, "score": "60.69399"}
{"text": "arbitrary term algebra ; it allows induction of sets of .recursive equations which are in some arbitrary ' ' calls ' ' .relation ; induced equations can be dependent on more than .one input parameters and we can detect interdependencies of .", "label": "", "metadata": {}, "score": "60.72251"}
{"text": "At each time the learner receives a . unit of information and is to make a guess as to the . identity of the unknown language on the basis of the . information received so far .This process continues . forever .", "label": "", "metadata": {}, "score": "60.72727"}
{"text": "A framework for higher - order inductive machine learning .In Peter A. Flach and Nada Lavrac , editors , Proceedings of the CompulogNet Area Meeting on Representation issues in reasoning and learning ( CSTR-97 - 005 , Department of Computer Science , University of Bristol .", "label": "", "metadata": {}, "score": "60.81449"}
{"text": "Predicate invention in ilp - an overview .In Pavel Brazdil , editor , Machine Learning : ECML-93 .European Conference on Machine Learning Vienna , Austria , April5 - 7 , 1993 .Proceedings , volume 667 of Lecture Notes in Computer Science , pages 311 - 322 .", "label": "", "metadata": {}, "score": "60.828304"}
{"text": "McCluskey , T.L. and West , M.M. 1998 .Towards the automated debugging and maintenance of logic - based requirements models .In ASE ' 98 : Proceedings of the 13thIEEE International Conference on Automated Software Engineering . pp .105 - 114 .", "label": "", "metadata": {}, "score": "60.874798"}
{"text": "J. Y. Girard .Une extension de l'interpr\u00e9tation de g\u00f6del \u00e0l'analyse , et son application \u00e0 l'\u00e9limination des coupures dans l'analyse et la th\u00e9orie des types .In Jens Erik Fenstad , editor , Proceedings of the 2nd Scandinavian Logic Symposium ( University of Oslo , June18 - 20 , 1970 ) , volume 63 of Studies in logic and the foundations of mathematics , pages 63 - 92 .", "label": "", "metadata": {}, "score": "60.895214"}
{"text": "Algorithm partition and parallel recognition of general context - free languages using fixed - size VLSI architecture .Pattern Recognition , 19(5):361 - 372 , 1986 .V. Ciesielski and Xiang Li .Experiments with explicit for - loops in genetic programming .", "label": "", "metadata": {}, "score": "60.90172"}
{"text": "In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1stWorkshop on Approaches and Applications of Inductive Programming ( Bonn , Germany , Aug.7 , 2005 ) , pages 59 - 67 , 2005 .", "label": "", "metadata": {}, "score": "60.966278"}
{"text": "transformations are given , and a tentative implementation . is described .Alternative structures for programs are . shown , and a possible initial phase for an automatic or .C. T. P. Burton .Program morphisms .Formal Aspects of Computing , 4:693 - 726 , 1992 .", "label": "", "metadata": {}, "score": "60.970573"}
{"text": "\\,09 .Ute Schmid , Emanuel Kitzelmann , and Fritz Wysotzki .Inductive program synthesis : From theory to application .In Gabriella K\u00f3kai and Jens Zeidler , editors , FGML'02 : Proceedings of the Annual Meeting of the GI Machine Learning Group ( Hannover , Germany , Oct.7 - 9 , 2002 ) , pages 135 - 141 , 2002 .", "label": "", "metadata": {}, "score": "60.990284"}
{"text": "Stephen H. Muggleton , Ram\u00f3n P. Otero , and Alireza Tamaddoni - Nezhad , editors .Inductive Logic Programming . 16thInternational Conference , ILP'06 , Santiago de Compostela , Spain , Aug.24 - 27 , 2006 , Revised Selected Papers , volume 4455 of Lecture Notes in Computer Science , Berlin / Heidelberg , 2007 .", "label": "", "metadata": {}, "score": "61.075733"}
{"text": "strategies have been implemented and tested on document .processing datasets .Experimental results are discussed and .Henrik Berg , Roland J. Olsson , Per - Olav Rus\u00e5s , and Morgan Jakobsen .Synthesis of control algorithms for autonomous vehicles through automatic programming .", "label": "", "metadata": {}, "score": "61.078777"}
{"text": "Selected Papers , volume 502 of Lecture Notes in Computer Science , pages 77 - 110 .Springer , Berlin / Heidelberg , 1991 .Mitsue Furusawa , Nobuhiro Inuzuka , Hirohisa Seki , and Hidenori Itoh .Induction of logic programs with more than one recursive clause by analyzing saturations .", "label": "", "metadata": {}, "score": "61.140476"}
{"text": "In : Proc . of the 9th International Conference on Principles of Knowledge Representation and Reasoning , pp .438 - 446 ( 2004 ) .Dehaspe , L. , Toivonen , H. : Discovery of relational association rules .Relational Data Mining , pp .", "label": "", "metadata": {}, "score": "61.15136"}
{"text": "We . propose a combination of search and analytical techniques .The method described in this paper is search based in order . to avoid strong a - priori restrictions as imposed by the . classical analytical approach .Yet candidate programs are . computed based on analytical techniques from the examples . instead of being generated independently from the examples .", "label": "", "metadata": {}, "score": "61.216892"}
{"text": "In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1stWorkshop on Approaches and Applications of Inductive Programming ( Bonn , Germany , Aug.7 , 2005 ) , pages 51 - 57 , 2005 .", "label": "", "metadata": {}, "score": "61.226597"}
{"text": "In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1stWorkshop on Approaches and Applications of Inductive Programming ( Bonn , Germany , Aug.7 , 2005 ) , pages 37 - 48 , 2005 .", "label": "", "metadata": {}, "score": "61.28046"}
{"text": "IOS Press , 1996 .Oleg Monakhov and Emilia Monakhova .Synthesis of scientific algorithms based on evolutionary computation and templates .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1st", "label": "", "metadata": {}, "score": "61.315754"}
{"text": "positive examples from the environment .Our system Igor2 is .an analytical approach to inductive programming which .induces recursive rules by generalizing over regularities . in a small set of positive input / output examples .We . applied Igor2 to typical examples from cognitive do- mains .", "label": "", "metadata": {}, "score": "61.418964"}
{"text": "A methodology for LISP program construction from examples .Journal of the ACM , 24(1):161 - 175 , January 1977 .Constructing a linear recursive program by generalising .recursive LISP programs from examples of what they do is . described .", "label": "", "metadata": {}, "score": "61.476944"}
{"text": "Finally , we show .how these results can be extended to proving the . correctness of an implementation of one data abstraction by . E. Mark Gold .Language identification in the limit .Information and Control , 10(5):447 - 474 , 1967 .", "label": "", "metadata": {}, "score": "61.48774"}
{"text": "Definition 14 A clause is function - free if it does not contain function symbols of arity 1 or more .2 Note that a clause is function - free iff it has depth 1 .In case of sets of clauses which all contain function symbols , the LGI - question remains open .", "label": "", "metadata": {}, "score": "61.512154"}
{"text": "Definition 14 A clause is function - free if it does not contain function symbols of arity 1 or more .2 Note that a clause is function - free iff it has depth 1 .In case of sets of clauses which all contain function symbols , the LGI - question remains open .", "label": "", "metadata": {}, "score": "61.512154"}
{"text": "ISBN 0 - 262 - 19218 - 7 .^ Shapiro , Ehud Y. \" The model inference system .\" Proceedings of the 7th international joint conference on Artificial intelligence - Volume 2 .Morgan Kaufmann Publishers Inc. , 1981 .", "label": "", "metadata": {}, "score": "61.519104"}
{"text": "consequences of the original program , there is a finite .number of derivations of positive and negative examples and .when no positive and negative examples have the same . H.Bostr\u00f6m .Theory - guided induction of logic programs by inference of regular languages .", "label": "", "metadata": {}, "score": "61.526245"}
{"text": "Skill acquisition can be regarded as program synthesis : An integrative approach to learning by doing and learning by analogy .In J. Krems , Ute Schmid , and Fritz Wysotzki , editors , Mind Modelling .A Cognitive Science Approach to Reasoning , Learning and Discovery , pages 253 - 284 .", "label": "", "metadata": {}, "score": "61.580147"}
{"text": "In the next section , we will review the answers for subsumption given by others or by ourselves .Then we devote two sections to least generalizations and greatest specializations under implication , respectively .Finally , we discuss least generalizations and greatest specializations under relative implication .", "label": "", "metadata": {}, "score": "61.598015"}
{"text": "In the next section , we will review the answers for subsumption given by others or by ourselves .Then we devote two sections to least generalizations and greatest specializations under implication , respectively .Finally , we discuss least generalizations and greatest specializations under relative implication .", "label": "", "metadata": {}, "score": "61.598015"}
{"text": "M. R. K. Krishna Rao .A class of Prolog programs inferable from positive data .In S. Arikawa and A. K. Sharma , editors , Algorithmic Learning Theory .7th International Workshop , ALT'96 , Sydney , Australia , Oct.23 - 25 , 1996 .", "label": "", "metadata": {}, "score": "61.60379"}
{"text": "Logic - Based Program Synthesis and Transformation , 18th International Symposium , LOPSTR'08 , Valencia , Spain , July 17 - 18 , 2008 , Revised Selected Papers , volume 5438 of Lecture Notes in Computer Science , Berlin / Heidelberg , 2009 .", "label": "", "metadata": {}, "score": "61.60508"}
{"text": "Competent Program Evolution .PhD thesis , Washington University in St. Louis , 2006 .inductive programming ; moses ; program evolution ; program .Moshe Looks .Scalable estimation - of - distribution program evolution .In Hod Lipson , editor , GECCO'07 : Proceedings of the 9th Annual Conference on Genetic and Evolutionary Computation ( London , England , UK , July7 - 11 , 2007 ) , pages 539 - 546 , New York , NY , USA , 2007 .", "label": "", "metadata": {}, "score": "61.62075"}
{"text": "Number 11 in IEEE Transactions on Software Engineering .IEEE Press , November 1985 .KBEmacs is capable of acting as a semiexpert assistant to a person who is writing a program - taking over some parts of the programming task .", "label": "", "metadata": {}, "score": "61.64736"}
{"text": "generation remarkably reduces the computational costs when .Susumu Katayama .Recent improvements of magichaskeller .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .", "label": "", "metadata": {}, "score": "61.744987"}
{"text": "R. S. Williams .Learning to program by examining and modifying cases .In J. L. Kolodner , editor , Proceedings of the DARPA Workshop on Case - Based Reasoning ( San Mateo , CAL , May 1988 ) , pages 463 - 474 .", "label": "", "metadata": {}, "score": "61.76391"}
{"text": "Share .References .Agrawal , R. , Imielinski , T. , Swami , A. : Mining association rules between sets of items in large databases .In : Proc . of ACM SIGMOD Conference on Management of Data , pp .", "label": "", "metadata": {}, "score": "61.80004"}
{"text": "It was implemented for example by Shapiro ( 1981 ) in the subsumption order in the form of refinement operators .A further sign of this weakness is the fact that tautologies need not be subsume - equivalent , even though they are logically equivalent .", "label": "", "metadata": {}, "score": "61.81865"}
{"text": "It was implemented for example by Shapiro ( 1981 ) in the subsumption order in the form of refinement operators .A further sign of this weakness is the fact that tautologies need not be subsume - equivalent , even though they are logically equivalent .", "label": "", "metadata": {}, "score": "61.81865"}
{"text": "Related investigations extend GOLEM to the task of learning small disjuncts using a non - monotonic inferencing perspective ( Bain , 1991 ) and explore a method in which rlggs are used to construct new ... . \" ...We report some recent developments from an ongoing project in which a chess endgame domain is providing benchmark experimental tests for the study of concept learning .", "label": "", "metadata": {}, "score": "61.82493"}
{"text": "The role of test cases in automated knowledge refinement .In ES96 : The Sixteenth Annual Technical Conference of the British Computer Society Specialist Group on Expert Systems .Cambridge , England , pp .75 - 90 .Richards , B.L. and Mooney , R.J. 1995 .", "label": "", "metadata": {}, "score": "61.836292"}
{"text": "Paul E. Utgoff .Shift of bias for inductive concept learning .In Ryszard S. Michalski , Jaime G. Carbonell , and Tom M. Mitchell , editors , Machine Learning .An Artificial Intelligence Approach , volume 2 , chapter 5 , pages 107 - 148 .", "label": "", "metadata": {}, "score": "61.89248"}
{"text": "An incomplete sample is constituted by some of positive examples and negative examples on a finite domain .FOIL - I has an evaluation function to estimate candidate definitions , the function which is composition of an information - based function and an encoding complexity measure .", "label": "", "metadata": {}, "score": "61.91505"}
{"text": "In recent years there is a growing interest in first order learners , however existing proposals for distances between non - ground atoms have some drawbacks .In this paper we develop a new measure for the distance between nonground atoms .", "label": "", "metadata": {}, "score": "61.934586"}
{"text": "281 - 298 .Academic Press .Muggleton , S. , & Page , C. D. ( 1994 ) .Self - saturation of definite clauses .In Wrobel , S. ( Ed . ) , Proceedings of the 4th International Workshop on Inductive Logic Programming ( ILP-94 ) , Vol .", "label": "", "metadata": {}, "score": "61.977753"}
{"text": "281 - 298 .Academic Press .Muggleton , S. , & Page , C. D. ( 1994 ) .Self - saturation of definite clauses .In Wrobel , S. ( Ed . ) , Proceedings of the 4th International Workshop on Inductive Logic Programming ( ILP-94 ) , Vol .", "label": "", "metadata": {}, "score": "61.977753"}
{"text": "^ Akihiro Yamamoto .Which hypotheses can be found with inverse entailment ?In Inductive Logic Programming , pages 296 - 308 .Springer , 1997 .^ a b Timothy Kimber .Learning definite and normal logic programs by induction on failure .", "label": "", "metadata": {}, "score": "62.048462"}
{"text": "Let fU1 ; : : : ; Ung be the set of all subsets of G. 5 .Let Hi be an LGS of Ui , for every 1 ^ i ^ n. These Hi can be computed by Plotkin 's ( 1970 ) algorithm .", "label": "", "metadata": {}, "score": "62.0788"}
{"text": "Let fU1 ; : : : ; Ung be the set of all subsets of G. 5 .Let Hi be an LGS of Ui , for every 1 ^ i ^ n. These Hi can be computed by Plotkin 's ( 1970 ) algorithm .", "label": "", "metadata": {}, "score": "62.0788"}
{"text": "but not by the earlier results of [ 4].The generality of .our results follows from the fact that we treat logical . variables as transmitters for broadcasting communication , .whereas Arimura and Shinohara [ 4 ] treat them as .", "label": "", "metadata": {}, "score": "62.090885"}
{"text": "ACL is an extension of Inductive Logic Programming ( ILP ) to the case in which both the background and the target theory are abductive logic programs a ... \" .We investigate how abduction and induction can be integrated into a common learning framework through the notion of Abductive Concept Learning ( ACL ) .", "label": "", "metadata": {}, "score": "62.09249"}
{"text": "A novel generality order to . be imposed to the search space of clauses is investigatedin .order to cope with recursion in a more suitable way .The . consistency recovery is performed by reformulating the . currenttheory and by applying a layering technique based on .", "label": "", "metadata": {}, "score": "62.107216"}
{"text": "Lionel Martin and Christel Vrain .A three - valued framework for the induction of general logic programs .In Luc De Raedt , editor , Advances in Inductive Logic Programming .IOS Press , 1996 .James McDonald and John Anton .", "label": "", "metadata": {}, "score": "62.168243"}
{"text": "Morgan Kaufmann , 1996 . H.Bostr\u00f6m .Predicate invention and learning from positive examples only .In Claire Nedellec and C\u00e9line Rouveirol , editors , Machine Learning : ECML-98 . 10th European Conference on Machine Learning , Chemnitz , Germany , April21 - 23 , 1998 .", "label": "", "metadata": {}, "score": "62.169876"}
{"text": "Output : An LGI of S in C. 1 .Remove all tautologies from S ( a clause is a tautology iff it contains literals A and : A ) , call the remaining set S0 .( Notice that this m is the same number as the number of terms in the term set T used in the proof of Theorem 6 . )", "label": "", "metadata": {}, "score": "62.212048"}
{"text": "Output : An LGI of S in C. 1 .Remove all tautologies from S ( a clause is a tautology iff it contains literals A and : A ) , call the remaining set S0 .( Notice that this m is the same number as the number of terms in the term set T used in the proof of Theorem 6 . )", "label": "", "metadata": {}, "score": "62.212048"}
{"text": "Then why do we have a problem in finding the LGI of OE1 and OE2 ?The reason for this is that OE1 ^ OE2 is not a clause .Instead of using OE1 ^ OE2 , we have to find some least clause which implies both clauses OE1 and OE2 .", "label": "", "metadata": {}, "score": "62.310047"}
{"text": "Then why do we have a problem in finding the LGI of OE1 and OE2 ?The reason for this is that OE1 ^ OE2 is not a clause .Instead of using OE1 ^ OE2 , we have to find some least clause which implies both clauses OE1 and OE2 .", "label": "", "metadata": {}, "score": "62.310047"}
{"text": "The first one enables an ACS to .learn in any deterministic multi - step environment .The . second one allows anACS to deal with a special kind of .Phillip D. Summers .Program Construction from Examples .PhD thesis , Department of Computer Science , Yale University , New Haven , US - CT , 1975 .", "label": "", "metadata": {}, "score": "62.320457"}
{"text": "Session \" Estimation of distribution algorithms \" .programming ; machine learning ; moses ; program evolution ; . H. R. Lu and K. S. Fu .Inferability of context - free programmed grammars .International Journal of Computer and Information Sciences , 13(1):33 - 58 , February 1984 .", "label": "", "metadata": {}, "score": "62.344048"}
{"text": "The annual GP conference is now part of the GECCO conference . induction ; inductive programming ; program evolution ; . functions in order to evolve implicitly recursive .Tina Yu and Chris Clack .Recursion , lambda - abstractions and genetic programming .", "label": "", "metadata": {}, "score": "62.399033"}
{"text": "Man Wong and Tuen Mun .Evolving recursive programs by using adaptive grammar based genetic programming .Genetic Programming and Evolvable Machines , 6(4):421 - 455 , December 2005 .programming ; enumerative ip ; gbgp ; gp ; induction ; inductive . algorithms to automatically induce computer programs .", "label": "", "metadata": {}, "score": "62.403896"}
{"text": "Severalexamples of .programs which have been induced indicate that our . extension pays off in practice .An experimental study of .someparameters which affect this efficiency is performed . and some applications for programming practice are . illustrated , especiallysmall classification problems and .", "label": "", "metadata": {}, "score": "62.47946"}
{"text": "A sane algorithm for the synthesis of LISP functions from example problems : The Boyer and Moore algorithm .In Derek H. Sleeman , editor , Proceedings of AISB / GI Conference ( Hamburg , Germany , July 18 - 20 , 1978 , pages 169 - 175 .", "label": "", "metadata": {}, "score": "62.47978"}
{"text": "At the same time new and more efficient ILP algorithms have been developed that are making feasible the application of ILP ... . by Beat W\u00fcthrich , B. Wuthrich - In Proc .Int WS on Integration of Knowledge Discovery in Databases with Deductive and Object - Oriented Databases , 1996 . \" ...", "label": "", "metadata": {}, "score": "62.50329"}
{"text": "problem is presented , MERLIN 2.0 , which is a successor of a . system in which predicate invention is guided by sequences .of input clauses in SLD - refutations of positive and .negative examples w.r.t . an overly general theory .", "label": "", "metadata": {}, "score": "62.518032"}
{"text": "Inductive logic programming is particularly useful in bioinformatics and natural language processing .Ehud Shapiro laid the theoretical foundation for inductive logic programming [ 1 ] [ 2 ] and built its first implementation ( Model Inference System ) in 1981 : [ 3 ] a Prolog program that inductively inferred logic programs from positive and negative examples .", "label": "", "metadata": {}, "score": "62.663498"}
{"text": "Lloyd , J. : Foundations of Logic Programming .Springer ( 1987 ) .Malerba , D. , Lisi , F. : Discovering associations between spatial objects : an ILP application .In : 11th International Conference on ILP , pp .", "label": "", "metadata": {}, "score": "62.67241"}
{"text": "Francesco Bergadano and Daniele Gunetti .Inductive Logic Programming : From Machine Learning to Software Engineering .MIT Press , Cambridge , MA , USA , 1995 .W. Bibel and A. W. Biermann .Special issue : Automatic programming , foreword of the guest editors .", "label": "", "metadata": {}, "score": "62.69732"}
{"text": "As it will turn out , there are enumerable classes of .recursive functions that are not learnable from typical . examples .Shan - Hwei Nienhuys - Cheng and Ronald de Wolf .Foundations of Inductive Logic Programming , volume 1228 of Lecture Notes in Computer Science .", "label": "", "metadata": {}, "score": "62.71866"}
{"text": "The area of theory refinement is concerned with the use of training data to automatically change an existing theory so that it better fits the data .Theory refinement techniques , however , have not been extensively used in applications because of the problems in scaling up their underlying algorithms .", "label": "", "metadata": {}, "score": "62.758778"}
{"text": "Journal of Logic Programming , 19 , 629 - 679 .Muggleton , S. , & Feng , C. ( 1992 ) .Efficient induction of logic programs .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .", "label": "", "metadata": {}, "score": "62.765816"}
{"text": "Journal of Logic Programming , 19 , 629 - 679 .Muggleton , S. , & Feng , C. ( 1992 ) .Efficient induction of logic programs .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .", "label": "", "metadata": {}, "score": "62.765816"}
{"text": "David W. Aha , Charles X. Ling , Stan Matwin , and S. Lapointe .Learning singly - recursive relations from small datasets .In Ruzena Bajcsy , editor , IJCAI'93 : Proceedings of the 13th International Joint Conference on Artificial Intelligence ( Chamb\u00e9ry , France , Aug.28-Sep.3 , 1993 ) , pages 47 - 58 .", "label": "", "metadata": {}, "score": "62.771374"}
{"text": "In particular , we show that a . single k - ary recursive constant - depth determinate clause is . learnable .Two - clause programs consisting of one learnable .recursive clause and one constant - depth determinate .non - recursive clause are also learnable , if an additional . ''", "label": "", "metadata": {}, "score": "62.785217"}
{"text": "This gives a total of six different ordered languages .In this paper , we give a systematic treatment of the existence or non - existence of least generalizations and greatest specializations of finite sets of clauses in each of these six ordered sets .", "label": "", "metadata": {}, "score": "62.790245"}
{"text": "This gives a total of six different ordered languages .In this paper , we give a systematic treatment of the existence or non - existence of least generalizations and greatest specializations of finite sets of clauses in each of these six ordered sets .", "label": "", "metadata": {}, "score": "62.790245"}
{"text": "S. Muggleton and L. De Raedt .Inductive logic programming : Theory and methods .Roland Olsson .Inductive functional programming using incremental program transformation .J.R. Quinlan and R.M. Cameron - Jones .FOIL :A midterm report .Springer , 1993 . U.", "label": "", "metadata": {}, "score": "62.80872"}
{"text": "Due to the progress in machine learning , over the last decades the inductive approach currently seems to be the more promising .Furthermore , domain specific IP techniques are developed for end - user programming [ 4,9 ] and in the context of intelligent tutoring in the domain of programming [ 8].", "label": "", "metadata": {}, "score": "62.809723"}
{"text": "Original Russian Text \u00a9 G.M. Sergievsky , 2011 , published in Izvestiya Akademii Nauk .Teoriya i Sistemy Upravleniya , 2011 , No . 1 , pp .40 - 53 . E. Kitzelmann , Analytical Inductive Functional Programming , Lecture Notes in Computer Science , 2009 , No .", "label": "", "metadata": {}, "score": "62.87021"}
{"text": "Tools . by Ashwin Srinivasan Muggleton , Ashwin Srinivasan , S. H. Muggleton , M. J. E. Sternberg , R. D. King - Artificial Intelligence , 1996 . \" ...A classic problem from chemistry is used to test a conjecture that in domains for which data are most naturally represented by graphs , theories constructed with Inductive Logic Programming ( ILP ) will significantly outperform those using simpler feature - based methods .", "label": "", "metadata": {}, "score": "62.872074"}
{"text": "An example of score function include minimal compression length where a hypothesis with a lowest Kolmogorov complexity has the highest score and is returned .An ILP system is complete iff for any input logic theories any correct hypothesis H wrt to these input theories can be found with its hypothesis search procedure .", "label": "", "metadata": {}, "score": "62.890266"}
{"text": "data - type constraints and whose use of generic functions .and generic data types makes it more powerful than other .approaches to type - constraint enforcement .After describing .its operation , we illustrate its use on problems in two . domains , matrix / vector manipulation and list manipulation , . which require its generality .", "label": "", "metadata": {}, "score": "62.914536"}
{"text": "In this preliminary . investigation , a language is taken to be a set of strings .on some finite alphabet .The alphabet , is the same for all . languages of the class .Several variations of each of the . following two basic methods of information presentation are . investigated : A text for a language generates the strings .", "label": "", "metadata": {}, "score": "62.92565"}
{"text": "In Inductive Logic Programming .6th International Workshop , ILP-96 Stockholm , Sweden , Aug.26 - 28 , 1996 .Selected Papers , volume 1314 of Lecture Notes in Computer Science , pages 265 - 282 , Berlin / Heidelberg , 1997 .", "label": "", "metadata": {}, "score": "62.98378"}
{"text": "Maloberti , J. , Suzuki , E. : Improving efficiency of frequent query discovery by eliminating non - relevant candidates .Discovery Science , pp .220 - 232 .Springer Berlin Heidelberg , Heidelberg ( 2003 ) .Mannila , H. , Toivonen , H. : Levelwise search and borders of theories in knowledge discovery .", "label": "", "metadata": {}, "score": "63.003113"}
{"text": "In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 117 - 139 , Berlin / Heidelberg , 2010 .", "label": "", "metadata": {}, "score": "63.10388"}
{"text": "Using .this approach we have been able to generate generic .Al\u00edpio Jorge and Pavel Brazdil .Architecture for iterative learning of recursive definitions .In Luc De Raedt , editor , Advances in Inductive Logic Programming .IOS Press , 1996 .", "label": "", "metadata": {}, "score": "63.13115"}
{"text": "Genetic programming with primitive recursion .In GECCO'06 : Proceedings of the 8th Proceedings of the 8th annual Conference on Genetic and Evolutionary Computation ( Seattle , Washington , USA , July08 - 12 , 2006 ) , pages 941 - 942 , New York , NY , USA , 2006 .", "label": "", "metadata": {}, "score": "63.16978"}
{"text": "Neil Mitchell .Deriving generic functions by example .In Jan Tobias M\u00fchlberg and Juan Ignacio Perna , editors , Proceedings of the First York Doctoral Symposium 2007 ( York , UK , Oct.26 , 2007 ) , pages 55 - 62 .", "label": "", "metadata": {}, "score": "63.17728"}
{"text": "Morgan Kaufmann , 1993 .Peter Idestam - Almquist .Recursive anti - unification .In Stephen H. Muggleton , editor , ILP'93 : Proceedings Third International Workshop on Inductive Logic Programming ( Ljubljana , Slovenia , 1993 ) , pages 241 - 254 .", "label": "", "metadata": {}, "score": "63.205673"}
{"text": "Induction of recursive program schemes .In Proc .Springer , 1998 .Ute Schmid and Emanuel Kitzelmann .Inductive rule learning on the knowledge level .License Creative Commons BY 3.0 Unported license Sumit Gulwani and Emanuel Kitzelmann and Ute Schmid .", "label": "", "metadata": {}, "score": "63.267986"}
{"text": "Dondossola , G. 1998 .Formal methods in the development of safety critical knowledge - based components .In F. van Harmelen , editor , Proceedings of the KR'98 European Workshop on Validation and Verification of Knowledge - Based Systems ( CEUR Workshop Proceedings , Vol .", "label": "", "metadata": {}, "score": "63.321075"}
{"text": "Springer .the induction of functional logic programs ( FLP ) .Since . narrowing ( which is the most usual operational semantics of .( FLP ) performs a infication ( mgu ) followed by a . replacement , we introduce two main operators in our IFLP .", "label": "", "metadata": {}, "score": "63.39042"}
{"text": "This impedes an exchange of . theory and techniques and , as a consequence , a progress of . inductive programming .In this paper we survey theoretical . results and methods of inductive program synthesis that . have been developed in different research fields until .", "label": "", "metadata": {}, "score": "63.480194"}
{"text": "OE2 is equivalent to the clause which is the union of OE1 and OE2 .This fact was used in the proof of Lemma 7 .Then for every finite S ' C , there exists a GSI of S in C. The previous theorem holds for clauses in general , so in particular also for function - free clauses .", "label": "", "metadata": {}, "score": "63.486164"}
{"text": "OE2 is equivalent to the clause which is the union of OE1 and OE2 .This fact was used in the proof of Lemma 7 .Then for every finite S ' C , there exists a GSI of S in C. The previous theorem holds for clauses in general , so in particular also for function - free clauses .", "label": "", "metadata": {}, "score": "63.486164"}
{"text": "Moreover , a new term ' ' structure abstraction ' ' is . introduced to describe the property emerged from the .higher - order function program structure .We test this . technique on the general even - parity problem .", "label": "", "metadata": {}, "score": "63.51602"}
{"text": "pp .78 - 86 .Clark , K.L. 1978 .Negation as failure .In Logic and Data Bases .Plenum Press , pp .293 - 322 .Craw , S. 1996 .Refinement complements verification and validation .Int .", "label": "", "metadata": {}, "score": "63.535637"}
{"text": "In characteristic induction from interpretations , .the regularities are represented by clausal theories , and .the data using Herbrand interpretations .Because CLAUDIEN .uses clausal logic to represent hypotheses , the .regularities induced typically involve multiple relations .", "label": "", "metadata": {}, "score": "63.542847"}
{"text": "David W. Aha , Stephane Lapointe , Charles X. Ling , and Stan Matwin .Inverting implication with small training sets .In Francesco Bergadano and Luc De Raedt , editors , Machine Learning : ECML-94 .European Conference on Machine Learning , Catania , Italy , April6 - 8 , 1994 .", "label": "", "metadata": {}, "score": "63.553596"}
{"text": "I . overview the main achievements in deploying logic for . program synthesis .I also outline the prospects of such . research , arguing that , while the technology scales up from . toy programs to real - life software and to commercially .", "label": "", "metadata": {}, "score": "63.597576"}
{"text": "There is a straightforward relationship between finding an intensional definition for a relation , and classification of tuples .If ... . by Anotnis Kakas , A. C. Kakas , Fabrizio Riguzzi - In Proceedings of the 7th International Workshop on Inductive Logic Programming , 1997 . \" ...", "label": "", "metadata": {}, "score": "63.70826"}
{"text": "Alexey Rodriguez Yakushev and Johan Jeuring .Enumerating well - typed terms generically .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .", "label": "", "metadata": {}, "score": "63.72795"}
{"text": "Poster .Ute Schmid .Iterative macro - operators revisited : Applying program synthesis to learning in planning .Technical Report CMU - CS-99 - 114 , Computer Science Department , Carnegie Mellon University , Pittsburg , PA , 1999 .Ute Schmid .", "label": "", "metadata": {}, "score": "63.732254"}
{"text": "In : Proceedings of the 2nd International Conference on Formal Concept Analysis , pp .287 - 312 ( 2004 ) .Kuznetsov , S. , Samokhin , M. : Learning closed sets of labeled graphs for chemical applications .In : Proceedings of the 15th International Conference on Inductive Logic Programming , pp .", "label": "", "metadata": {}, "score": "63.753273"}
{"text": "Irene Stahl .The appropriateness of predicate invention as bias shift operation in ILP .Machine Learning , 20(1 - 2):95 - 117 , July 1995 .Programming is to extend the hypothesis language with new .predicates if the vocabulary given initially is . insufficient for the learning task .", "label": "", "metadata": {}, "score": "63.799038"}
{"text": "Development of inductive synthesis of functional programs .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1stWorkshop on Approaches and Applications of Inductive Programming ( Bonn , Germany , Aug.7 , 2005 ) , page 13 , 2005 .", "label": "", "metadata": {}, "score": "63.819523"}
{"text": "Some classes of term rewriting systems inferable from positive data .Theoretical Computer Science , 397(1 - 3):129 - 149 , 2008 . systems ( trss , for short ) from positive examples alone .Two . classes of trss inferable from positive data are presented , . namely , simple flat trss and linear - bounded trss .", "label": "", "metadata": {}, "score": "63.915222"}
{"text": "In LNCS : Vol .Proceedings of the 13th international conference on inductive logic programming ( pp . 311 - 328 ) .Berlin : Springer .^ Kimber , T. , Broda , K. , & Russo , A. ( 2009 ) .", "label": "", "metadata": {}, "score": "63.97097"}
{"text": "Ute Schmid , R. Mercy , and Fritz Wysotzki .Programming by analogy : Retrieval , mapping , adaptation and generalization of recursive program schemes .In FGML'98 : Proceedings of the Annual Meeting of the GI Machine Learning Group ( Technische Universit\u00e4t , Berlin , Aug.17.-19 , 1998 ) , volume 98 of Forschungsberichte des Fachbereichs Informatik , pages 140 - 147 , TU Berlin , 1998 .", "label": "", "metadata": {}, "score": "64.01249"}
{"text": "Then it might very well be that the GSI of D1 and D2 still implies e+ , but does not imply either eGamma 1 or eGamma 2 .Thus we could obtain a correct specialization by taking the GSI of D1 and D2 .", "label": "", "metadata": {}, "score": "64.03306"}
{"text": "Then it might very well be that the GSI of D1 and D2 still implies e+ , but does not imply either eGamma 1 or eGamma 2 .Thus we could obtain a correct specialization by taking the GSI of D1 and D2 .", "label": "", "metadata": {}, "score": "64.03306"}
{"text": "Hence D1 and D2 are logically equivalent .This means that D1 is an LGI of the set fD1 ; D2 g .However , the LGS of these two clauses is P ( x ; y ; z ) P ( u ; v ; w ) , which is clearly an over - generalization .", "label": "", "metadata": {}, "score": "64.06572"}
{"text": "Hence D1 and D2 are logically equivalent .This means that D1 is an LGI of the set fD1 ; D2 g .However , the LGS of these two clauses is P ( x ; y ; z ) P ( u ; v ; w ) , which is clearly an over - generalization .", "label": "", "metadata": {}, "score": "64.06572"}
{"text": "non - relational descriptions of objects in the sense that .the learned descriptions do not specify relations among the . objects ' parts .Attribute - based learning thus has two . strong limitations : the background knowledge can be .", "label": "", "metadata": {}, "score": "64.14343"}
{"text": "Thus the question for the existence of an LGS of every finite set S of clauses is answered positively for both clausal languages and for Horn languages .Plotkin established the existence of an LGS , but he seems to have ignored the GSS in ( 1970 , 1971b ) , possibly because it is a very straightforward result .", "label": "", "metadata": {}, "score": "64.15206"}
{"text": "Thus the question for the existence of an LGS of every finite set S of clauses is answered positively for both clausal languages and for Horn languages .Plotkin established the existence of an LGS , but he seems to have ignored the GSS in ( 1970 , 1971b ) , possibly because it is a very straightforward result .", "label": "", "metadata": {}, "score": "64.15206"}
{"text": "Other particular points include a treatment for recursive definitions and removal of redundant clauses .Randomly selected incomplete samples are tested with FOIL - I , QuinIan 's FOIL and Muggleton 's Progol . A. Ishino and A. Yamamoto .Learning from examples with typed equational programming .", "label": "", "metadata": {}, "score": "64.21121"}
{"text": "Inductive logic programming .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .3 - 27 .Academic Press .Muggleton , S. , & De Raedt , L. ( 1994 ) .", "label": "", "metadata": {}, "score": "64.218575"}
{"text": "Inductive logic programming .In Muggleton , S. ( Ed . ) , Inductive Logic Programming , Vol .38 of APIC Series , pp .3 - 27 .Academic Press .Muggleton , S. , & De Raedt , L. ( 1994 ) .", "label": "", "metadata": {}, "score": "64.218575"}
{"text": "Work in Progress Reports .Masami Hagiya and T. Sakurai .Foundation of logic programming based on inductive definition .New Generation Computing , 2(1):59 - 77 , 1984 .Masami Hagiya .Programming by example and proving by example using higher - order unification .", "label": "", "metadata": {}, "score": "64.23074"}
{"text": "Jude W. Shavlik .Acquiring recursive and iterative concepts with explanation - based learning .Machine Learning , 5(1):39 - 70 , March 1990 .solution is generalized into a form that can be later used . to solve conceptually similar problems .", "label": "", "metadata": {}, "score": "64.24036"}
{"text": "Kuznetsov , S. : Learning of simple conceptual graphs from positive and negative examples .In : Proceedings of the 3rd European Conference on Principles and Practive of Knowledge Discovery in Databases , pp .384 - 391 ( 1999 ) .", "label": "", "metadata": {}, "score": "64.39279"}
{"text": "Inductive synthesis of recursive logic programs : Achievements and prospects .The Journal of Logic Programming , 41(2 - 3):141 - 195 , November / December 1999 .incomplete information , such as input / output examples , is a . challenging subfield both of Inductive Logic Programming .", "label": "", "metadata": {}, "score": "64.40863"}
{"text": "Often , particularly in implementations of ILP - systems , the language is required to be function - free , or function 5 .A clause which only contains constants and variables as terms .Note that even for function - free clauses , the subsumption order is still not enough .", "label": "", "metadata": {}, "score": "64.42167"}
{"text": "Often , particularly in implementations of ILP - systems , the language is required to be function - free , or function 5 .A clause which only contains constants and variables as terms .Note that even for function - free clauses , the subsumption order is still not enough .", "label": "", "metadata": {}, "score": "64.42167"}
{"text": "CProgol4.4: a tutorial introduction .In Saso Dzeroski and Nada Lavrac , editors , Relational Data Mining , pages 160 - 188 .Springer , 2001 .Stephen H. Muggleton and C. D. Page .Self - saturation of definite clauses .", "label": "", "metadata": {}, "score": "64.42567"}
{"text": "New Generation Computing 8 ( 4 ) : 295 - 318 .doi : 10.1007/BF03037089 .^ Muggleton , Stephen ( 1999 ) .\"Inductive Logic Programming : Issues , Results and the Challenge of Learning Language in Logic \" .", "label": "", "metadata": {}, "score": "64.561295"}
{"text": "generic enumeration function .We show that the enumeration .function can be used to generate the terms of simply typed .Akihiro Yamamoto .Which hypotheses can be found with inverse entailment ?In Nada Lavra\u010d and Sa\u0161o D\u017eeroski , editors , Inductive Logic Programming .", "label": "", "metadata": {}, "score": "64.575356"}
{"text": "^ Plotkin , Gordon D. ( 1971 ) .Meltzer , B. ; Michie , D. , eds . \"A Further Note on Inductive Generalization \" .Machine Intelligence ( Edinburgh University Press ) 6 : 101 - 124 .^ Ray , O. , Broda , K. , & Russo , A. M. ( 2003 ) .", "label": "", "metadata": {}, "score": "64.63112"}
{"text": "However , the . application of this method prevents recursive . specializations from being found .In this work , we present .the algorithm SPECTRE II which is not limited to . specializing non - recursive predicates .The key idea upon . which the algorithm is based is that it is not enough to . specialize or remove clauses in refutations of negative . examples in order to obtain correct specializations , but it . is sometimes necessary to specialize clauses that appear . only in refutations of positive examples .", "label": "", "metadata": {}, "score": "64.6459"}
{"text": "5 , pp .153 - 163 .American Elsevier ( 1970 ) .Schietgat , L. , Costa , F. , Ramon , J. , De Raedt , L. : Effective feature construction by maximum common subgraph sampling .Mach .", "label": "", "metadata": {}, "score": "64.65444"}
{"text": "Claire N\u00e9dellec , C\u00e9line Rouveirol , Hilde Ad\u00e9 , Francesco Bergadano , and Birgit Tausend .Declarative bias in inductive logic programming .In Luc De Raedt , editor , Advances in Inductive Logic Programming .IOS Press , 1996 .Jochen Nessel .", "label": "", "metadata": {}, "score": "64.66324"}
{"text": "negative examples .We believe our system can be used as a .preprocessor for a general - purpose system when few examples .Paul S. Rosenbloom and Alan Newell .The chunking of goal hierarchies : A generalized model of practice .", "label": "", "metadata": {}, "score": "64.72044"}
{"text": "How to clear a block : A theory of plans .Journal of Automated Reasoning , 3(4):343 - 378 , December 1987 .J. Marcinkowski and L. Pacholski .Undecidability of the horn - clause implication problem .In SFCS'92 : Proceedings of the 33rd IEEE Annual Symposium on Foundations of Computer Science ( Pittsburgh , PA , USA , Oct.24 - 27 , 1992 ) , pages 354 - 362 .", "label": "", "metadata": {}, "score": "64.74051"}
{"text": "The latter are capable of inducing both classification and regression trees .ICL is an upgrade of CN2 [ 5 ] to first - order logic , TILDE is a .. by Luc De Raedt , Hendrik Blockeel - In Proceedings of the 7th International Workshop on Inductive Logic Programming , 1997 . \" ...", "label": "", "metadata": {}, "score": "64.75183"}
{"text": "Serap Yilmaz .Inductive synthesis of recursive logic programs .Master 's thesis , University of Bilkent , Computer Science Department , 1997 .Tina Yu and Chris Clack .PolyGP : A polymorphic genetic programming system in haskell .In GP'98 : Proceedings of the 3rd Conference on Genetic Programming ( Madison , Wisconsin , July22 - 25 , 1998 ) , pages 416 - 427 .", "label": "", "metadata": {}, "score": "64.77888"}
{"text": "An inductive programming approach to algebraic specification .In Emanuel Kitzelmann and Ute Schmid , editors , AAIP'07 : Proceedings of the 2nd Workshop on Approaches and Applications of Inductive Programming ( Warsaw , Poland , September17 , 2007 ) , pages 3 - 14 , 2007 .", "label": "", "metadata": {}, "score": "64.79052"}
{"text": "We first give a general definition of least generalizations and greatest specializations for sets of clauses ordered by some quasi - order , which we then instantiate in different ways .That is , if C and D are both LG 's or GS 's of some set S , then we have C , D. The concepts defined above are instances of the mathematical concepts of ( least ) upper bounds and ( greatest ) lower bounds .", "label": "", "metadata": {}, "score": "64.84742"}
{"text": "We first give a general definition of least generalizations and greatest specializations for sets of clauses ordered by some quasi - order , which we then instantiate in different ways .That is , if C and D are both LG 's or GS 's of some set S , then we have C , D. The concepts defined above are instances of the mathematical concepts of ( least ) upper bounds and ( greatest ) lower bounds .", "label": "", "metadata": {}, "score": "64.84742"}
{"text": "Maarten M. Fokkinga .Monadic Maps and Folds for Arbitrary Datatypes .Technical Report Memoranda Inf 94 - 28 , University of Twente , Enschede , Netherlands , June 1994 .R. Freivalds .Inductive inference of recursive functions : qualitative theory .", "label": "", "metadata": {}, "score": "64.943214"}
{"text": "M. R. K. Krishna Rao .Learnability of term rewrite systems from positive examples .In CATS'06 : Proceedings of the 12th Computing : The Australasian Theroy Symposium ( Hobart , Australia , Jan.16 - 19 , 2006 ) , volume 51 , pages 133 - 137 .", "label": "", "metadata": {}, "score": "64.94644"}
{"text": "Ph.D. thesis , Stockholm University .Idestam - Almquist , P. ( 1995 ) .Generalization of clauses under implication .Journal of Artificial Intelligence Research , 3 , 467 - 489 .Kowalski , R. A. ( 1970 ) .The case for using equality axioms in automatic demonstration .", "label": "", "metadata": {}, "score": "65.088104"}
{"text": "Ph.D. thesis , Stockholm University .Idestam - Almquist , P. ( 1995 ) .Generalization of clauses under implication .Journal of Artificial Intelligence Research , 3 , 467 - 489 .Kowalski , R. A. ( 1970 ) .The case for using equality axioms in automatic demonstration .", "label": "", "metadata": {}, "score": "65.088104"}
{"text": "The following well - known example about learning definitions of family relations uses the abbreviations .and the trivial proposition to denote the absence of negative examples .Plotkin 's [ 8 ] [ 9 ] \" relative least general generalization ( rlgg ) \" approach to inductive logic programming shall be used to obtain a suggestion about how to formally define the daughter relation .", "label": "", "metadata": {}, "score": "65.12498"}
{"text": "Inductive logic programming : Theory and methods .Journal of Logic Programming , 19 , 20:629 - 679 , May / July 1994 .10th Birthday Special Issue of the Journal of Logic Programming .Stephen H. Muggleton and C. Feng .", "label": "", "metadata": {}, "score": "65.144394"}
{"text": "Utilising Restricted For - Loops in Genetic Programming .PhD thesis , Royal Melbourne Institute of Technology , School of Computer Science and Information Technology , Melbourne , Victoria , Australia , 2007 .Henry Lieberman .Programming descriptive analogies by example .", "label": "", "metadata": {}, "score": "65.15459"}
{"text": "On the effect of caching in recursive theory learning .In Rui Camacho , Ross D. King , and Ashwin Srinivasan , editors , Inductive Logic Programming .14th International Conference , ILP'04 , Porto , Portugal , Sept.6 - 8 , 2004 .", "label": "", "metadata": {}, "score": "65.28917"}
{"text": "predicate invention really helps to make learning succeed .in the extended language depends on the language bias .currently employed .In this paper , we investigate for which .commonly employed language biases predicate invention is an .appropriate shift operation .", "label": "", "metadata": {}, "score": "65.29556"}
{"text": "Martin Hofmann .Igor2 - an analytical inductive functional programming system : Tool demo .In John Gallagher and Janis Voigtl\u00e4nder , editors , Proceedings of the ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation ( PEPM'10 , Madrid , Jan.18 - 19 , 2010 ) , pages 29 - 32 , New York , NY , USA , 2010 .", "label": "", "metadata": {}, "score": "65.303795"}
{"text": "Muggleton , S. , De Raedt , L. : Inductive logic programming : theory and methods .J. Log .Program .20 , 629 - 679 ( 1994 ) CrossRef .Nienhuys - Cheng , S. , De Wolf , R. : Foundations of inductive logic programming .", "label": "", "metadata": {}, "score": "65.33777"}
{"text": "Springer , Berlin / Heidelberg , 1991 .sample computations .We introduce a formal language , . namely , the so - called dot expressions , which is based on a .formalization of the intuitive notion of ellipsis ( ...... ) .", "label": "", "metadata": {}, "score": "65.36063"}
{"text": "In Ruzena Bajcsy , editor , IJCAI'93 : Proceedings of the 13th International Joint Conference on Artificial Intelligence ( Chamb\u00e9ry , France , Aug.28-Sep.3 , 1993 ) , pages 1050 - 1057 .Morgan Kaufmann , 1993 .programming ; inproceedings ; machine learning ; program .", "label": "", "metadata": {}, "score": "65.36162"}
{"text": "Pierre Flener , L. Popelinsky , and O. Stepankova .Ilp and automatic programming : towards three approaches .In ILP'94 : Proceedings of the 4th International Workshop on Inductive Logic Programming ( Bonn , Germany , Sept.12 - 14 , 1994 ) , volume 237 of GMD - Studien , pages 351 - 364 .", "label": "", "metadata": {}, "score": "65.37488"}
{"text": "resources into high - performance scheduling algorithms .A . few applications of these systems are presented .Nancy Pennington .Cognitive components of expertise in computer programming : A review of the literature ( Technical report of the Graduate School of Business , University of Chicago ) .", "label": "", "metadata": {}, "score": "65.40011"}
{"text": "^ David Toth ( 2014 ) .Imparo is complete by inverse subsumption .arXiv:1407.3836 For support , please contact .Documents .Summary .Inductive programming ( IP ) research addresses the problem of learning programs from incomplete specifications , such as input / output examples , traces , or constraints .", "label": "", "metadata": {}, "score": "65.42247"}
{"text": "Evolutionary inductive . programming , on the other hand , is based on searching .through hypothesis space for a ( recursive ) program which .performs sufficiently well on the given input / output . examples with respect to some measure of fitness .", "label": "", "metadata": {}, "score": "65.471466"}
{"text": "We thus employ a number of relational classification and regression methods on the relational representation and compare these to propositional methods applied to different propositionalisations of the problem .Some expert comments on the induced theories are also given . 1 Introduction The persistence of chemicals in the environment ( or to environmen ... . ... ion , the regression - tree induction program M5 ' [ 21 ] , a re - implementation of M5 [ 17 ] was used .", "label": "", "metadata": {}, "score": "65.66911"}
{"text": "That is , they use clauses of the form A L1 ; : : : ; Ln , where A is an atom and each Li is a literal .These are called program clauses ( Lloyd , 1987 ) .Program clauses are in fact logically equivalent to general clauses .", "label": "", "metadata": {}, "score": "65.74931"}
{"text": "That is , they use clauses of the form A L1 ; : : : ; Ln , where A is an atom and each Li is a literal .These are called program clauses ( Lloyd , 1987 ) .Program clauses are in fact logically equivalent to general clauses .", "label": "", "metadata": {}, "score": "65.74931"}
{"text": "Some instances of the application of the model for program .inductive synthesis are also given .Particularly , there are .given examples of the euclidean and bubblesort algorithm .synthesis within acceptable time from completely natural .sample descriptions . )", "label": "", "metadata": {}, "score": "65.84277"}
{"text": "polynomial time inp , mandnusingO(pmnk+1 ) entailment .equivalence queries andO(pm2n2 ) request for hint queries , . wherepis the number of predicates , mis the number of clauses . counterexample .This algorithm combines saturation and .least general generalization operators to invert resolution . steps .", "label": "", "metadata": {}, "score": "65.89072"}
{"text": "First they construct an intermediate theory F called a bridge theory satisfying the conditions and .Then as , they generalize the negation of the bridge theory F with the anti - entailment .[14 ] However , the operation of the anti - entailment since being highly non - deterministic is computationally more expensive .", "label": "", "metadata": {}, "score": "65.91446"}
{"text": "Alan W. Biermann .Dealing with search .In Alan W. Biermann , Yves Kodratoff , and Gerard Guiho , editors , Automatic Program Construction Techniques , chapter 17 , pages 375 - 392 .The Free Press , New York , NY , USA , 1984 .", "label": "", "metadata": {}, "score": "65.92323"}
{"text": "IEEE Transactions on Software Engineering , 5(4):294 - 328 , 1979 .Zohar Manna and Richard Waldinger .A deductive approach to program synthesis .ACM Transactions on Programming Languages and Systems , 2(1):90 - 121 , 1980 .program from a given specification .", "label": "", "metadata": {}, "score": "65.9337"}
{"text": "Richard E. Korf .Macro - operators : A weak method for learning .Artificial Intelligence , 26(1):35 - 77 , 1985 .John R. Koza .Genetic Programming :On the Programming of Computers by Means of Natural Selection .MIT Press , Cambridge , MA , USA , 1992 .", "label": "", "metadata": {}, "score": "66.02503"}
{"text": "Relational learning algorithms are of special interest to members of the machine learning community ; they offer practical methods for extending the representations used in algorithms that solve supervised learning tasks .Five approaches are currently being explored to address issues involved with using relational representations .", "label": "", "metadata": {}, "score": "66.05684"}
{"text": "James Cussens and Alan M. Frisch , editors .Inductive Logic Programming , 10th International Conference , ILP'00 , London , UK , July24 - 27 , 2000 .Proceedings , volume 1866 of Lecture Notes in Computer Science , Berlin / Heidelberg , 2000 .", "label": "", "metadata": {}, "score": "66.18326"}
{"text": "Academic Press , San Diego .De Raedt , L. , & Bruynooghe , M. ( 1993 ) .A theory of clausal discovery .In Proceedings of the 13th International Joint Conference on Artificial Intelligence ( IJCAI-93 ) , pp .", "label": "", "metadata": {}, "score": "66.19957"}
{"text": "Academic Press , San Diego .De Raedt , L. , & Bruynooghe , M. ( 1993 ) .A theory of clausal discovery .In Proceedings of the 13th International Joint Conference on Artificial Intelligence ( IJCAI-93 ) , pp .", "label": "", "metadata": {}, "score": "66.19957"}
{"text": "recognition , derivatives , sum of a list of naturals .Our . algorithm asks at most polynomial number of queries and our .class is the largest of all the known classes of programs .M. R. K. Krishna Rao .", "label": "", "metadata": {}, "score": "66.247925"}
{"text": "Springer , 1988 .Formerly : Cybernetics .A Translation of Kibernetika i Sistemnyi Analiz .J. M. Barzdin\u0161 and U. Sarkans .Incorporating hypothetical knowledge into the process of inductive synthesis .In S. Arikawa and A. K. Sharma , editors , Algorithmic Learning Theory .", "label": "", "metadata": {}, "score": "66.279465"}
{"text": "ifp ; induction ; inductive programming ; inproceedings ; .Susumu Katayama .Efficient exhaustive generation of functional programs using monte - carlo search with iterative deepening .In PRICAI'08 : Trends in Artificial Intelligence .10th Pacific Rim International Conference on Artificial Intelligence , Hanoi , Vietnam , Dec.15 - 19 , 2008 .", "label": "", "metadata": {}, "score": "66.31767"}
{"text": "A first set of experiments using decision trees is presented .The auto - pilot built with the generated decision trees flies more smoothly than the human pilot .However the results show also that propositional logic - level representations , like decision trees , are inadequate to fully solve the problem .", "label": "", "metadata": {}, "score": "66.36253"}
{"text": "for - loops of increasing semantic complexity .We have chosen .two problems - a modified Santa Fe ant problem and a . sorting problem - which have natural looping constructs in .their solution and a solution without loops is not possible .", "label": "", "metadata": {}, "score": "66.43486"}
{"text": "Pieter Koopman and Rinus Plasmeijer .Synthesis of functions using generic programming .In Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors , Approaches and Applications of Inductive Programming .3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .", "label": "", "metadata": {}, "score": "66.488686"}
{"text": "However , over the last years , a new revival in IP research can be observed in different communities and promising results , for example in the domain of enduser programming , give rise to new expectations .Therefore , in the Dagstuhl Seminar AAIP we brought together researchers from these different communities as well as researchers of related fields .", "label": "", "metadata": {}, "score": "66.506195"}
{"text": "evolutionary inductive programming .We use the analytical . system Igor2 to generate skeleton programs which are used . as initial hypotheses for the evolutionary system Adate .We . can show that providing such constraints can reduce the .Neil Crossley , Emanuel Kitzelmann , Martin Hofmann , and Ute Schmid .", "label": "", "metadata": {}, "score": "66.518425"}
{"text": "Here s 2(0 ) abbreviates s(s(0 ) ) , s3(0 ) abbreviates s(s(s(0 ) ) ) , etc . cfl1996 AI Access Foundation and Morgan Kaufmann Publishers .All rights reserved .In particular , subsumption is decidable , whereas logical implication is not decidable , not even for Horn clauses , as established by Marcinkowski and Pacholski ( 1992 ) .", "label": "", "metadata": {}, "score": "66.55084"}
{"text": "Here s 2(0 ) abbreviates s(s(0 ) ) , s3(0 ) abbreviates s(s(s(0 ) ) ) , etc . cfl1996 AI Access Foundation and Morgan Kaufmann Publishers .All rights reserved .In particular , subsumption is decidable , whereas logical implication is not decidable , not even for Horn clauses , as established by Marcinkowski and Pacholski ( 1992 ) .", "label": "", "metadata": {}, "score": "66.55084"}
{"text": "Technical Report impress/2/02/1 , School of Computing and Mathematics , University of Huddersfield , UK .Carbonara , L. and Sleeman , D. 1996 .Improving the efficiency of knowledge base refinement .In L. Saitta , editor , Proceedings of the Thirteenth International Conference on Machine Learning ( ICML ' 96 ) .", "label": "", "metadata": {}, "score": "66.56993"}
{"text": "Proof ): Obvious .Thus there is a ' , such that D ' ' Coe .Note that since Sigma ' r D and none of the constants a1 ; : : : ; an appears in Sigma , none of these constants appears in D. Now let ' 0 be obtained by replacing in ' all occurrences of ai by xi , for every 1 ^ i ^ n. Least Generalizations and Greatest Specializations In this section , we will define the concepts we need concerning least generalizations and greatest specializations .", "label": "", "metadata": {}, "score": "66.600716"}
{"text": "Proof ): Obvious .Thus there is a ' , such that D ' ' Coe .Note that since Sigma ' r D and none of the constants a1 ; : : : ; an appears in Sigma , none of these constants appears in D. Now let ' 0 be obtained by replacing in ' all occurrences of ai by xi , for every 1 ^ i ^ n. Least Generalizations and Greatest Specializations In this section , we will define the concepts we need concerning least generalizations and greatest specializations .", "label": "", "metadata": {}, "score": "66.600716"}
{"text": "Atlantis Press , 2009 . inductive programming are two opposing strategies for .learning recursive programs from incomplete specifications . such as input / output examples .Analytical inductive .programming is data - driven , namely , the minimal recursive .", "label": "", "metadata": {}, "score": "66.61744"}
{"text": "Automatic programming : a tutorial on formal methodologies .Journal of Symbolic Compututation , 1(2):119 - 142 , 1985 .Alan W. Biermann .Automatic programming .In Stuart C. Shapiro , editor , Encyclopedia of Artificial Intelligence , pages 18 - 35 .", "label": "", "metadata": {}, "score": "66.670044"}
{"text": "Springer .European Conference on Machine Learning , Catania , Italy , April\\,6 - -8 , 1994 .Our approach applies to a class of logic programs similar to the class of primitive recursive functions .Induction is performed using a small number of positive examples that need not be along the same resolution path .", "label": "", "metadata": {}, "score": "66.73189"}
{"text": "Agrawal , R. , Mannila , H. , Srikant , R. , Toivonen , H. , Verkamo , A. : Fast discovery of association rules .In : Advances in Knowledge Discovery and Data Mining , pp .307 - 328 ( 1996 ) .", "label": "", "metadata": {}, "score": "66.75105"}
{"text": "The consistency recovery is performed by .reformulating the current theory and by applying a layering .technique , based on the collapsed dependency graph .The .proposed approach has been implemented in the ILP system .ATRE and tested on some laboratory - sized and real - world .", "label": "", "metadata": {}, "score": "66.753555"}
{"text": "The two main operations in ILP for modification of a theory are generalization and specialization .Generalization strengthens a theory that is too weak , while specialization weakens a theory that is too strong .These operations only make sense within a generality order .", "label": "", "metadata": {}, "score": "66.79854"}
{"text": "The two main operations in ILP for modification of a theory are generalization and specialization .Generalization strengthens a theory that is too weak , while specialization weakens a theory that is too strong .These operations only make sense within a generality order .", "label": "", "metadata": {}, "score": "66.79854"}
{"text": "any equivalence relation \\approx on natural numbers , N/ .Susumu Katayama .Power of brute - force search in strongly - typed inductive functional programming automation .In Chengqi Zhang , Hans W. Guesgen , and Wai - Kiang Yeap , editors , PRICAI'04 : Trends in Artificial Intelligence .", "label": "", "metadata": {}, "score": "66.80899"}
{"text": "Satellite workshop of the 9th International Conference on Algorithmic Learning Theory ( Kaiserslautern , Rheinland - Pfalz , Germany , Oct.8 - 10 , 1998 ) .Martin M\u00fchlpfordt and Ute Schmid .Synthesis of recursive functions with interdependent parameters .In FGML'98 : Proceedings of the Annual Meeting of the GI Machine Learning Group ( Technische Universit\u00e4t , Berlin , Aug.17.-19 , 1998 ) , volume 98 of Forschungsberichte des Fachbereichs Informatik , pages 132 - 139 , TU Berlin , 1998 .", "label": "", "metadata": {}, "score": "66.83795"}
{"text": "In Ant\u00f3nio Dourado , Agostinho C. Rosa , and Kurosh Madani , editors , IJCCI'09 : Proceedings of the International Joint Conference on Computational Intelligence ( Valencia , Spain , Oct.24 - 26 , 2009 ) , pages 198 - 203 .", "label": "", "metadata": {}, "score": "66.84459"}
{"text": "from entailment queries and present a polynomial time . algorithm to learn a rich class of logic programs that . allow local variables and include many standard programs .like addition , multiplication , exponentiation , member , . prefix , suffix , length , append , merge , split , delete , . insert , insertion - sort , quick - sort , merge - sort , preorder .", "label": "", "metadata": {}, "score": "66.86543"}
{"text": "Workshop AAIP 2011 .Ute Schmid and Emanuel Kitzelmann organize the 4th Workshop on Approaches and Applications of Inductive Programming .It will take place on July 19 , 2011 , in Odense , Denmark .Co- located events are the 13th International ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming ( PPDP 2011 ) and the 21st International Symposium on Logic - Based Program Synthesis and Transformation ( LOPSTR 2011 ) .", "label": "", "metadata": {}, "score": "66.88506"}
{"text": "The results indicate that ILP . is the most likely to induce a correct program from small . sets of random examples , while GP is generally less . accurate .GLP performs the worst , and is rarely able to . induce a correct program .", "label": "", "metadata": {}, "score": "66.925575"}
{"text": "European Conference on Machine Learning Vienna , Austria , April\\,5 - -7 , 1993 .learning dealing with inductive inference in a first order .Horn clause framework .A problem in ILP is how to extend .the hypotheses language in the case that the vocabulary .", "label": "", "metadata": {}, "score": "66.92815"}
{"text": "N. Lavra\u010d and S. D\u017eeroski .Inductive Logic Programming .Techniques and Applications .Ellis Horwood , London , 1994 .Guillaume Le Blanc .Bmwk revisited generalization and formalization of an algorithm for detecting recursive relations in term sequences .In Machine Learning : ECML-94 .", "label": "", "metadata": {}, "score": "66.99103"}
{"text": "Learning acyclic first - order Horn sentences from entailment .In Ming Li and Akira Maruoka , editors , Algorithmic Learning Theory .8th International Workshop , ALT'97 , Sendai , Japan , Oct.6 - 8 , 1997 .Proceedings , volume 1316 of Lecture Notes in Computer Science , pages 432 - 445 , Berlin / Heidelberg , 1997 .", "label": "", "metadata": {}, "score": "67.0488"}
{"text": "Invited Talk Abstract .Stephen H. Muggleton , C. H. Bryant , and A. Srinivasan .Learning Chomsky - like grammars for biological sequence families .In ICML'00 : Proceedings of the 17th International Conference on Machine Learning ( Stanford University , Stanford , CA , USA , June 29-July 2 , 2000 ) , pages 631 - 638 .", "label": "", "metadata": {}, "score": "67.05291"}
{"text": "In : Proceedings of the 18thInternational Conference on Machine Learning , pp .258 - 265 ( 2001 ) .Kuramochi , M. , Karypis , G. : Finding frequent patterns in a large sparse graph .In : Proceedings of the Fourth SIAM International Conference on Data Mining .", "label": "", "metadata": {}, "score": "67.08399"}
{"text": "Identification of ... . ...nguage .Grammar acquisition [ Wir88].Proteins .Secondary structure prediction [ KS90 , Kin91 ] Qualitative .Model identification in naive qualitative physics [ BMV91 ] Satellites .Restriction Systems Problematic Domains Ground background FOIL , Golem Qualitative , chess , knowledge natural language Non - numerical ITOU , FOIL , Meshes , drugs data Golem , SIERES , CLINT , RDT Determinac ... . by S. Muggleton , L. De Raedt , D. Poole , I. Bratko , P. Flach , K. Inoue , A. Srinivasan - MACH LEARN , 2011 . \" ...", "label": "", "metadata": {}, "score": "67.08825"}
{"text": "4thInternational Workshop on Analogical and Inductive Inference ( AII'94 , 5th International Workshop on Algorithmic Learning Theory ( ALT'94 ) , Reinhardsbrunn Castle , Germany Oct.10 - 15 , 1994 .Proceedings , volume 872 of Lecture Notes in Computer Science , pages 301 - 316 .", "label": "", "metadata": {}, "score": "67.10295"}
{"text": "function F to input i_i --- is rewritten to o_i by a CS . implementing the function F. Induction is based on .detecting syntactic regularities between example terms .In .this paper we present theoretical results and describe an . algorithm for inducing CSs over arbitrary signatures / data . types which consist of one function defined by an arbitrary .", "label": "", "metadata": {}, "score": "67.19571"}
{"text": "These results immediately .imply the pac - learnability of these classes .Although these .classes of learnable recursive programs are very . constrained , it is shown in a companion paper that they are .maximally general , in that generalizing either class in any .", "label": "", "metadata": {}, "score": "67.25151"}
{"text": "Least Generalizations under Relative Implication Implication is stronger than subsumption , but relative implication is even more powerful , because background knowledge can be used to model all sorts of useful properties and relations .In this section , we will discuss least generalizations under implication relative to some given background knowledge Sigma ( LGR 's ) .", "label": "", "metadata": {}, "score": "67.25276"}
{"text": "Least Generalizations under Relative Implication Implication is stronger than subsumption , but relative implication is even more powerful , because background knowledge can be used to model all sorts of useful properties and relations .In this section , we will discuss least generalizations under implication relative to some given background knowledge Sigma ( LGR 's ) .", "label": "", "metadata": {}, "score": "67.25276"}
{"text": "Natural Language Processing for Prolog Programmers .Prentice Hall , Upper Saddle River , NJ , USA , 1993 .Neil Crossley , Emanuel Kitzelmann , Martin Hofmann , and Ute Schmid .Combining analytical and evolutionary inductive programming .In B. Goertzel , P. Hitzler , and M. Hutter , editors , Artificial General Intelligence .", "label": "", "metadata": {}, "score": "67.32924"}
{"text": "3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .Revised Papers , volume 5812 of Lecture Notes in Computer Science , Berlin / Heidelberg , 2010 .Springer .J\u00fcrgen Schmidhuber .Optimal ordered problem solver .", "label": "", "metadata": {}, "score": "67.33696"}
{"text": "OOPS can greatly profit from metalearning or metasearching , .J\u00fcrgen Schmidhuber .How to learn a program : Optimal universal learners & goedel machines .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1st", "label": "", "metadata": {}, "score": "67.343895"}
{"text": "Fritz Wysotzki and Ute Schmid .Synthesis of recursive programs from finite examples by detection of macro - functions .Technical Report 1 - 2 , TU Berlin , Berlin , 2001 .Fritz Wysotzki .Representation and induction of infinite concepts and recursive action sequences .", "label": "", "metadata": {}, "score": "67.34761"}
{"text": "In particular , we show that any finite set of clauses has a greatest specialization under implication .Combining this with the corollary of our result on LGI 's , it follows that a function - free clausal language is a lattice .", "label": "", "metadata": {}, "score": "67.404465"}
{"text": "In particular , we show that any finite set of clauses has a greatest specialization under implication .Combining this with the corollary of our result on LGI 's , it follows that a function - free clausal language is a lattice .", "label": "", "metadata": {}, "score": "67.404465"}
{"text": "IEEE Computer Society , 2009 .Francesco Bergadano and Daniele Gunetti .An interactive system to learn functional logic programs .In Ruzena Bajcsy , editor , IJCAI'93 : Proceedings of the 13th International Joint Conference on Artificial Intelligence ( Chamb\u00e9ry , France , Aug.28-Sep.3 , 1993 ) .", "label": "", "metadata": {}, "score": "67.43761"}
{"text": "Research report 192 , Yale University .van der Laag , P. R. J. , & Nienhuys - Cheng , S.-H. Existence and nonexistence of complete refinement operators .In Bergadano , F. , & De Raedt , L. ( Eds . ) , Proceedings of the 7th European Conference on Machine Learning ( ECML-94 ) , Vol .", "label": "", "metadata": {}, "score": "67.46015"}
{"text": "Research report 192 , Yale University .van der Laag , P. R. J. , & Nienhuys - Cheng , S.-H. Existence and nonexistence of complete refinement operators .In Bergadano , F. , & De Raedt , L. ( Eds . ) , Proceedings of the 7th European Conference on Machine Learning ( ECML-94 ) , Vol .", "label": "", "metadata": {}, "score": "67.46015"}
{"text": "P ( x ) ) ; ( P ( b ) .P ( x))g .But none of these clauses subsumes C , because C does not contain the constant d , nor the literals P ( a ) or P ( b ) .", "label": "", "metadata": {}, "score": "67.46102"}
{"text": "P ( x ) ) ; ( P ( b ) .P ( x))g .But none of these clauses subsumes C , because C does not contain the constant d , nor the literals P ( a ) or P ( b ) .", "label": "", "metadata": {}, "score": "67.46102"}
{"text": "description length principle ; model complexity ; learning .from positive - only examples ; theory preference .Bruno Courcelle .Infinite trees in normal form and recursive equations having a unique solution .Theory of Computing Systems , 13(1):131 - 180 , December 1979 .", "label": "", "metadata": {}, "score": "67.484055"}
{"text": "As Muggleton and Page ( 1994 ) state , if two clauses C1 and C2 have self - saturations D1 and D2 , then an LGS of D1 and D2 is also an LGI of C1 and C2 .This positively answers our question concerning the existence of LGI 's in the case of clauses which have a self - saturation .", "label": "", "metadata": {}, "score": "67.496056"}
{"text": "As Muggleton and Page ( 1994 ) state , if two clauses C1 and C2 have self - saturations D1 and D2 , then an LGS of D1 and D2 is also an LGI of C1 and C2 .This positively answers our question concerning the existence of LGI 's in the case of clauses which have a self - saturation .", "label": "", "metadata": {}, "score": "67.496056"}
{"text": "Logic program transformation through generalization schemata .In Logic Program Synthesis and Transformation .5th International Workshop , LOPSTR'95 , Utrecht , The Netherlands , Sept.20 - 22 , 1995 .Proceedings , volume 1048 of Lecture Notes in Computer Science , pages 171 - 173 , Berlin / Heidelberg , 1996 .", "label": "", "metadata": {}, "score": "67.526825"}
{"text": "Tarmo Uustalu , Varmo Vene , and Alberto Pardo .Recursion schemes from comonads .Nordic Journal of Computing , 8(3):366 - 390 , 2001 .L. G. Valiant .A theory of the learnable .Communications of the ACM , 27(11):1134 - 1142 , 1984 .", "label": "", "metadata": {}, "score": "67.554146"}
{"text": "provides hierarchical processing for search .Consequently , . solutions to the general even - parity problem are found very . efficiently .We identify the limitations of this new . approach and conclude that only when the appropriate .higher - order function is selected that the benefits of .", "label": "", "metadata": {}, "score": "67.55951"}
{"text": "Henrik Bostr\u00f6m .Specialization of recursive predicates .In Nada Lavrac and Stefan Wrobel , editors , Machine Learning : ECML-95 .8th European Conference on Machine Learning Heraclion , Crete , Greece , April25 - 27 , 1995 .Proceedings , volume 912 of Lecture Notes in Computer Science , pages 92 - 106 , Berlin / Heidelberg , 1995 .", "label": "", "metadata": {}, "score": "67.56877"}
{"text": "To illustrate the point , we take some learning tasks from the machine learning and ILP literature and represent them in Escher , a typed , higher - order , functional logic programming language being developed at the University of Bristol .", "label": "", "metadata": {}, "score": "67.57015"}
{"text": "operators over them .However , for many data structures , . distances and generalisation operators are not consistent .For instance , for lists ( or sequences ) , edit distances are . not consistent with regular languages , since , for a regular .", "label": "", "metadata": {}, "score": "67.583725"}
{"text": "Stefan Kahrs .The primitive recursive functions are recursively enumerable , 2008 .Meta - operations on primitive recursive functions . sit at the brink of what is computationally possible : the . semantic equality of primitive recursive programs is . undecidable , and yet this paper shows that the whole class . of p.r . functions can be enumerated without semantic . duplicates .", "label": "", "metadata": {}, "score": "67.65278"}
{"text": "For logical implication , we can only prove the existence of least generalizations in the presence of a function - free clause .And finally , for relative implication , least generalizations need not even exist in a function - free language .", "label": "", "metadata": {}, "score": "67.691315"}
{"text": "For logical implication , we can only prove the existence of least generalizations in the presence of a function - free clause .And finally , for relative implication , least generalizations need not even exist in a function - free language .", "label": "", "metadata": {}, "score": "67.691315"}
{"text": "Co- located with POPL'10 ( 37th ACM SIGACT - SIGPLAN Symposium on Principles of Programming Languages ( Madrid , Spain , Jan.18 - 22 , 2010 ) .Martin Hofmann .Data - driven detection of catamorphisms - towards prolem specific use of program schemes for inductive program synthesis .", "label": "", "metadata": {}, "score": "67.70362"}
{"text": "Morgan Kaufmann , Los Altos , CA , 1986 .Yves Deville and Kung - Kiu Lau .Logic program synthesis .Journal of Logic Programming , 1994 .Surnjani Djoko , Diane J. Cook , and Lawrence B. Holder .An empirical study of domain knowledge and its benefits to substructure discovery .", "label": "", "metadata": {}, "score": "67.7127"}
{"text": "Genetic Programming III : Darwinian Invention & Problem Solving .Morgan Kaufmann , San Francisco , CA , USA , 1999 .J. Krems , Ute Schmid , and Fritz Wysotzki , editors .ECCM'96 : Proceedings of the 1stEuropean Workshop on Cognitive Modelling ( Berlin , Germany , Nov.14 - 16 , 1996 ) , volume 96 of Forschungsberichte des Fachbereichs Informatik , TU Berlin , 1996 .", "label": "", "metadata": {}, "score": "67.75856"}
{"text": "EAGER : Programming repetitive tasks by example .In Human Factors in Computing Systems , Proc .ACM Press , 1991 .C. Ferri - Ram\u00edrez , Jos\u00e9 Hern\u00e1ndez - Orallo , and M. Jos\u00e9 Ram\u00edrez - Quintana .Incremental learning of functional logic programs .", "label": "", "metadata": {}, "score": "67.786736"}
{"text": "Thus it would seem that the number of non - equivalent functionfree clauses should also be finite .This is a misunderstanding , since logical implication ( and hence also logical equivalence ) is defined in terms of all interpretations , not just Herbrand interpretations .", "label": "", "metadata": {}, "score": "67.806335"}
{"text": "Thus it would seem that the number of non - equivalent functionfree clauses should also be finite .This is a misunderstanding , since logical implication ( and hence also logical equivalence ) is defined in terms of all interpretations , not just Herbrand interpretations .", "label": "", "metadata": {}, "score": "67.806335"}
{"text": "M. R. K. Krishna Rao .Inductive inference of term rewriting systems from positive data .In Algorithmic Learning Theory .15th International Conference , ALT'04 , Padova , Italy , Oct.2 - 5 , 2004 .Proceedings , volume 3244 of Lecture Notes in Artificial Intelligence , pages 69 - 82 , Berlin / Heidelberg , 2004 .", "label": "", "metadata": {}, "score": "67.840485"}
{"text": "In ALT'90 : Proceedings of the 1stInternational Conference on Algorithmic Learning Theory ( Tokyo , Japan , Oct.8 - 10 , 1990 ) , pages 368 - 381 .Ohmsha , 1990 .inductive programming ; inproceedings ; machine learning ; .", "label": "", "metadata": {}, "score": "67.88889"}
{"text": "[5 ] The term \" inductive \" here refers to philosophical ( i.e. suggesting a theory to explain observed facts ) rather than mathematical ( i.e. proving a property for all members of a well - ordered set ) induction .", "label": "", "metadata": {}, "score": "67.93289"}
{"text": "For instance , the GSS of S would in this case be P ( a ; b ) .Proving the existence of a GSS of every finite set of Horn clauses in H requires a little more work , but here also the result is positive .", "label": "", "metadata": {}, "score": "67.99428"}
{"text": "For instance , the GSS of S would in this case be P ( a ; b ) .Proving the existence of a GSS of every finite set of Horn clauses in H requires a little more work , but here also the result is positive .", "label": "", "metadata": {}, "score": "67.99428"}
{"text": "Springer . of program schemas , in the context of logic program .synthesis .Whereas most researchers represent schemas . purely syntactically as higher - order expressions , we shall .express a schema as an open first - order theory that . axiomatises a problem domain , called aspecification .", "label": "", "metadata": {}, "score": "68.0761"}
{"text": "Qiang Yang , Rong Pan , and Sinno Jialin Pan .Learning recursive HTN - method structures for planning .In Proceedings of the Workshop on Artificial Intelligence Planning and Learning ( Providence , Rhode Island , USA , Sept.22 , 2007 ) , 2007 .", "label": "", "metadata": {}, "score": "68.132675"}
{"text": "Q(f ( z ) ) ) ; ( P ( f ( z ) ) .Q(a ) ) ; ( P ( f ( z ) ) .Q(f ( z)))g .Definition 16 Let S be a finite set of clauses , and oe be a Skolem substitution for S. Then the term set of S by oe is the set of all terms ( including subterms ) occurring in Soe . 2 A term set of S by some oe is a finite set of ground terms .", "label": "", "metadata": {}, "score": "68.13898"}
{"text": "Q(f ( z ) ) ) ; ( P ( f ( z ) ) .Q(a ) ) ; ( P ( f ( z ) ) .Q(f ( z)))g .Definition 16 Let S be a finite set of clauses , and oe be a Skolem substitution for S. Then the term set of S by oe is the set of all terms ( including subterms ) occurring in Soe . 2 A term set of S by some oe is a finite set of ground terms .", "label": "", "metadata": {}, "score": "68.13898"}
{"text": "This case might be of practical interest .We can assume Sigma does not contain complementary literals ( i.e. , A and : A ) , for otherwise Sigma would be inconsistent .:L1 . :Lm .This means that an LGI of the set of clauses f(D1 . :", "label": "", "metadata": {}, "score": "68.15697"}
{"text": "This case might be of practical interest .We can assume Sigma does not contain complementary literals ( i.e. , A and : A ) , for otherwise Sigma would be inconsistent .:L1 . :Lm .This means that an LGI of the set of clauses f(D1 . :", "label": "", "metadata": {}, "score": "68.15697"}
{"text": "However , there is no clear understanding of how these techniques compare .This study provides means for the challenging task of analytically comparing knowledge discovery techniques .These m ... \" .Various knowledge discovery techniques are readily available and many new ones are currently being developed .", "label": "", "metadata": {}, "score": "68.172806"}
{"text": "In Algorithmic Learning Theory . 10th International Conference , ALT'99 , Tokyo , Japan , Dec.6 - 8 , 1999 .Proceedings , volume 1720 of Lecture Notes in Computer Science , pages 264 - 275 , Berlin / Heidelberg , 2010 .", "label": "", "metadata": {}, "score": "68.19472"}
{"text": "Since C and D are standardized apart , the clause C [ D is equivalent to the formula 8(C ) .8(D ) ( where 8(C ) denotes the universally quantified clause C ) .In fact we can prove something stronger , namely that this LGI is a special LGI .", "label": "", "metadata": {}, "score": "68.23441"}
{"text": "Since C and D are standardized apart , the clause C [ D is equivalent to the formula 8(C ) .8(D ) ( where 8(C ) denotes the universally quantified clause C ) .In fact we can prove something stronger , namely that this LGI is a special LGI .", "label": "", "metadata": {}, "score": "68.23441"}
{"text": "Springer . 10th European Conference on Machine Learning , Chemnitz , Germany , April\\,21 - -23 , 1998 .recursive structures from examples which is based on the .notion of recursive program schemes .We separate induction .from examples in two stages : ( 1 ) constructing initial .", "label": "", "metadata": {}, "score": "68.25749"}
{"text": "In : Proc . 15th Conference on Inductive Logic Programming , pp . 1 - 19 ( 2005 ) .Balc\u00e1zar , J. , Garriga , G. : Horn axiomatizations for sequential data .Theor .Comput .Sci .371 , 247 - 264 ( 2007 ) CrossRef MATH .", "label": "", "metadata": {}, "score": "68.26114"}
{"text": "used to calculate how similar two objects are in order to .use these measurements to find related objects , to cluster .a set of objects , to make classifications or to perform an . approximate search guided by the distance .", "label": "", "metadata": {}, "score": "68.30179"}
{"text": "Some ad - hoc similarity measures exist for distances between first order objects [ 6 ] , but they do not have all the desirable mathematical properties ( e.g. the triangle inequality an ... . \" ...The task of discovering interesting regularities in ( large ) sets of data ( data mining , knowledge discovery ) has recently met with increased interest in Machine Learning in general and in Inductive Logic Programming ( ILP ) in particular .", "label": "", "metadata": {}, "score": "68.386566"}
{"text": "Folding of finite program terms to recursive program schemes .In T. Sadam and V. Sgure , editors , Intelligent Systems .Proceedings of the 1st International IEEE Symposium ( Varna , Bulgaria , Sept.10 - 12 , 2002 ) , volume 1 , pages 144 - 149 .", "label": "", "metadata": {}, "score": "68.45082"}
{"text": "IOS Press . 362 Least Generalizations and Greatest Specializations Plotkin , G. D. ( 1970 ) .A note on inductive generalization .Machine Intelligence , 5 , 153 - 163 .Plotkin , G. D. ( 1971a ) .Automatic Methods of Inductive Inference .", "label": "", "metadata": {}, "score": "68.50548"}
{"text": "IOS Press . 362 Least Generalizations and Greatest Specializations Plotkin , G. D. ( 1970 ) .A note on inductive generalization .Machine Intelligence , 5 , 153 - 163 .Plotkin , G. D. ( 1971a ) .Automatic Methods of Inductive Inference .", "label": "", "metadata": {}, "score": "68.50548"}
{"text": "Skill acquisition and the LISP tutor .Cognitive Science , 13:467 - 505 , 1989 .Dana Angluin and Carl H. Smith .Inductive inference : Theory and methods .Computing Surveys , 15(3):237 - 269 , 1983 .Dana Angluin .", "label": "", "metadata": {}, "score": "68.52188"}
{"text": "Poster Session \" Genetic programming : posters \" .functions it often operates by composing them from a fixed . collection of elementary operators and applying them to .parameters or certain primitive constants .This limits the . expressiveness of the programs that can be evolved .", "label": "", "metadata": {}, "score": "68.53897"}
{"text": "Work in Progress Report .J.-J. Jeng and B. H. C. Cheng .Using analogy and formal methods for software reuse .In ICTAI'93 : Proceedings of the Fifth International Conference on Tools with Artificial Intelligence ( Boston , Massachusetts , USA , Nov.l8 - 11 , 1993 ) , pages 113 - 117 , Los Alamitos , CA , USA , November 1993 .", "label": "", "metadata": {}, "score": "68.61958"}
{"text": "Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 50 - 73 , Berlin / Heidelberg , 2010 .Springer .methods for programming , algorithm design , and software . developmentis a currently emerging research field .", "label": "", "metadata": {}, "score": "68.655685"}
{"text": "International Workshops , LOPSTR'94 and META'94 , Pisa , Italy , June20 - 21 , 1994 .Proceedings , volume 883 of Lecture Notes in Computer Science , pages 69 - 87 , Berlin / Heidelberg , 1994 .Springer . deductive and inductive approaches to program synthesis , . and of the current research in these fields .", "label": "", "metadata": {}, "score": "68.67403"}
{"text": "Ryszard S. Michalski and Robert E. Stepp .Learning from observation : Conceptual clustering .In Ryszard S. Michalski , Jaime G. Carbonell , and Tom M. Mitchell , editors , Machine Learning : An Artificial Intelligence Approach , chapter 11 , pages 331 - 364 .", "label": "", "metadata": {}, "score": "68.7085"}
{"text": "language occurs at .least once .An informant for a language . tells whether a string is in the language , and chooses the . strings in some order such that every string occurs at .least once .It was found that the class of .", "label": "", "metadata": {}, "score": "68.713844"}
{"text": "heuristics were employed for identifying non - recursive . correspondences .In this work we study the case when . non - recursive transfer rules have been given to the system . instead of heuristics .Results from a preliminary .experiment with English - French QLFs are presented , .", "label": "", "metadata": {}, "score": "68.77412"}
{"text": "Wikipedia Page on Inductive Programming .Dagstuhl Seminar \" Approaches and Applications of Inductive Programming \" .Report of Dagstuhl Seminar .Dagstuhl Seminar \" Approaches and Applications of Inductive Programming \" .The seminar is a continuation of the AAIP workshop series .", "label": "", "metadata": {}, "score": "68.94522"}
{"text": "In conjunction with the Seventh International Workshop on Inductive Logic Programming ILP'97 .Robert S. Boyer and J. Strother Moore .Proving theorems about LISP functions .Journal of the ACM , 22(1):129 - 144 , January 1975 . programs can be precisely stated and proved in the . mathematical sense .", "label": "", "metadata": {}, "score": "68.947624"}
{"text": "In conjunction with the 14th ACM SIGPLAN International Conference on Functional Programming ( ICFP'09 ) .Ute Schmid , Martin Hofmann , Florian Bader , Tilmann H\u00e4berle , and Thomas Schneider .Incident Mining using Structural Prototypes .In Nicol\u00e1s Garc\u00eda - Pedrajas , Herrera Francisco , Colin Fyfe , Jos\u00e9 Manuel Ben\u00edtez , and Moonis Ali , editors , Trends in Applied Intelligent Systems . 23rd", "label": "", "metadata": {}, "score": "68.962814"}
{"text": "W. David and B. A. Wolber , Myers Stimulus - Response PBD : Demonstrating \" When \" as Well as \" What \" in Your Wish Is My Command : Programming by Example , Ed . by H. Lieberman ( Morgan Kaufmann Publishers , San Francisco , 2001 ) , pp .", "label": "", "metadata": {}, "score": "68.97534"}
{"text": "In . linear - bounded term rewriting systems , nesting of defined .symbols is allowed in right - hand sides , unlike the class of .flat systems considered in Krishna Rao [ 8].The class of .linear - bounded TRSs is rich enough to include many . divide - and - conquer programs like addition , logarithm , .", "label": "", "metadata": {}, "score": "69.04172"}
{"text": "A number of experiments have beenperformed . to demonstrate that the system improves the effectiveness .Stefan Wrobel .First order theory refinement .In Luc De Raedt , editor , Advances in Inductive Logic Programming , pages 14 - 33 .", "label": "", "metadata": {}, "score": "69.045204"}
{"text": "We believe that our approach mimicks in .some way the problem solving and learning behavior of a .( novice ) human programmer and that our approach integrates . theoretical ideas and empirical results of learning by . doing and learning by analogy from cognitive science in a .", "label": "", "metadata": {}, "score": "69.07773"}
{"text": "7th International Workshop , ILP'97 , Prague , Czech Republic , Sept.17 - 20 , 1997 , Proceedings , volume 1297 of Lecture Notes in Computer Science , pages 165 - 172 , Berlin / Heidelberg , 1997 .Springer . which induces recursive programs with one or more recursive .", "label": "", "metadata": {}, "score": "69.09688"}
{"text": "Since each clause in G must imply the function - free clause(s ) in S , it follows from Lemma 1 that all members of G are function - free .Since G0 is finite , the set of I(Ci ; V ) s is also finite .", "label": "", "metadata": {}, "score": "69.12758"}
{"text": "Since each clause in G must imply the function - free clause(s ) in S , it follows from Lemma 1 that all members of G are function - free .Since G0 is finite , the set of I(Ci ; V ) s is also finite .", "label": "", "metadata": {}, "score": "69.12758"}
{"text": "induction ; inductive programming ; program evolution ; . program induction : inductive logic programming ( ILP ) , . genetic programming ( GP ) , and genetic logic programming .( GLP ) ( a variant of GP for inducing Prolog programs ) .", "label": "", "metadata": {}, "score": "69.18359"}
{"text": "GOLEM and discusses the use of determinate literals in a .greedy search context .The efficacy of this approach is . illustrated on the task of learning the quicksort procedure . and other small but non - trivial list - manipulation .", "label": "", "metadata": {}, "score": "69.2014"}
{"text": "Donato Malerba .Learning recursive theories in the normal ILP setting .Fundamenta Informaticae , 57(1):39 - 77 , 2003 . is a difficult learning task whose complexity is equivalent .to multiple predicate learning .In this paper we propose . computational solutions to some relevant issues raised by .", "label": "", "metadata": {}, "score": "69.27522"}
{"text": "Full Paper .Oleg Monakhov .Evolutionary synthesis of algorithms based on templates .Optoelectronics , Instrumentation and Data Processing , 2006 .David J. Montana .Strongly typed genetic programming .Evolutionary Compututation , 3(2):199 - 230 , 1995 . generating computer programs via the process of natural . selection ( Koza , 1992 ) .", "label": "", "metadata": {}, "score": "69.28816"}
{"text": "IOS Press .Emanuel Kitzelmann and Ute Schmid .An explanation based generalization approach to inductive synthesis of functional programs .In Emanuel Kitzelmann , Roland J. Olsson , and Ute Schmid , editors , AAIP'05 : Proceedings of the 1stWorkshop on Approaches and Applications of Inductive Programming ( Bonn , Germany , Aug.7 , 2005 ) , pages 15 - 26 , 2005 .", "label": "", "metadata": {}, "score": "69.34954"}
{"text": "Mathematical Foundations .Springer ( 1998 ) .Garriga , G. , Khardon , R. , De Raedt , L. : On mining closed sets in multi - relational data .In : Proceedings of the 20th International Joint Conference on Artificial Intelligence ( 2007 ) .", "label": "", "metadata": {}, "score": "69.42563"}
{"text": "J. Ross Quinlan .Relational learning and boosting .In Saso Dzeroski and Nada Lavrac , editors , Relational Data Mining , chapter 12 , pages 292 - 304 .Springer , New York , NY , USA , 2001 .Although boosting was formulated in a propositional learning context , the same ideas can be applied to first - order learning ( also known as inductive logic programming ) .", "label": "", "metadata": {}, "score": "69.427765"}
{"text": "Springer .from small sets of non - recursive equations representing a . subset of their input - output behaviour .Classical attempts . to construct functionalLispprograms from .input / output - examples areanalytical , i.e. , aLispprogram . belonging to a strongly restricted program class is .", "label": "", "metadata": {}, "score": "69.51734"}
{"text": "Lutz Hamel .Breeding algebraic structures - an evolutionary approach to inductive equational logic programming .In GECCO'02 : Proceedings of the 4th Annual Conference on Genetic and Evolutionary Computation ( New York , USA , July09 - 13 , 2002 ) , pages 748 - 755 , San Francisco , CA , USA , 2002 .", "label": "", "metadata": {}, "score": "69.55966"}
{"text": "Lecture Notes in Artificial Intelligence , pages 296 - 308 , Berlin / Heidelberg , 1997 .Springer . inductive inference ruleinverse entailmentproposed by .Muggleton .Our main result is that a hypothesis clauseHcan .be derived from an exampleEunder a background theoryBwith .", "label": "", "metadata": {}, "score": "69.57144"}
{"text": "there is no need forthe user to indicate how data should be . generated .Moreover , duplicated tests are avoided , and for .finite domains Gast isable to prove a property by testing .it for all possible values .", "label": "", "metadata": {}, "score": "69.57491"}
{"text": "An integrated validation environment for the conflict prediction specification .Technical Report impress/2/03/1 , School of Computing and Mathematics , University of Huddersfield , UK .McCluskey , T.L. , Porteous , J.M. , Naik , Y. , Taylor , C. , and Jones , S. 1995 .", "label": "", "metadata": {}, "score": "69.59851"}
{"text": "Springer . inferable from positive data .Our approach is based on .moding information and linear predicate inequalities .between input terms and output terms .Our results .generalize the results of Arimura and Shinohara [ 4].Standard programs for reverse , quick - sort , merge - sort are a .", "label": "", "metadata": {}, "score": "69.65851"}
{"text": "from examples using typed equational programming .The main .contribution is a concept of type maintenance which appears . to be theoretically and practically useful .Type . maintenance is based on polymorphic types and is not . applicable to a type system without polymorphism .", "label": "", "metadata": {}, "score": "69.75209"}
{"text": "inducible which are not in scope of classical purely .analytical techniques and second that the induction times . are shorter than in recent generate - and - test based .induction ; inductive programming ; inproceedings ; program .Emanuel Kitzelmann .", "label": "", "metadata": {}, "score": "69.814285"}
{"text": "Ute Schmid , U. Sinha , and Fritz Wysotzki .Generalizing recursive program schemes with anti - unification .In GMD , editor , FGML'00 : Proceedings of the Annual Meeting of the GI Machine Learning Group ( St .Augustin , 18.-20.09.2000 ) , pages 139 - 140 , 2000 .", "label": "", "metadata": {}, "score": "69.81546"}
{"text": "667 of Lecture Notes in Artificial Intelligence , pp .3 - 20 .Springer - Verlag .Reynolds , J. C. ( 1970 ) .Transformational systems and the algebraic structure of atomic formulas .Machine Intelligence , 5 , 135 - 151 .", "label": "", "metadata": {}, "score": "69.83766"}
{"text": "667 of Lecture Notes in Artificial Intelligence , pp .3 - 20 .Springer - Verlag .Reynolds , J. C. ( 1970 ) .Transformational systems and the algebraic structure of atomic formulas .Machine Intelligence , 5 , 135 - 151 .", "label": "", "metadata": {}, "score": "69.83766"}
{"text": "Proceedings , volume 4667 of Lecture Notes in Computer Science , pages 468 - 472 , Berlin / Heidelberg , 2007 .Springer .Martin Hofmann , Emanuel Kitzelmann , and Ute Schmid .Analysis and evaluation of inductive programming systems in a higher - order framework .", "label": "", "metadata": {}, "score": "69.86562"}
{"text": "substructures in a structural database improves the ability . to interpret and compress the data .However , scientists . working with a database in their area of expertise often . search for predetermined types of structures or for .structures exhibiting characteristics specific to the . domain .", "label": "", "metadata": {}, "score": "69.86935"}
{"text": "Session \" Genetic programming papers \" .induction ; inductive programming ; program evolution ; .Holger Bischof , Sergei Gorlatch , and Emanuel Kitzelmann .The double - scan skeleton and its parallelization .Technical report , Technische Universit\u00e4t Berlin , 2002 .", "label": "", "metadata": {}, "score": "69.891304"}
{"text": "The hierarchical synthesis of LISP scanning programs .In B. Gilchrist , editor , Information Processing 77 , pages 41 - 45 , Amsterdam , 1977 .North - Holland Publishing .Alan W. Biermann and Douglas R. Smith .A production rule mechanism for generating LISP code .", "label": "", "metadata": {}, "score": "69.97801"}
{"text": "satisfy the given specification may do the task well .In . exhaustive program generation , since the number of programs . exponentially increases as the program size increases , the .key to success is how to restrain the exponential bloat by . suppressing semantically equivalent but syntactically . different programs .", "label": "", "metadata": {}, "score": "70.0399"}
{"text": "Although many of these tasks are handled reasonably well , .the experiment highlights some weaknesses of the current . implementation .Areas for further research are .J. Ross Quinlan and R. Mike Cameron - Jones .Induction of logic programs : FOIL and related systems .", "label": "", "metadata": {}, "score": "70.06198"}
{"text": "there is no way to restrict the programs it generates to .those where the functions operate on appropriate data . types .In the case when the programs manipulate multiple .data types and contain functions designed to operate on . particular data types , this can lead to unnecessarily large . search times and/or unnecessarily poor generalization . performance .", "label": "", "metadata": {}, "score": "70.07248"}
{"text": "The proof of Lemma 3 uses the following idea .Consider a derivation of a clause E from a set Sigma of ground clauses .Suppose some of the clauses in Sigma contain terms not appearing in E. Then any literals containing these terms in Sigma must be resolved away in the derivation .", "label": "", "metadata": {}, "score": "70.14"}
{"text": "The proof of Lemma 3 uses the following idea .Consider a derivation of a clause E from a set Sigma of ground clauses .Suppose some of the clauses in Sigma contain terms not appearing in E. Then any literals containing these terms in Sigma must be resolved away in the derivation .", "label": "", "metadata": {}, "score": "70.14"}
{"text": "Dana Angluin .Equivalence queries and approximate fingerprints .In COLT'89 : Proceedings of the 2nd Annual Workshop on Computational Learning Theory ( Santa Cruz , CA , USA , July31-Aug.2 , 1989 ) , pages 134 - 145 , San Francisco , CA , USA , 1990 .", "label": "", "metadata": {}, "score": "70.20587"}
{"text": "The answer to this question is positive .Conclusion In ILP , the three main generality orders are subsumption , implication , and relative implication .The two main languages are clausal languages and Horn languages .This gives a total of six different ordered sets .", "label": "", "metadata": {}, "score": "70.23124"}
{"text": "The answer to this question is positive .Conclusion In ILP , the three main generality orders are subsumption , implication , and relative implication .The two main languages are clausal languages and Horn languages .This gives a total of six different ordered sets .", "label": "", "metadata": {}, "score": "70.23124"}
{"text": "354 - 362 Pittsburg .Morik , K. , Wrobel , S. , Kietz , J.-U. , & Emde , W. ( 1993 ) .Knowledge Acquisition and Machine Learning : Theory , Methods and Applications .Academic Press , London .", "label": "", "metadata": {}, "score": "70.29114"}
{"text": "354 - 362 Pittsburg .Morik , K. , Wrobel , S. , Kietz , J.-U. , & Emde , W. ( 1993 ) .Knowledge Acquisition and Machine Learning : Theory , Methods and Applications .Academic Press , London .", "label": "", "metadata": {}, "score": "70.29114"}
{"text": "Mj .Mn be two clauses which are standardized apart .If the substitution ' is a most general unifier ( mgu ) of the set fLi ; : Mjg , then the clause ( ( C1 Gamma Li ) [ ( C2 Gamma Mj ) ) ' is called a binary resolvent of C1 and C2 .", "label": "", "metadata": {}, "score": "70.33583"}
{"text": "Mj .Mn be two clauses which are standardized apart .If the substitution ' is a most general unifier ( mgu ) of the set fLi ; : Mjg , then the clause ( ( C1 Gamma Li ) [ ( C2 Gamma Mj ) ) ' is called a binary resolvent of C1 and C2 .", "label": "", "metadata": {}, "score": "70.33583"}
{"text": "IP research had its first boost in the 1970s in the context of learning Lisp programs from examples .Due to only limited progress , this direction of research decayed and in the 1990s was newly addressed in the context of ILP and evolutionary programming .", "label": "", "metadata": {}, "score": "70.33873"}
{"text": "to specializing clauses defining one predicate only , but . may specialize clauses defining multiple predicates .Furthermore , the positive and negative examples are no . longer required to be instances of the same predicate .It . is proven that the algorithm produces a correct .", "label": "", "metadata": {}, "score": "70.35511"}
{"text": "Inductive Logic Programming , 14th International Conference , ILP'04 , Porto , Portugal , Sept.6 - 8 , 2004 , Proceedings , volume 3194 of Lecture Notes in Computer Science , Berlin / Heidelberg , 2004 .Springer .R. Mike Cameron - Jones and J. Ross Quinlan .", "label": "", "metadata": {}, "score": "70.39178"}
{"text": "multidimensional least - squares regression problem , ( 2 ) the . multidimensional Kalman filter , ( 3 ) the list manipulation . function NTH , and ( 4 ) the list manipulation function .Martin M\u00fchlpfordt and Ute Schmid .Synthesis of recursive functions with interdependent parameters .", "label": "", "metadata": {}, "score": "70.42319"}
{"text": "Gesellschaft f\u00fcr Mathematik und Datenverarbeitung MBH , 1994 .Stephen H. Muggleton .Duce , an oracle - based approach to constructive induction .In IJCAI'87 : Proceedings of the 10th International Joint Conference on Artificial Intelligence ( Milan , Italy , August23 - 28 , 1987 ) , volume 1 , pages 287 - 292 .", "label": "", "metadata": {}, "score": "70.45747"}
{"text": "Co- located with POPL'10 ( 37th ACM SIGACT - SIGPLAN Symposium on Principles of Programming Languages ( Madrid , Spain , Jan.18 - 22 , 2010 ) .Martin Hofmann .Automatic Construction of XSL Templates - An Inductive Programming Approach .", "label": "", "metadata": {}, "score": "70.519714"}
{"text": "Proceedings , volume 1160 of Lecture Notes in Computer Science , pages 156 - 168 , Berlin / Heidelberg , 1996 .Springer .hypothetical knowledge is investigated in this paper .This . type of inductive inference could be regarded as a .", "label": "", "metadata": {}, "score": "70.52864"}
{"text": "Lect .Notes Comput .Sci . 1861 , 972 - 986 ( 2000 ) CrossRef .Toxicol .Sci .54 , 138 - 153 ( 2000 ) CrossRef .Boros , E. , Gurvich , V. , Khachiyan , L. , Makino , K. : On maximal frequent and minimal infrequent sets in binary matrices .", "label": "", "metadata": {}, "score": "70.55598"}
{"text": "In Algorithmic Learning Theory . 16thInternational Conference , ALT 2005 , Singapore , October 8 - 11 , 2005 .Proceedings , volume 3734 of Lecture Notes in Computer Science , pages 312 - 326 , Berlin / Heidelberg , 2005 .", "label": "", "metadata": {}, "score": "70.58615"}
{"text": "Springer .characteristic of a learner .This paper presents Clam , a . system that efficiently learns Prolog purely and . left - recursive definitions from small data sets by using .inverse implication .A learning curve for Clam shows that .", "label": "", "metadata": {}, "score": "70.61429"}
{"text": "Questions of completeness of a hypothesis search procedure of specific ILP system arise .For example , Progol 's hypothesis search procedure based on the inverse entailment inference rule is not complete by Yamamoto 's example .[ 15 ] On the other hand , Imparo is complete by both anti - entailment procedure [ 16 ] and its extended inverse subsumption [ 17 ] procedure .", "label": "", "metadata": {}, "score": "70.61798"}
{"text": "The classes of simple flat trss and linear - bounded .trss are incomparable , i.e. , there are functions that can . be computed by simple flat trss but not by linear - bounded .J. C. Reynolds .Towards a theory of type structure .", "label": "", "metadata": {}, "score": "70.94267"}
{"text": "Intellect , 2007 .Pieter W. M. Koopman and Rinus Plasmeijer .Systematic synthesis of functions .In Henrik Nilsson , editor , TFP'06 : Revised Selected Papers from the 7th Symposium on Trends in Functional Programming ( Nottingham , United Kingdom , April19 - 21 , 2006 , volume 7 of Trends in Functional Programming , pages 35 - 54 .", "label": "", "metadata": {}, "score": "70.97642"}
{"text": "learnable with respect to the specified method of .information presentation if there is an algorithm that the .learner can use to make his guesses , the algorithm having .the following property : Given any language of the class , .", "label": "", "metadata": {}, "score": "71.01491"}
{"text": "Sub - unification : a tool for efficient induction of recursive programs .In Derek Sleeman and Peter Edwards , editors , ML'92 : Proceedings of the Ninth International Workshop on Machine Learning ( Aberdeen , Scotland , United Kingdom , July1 - 3 , 1992 ) , pages 273 - 281 , San Francisco , CA , USA , 1992 .", "label": "", "metadata": {}, "score": "71.11641"}
{"text": "The implications of this result for .inductive logic programming and computational learning . theory are then discussed , and guidelines for choosing a .Nachum Dershowitz .Programming by analogy .In Ryszard S. Michalski , Jaime G. Carbonell , and Tom M. Mitchell , editors , Machine Learning .", "label": "", "metadata": {}, "score": "71.123024"}
{"text": "Q(x ) .R(x ) .For these two reasons we consider not only languages of Horn clauses , but also pay attention to languages of general clauses .The combination of three generality orders and two different possible languages of clauses gives a total of six different ordered languages .", "label": "", "metadata": {}, "score": "71.12518"}
{"text": "Q(x ) .R(x ) .For these two reasons we consider not only languages of Horn clauses , but also pay attention to languages of general clauses .The combination of three generality orders and two different possible languages of clauses gives a total of six different ordered languages .", "label": "", "metadata": {}, "score": "71.12518"}
{"text": "European Conference on Machine Learning , Vienna , Austria , April\\,5 - -7 , 1993 .programs from examples .This paper summarises the . development of FOIL from 1989 up to early 1993 and . evaluates its effectiveness on a non - trivial sequence of .", "label": "", "metadata": {}, "score": "71.159676"}
{"text": "the inductive functional system Igor2 as a powerful and .efficient approach to IP .Performance of all systems on a .representative set of sample problems is evaluated and .Martin Hofmann , Emanuel Kitzelmann , and Ute Schmid .Porting Igor2 from Maude to Haskell .", "label": "", "metadata": {}, "score": "71.18216"}
{"text": "the corresponding left - hand sides .The class of simple flat .TRSs is rich enough to include many divide - and - conquer .programs like addition , doubling , tree - count , list - count , . split , append , etc .", "label": "", "metadata": {}, "score": "71.215706"}
{"text": "combining evaluation and mathematical induction are . described , which the authors have implemented in a program .that automatically proves a wide variety of theorems about .recursive LISP functions .The method the program uses to .generate induction formulas is described at length .", "label": "", "metadata": {}, "score": "71.22365"}
{"text": "Children 's mental models of recursive logo programs .Journal of Educational Computing Research , 1(2):235 - 243 , 1985 .Steffen Lange .A program synthesis algorithm exemplified .In W. Bibel and K.P. Jantke , editors , Mathematical Methods of Specification and Synthesis of Software Systems ' 85 .", "label": "", "metadata": {}, "score": "71.24208"}
{"text": "A . separate - and - parallel - conquer search strategy is adopted to . interleave the learning of clauses supplying predicates .with mutually recursive definitions .A novel generality .order to be imposed on the search space of clauses is . investigated , in order to cope with recursion in a more .", "label": "", "metadata": {}, "score": "71.260376"}
{"text": "Lecture Notes in Artificial Intelligence , pages 175 - 194 .Springer , Berlin / Heidelberg , 2000 . systems that learn by using the cognitive mechanism of .anticipatory behavioral control which was introduced in . cognitive psychology by Hoffmann [ 4].", "label": "", "metadata": {}, "score": "71.27605"}
{"text": "In Proceedings of the Workshop on Artificial Intelligence Planning and Learning ( Providence , Rhode Island , USA , Sept.22 , 2007 ) , 2007 .In conjunction with the International Conference on Automated Planning and Scheduling ( ICAPS'07 ) .Marcus Hutter , Eric Baum , and Emanuel Kitzelmann , editors .", "label": "", "metadata": {}, "score": "71.276825"}
{"text": "pp .232 - 237 .Greiner , R. 1999 .The complexity of revising logic programs .Journal of Logic Programming , 40(3 ) , 273 - 298 .Lloyd , J.W. 1987 .Foundations of Logic Programming .Berlin : Springer - Verlag , 2nd , extended edition .", "label": "", "metadata": {}, "score": "71.3162"}
{"text": "Even though various knowledge discovery techniques are readily available and many new techniques are currently being developed , there is no understanding of how these techniques compare .The aim of this study is to define precise notions s .. abilistic version of M. The problem is to diagnose whether a system fault in a power supply system occurs , class C , or not , class C. The prediction shall b .. by Carlos J. Alonso , J. Belarmino Pulido , Juan J. Rodr\u00edguez , C\u00e9sar Llamas , Grupo De Sistemas Inteligentes . \" ...", "label": "", "metadata": {}, "score": "71.3172"}
{"text": "Humans ' .problem solving , reasoning and verbal behavior often shows .a high degree of systematicity and productivity which can .best be characterized by a competence level reflected by a . set of recursive rules .While we assume that such rules are . different for different domains , we believe that there .", "label": "", "metadata": {}, "score": "71.377884"}
{"text": "St\u00e9phane Lapointe , Charles X. Ling , and Stan Matwin .Constructive inductive logic programming .In Ruzena Bajcsy , editor , IJCAI'93 : Proceedings of the 13th International Joint Conference on Artificial Intelligence ( Chamb\u00e9ry , France , Aug.28-Sep.3 , 1993 ) , pages 1030 - 1036 .", "label": "", "metadata": {}, "score": "71.40086"}
{"text": "Program synthesis as a theory formulation task : Problem representations and solution methods .In Ryszard S. Michalski , Jaime G. Carbonell , and Tom M. Mitchell , editors , Machine Learning .An Artificial Intelligence Approach , volume 2 , chapter 18 , pages 499 - 568 .", "label": "", "metadata": {}, "score": "71.417885"}
{"text": "Together with positive results from the companion paper , . these negative results establish a boundary of efficient .William W. Cohen .Pac - learning recursive logic programs : Efficient algorithms .Journal of Artificial Intelligence Research , 2:501 - 539 , 1995 . function - free recursive logic programs in polynomial time .", "label": "", "metadata": {}, "score": "71.497"}
{"text": "In conjunction with the 22nd International Conference on Machine Learning ( ICML'05 ) .Timo Knuutila and Magnus Steinby .The inference of tree languages from finite samples : an algebraic approach .Theoretical Computer Science , 129(2):337 - 367 , 1994 .", "label": "", "metadata": {}, "score": "71.50177"}
{"text": "Springer .a fundamental method for creating functions in ADATE .The . use of abstraction turns out to be similar to evolution by . gene duplication which is emerging as the most important . theory of building blocks in natural genomes .", "label": "", "metadata": {}, "score": "71.50436"}
{"text": "23rdAnnual German Conference on Artificial Intelligence , Bonn , Germany , Sept.\\,13 - -15 , 1999 .We present a supervised , interactive learning .technique that infers control structures of computer .programs from user - demonstrated traces .A two - stage process .", "label": "", "metadata": {}, "score": "71.59137"}
{"text": "The two languages used most often are languages of clauses and languages of only Horn clauses .This gives a total of six different ordered languages .In this paper , we give a systematic treatment of the existence or non - existence of least generalizations and greatest specializations of finite sets of clauses in each of these six ordered sets .", "label": "", "metadata": {}, "score": "71.597015"}
{"text": "The two languages used most often are languages of clauses and languages of only Horn clauses .This gives a total of six different ordered languages .In this paper , we give a systematic treatment of the existence or non - existence of least generalizations and greatest specializations of finite sets of clauses in each of these six ordered sets .", "label": "", "metadata": {}, "score": "71.597015"}
{"text": "Nevertheless , it is commonly agreed that the recursive . program learning problem is verydifficult for GP .In this . paper , we propose techniques to tackle the difficulties in .learning recursive programs .The techniquesare incorporated . into an adaptive Grammar Based Genetic Programming system .", "label": "", "metadata": {}, "score": "71.62081"}
{"text": "Ute Schmid and Fritz Wysotzki .Applying Inductive Program Synthesis to Learning Domain - Dependent Control Knowledge - Transforming Plans into Programs .Technical Report CMU - CS-00 - 143 , Computer Science Department , Carnegie Mellon University , Pittsburg , PA , 2000 .", "label": "", "metadata": {}, "score": "71.68824"}
{"text": "342 Least Generalizations and Greatest Specializations Because of the weakness of subsumption , it is desirable to make the step from the subsumption order to the more powerful implication order .Accordingly , it is important to find out whether Plotkin 's positive result on the existence of LGS 's holds for implication as well .", "label": "", "metadata": {}, "score": "71.69792"}
{"text": "342 Least Generalizations and Greatest Specializations Because of the weakness of subsumption , it is desirable to make the step from the subsumption order to the more powerful implication order .Accordingly , it is important to find out whether Plotkin 's positive result on the existence of LGS 's holds for implication as well .", "label": "", "metadata": {}, "score": "71.69792"}
{"text": "Springer .8th Pacific Rim International Conference on Artificial Intelligence , Auckland , New Zealand , Aug.\\,9 - -13 , 2004 .Inductive logic programming ( ILP ) is a subfield of machine learning which uses logic programming as a uniform representation for examples , background knowledge and hypotheses .", "label": "", "metadata": {}, "score": "71.717415"}
{"text": "In J. Hillel , editor , LME3 : Proceedings of the 3rd International Conference for LOGO and Mathematics Education , pages 156 - 163 .Concordia University , Montreal , Canada , 1987 .Robert Henderson .Incremental learning in inductive programming .", "label": "", "metadata": {}, "score": "71.7338"}
{"text": "This is the approach we will be concerned with in this paper .Here the concept of a least generalization3 is important .The use of such least generalizations allows us to generalize cautiously , avoiding over - generalization .Least generalizations of sets of clauses were first discussed by Plotkin ( 1970 , 1971a , 1971b ) .", "label": "", "metadata": {}, "score": "71.75651"}
{"text": "This is the approach we will be concerned with in this paper .Here the concept of a least generalization3 is important .The use of such least generalizations allows us to generalize cautiously , avoiding over - generalization .Least generalizations of sets of clauses were first discussed by Plotkin ( 1970 , 1971a , 1971b ) .", "label": "", "metadata": {}, "score": "71.75651"}
{"text": "specialized , and properties that the generic function . should satisfy .We use the type - based function generator .Djinn to generate terms for specializations of the generic . function types on the type indices of generic functions .Then we use QuickCheck to prune the generated terms by .", "label": "", "metadata": {}, "score": "71.76206"}
{"text": "Tom M. Mitchell .The need for biases in learning generalizations .Technical report , Rutgers University , New Brunswick , NJ , 1980 .Tom M. Mitchell .Generalization as search .Artificial Intelligence , 18(2):203 - 226 , 1982 .", "label": "", "metadata": {}, "score": "71.880554"}
{"text": "If S0 is empty , we just say that oe is a Skolem substitution for S. 2 Lemma 2 Let Sigma be a set of clauses , C be a clause , and oe be a Skolem substitution for C w.r.t .", "label": "", "metadata": {}, "score": "71.88596"}
{"text": "If S0 is empty , we just say that oe is a Skolem substitution for S. 2 Lemma 2 Let Sigma be a set of clauses , C be a clause , and oe be a Skolem substitution for C w.r.t .", "label": "", "metadata": {}, "score": "71.88596"}
{"text": "Strong consistency \" also forbids generation of any hypothesis h that is inconsistent with the negative examples , given the background knowledge B ; it implies \" Weak consistency \" ; if no negative examples are given , both requirements coincide .", "label": "", "metadata": {}, "score": "71.903046"}
{"text": "S. H. Muggleton , \" Inductive Logic Programming , \" New Generation Computing 8 ( ( 4 ) ) , 295 - 318 ( 1991 ) .MATH CrossRef .S. H. Muggleton and L. De Raedt , \" Inductive Logic Programming : Theory and Methods , \" Logic Programming 19 , 629 - 679 ( 1994 ) .", "label": "", "metadata": {}, "score": "71.950714"}
{"text": "code wherever possible .However , as few tools really go .beyond this we demonstrate a simple functional .representation for objects , methods and object - properties .Thomas Hieber , Martin Hofmann , Emanuel Kitzelmann , and Ute Schmid .", "label": "", "metadata": {}, "score": "71.97093"}
{"text": "problem from scratch , then OOPS will find this out .If not , . then at least the previous solutions will not cause much .harm .We introduce an efficient , recursive , . backtracking - based way of implementing OOPS on realistic . computers with limited storage .", "label": "", "metadata": {}, "score": "72.044556"}
{"text": "Learnability of simply - moded logic programs from entailment .In Advances in Computer Science - ASIAN'04 .Higher - Level Decision Making .9th Asian Computing Science Conference .Dedicated to Jean - Louis Lassez on the Occasion of His 60th Birthday .", "label": "", "metadata": {}, "score": "72.06627"}
{"text": "William W. Cohen .Pac - learning recursive logic programs : Negative results .Journal of Artificial Intelligence Research , pages 541 - 573 , 1995 . constant - depth determinate k - ary recursive clauses is . efficiently learnable .In this paper we present negative . results showing that any natural generalization of this .", "label": "", "metadata": {}, "score": "72.094666"}
{"text": "The completeness is shown as an extension of the .completeness theorem of SLD - resolution .We also show that .every hypothesisHderived with saturant generalization , . proposed by Rouveirol , must subsume E w.r.t .Bin Buntine 's . sense .", "label": "", "metadata": {}, "score": "72.11957"}
{"text": ", can not be learned using the above approach , since the variable y occurs in the clause body only ; the corresponding literals would have been deleted in the 4th step of the approach .To overcome this flaw , that step has to be modified such that it can be parametrized with different literal post - selection heuristics .", "label": "", "metadata": {}, "score": "72.13298"}
{"text": "general even - parity problem due to the appropriate .selection of the foldr higher - order function .Initially , .foldr structure abstraction identify the promising area of .the search space at generation zero .Once the population is .", "label": "", "metadata": {}, "score": "72.29709"}
{"text": "Knowl .Disc . 1 , 241 - 258 ( 1997 ) CrossRef .McCallum , A. , Nigam , K. , Rennie , J. , Seymore , K. : A machine learning approach to building domain - specific search engines .", "label": "", "metadata": {}, "score": "72.32109"}
{"text": "On the one hand , this research aims at relieving programmers from the tedious task of explicit coding on the other hand it helps to uncover the complex cognitive processes involved in programming as a special domain of complex problem solving .", "label": "", "metadata": {}, "score": "72.380585"}
{"text": "AGI'09 : Proceedings of the 2nd Conference on Artificial General Intelligence ( Arlington , Virginia , March6 - 9 2009 ) , Advances in Intelligent Systems Research , pages 55 - 60 .Atlantis Press , 2009 . programming ( IP ) systems .", "label": "", "metadata": {}, "score": "72.40173"}
{"text": "Bruno Courcelle .Recursive applicative program schemes .In Handbook of Theoretical Computer Science : Formal Models and Semantics , volume B , chapter 9 , pages 459 - 492 .MIT Press , Cambridge , MA , USA , 1990 .", "label": "", "metadata": {}, "score": "72.5171"}
{"text": "Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 1 - 24 , Berlin / Heidelberg , 2010 .Springer . possible to describe the relationship between Haskell data . types and many generic functions , typically type - class . instances .", "label": "", "metadata": {}, "score": "72.711685"}
{"text": "inductive programming ; inproceedings ; machine learning ; . numerous examples .Computational efficiency is achieved by .using greedy search guided by an information - based .heuristic .Greedy search tends to be myopic but determinate . terms , an adaptation of an idea introduced by another new . system ( GOLEM ) , has been found to provide many of the . benefits of lookahead without substantial increases in . computation .", "label": "", "metadata": {}, "score": "72.71861"}
{"text": "Pierre Flener .Inductive logic program synthesis with DIALOGS .In Stephen H. Muggleton , editor , Inductive Logic Programming .6th International Workshop , ILP'96 , Stockholm , Sweden , Aug.26 - 28 , 1996 .Selected Papers , volume 1314 of Lecture Notes in Computer Science , pages 175 - 198 , Berlin / Heidelberg , 1997 .", "label": "", "metadata": {}, "score": "72.767166"}
{"text": "Springer .library based on systematic search .In this paper we .introduce two recent improvements to MagicHaskeller , i.e. . 1 ) clarification and extension to arbitrary - rank . polymorphism of its algorithm , and 2 ) efficiency . improvement in its filtration algorithm that removes .", "label": "", "metadata": {}, "score": "72.79576"}
{"text": "The specification and management of requirements is widely considered to be one of the most important yet most problematic activities in software engineering .In some applications , such as in safety critical areas or knowledge - based systems , the construction of a requirements domain theory is regarded as an important part of this activity .", "label": "", "metadata": {}, "score": "72.88757"}
{"text": "Work in Progress Report . inductive programming ; program evolution ; program .Marko C. J. D. van Eekelen , editor .TFP'05 : Revised Selected Papers from the 6th Symposium on Trends in Functional Programming ( Tallinn , Estonia , Sep.23 - 24 , 2005 ) , volume 6 of Trends in Functional Programming .", "label": "", "metadata": {}, "score": "72.94949"}
{"text": "As far as we know , both our general LGI - result and this particular corollary are new results .Niblett ( 1988 , p. 135 ) claims that \" it is simple to show that there are lggs if the language is restricted to a fixed set of constant symbols since all Herbrand interpretations are finite .", "label": "", "metadata": {}, "score": "73.02662"}
{"text": "As far as we know , both our general LGI - result and this particular corollary are new results .Niblett ( 1988 , p. 135 ) claims that \" it is simple to show that there are lggs if the language is restricted to a fixed set of constant symbols since all Herbrand interpretations are finite .", "label": "", "metadata": {}, "score": "73.02662"}
{"text": "In R. Nieuwenhuis , editor , Rewriting Techniques and Applications .14th International Conference , RTA'03 , Valencia , Spain , June9 - 11 , 2003 .Proceedings , volume 2706 of Lecture Notes in Computer Science , pages 76 - 87 , Berlin / Heidelberg , 2003 .", "label": "", "metadata": {}, "score": "73.0325"}
{"text": "TechReport YCS-2007 - 421 .values of any data type .For example , a generic equality .function can test pairs of booleans , integers , lists , trees . etc .In most languages programmers must define generic .functions multiple times , specialised for each data type .", "label": "", "metadata": {}, "score": "73.09524"}
{"text": "some way the problem solving and learning behavior of a .( novice ) human programmer and that our approach integrates . theoretical ideas and empirical results of learning by . doing and learning by analogy from cognitive science in a .", "label": "", "metadata": {}, "score": "73.12583"}
{"text": "We survey results already obtained by others and also contribute some answers of our own .For the sake of clarity , we will summarize the results of our survey right at the outset .In the following table ' + ' signifies a positive answer , and ' Gamma ' means a negative answer .", "label": "", "metadata": {}, "score": "73.12642"}
{"text": "We survey results already obtained by others and also contribute some answers of our own .For the sake of clarity , we will summarize the results of our survey right at the outset .In the following table ' + ' signifies a positive answer , and ' Gamma ' means a negative answer .", "label": "", "metadata": {}, "score": "73.12642"}
{"text": "This means that oe is a Skolem substitution for D w.r.t . fCg .Furthermore , since E is an LGS of I(C ; V ) , all constants in E also appear in C , hence all constants in E must appear in D. Thus oe is also a Skolem substitution for D w.r.t . fEg .", "label": "", "metadata": {}, "score": "73.14815"}
{"text": "This means that oe is a Skolem substitution for D w.r.t . fCg .Furthermore , since E is an LGS of I(C ; V ) , all constants in E also appear in C , hence all constants in E must appear in D. Thus oe is also a Skolem substitution for D w.r.t . fEg .", "label": "", "metadata": {}, "score": "73.14815"}
{"text": "One way to adapt the .Irene Stahl .On the utility of predicate invention in inductive logic programming .In Francesco Bergadano and Luc De Raedt , editors , Machine Learning : ECML-94 .European Conference on Machine Learning , Catania , Italy , April6 - 8 , 1994 .", "label": "", "metadata": {}, "score": "73.158226"}
{"text": "programs are operators of the initial programs .Given a . divide - and - conquer program , a mere inspection of the . properties of its solving , processing , and composition .operators thus allows the detection of which kinds of .", "label": "", "metadata": {}, "score": "73.15857"}
{"text": "the property for these values , and analyzes the test .results .This makes it easier and cheaper to test software .components .The distinguishing property of our system is .that the test dataare generated in a systematic and generic . way using generic programming techniques .", "label": "", "metadata": {}, "score": "73.27199"}
{"text": "Based on the analysis of a series of experimental results , . we conclude that this implementation of polymorphism is . effective in assisting GP evolutionary search to generate .these two programs .PolyGP may enhance the applicability of .GP to a new class of problems that are difficult for other .", "label": "", "metadata": {}, "score": "73.303024"}
{"text": "Apart from the least generalization , there is also its dual : the greatest specialization .Greatest specializations have been accorded much less attention in ILP than least generalizations , but the concept of a greatest specialization may nevertheless be useful ( see the beginning of Section 6 ) .", "label": "", "metadata": {}, "score": "73.34273"}
{"text": "Apart from the least generalization , there is also its dual : the greatest specialization .Greatest specializations have been accorded much less attention in ILP than least generalizations , but the concept of a greatest specialization may nevertheless be useful ( see the beginning of Section 6 ) .", "label": "", "metadata": {}, "score": "73.34273"}
{"text": "4thInternational Workshop on Analogical and Inductive Inference , AII ' 94 5th International Workshop on Algorithmic Learning Theory , ALT'94 , Reinhardsbrunn Castle , Germany Oct.10 - 15 , 1994 .Proceedings , volume 872 of Lecture Notes in Computer Science , pages 59 - 72 , Berlin / Heidelberg , 1994 .", "label": "", "metadata": {}, "score": "73.37711"}
{"text": "In Machine Intelligence , volume 6 , pages 101 - 124 .Edinburgh University Press , 1971 .G. D. Plotkin .Automatic Methods of Inductive Inference .PhD thesis , Edinburgh University , 1971 .J. Ross Quinlan and R. Mike Cameron - Jones .", "label": "", "metadata": {}, "score": "73.38842"}
{"text": "Pierre Flener , Kung - Kiu Lau , and Mario Ornaghi .On correct program schemas .In Norbert E. Fuchs , editor , Logic Programming Synthesis and Transformation .7th International Workshop , LOPSTR'97 , Leuven , Belgium , July10 - 12 , 1997 .", "label": "", "metadata": {}, "score": "73.42543"}
{"text": "Ln and A be the set of all ground atoms occurring in Sigma and C. Now consider the following statements , which can be shown equivalent .( 3 ) Sigma [ f : L1 ; : : : ; : Lng has no Herbrand model .", "label": "", "metadata": {}, "score": "73.45642"}
{"text": "Ln and A be the set of all ground atoms occurring in Sigma and C. Now consider the following statements , which can be shown equivalent .( 3 ) Sigma [ f : L1 ; : : : ; : Lng has no Herbrand model .", "label": "", "metadata": {}, "score": "73.45642"}
{"text": "The synthesis of LISP programs from examples : A survey .In Alan W. Biermann , Yves Kodratoff , and G\u00e9rard Guiho , editors , Automatic Program Construction Techniques , pages 307 - 324 .The Free Press , New York , NY , USA , 1984 .", "label": "", "metadata": {}, "score": "73.63146"}
{"text": "ALBERT :A formal language and its supporting tools for requirements engineering .In Lecture Notes in Computer Science No . 1382 .pp .322 - 325 .Easterbrook , S. and Callahan , J. 1996 .Independent validation of specifications : A coordination headache .", "label": "", "metadata": {}, "score": "73.64923"}
{"text": "It allows to state some theoretical results on .C. Leinbach and A.L. Wijesinha .On classifying recursive algorithms .ACM SIGCCE - Bulletin , 18:186 - 190 , 1986 .Leonid A. Levin .Universal sequential search problems .Problems of Information Transmission , 9(3 ) , 1973 .", "label": "", "metadata": {}, "score": "73.78692"}
{"text": "AAIP'07 : Proceedings of the 2nd Workshop on Approaches and Applications of Inductive Programming ( Warsaw , Poland , Sep.17 , 2007 , 2007 .In conjunction with the 18thEuropean Conference on Machine Learning ( ECML ) .Emanuel Kitzelmann .", "label": "", "metadata": {}, "score": "73.85714"}
{"text": "We define a class of .simple flat term rewriting systems that are inferable from .positive examples .In flat term rewriting systems , nesting . of defined symbols is forbidden in both left- and .right - hand sides .", "label": "", "metadata": {}, "score": "73.85766"}
{"text": "posterior probability when learning from positive examples . is within a small additive term of one which does the same .from a mixture of positive and negative examples .An .Inductive Logic Programming implementation is described .which avoids the pitfalls of greedy search by global . optimisation of this function during the local construction . of individual clauses of the hypothesis .", "label": "", "metadata": {}, "score": "73.955536"}
{"text": "If such a derivation exists , we write Sigma ' r C. 2 Definition 7 Let Sigma be a set of clauses and C a clause .The following Subsumption Theorem gives a precise characterization of implication between clauses in terms of resolution and subsumption .", "label": "", "metadata": {}, "score": "74.040504"}
{"text": "If such a derivation exists , we write Sigma ' r C. 2 Definition 7 Let Sigma be a set of clauses and C a clause .The following Subsumption Theorem gives a precise characterization of implication between clauses in terms of resolution and subsumption .", "label": "", "metadata": {}, "score": "74.040504"}
{"text": "[ 6 ] .\" Necessity \" does not impose a restriction on h , but forbids any generation of a hypothesis as long as the positive facts are explainable without it . \"Sufficiency \" requires any generated hypothesis h to explain all positive examples .", "label": "", "metadata": {}, "score": "74.06399"}
{"text": "Roland J. Olsson .Dr scient thesis , University of Oslo , Norway , 1994 .Research report 189 .Roland J. Olsson .Inductive functional programming using incremental program transformation .Artificial Intelligence , 74(1):55 - 83 , 1995 .Roland J. Olsson .", "label": "", "metadata": {}, "score": "74.11641"}
{"text": "Pierre Flener .Logic Program Synthesis from Incomplete Information .Kluwer Academic Publishers , Boston , 1995 .Pierre Flener .Inductive logic program synthesis with DIALOGS .In Stephen H. Muggleton , editor , ILP'96 : Proceedings of the 6th International Workshop on Inductive Logic Programming ( Stockholm , Sweden , Aug.26 - 28 , 1996 ) , pages 28 - 51 .", "label": "", "metadata": {}, "score": "74.12128"}
{"text": "Synthesis of LISP functions from examples .In IJCAI'75 : Proceedings of the 4th International Joint Conference on Artificial Intelligence ( Tbilisi , Georgia , USSR , Sept.3 - 8 , 1975 ) , pages 240 - 245 , 1975 . K. Hausmann .", "label": "", "metadata": {}, "score": "74.26345"}
{"text": "This means that the set of function - free clauses quasi - ordered by logical implication is in fact a lattice .In case of a Horn language H , we can not apply the same proof method as in the case of a clausal language , since the union of two Horn clauses need not be a Horn clause itself .", "label": "", "metadata": {}, "score": "74.32532"}
{"text": "This means that the set of function - free clauses quasi - ordered by logical implication is in fact a lattice .In case of a Horn language H , we can not apply the same proof method as in the case of a clausal language , since the union of two Horn clauses need not be a Horn clause itself .", "label": "", "metadata": {}, "score": "74.32532"}
{"text": "A framework for incremental learning of logic programs .Theoretical Computer Science , 185(1):191 - 213 , 1997 .M. R. K. Krishna Rao .Some classes of prolog programs inferable from positive data .Theoretical Computer Science , 241(1 - 2):211 - 234 , 2000 .", "label": "", "metadata": {}, "score": "74.44245"}
{"text": "Lloyd , J. W. ( 1987 ) .Foundations of Logic Programming ( Second edition ) .Springer - Verlag , Berlin .Marcinkowski , J. , & Pacholski , L. ( 1992 ) .Undecidability of the horn - clause implication problem .", "label": "", "metadata": {}, "score": "74.45659"}
{"text": "Lloyd , J. W. ( 1987 ) .Foundations of Logic Programming ( Second edition ) .Springer - Verlag , Berlin .Marcinkowski , J. , & Pacholski , L. ( 1992 ) .Undecidability of the horn - clause implication problem .", "label": "", "metadata": {}, "score": "74.45659"}
{"text": "Springer ( 2003 ) .Chem .Res .Toxicol .14 , 280 - 294 ( 2001 ) CrossRef .Fiedler , M. , Borgelt , C. : Support computation for mining frequent subgraphs in a single graph .In : Proceedings of the Workshop on Mining and Learning with Graphs ( 2007 ) .", "label": "", "metadata": {}, "score": "74.46214"}
{"text": "clause of constant locality .These results immediately .imply the non - learnability of any more general class of .programs .We also show that learning a constant - depth . determinate program with either two linear recursive . clauses or one linear recursive clause and one .", "label": "", "metadata": {}, "score": "74.518326"}
{"text": "Concrete . refinements are generated by composing library refinements .with a specification .The framework is partially . implemented in the research systems Specware , Designware , .Epoxi , and Planware .Specware provides basic support for .composing specifications and refinements via colimit , and .", "label": "", "metadata": {}, "score": "74.57716"}
{"text": "Yan , X. , Han , J. : gSpan : graph - based substructure pattern mining .In : Proceedings of the 2nd IEEE International Conference on Data Mining , pp .721 - 724 ( 2002 ) .Yan , X. , Han , J. : CloseGraph : mining closed frequent graph patterns .", "label": "", "metadata": {}, "score": "74.60705"}
{"text": "Lecture Notes in Artificial Intelligence , pages 369 - 450 .Springer , Berlin / Heidelberg , 2000 .for transferring a logical representation of a source .language sentence into a logical representation of the .corresponding target language sentence .", "label": "", "metadata": {}, "score": "74.69632"}
{"text": "For general clauses , the LGR - question also has a negative answer .We will show here that even if S and Sigma are both finite sets of function - free clauses , an LGR of S relative to Sigma need not exist . :", "label": "", "metadata": {}, "score": "74.698814"}
{"text": "For general clauses , the LGR - question also has a negative answer .We will show here that even if S and Sigma are both finite sets of function - free clauses , an LGR of S relative to Sigma need not exist . :", "label": "", "metadata": {}, "score": "74.698814"}
{"text": "ACM .Session \" Late - breaking papers \" .Franck Binard and Amy Felty .Genetic programming with polymorphic types and higher - order functions .In Conor Ryan and Maarten Keijzer , editors , GECCO'08 : Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation ( Atlanta , GA , USA , July12 - 16 , 2008 ) , pages 1187 - 1194 , New York , NY , USA , 2008 .", "label": "", "metadata": {}, "score": "74.77258"}
{"text": "Relative implication is still better , because it allows us to take background knowledge into account .On the other hand , we can see from the table that as far as the existence of least generalizations goes , subsumption is more attractive than logical implication , and logical implication is in turn more attractive than relative implication .", "label": "", "metadata": {}, "score": "74.873375"}
{"text": "Relative implication is still better , because it allows us to take background knowledge into account .On the other hand , we can see from the table that as far as the existence of least generalizations goes , subsumption is more attractive than logical implication , and logical implication is in turn more attractive than relative implication .", "label": "", "metadata": {}, "score": "74.873375"}
{"text": "In particular , the target variable is the half - life in water for aerobic aqueous biodegradation .Structural descriptions of chemicals in terms of atoms and bonds are derived from the chemicals ' SMILES encodings .Definition of substructures are used as background knowledge .", "label": "", "metadata": {}, "score": "74.9635"}
{"text": "Johan Jeuring , Alexey Rodriguez , and Gideon Smeding .Generating generic functions .In Ralf Hinze , editor , WGP'06 : Proceedings of the ACM SIGPLAN Workshop on Generic Programming ( Portland , Oregon , USA , Sept.16 , 2006 ) , pages 23 - 32 , New York , NY , USA , 2006 .", "label": "", "metadata": {}, "score": "75.17571"}
{"text": "Susumu Katayama .Systematic search for lambda expressions .In Marko C. J. D. van Eekelen , editor , TFP'05 : Revised Selected Papers from the Sixth Symposium on Trends in Functional Programming ( Tallinn , Estonia , Sep.23 - 24 , 2005 ) , volume 6 of Trends in Functional Programming , pages 111 - 126 .", "label": "", "metadata": {}, "score": "75.29019"}
{"text": "Morgan Kaufmann , 1998 .Roland J. Olsson .Population management for automatic design of algorithms through evolution .In Proceedings of the 1998 IEEE World Congress on Computational Intelligence , pages 592 - 597 , Anchorage , Alaska , USA , 5 - 9 1998 .", "label": "", "metadata": {}, "score": "75.291046"}
{"text": "3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 74 - 92 , Berlin / Heidelberg , 2010 .Springer . an exponential explosion in search time as one increases .", "label": "", "metadata": {}, "score": "75.33931"}
{"text": "Boosting first - order learning .In Setsuo Arikawa and Arun Sharma , editors , Algorithmic Learning Theory .7th International Workshop , ALT'96 , Sydney , Australia , Oct.23 - 25 , 1996 .Proceedings , volume 1160 of Lecture Notes in Computer Science , pages 143 - 155 , Berlin / Heidelberg , 1996 .", "label": "", "metadata": {}, "score": "75.34048"}
{"text": "future research directions for these fields , as well as a .need for cooperation and cross - fertilization between .Pierre Flener and Ute Schmid .An introduction to inductive programming .Artificial Intelligence Review , 29(1):45 - 62 , 2008 .", "label": "", "metadata": {}, "score": "75.36109"}
{"text": "Universal Planning , Folding of Finite Programs , and Schema Abstraction by Analogical Reasoning , volume 2654 of Lecture Notes in Artificial Intelligence .Springer , Berlin / Heidelberg , 2003 .Ute Schmid 's habilitation thesis .May2001 , Department of Electrical Engineering and Computer Science , TU Berlin .", "label": "", "metadata": {}, "score": "75.41121"}
{"text": "Proceedings , volume 912 of Lecture Notes in Computer Science .Lecture Notes in Artificial Intelligence , pages 232 - 244 , Berlin / Heidelberg , 1995 .Springer .8th European Conference on Machine Learning Heraclion , Crete , Greece , April\\,25 - -27 , 1995 . algorithm for analogical logic program synthesis from . examples .", "label": "", "metadata": {}, "score": "75.44588"}
{"text": "Springer .functions matching a given predicate .This can be used to .Pieter Koopman , Artem Alimarine , Jan Tretmans , and Rinus Plasmeijer .GAST : Generic automated software testing .In Implementation of Functional Languages .14th International Workshop , IFL'02 , Madrid , Spain , Sept.16 - 18 , 2002 .", "label": "", "metadata": {}, "score": "75.466995"}
{"text": "Lm ) ; : : : ; ( Dn . :L1 . : Lm)g is also an LGR of S relative to Sigma .If some Dk . :L1 . : Lm is non - tautologous and function - free , this LGI exists and is computable .", "label": "", "metadata": {}, "score": "75.56694"}
{"text": "Lm ) ; : : : ; ( Dn . :L1 . : Lm)g is also an LGR of S relative to Sigma .If some Dk . :L1 . : Lm is non - tautologous and function - free , this LGI exists and is computable .", "label": "", "metadata": {}, "score": "75.56694"}
{"text": "Then the clausal language C by A is the set of all clauses which can be constructed from the symbols in A. The Horn language H by A is the set of all Horn clauses which can be constructed from the symbols in A. 2 In this paper , we just presuppose some arbitrary alphabet A , and consider the clausal language C and Horn language H based on this A. We will now define three increasingly strong generality orders on clauses : subsumption , implication and relative implication .", "label": "", "metadata": {}, "score": "75.58987"}
{"text": "Then the clausal language C by A is the set of all clauses which can be constructed from the symbols in A. The Horn language H by A is the set of all Horn clauses which can be constructed from the symbols in A. 2 In this paper , we just presuppose some arbitrary alphabet A , and consider the clausal language C and Horn language H based on this A. We will now define three increasingly strong generality orders on clauses : subsumption , implication and relative implication .", "label": "", "metadata": {}, "score": "75.58987"}
{"text": "In John E. Laird , editor , ICML'88 : Proceedings of the 5th International Conference on Machine Learning ( Ann Arbor , Michigan , USA , June12 - 14 , 1988 ) , pages 339 - 352 .Morgan Kaufmann , 1988 .", "label": "", "metadata": {}, "score": "75.59294"}
{"text": "Plotkin , G. D. ( 1971b ) .A further note on inductive generalization .Machine Intelligence , 6 , 101 - 124 .Quinlan , J. R. , & Cameron - Jones , R. M. ( 1993 ) .Foil : A midterm report .", "label": "", "metadata": {}, "score": "75.60698"}
{"text": "Plotkin , G. D. ( 1971b ) .A further note on inductive generalization .Machine Intelligence , 6 , 101 - 124 .Quinlan , J. R. , & Cameron - Jones , R. M. ( 1993 ) .Foil : A midterm report .", "label": "", "metadata": {}, "score": "75.60698"}
{"text": "We demonstrate the . skeleton - based design process using the tridiagonal system . solver as our example application .We develop step by step .three provably correct , parallel versions of our . application , and finally arrive at a cost - optimal . implementation in MPI ( Message Passing Interface ) .", "label": "", "metadata": {}, "score": "75.664"}
{"text": "One can . compute the number of examples necessary to characterize in .Yves Kodratoff , Marta Franova , and Derek Partridge .Why and how program synthesis ?In Klaus P. Jantke , editor , Analogical and Inductive Inference .International Workshop AII'89 , Reinhardsbrunn Castle , GDR , Oct.1 - 6 , 1989 .", "label": "", "metadata": {}, "score": "75.781845"}
{"text": "Strongly typed heterogeneous collections .In Haskell'04 : Proceedings of the ACM SIGPLAN workshop on Haskell ( Snowbird , Utah , USA , Sept.22 - 22 , 2004 ) , pages 96 - 107 .ACM Press , 2004 .Emanuel Kitzelmann and Martin Hofmann .", "label": "", "metadata": {}, "score": "75.80043"}
{"text": "G. D. Plotkin .A note on inductive generalization .In B. Meltzer and D. Michie , editors , Machine Intelligence , volume 5 , pages 153 - 163 .Edinburgh University Press , Edinburgh , 1969 .G. D. Plotkin .", "label": "", "metadata": {}, "score": "75.82667"}
{"text": "doi : 10.1016/s0004 - 3702(99)00067 - 3 . ; here : Sect.2.1 .^ Plotkin , Gordon D. ( 1970 ) .Meltzer , B. ; Michie , D. , eds . \"A Note on Inductive Generalization \" .", "label": "", "metadata": {}, "score": "75.96187"}
{"text": "We end this section by briefly discussing Plotkin 's ( 1971b ) relative subsumption .This is an extension of subsumption which takes background knowledge into account .This background knowledge is rather restricted : it must be a finite set Sigma of ground literals .", "label": "", "metadata": {}, "score": "76.04677"}
{"text": "We end this section by briefly discussing Plotkin 's ( 1971b ) relative subsumption .This is an extension of subsumption which takes background knowledge into account .This background knowledge is rather restricted : it must be a finite set Sigma of ground literals .", "label": "", "metadata": {}, "score": "76.04677"}
{"text": "Learning recursive theories with the separate - and - parallel conquer strategy .In Proceedings of the Workshop on Advances in Inductive Rule Learning ( Pisa , Italy , Sept.20 - 24 , 2004 ) , pages 179 - 193 , 2004 .", "label": "", "metadata": {}, "score": "76.09955"}
{"text": "Springer ( 2008 ) .De Raedt , L. : Logical and Relational Learning .Springer ( 2008 ) .De Raedt , L. , Dehaspe , L. : Clausal discovery .Mach .Learn .26 , 1058 - 1063 ( 1997 ) CrossRef .", "label": "", "metadata": {}, "score": "76.11313"}
{"text": "Morgan Kaufmann , 1983 .Fritz Wysotzki .Program synthesis by hierarchical planning .In P. Jorrand and V. Sgurev , editors , Artificial Intelligence : Methodology , Systems , Applications , pages 3 - 11 .Elsevier , Amsterdam , 1987 .", "label": "", "metadata": {}, "score": "76.1604"}
{"text": "restricted languages predicate invention does not help when .the learning task fails and we characterize the languages .for which predicate invention is useful .We investigate the . decidability of the bias shift problem for these languages .and discuss the capabilities of predicate invention as a .", "label": "", "metadata": {}, "score": "76.244095"}
{"text": "Dusko Pavlovic and Douglas R. Smith .Software development by refinement .In Formal Methods at the Crossroads : From Panacea to Foundational Support . 10th Anniversary Colloquium of UNU / IIST the International Institute for Software Technology of The United Nations University Lisbon , Portugal , March18 - 20 , 2002 .", "label": "", "metadata": {}, "score": "76.27974"}
{"text": "William W. Cohen .Pac - learning a restricted class of recursive logic programs .In AAAI'93 : Proceedings of the 11th National Conference on Artificial Intelligence ( Washington , DC , USA , July11 - 15 , 1993 ) , pages 86 - 92 .", "label": "", "metadata": {}, "score": "76.28493"}
{"text": "IEEE Press , 2004 .difficulties , primarily due to the massive increase in the . size of the search space .Fitness evaluation becomes .computationally expensive and a method for dealing with . infinite loops must be implemented .We have investigated .", "label": "", "metadata": {}, "score": "76.32805"}
{"text": "( 3),(4 ) by the Deduction Theorem .( 4))(5 ) is obvious and ( 5))(4 ) follows from letting ' be the empty substitution , hence ( 4),(5 ) .Finally , ( 5),(6 ) by definition .Thus these six statements are equivalent .", "label": "", "metadata": {}, "score": "76.53871"}
{"text": "( 3),(4 ) by the Deduction Theorem .( 4))(5 ) is obvious and ( 5))(4 ) follows from letting ' be the empty substitution , hence ( 4),(5 ) .Finally , ( 5),(6 ) by definition .Thus these six statements are equivalent .", "label": "", "metadata": {}, "score": "76.53871"}
{"text": "Roland J. Olsson .How to invent functions .In Riccardo Poli , Peter Nordin , William B. Langdon , and Terence C. Fogarty , editors , Genetic Programming .2ndEuropean Workshop , EuroGP'99 , G\u00f6teborg , Sweden , May26 - 27 , 1999 .", "label": "", "metadata": {}, "score": "76.53986"}
{"text": "2 As a consequence , we also immediately have the following : Corollary 2 ( Existence of LGI for function - free clauses ) Let C be a clausal language .Then for every finite set of function - free clauses S ' C , there exists an LGI of S in C. Proof Let S be a finite set of function - free clauses in C. If S only contains tautologies , any tautology will be an LGI of S. Otherwise , let S0 be obtained by deleting all tautologies from S. By the previous theorem , there is a special LGI of S0 .", "label": "", "metadata": {}, "score": "76.618904"}
{"text": "2 As a consequence , we also immediately have the following : Corollary 2 ( Existence of LGI for function - free clauses ) Let C be a clausal language .Then for every finite set of function - free clauses S ' C , there exists an LGI of S in C. Proof Let S be a finite set of function - free clauses in C. If S only contains tautologies , any tautology will be an LGI of S. Otherwise , let S0 be obtained by deleting all tautologies from S. By the previous theorem , there is a special LGI of S0 .", "label": "", "metadata": {}, "score": "76.618904"}
{"text": "Proceedings , volume 784 of Lecture Notes in Computer Science , pages 183 - 197 , Berlin / Heidelberg , 1994 .Springer .European Conference on Machine Learning Catania , Italy , April\\,6 - -8 , 1994 .The framework of the proposed formalization is term rewriting .", "label": "", "metadata": {}, "score": "76.657974"}
{"text": "The next lemma is very general , but in this section we only need the special case where C and D are function - free and Sigma is empty .We need the general case to prove the existence of a GSR in Section 8 .", "label": "", "metadata": {}, "score": "77.13996"}
{"text": "The next lemma is very general , but in this section we only need the special case where C and D are function - free and Sigma is empty .We need the general case to prove the existence of a GSR in Section 8 .", "label": "", "metadata": {}, "score": "77.13996"}
{"text": "For the definitions of ' model ' , ' tautology ' , ' substitution ' , etc . , we refer to standard works such as ( Chang & Lee , 1973 ; Lloyd , 1987 ) .A positive literal is an atom , a negative literal is the negation of an atom .", "label": "", "metadata": {}, "score": "77.149086"}
{"text": "For the definitions of ' model ' , ' tautology ' , ' substitution ' , etc . , we refer to standard works such as ( Chang & Lee , 1973 ; Lloyd , 1987 ) .A positive literal is an atom , a negative literal is the negation of an atom .", "label": "", "metadata": {}, "score": "77.149086"}
{"text": "Springer .logical theories from a set of examples .This is a complex . task where the learning of one predicate definition should .be interleaved with the learning of the other ones in order . to discover predicate dependencies .", "label": "", "metadata": {}, "score": "77.25728"}
{"text": "Concluding Remarks and Future Plans .In the final panel discussion the results of the seminar as well as future plans were identified .Participants stated that they learned a lot about different inductive programming techniques and tools to try .The general opinion was that it was very inspiring to have researchers from different backgrounds .", "label": "", "metadata": {}, "score": "77.30618"}
{"text": "Incremental learning of functional logic programs .In Functional and Logic Programming .5th International Symposium , FLOPS'01 , Tokyo , Japan , March7 - 9 , 2001 .Proceedings , volume 2024 of Lecture Notes in Computer Science , pages 233 - 247 , Berlin / Heidelberg , 2001 .", "label": "", "metadata": {}, "score": "77.453186"}
{"text": "Achievements and prospects of program synthesis .In A. C. Kakas and F. Sadri , editors , Computational Logic : Logic Programming and Beyond .Essays in Honour of Robert A. Kowalski , Part I , volume 2407 of Lecture Notes in Computer Science , pages 1 - 43 , Berlin / Heidelberg , 2002 .", "label": "", "metadata": {}, "score": "77.45833"}
{"text": "problem we propose a variant of the separate - and - conquer . strategy based on parallel learning of different predicate . definitions .In order to improve its efficiency , . optimization techniques are investigated and adopted . solutions are described .", "label": "", "metadata": {}, "score": "77.55111"}
{"text": "For Horn clauses , the LGI - question has already been answered negatively by Muggleton and De Raedt ( 1994 ) .It is not very difficult to see that there are no more specific Horn clauses than C1 and C2 that imply both D1 and D2 .", "label": "", "metadata": {}, "score": "77.71328"}
{"text": "For Horn clauses , the LGI - question has already been answered negatively by Muggleton and De Raedt ( 1994 ) .It is not very difficult to see that there are no more specific Horn clauses than C1 and C2 that imply both D1 and D2 .", "label": "", "metadata": {}, "score": "77.71328"}
{"text": "P ( y ; b ) .However , if we would instantiate Gamma in Definition 11 to the set of atoms , then the greatest specialization of two atoms in the set of atoms should itself also be an atom .", "label": "", "metadata": {}, "score": "77.839905"}
{"text": "P ( y ; b ) .However , if we would instantiate Gamma in Definition 11 to the set of atoms , then the greatest specialization of two atoms in the set of atoms should itself also be an atom .", "label": "", "metadata": {}, "score": "77.839905"}
{"text": "every enumerable classes of recursive functions from . typical examples .Typical means , there is a computable .family of finite sets , such that for each function in the .class there isoneset of examples that can be used .", "label": "", "metadata": {}, "score": "77.93004"}
{"text": "SIAM International Conference on Data Mining ( 2002 )The automated refinement of a requirements domain theory .RDF+XML BibTeX RIOXX2 XML RDF+N - Triples JSON RefWorks Dublin Core Simple Metadata Refer METS HTML Citation ASCII Citation OpenURL ContextObject EndNote OpenURL ContextObject in Span MODS MPEG-21 DIDL EP3 XML Reference Manager RDF+N3 Multiline CSV .", "label": "", "metadata": {}, "score": "77.96566"}
{"text": "with a conventional genetic programming method .From the . information of the type and the property that should be . satisfied , this algorithm is able to find automatically the . shortest Haskell program using the set of function .components ( or library ) configured beforehand , and there is .", "label": "", "metadata": {}, "score": "78.12892"}
{"text": "Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 159 - 173 , Berlin / Heidelberg , 2010 .Springer .deal of benefits for the development of software .Along .with it came a whole new paradigm of the way software is . designed and implemented - object orientation .", "label": "", "metadata": {}, "score": "78.14153"}
{"text": "Automatic Program Construction Techniques .The Free Press , New York , NY , USA , 1984 .Franck Binard and Amy Felty .An abstraction - based genetic programming system .In Dirk Thierens , editor , GECCO'07 : Proceedings of the 9th Annual Conference on Genetic and Evolutionary Computation ( London , England , UK , July7 - 11 , 2007 ) .", "label": "", "metadata": {}, "score": "78.33721"}
{"text": "finite - state automaton that can generate all positive and .no negative sequences , MERLIN 2.0 uses a technique for . inducing Hidden Markov Models from positive sequences only .This enables the system to invent new predicates without . being triggered by negative examples .", "label": "", "metadata": {}, "score": "78.352646"}
{"text": "Joseph A. Goguen .How to prove algebraic inductive hypotheses without induction .In 5th Conference on Automated Deduction .Les Arcs , France , July8 - 11 , 1980 , volume 87 of Lecture Notes in Computer Science , pages 356 - 373 , Berlin / Heidelberg , 1980 .", "label": "", "metadata": {}, "score": "79.03975"}
{"text": "Initially , we found a direct proof of this case , but this was not really any simpler than the proof of the more general result that we give in this paper .Niblett 's idea that the proof is simple may be due to some confusion about the relation between Herbrand models and logical implication ( which is defined in terms of all models , not just Herbrand models ) .", "label": "", "metadata": {}, "score": "79.17403"}
{"text": "Initially , we found a direct proof of this case , but this was not really any simpler than the proof of the more general result that we give in this paper .Niblett 's idea that the proof is simple may be due to some confusion about the relation between Herbrand models and logical implication ( which is defined in terms of all models , not just Herbrand models ) .", "label": "", "metadata": {}, "score": "79.17403"}
{"text": "long example .Some instances of the application of the . model for program inductive synthesis are also given .Particularly , there are given examples of the euclidean and .bubblesort algorithm synthesis within acceptable time from .R. M. Burstall and John Darlington .", "label": "", "metadata": {}, "score": "79.408966"}
{"text": "For C2 : every resolvent of C2 with itself is a variant of C2 , and no clause that is properly subsumed by C2 still implies D1 and D2 .Thus C1 and C2 are both \" minimal \" generalizations under implication of fD1 ; D2 g .", "label": "", "metadata": {}, "score": "79.41557"}
{"text": "For C2 : every resolvent of C2 with itself is a variant of C2 , and no clause that is properly subsumed by C2 still implies D1 and D2 .Thus C1 and C2 are both \" minimal \" generalizations under implication of fD1 ; D2 g .", "label": "", "metadata": {}, "score": "79.41557"}
{"text": "Springer .European Conference on Machine Learning Catania , Italy , April\\,6 - -8 , 1994 .Inductive Logic Programming ) have focused on building .recursive definitions from examples , this paper presents a . formalization and a generalization of the BMWk methodology , . which stems from program synthesis from examples , ten years . ago .", "label": "", "metadata": {}, "score": "79.45352"}
{"text": "Springer , 1997 .Shan - Hwei Nienhuys - Cheng and Roland de Wolf .Subsumption Theorem and Refutation Completeness , volume 1228 of Lecture Notes in Computer Science .Lecture Notes in Artificial Intelligence , chapter 5 , pages 75 - 92 .", "label": "", "metadata": {}, "score": "79.47925"}
{"text": "Stephen H. Muggleton .Inverse entailment and Progol .New Generation Computing , 13(3&4):245 - 286 , 1995 .Stephen H. Muggleton .Learning from positive data .In Inductive Logic Programming .6th International Workshop , ILP-96 , Stockholm , Sweden , Aug.26 - 28 , 1996 .", "label": "", "metadata": {}, "score": "79.76021"}
{"text": "( 1 ) C N - subsumes D with respect to Sigma .( 2 )There is a substitution ' such that Sigma ' ( C ' !D ) .D ) .Niblett attributes this definition to Plotkin , though Plotkin gives a rather different definition of relative subsumption in ( Plotkin , 1971b ) , as we have seen in Section 4 .", "label": "", "metadata": {}, "score": "79.7641"}
{"text": "( 1 ) C N - subsumes D with respect to Sigma .( 2 )There is a substitution ' such that Sigma ' ( C ' !D ) .D ) .Niblett attributes this definition to Plotkin , though Plotkin gives a rather different definition of relative subsumption in ( Plotkin , 1971b ) , as we have seen in Section 4 .", "label": "", "metadata": {}, "score": "79.7641"}
{"text": "Cost optimality and predictability of parallel programming with skeletons .Parallel Processing Letters , 13(4):575 - 587 , 2003 .Holger Bischof , Sergei Gorlatch , and Emanuel Kitzelmann .Design and implementation of a cost - optimal parallel tridiagonal system solver using skeletons .", "label": "", "metadata": {}, "score": "79.8452"}
{"text": "Relativize each positive example literal with the complete background knowledge : .The resulting Horn clause is the hypothesis h obtained by the rlgg approach .Ignoring the background knowledge facts , the clause informally reads \" is called a daughter of if is the parent of and is female \" , which is a commonly accepted definition .", "label": "", "metadata": {}, "score": "79.860794"}
{"text": "The relation between our results and the . known results is also discussed .In particular , the class . of recursion bounded programs contains all the known . terminating linearly - moded Prolog programs of Krishna Rao .[ 7 ] and additional programs like power on natural numbers . which do not belong to the class of linearly - moded programs .", "label": "", "metadata": {}, "score": "79.883865"}
{"text": "If we choose to use a very strong generality order such as relative implication , least generalizations only exist in very limited cases .On the other hand , if we want to guarantee that least generalizations always exist , we are committed to the weakest generality order : subsumption .", "label": "", "metadata": {}, "score": "80.10928"}
{"text": "If we choose to use a very strong generality order such as relative implication , least generalizations only exist in very limited cases .On the other hand , if we want to guarantee that least generalizations always exist , we are committed to the weakest generality order : subsumption .", "label": "", "metadata": {}, "score": "80.10928"}
{"text": "A midterm report .In Pavel Brazdil , editor , Machine Learning : ECML-93 .European Conference on Machine Learning , Vienna , Austria , April5 - 7 , 1993 .Proceedings , volume 667 of Lecture Notes in Computer Science , pages 1 - 20 , Berlin / Heidelberg , 1993 .", "label": "", "metadata": {}, "score": "80.261566"}
{"text": "We have shown that by .controlling the complexity of the loop structures it is . possible to evolve smaller and more understandable programs .Manuel Clavel , Francisco Dur\u00e1n , Steven Eker , Patrick Lincoln , Narciso Mart\u00ed - Oliet , , Jos\u00e9 Meseguer , and Carolyn Talcott .", "label": "", "metadata": {}, "score": "80.26483"}
{"text": "Stephen H. Muggleton .Inductive logic programming .New Generation Computing , 8(4):295 - 318 , 1991 .Stephen H. Muggleton .Inductive logic programming : Derivations , successes and shortcomings .SIGART Bulletin , 5(1):5 - 11 , 1994 .Stephen H. Muggleton .", "label": "", "metadata": {}, "score": "80.393845"}
{"text": "Ute Schmid and Fritz Wysotzki .Applying inductive program synthesis to macro learning .AAAI Press .Ute Schmid and Fritz Wysotzki .A unifying approach to learning by doing and learning by analogy .In N. Callaos , editor , SCI'00 : 4th World Multiconference on Systemics , Cybernetics and Informatics ( Orlando , Florida , July23 - 26 , 2000 ) , volume 1 , pages 379 - 384 , Orlando , FL , 2000 .", "label": "", "metadata": {}, "score": "80.4359"}
{"text": "using this induction technique is that it allows for .incremental learning .Experimental results are presented . comparing MERLIN 2.0 with the positive only learning . framework of Progol 4.2 and comparing the original . induction technique with a new version that produces .", "label": "", "metadata": {}, "score": "80.666794"}
{"text": "Springer . exactly identified from positive examples alone .Since it . is known that children learn natural grammars almost .exclusively from positives examples , Gold 's result has been .used as a theoretical support for Chomsky 's theory of .", "label": "", "metadata": {}, "score": "80.72917"}
{"text": "Springer . 10th European Conference on Machine Learning , Chemnitz , Germany , April\\,21 - -23 , 1998 .not applicable to learning from positive examples only , if .a complete hypothesis can be found in the given language , . as negative examples are required to determine whether new . predicates should be invented or not .", "label": "", "metadata": {}, "score": "80.82385"}
{"text": "Specware is . intended to be general - purpose and has found use in . industrial settings .Designware extends Specware with . taxonomies of software design theories and support for . constructing refinements from them .Epoxi builds on .Designware to support the specification and refinement of . systems .", "label": "", "metadata": {}, "score": "80.8616"}
{"text": "In L. Streefland , editor , PME'95 : Proceedings of the 9th International Conference for the Psychology of Mathematical Education ( Noordwijkerhout , The Netherlands , 1985 ) , pages 18 - 23 .State University , 1985 .K. Haussmann and M. Reiss .", "label": "", "metadata": {}, "score": "80.93985"}
{"text": "Springer - Verlag New York , Inc.New York , NY , USA ( 2000 ) .Deshpande , M. , Kuramochi , M. , & Karypis , G. : Frequent sub - structure - based approaches for classifying chemical compounds .", "label": "", "metadata": {}, "score": "80.96958"}
{"text": "discovery process with domain specific knowledge .The .SUBDUE discovery system is used to evaluate the benefits of .using domain knowledge to guide the discovery process .Domain knowledge is incorporated into SUBDUE following a . single general methodology to guide the discovery process .", "label": "", "metadata": {}, "score": "81.065895"}
{"text": "346 Least Generalizations and Greatest Specializations Theorem 2 ( Subsumption theorem ) Let Sigma be a set of clauses and C be a clause .The next lemma was first proved by Gottlob ( 1987 ) .Actually , it is an immediate corollary of the subsumption theorem : Lemma 1 ( Gottlob ) Let C and D be non - tautologous clauses . 2 An important consequence of this lemma concerns the depth of clauses , defined as follows : Definition 8 Let t be a term .", "label": "", "metadata": {}, "score": "81.09721"}
{"text": "346 Least Generalizations and Greatest Specializations Theorem 2 ( Subsumption theorem ) Let Sigma be a set of clauses and C be a clause .The next lemma was first proved by Gottlob ( 1987 ) .Actually , it is an immediate corollary of the subsumption theorem : Lemma 1 ( Gottlob ) Let C and D be non - tautologous clauses . 2 An important consequence of this lemma concerns the depth of clauses , defined as follows : Definition 8 Let t be a term .", "label": "", "metadata": {}, "score": "81.09721"}
{"text": "Theorem 4 ( Existence of GSS in C ) Let C be a clausal language .Then for every 1 ^ i ^ n , there is a ' i such that Di'i ' C and ' i only acts on variables in Di .", "label": "", "metadata": {}, "score": "81.181946"}
{"text": "Theorem 4 ( Existence of GSS in C ) Let C be a clausal language .Then for every 1 ^ i ^ n , there is a ' i such that Di'i ' C and ' i only acts on variables in Di .", "label": "", "metadata": {}, "score": "81.181946"}
{"text": "Polymorphism and genetic programming .In Genetic Programming .4thEuropean Conference , EuroGP'01 , Lake Como , Italy , April18 - 20 , 2001 .Proceedings , volume 2038 of Lecture Notes in Computer Science , pages 218 - 233 , Berlin / Heidelberg , 2001 .", "label": "", "metadata": {}, "score": "81.306335"}
{"text": "Kaiserslautern , FRG , July24 - 27 , 1990 .Proceedings , volume 449 of Lecture Notes in Computer Science , pages 588 - 602 , Berlin / Heidelberg , 1990 .Springer . which a program is synthesized from examples by .", "label": "", "metadata": {}, "score": "81.57706"}
{"text": "If C is a special LGI of some set S , then it is clear that C is self - saturated : any clause which implies C also implies S and hence must subsume C , since C is a special LGI of S. In this subsection we will establish the computability of such an LGI .", "label": "", "metadata": {}, "score": "81.59985"}
{"text": "If C is a special LGI of some set S , then it is clear that C is self - saturated : any clause which implies C also implies S and hence must subsume C , since C is a special LGI of S. In this subsection we will establish the computability of such an LGI .", "label": "", "metadata": {}, "score": "81.59985"}
{"text": "BMWk revisited : Generalization and formalization of an algorithm for detecting recursive relations in term sequences .In Francesco Bergadano and Luc De Raedt , editors , Machine Learning : ECML-94 .European Conference on Machine Learning Catania , Italy , April6 - 8 , 1994 .", "label": "", "metadata": {}, "score": "81.61339"}
{"text": "Springer . expensive , yet heavily used technique to control quality .In this paper we introduce Gast , a fully automatic test . tool .Properties about functions and datatypes can be .expressed in first order logic .Gast automaticallyand .", "label": "", "metadata": {}, "score": "81.93086"}
{"text": "2 If C1 and C2 are not standardized apart , we can take a variant C02 of C2 , such that C1 and C02 are standardized apart .For simplicity , a binary resolvent of C1 and C02 is also called a binary resolvent of C1 and C2 itself .", "label": "", "metadata": {}, "score": "81.9778"}
{"text": "2 If C1 and C2 are not standardized apart , we can take a variant C02 of C2 , such that C1 and C02 are standardized apart .For simplicity , a binary resolvent of C1 and C02 is also called a binary resolvent of C1 and C2 itself .", "label": "", "metadata": {}, "score": "81.9778"}
{"text": "hint queries with entailment membership queries , we have a .polynomial time learning algorithm using entailment . equivalence and entailment membership queries for a . subclass ofACH(k ) .Finally , we show that any algorithm . which learnsACH(k ) using entailment equivalence and .", "label": "", "metadata": {}, "score": "81.987976"}
{"text": "C. Rich and Richard C. Waters .Automatic programming : Myths and prospects .IEEE Computer , 21(11):10 - 25 , 1988 .Charles Rich and Richard C. Waters .Approaches to automatic programming .In M. C. Yovits , editor , Advances in Computers , volume 37 .", "label": "", "metadata": {}, "score": "82.149086"}
{"text": "Annual German Conference on AI , KI'08 , Kaiserslautern , Germany , Sept.23 - 26 , 2008 .Proceedings , volume 5243 of Lecture Notes in Computer Science .Lecture Notes in Artificial Intelligence , pages 78 - 86 , Berlin / Heidelberg , 2008 .", "label": "", "metadata": {}, "score": "82.1911"}
{"text": "Springer .Synthesis ( PS ) , we particularly examine the one relative to .Logic Programming alleged to have solve this problem .Even . though theoretical reasons are well - known , we provide a .detailed analysis of the practical reasons why a formal .", "label": "", "metadata": {}, "score": "82.50903"}
{"text": ": Q(x))g .We will show that this S has no LGR relative to Sigma in C. Suppose C is an LGR of S relative to Sigma .Hence C can not contain P ( a ) or P ( b ) .", "label": "", "metadata": {}, "score": "82.556"}
{"text": ": Q(x))g .We will show that this S has no LGR relative to Sigma in C. Suppose C is an LGR of S relative to Sigma .Hence C can not contain P ( a ) or P ( b ) .", "label": "", "metadata": {}, "score": "82.556"}
{"text": "The structure elucidation of diterpenes based on 13 C NMR spectra is usually done manually by human experts with specialized background knowledge on peak patterns and chemical structures .In the process , each of the 20 skeletal atoms is assigned an atom number that corresponds to its proper place in the skeleton and the diterpene is classified into one of the possible skeleton types .", "label": "", "metadata": {}, "score": "82.66582"}
{"text": "Tina Yu .An Analysis of the Impact of Functional Programming Techniques on Genetic Programming .PhD thesis , Department of Computer Science , University College London , 1999 .inductive programming ; program evolution ; program .Tina Yu .Hierarchical processing for evolving recursive and modular programs using higher - order functions and lambda abstraction .", "label": "", "metadata": {}, "score": "82.67171"}
{"text": "Springer . based on the detection of recurrence relations in a single .given term which is considered as the k - th unfolding of an . unknown recursive program .Our approach goes beyond .Summers ' classical approach in several aspects : It is .", "label": "", "metadata": {}, "score": "82.82055"}
{"text": "Proceedings , volume 6097 of Lecture Notes in Computer Science .Lecture Notes in Artificial Intelligence , pages 327 - 336 , Berlin / Heidelberg , 2010 .Springer .Ute Schmid , Emanuel Kitzelmann , and Rinus Plasmeijer , editors .", "label": "", "metadata": {}, "score": "82.858284"}
{"text": "In John Mylopoulos and Raymond Reiter , editors , IJCAI'91 : Proceedings of the 12th International Joint Conference on Artificial Intelligence ( Sydney , Australia , Aug.24 - 30 , 1991 ) , volume 2 , pages 751 - 756 .Morgan Kaufmann , 1991 .", "label": "", "metadata": {}, "score": "82.99866"}
{"text": "the known results on Prolog programs is also discussed .In . particular , flat TRSs can define functions ( like doubling ) , .whose output is bigger in size than the input , which is not .M. R. K. Krishna Rao .", "label": "", "metadata": {}, "score": "83.06905"}
{"text": "Martin Dost\u00e1l .On evolving of recursive functions using lambda abstraction and higher - order functions .Logic Journal of IGPL , 13(5):515 - 524 , 2005 . induction ; inductive programming ; program evolution ; .Martin Dost\u00e1l .A functional approach to evolving recursive programs .", "label": "", "metadata": {}, "score": "83.11186"}
{"text": "A fold for all seasons .In FPCA'93 : Proceedings of the 6th ACM SIGPLAN / SIGARCH International Conference on Functional Programming Languages and Computer Architecture ( Copenhagen , Denmark , June9 - 11 , 1993 ) .ACM Press , 1993 . L. Siklossy and D. A. Sykes .", "label": "", "metadata": {}, "score": "83.26013"}
{"text": "higher - order functions are very easy for GP to find a . solution .We have learned about higher - order function .selection and fitness assignment through this study .The .next step will be to test the approach on applications with .", "label": "", "metadata": {}, "score": "83.30139"}
{"text": "Holger Bischof , Sergei Gorlatch , and Emanuel Kitzelmann .Cost optimality and predictability of parallel programming with skeletons .In Euro - Par 2003 Parallel Processing .9th International Euro - Par Conference , Klagenfurt , Austria , Aug.26 - 29 , 2003 .", "label": "", "metadata": {}, "score": "83.3208"}
{"text": "In COLT'94 : Proceedings of the 7th Annual Conference on Computational Learning Theory ( New Brunswick , NJ , USA , July12 - 15 , 1994 ) , pages 3 - 11 .ACM , 1994 .Stephen H. Muggleton .Predicate invention and utilization .", "label": "", "metadata": {}, "score": "83.36093"}
{"text": "Here we assume H contains an artificial bottom element ( True ) ?for every C 2 H , and ?Note that ? is not subsume - equivalent with other tautologies .Theorem 5 ( Existence of GSS in H ) Let H be a Horn language , with ? 2 H. Since D has exactly one literal in its head , it is a definite program clause .", "label": "", "metadata": {}, "score": "83.68582"}
{"text": "Here we assume H contains an artificial bottom element ( True ) ?for every C 2 H , and ?Note that ? is not subsume - equivalent with other tautologies .Theorem 5 ( Existence of GSS in H ) Let H be a Horn language , with ? 2 H. Since D has exactly one literal in its head , it is a definite program clause .", "label": "", "metadata": {}, "score": "83.68582"}
{"text": "Springer .well - typed lambda terms .We encode well - typed terms by .means of generalized algebraic datatypes ( GADTs ) and .existential types .The Spine approach to generic . programming supports GADTs , but it does not support the . definition of generic producers for existentials .", "label": "", "metadata": {}, "score": "83.738846"}
{"text": "Springer ( 1997 ) .Nijssen , S. , Kok , J. : Efficient frequent query discovery in FARMER .In : Proc . of the 7th European Conference on Principles and Practice of Knowledge Discovery in Databases , pp .350 - 362 ( 2003 ) .", "label": "", "metadata": {}, "score": "83.83933"}
{"text": "science to guide software production .The underlying . framework of this science has always been based on . deduction ( reasoning from the general to the specific ) .rather than induction ( reasoning from the specific to the . general ) .", "label": "", "metadata": {}, "score": "83.92659"}
{"text": "Springer .European Conference on Machine Learning , Catania , Italy , April\\,6 - -8 , 1994 .hypothesis language with new predicates in case that the . vocabulary given initially is insufficient for the learning . task .However , whether predicate invention really helps to .", "label": "", "metadata": {}, "score": "84.23677"}
{"text": "3rd International Workshop , AAIP'09 , Edinburgh , UK , Sept.4 , 2009 .Revised Papers , volume 5812 of Lecture Notes in Computer Science , pages 140 - 158 , Berlin / Heidelberg , 2010 .Springer .Chad Hogg and Hector Munoz - Avila .", "label": "", "metadata": {}, "score": "84.321365"}
{"text": "Dually , the greatest specialization is just OE1 .OE2 : this is implied by both OE1 and OE2 , and must imply any other formula that is implied by both OE1 and OE2 .See figure 3 .OE1 ^ OE2 Gamma Gamma Gamma Psi @@ @ROE 1 OE2@ @@R Gamma Gamma Gamma Psi OE1 .", "label": "", "metadata": {}, "score": "84.52937"}
{"text": "Dually , the greatest specialization is just OE1 .OE2 : this is implied by both OE1 and OE2 , and must imply any other formula that is implied by both OE1 and OE2 .See figure 3 .OE1 ^ OE2 Gamma Gamma Gamma Psi @@ @ROE 1 OE2@ @@R Gamma Gamma Gamma Psi OE1 .", "label": "", "metadata": {}, "score": "84.52937"}
{"text": "Springer .foundations and current directions of Kestrel 's . approach to mechanizing software development .The approach .emphasizes machine - supported refinement of . property - oriented specifications to code , based on a . category of higher - order specifications .", "label": "", "metadata": {}, "score": "84.697754"}
{"text": "Chengqi Zhang , Hans W. Guesgen , and Wai - Kiang Yeap , editors .PRICAI'04 : Trends in Artificial Intelligence .8th Pacific Rim International Conference on Artificial Intelligence , Auckland , New Zealand , Aug.9 - 13 , 2004 .", "label": "", "metadata": {}, "score": "84.77086"}
{"text": "Springer .input / output examples of their behavior .This method is a . prototype of a feasible inductive inference algorithm .It . is able to synthesize programs from a considerably small . number of examples , which , in fact , provide only incomplete . information , in general .", "label": "", "metadata": {}, "score": "84.86998"}
{"text": "Sufficiency \" is satisfied by the computed hypothesis h , since it , together with from the background knowledge , implies the first positive example , and similarly h and from the background knowledge implies the second positive example .\" Weak consistency \" is satisfied by h , since h holds in the ( finite ) Herbrand structure described by the background knowledge ; similar for \" Strong consistency \" .", "label": "", "metadata": {}, "score": "85.08308"}
{"text": "discovered in form of classification rules encoding the . conditions to fill a pre - defined information template .An . application to a real - world dataset composed by . publications selected to support biologists in the task of .Margherita Berardi , Michelangelo Ceci , Floriana Esposito , and Donato Malerba .", "label": "", "metadata": {}, "score": "85.1707"}
{"text": "Springer .higher - order functions ; programming ; recursion theory ; . based on recursion operators associated with data type . definitions .For these operators we derive various . algebraic laws that are useful in deriving and manipulating . programs .", "label": "", "metadata": {}, "score": "85.17188"}
{"text": "This . paper describes the current version of FOIL , assesses its . performance and notes areas for improvement .The successful .application of similar methods in other systems is reviewed .Baudouin Le Charlier and Pierre Flener .Specifications are necessarily informal or : Some more myths of formal methods .", "label": "", "metadata": {}, "score": "85.19824"}
{"text": "Springer .10th Pacific Rim International Conference on Artificial Intelligence , Hanoi , Vietnam , Dec.\\,15 - -19 , 2008 .programs are two major approaches to inductive functional . programming .Recently , in addition to them , some . researchers pursue efficient exhaustive program generation . algorithms , partly for the purpose of providing a . comparator and knowing how essential the ideas such as . heuristics adopted by those major approaches are , partly .", "label": "", "metadata": {}, "score": "85.24253"}
{"text": "Subsumption First we devote some attention to subsumption .Least generalizations under subsumption have been discussed extensively by Plotkin ( 1970 ) .The main result in Plotkin 's framework is the following : Theorem 3 ( Existence of LGS in C ) Let C be a clausal language .", "label": "", "metadata": {}, "score": "85.41608"}
{"text": "Subsumption First we devote some attention to subsumption .Least generalizations under subsumption have been discussed extensively by Plotkin ( 1970 ) .The main result in Plotkin 's framework is the following : Theorem 3 ( Existence of LGS in C ) Let C be a clausal language .", "label": "", "metadata": {}, "score": "85.41608"}
{"text": "and universal Turing machines .It spends part of the total .search time for a new problem on testing programs that .exploit previous solution - computing programs in computable . ways .If the new problem can be solved faster by .", "label": "", "metadata": {}, "score": "85.491394"}
{"text": "The theoryBcan be any clausal theory , and the . exampleEcan be any clause which is neither a tautology nor . impliedbyB. The derived hypothesisHis a clause which is .not always definite .In order to prove the result we give a .", "label": "", "metadata": {}, "score": "85.58023"}
{"text": "Springer . is a complex task because of the non - monotonicity of the . consistency property .In this paper we propose . computational solutions to some relevant issues raised by .the multiple predicate learningproblem .A . separate - and - parallel - conquer search strategy is adopted to . interleave the learning of clauses supplying predicateswith .", "label": "", "metadata": {}, "score": "85.912415"}
{"text": "353 Nienhuys - Cheng & de Wolf Then ( 1),(2 ) .( 2),(3 ) by Theorem 4.2 of ( Chang & Lee , 1973 ) .Since also ( 3),(4 ) , we have ( 1),(4 ) .( 4 ) is decidable because A is finite , so ( 1 ) is decidable as well .", "label": "", "metadata": {}, "score": "87.30897"}
{"text": "353 Nienhuys - Cheng & de Wolf Then ( 1),(2 ) .( 2),(3 ) by Theorem 4.2 of ( Chang & Lee , 1973 ) .Since also ( 3),(4 ) , we have ( 1),(4 ) .( 4 ) is decidable because A is finite , so ( 1 ) is decidable as well .", "label": "", "metadata": {}, "score": "87.30897"}
{"text": "Math .Artif .Intell .39 , 211 - 221 ( 2003 ) CrossRef MATH MathSciNet .J. Nutr .Bringmann , B. , Nijssen , S. : What is frequent in a single graph ?In : Proceedings 12th Pacific - Asia Conference on Knowledge Discovery in Databases , pp .", "label": "", "metadata": {}, "score": "87.62312"}
{"text": "7th International Workshop , LOPSTR'97 , Leuven , Belgium , July10 - 12 , 1997 .Proceedings , volume 1207 of Lecture Notes in Computer Science , pages 1 - 27 , Berlin / Heidelberg , 1998 .Springer . system which integrates a variety of interactively . controlled and automated techniques from theorem proving .", "label": "", "metadata": {}, "score": "87.67758"}
{"text": "Proceedings , volume 3321 of Lecture Notes in Computer Science , pages 128 - 141 , Berlin / Heidelberg , 2005 .Springer .Higher - Level Decision Making .9th Asian Computing Science Conference .Dedicated to Jean - Louis Lassez on the Occasion of His 60th Birthday .", "label": "", "metadata": {}, "score": "87.764206"}
{"text": "International Conference , ILP'06 , Santiago de Compostela , Spain , Aug.24 - 27 , 2006 .Revised Selected Papers , volume 4455 of Lecture Notes in Computer Science , pages 79 - 93 , Berlin / Heidelberg , 2007 .Springer . source of biological information .", "label": "", "metadata": {}, "score": "88.02286"}
{"text": "If R is both reflexive , transitive and anti - symmetric on Gamma , we say R is a partial order on Gamma .If R is reflexive , transitive and symmetric on Gamma , R is an equivalence relation on Gamma .", "label": "", "metadata": {}, "score": "88.18405"}
{"text": "If R is both reflexive , transitive and anti - symmetric on Gamma , we say R is a partial order on Gamma .If R is reflexive , transitive and symmetric on Gamma , R is an equivalence relation on Gamma .", "label": "", "metadata": {}, "score": "88.18405"}
{"text": "Annual German Conference on Artificial Intelligence , Bonn , Germany , Sept.13 - 15 , 1999 .Proceedings , volume 1701 of Lecture Notes in Computer Science .Lecture Notes in Artificial Intelligence , pages 171 - 182 , Berlin / Heidelberg , 1999 .", "label": "", "metadata": {}, "score": "88.205"}
{"text": "Technical Report KES.U.01.3 . , Kestrel Institute , 2001 .Erik Meijer , Maarten Fokkinga , and Ross Paterson .Functional programming with bananas , lenses , envelopes and barbed wire .In Functional Programming Languages and Computer Architecture .5th ACM Conference , Cambridge , MA , USA , Aug.26 - 30 , 1991 .", "label": "", "metadata": {}, "score": "88.468056"}
{"text": "they would lead .Theeurekadiscoveries are compiled away , .Pierre Flener and Derek Partridge .Inductive programming .Automated Software Engineering , 8(2):131 - 137 , April 2001 .Pierre Flener and Lubos Popelinsky .On the use of inductive reasoning in program synthesis : Prejudice and prospects .", "label": "", "metadata": {}, "score": "88.50447"}
{"text": "8th European Conference on Machine Learning Heraclion , Crete , Greece , April\\,25 - -27 , 1995 .exclude a set of negative examples without excluding a set . of positive examples , it may not be possible to specialize .or remove any of the clauses in a refutation of a negative . example without excluding any positive examples .", "label": "", "metadata": {}, "score": "88.663315"}
{"text": "Proceedings , Colloque sur la Programmation Paris , April9 - 11 , 1974 , volume 19 of Lecture Notes in Computer Science , pages 408 - 425 , Berlin / Heidelberg , 1974 .Springer .C. Rich and Richard C. Waters .", "label": "", "metadata": {}, "score": "88.682144"}
{"text": "Allen Cypher .Programming repetitive tasks by demonstration .In Allen Cypher , editor , Watch What I Do : Programming by Demonstration , pages 205 - 217 .The MIT Press , 1993 .Luc De Raedt and Luc Dehaspe .", "label": "", "metadata": {}, "score": "89.34712"}
{"text": "In B. Velichkovsky Leon Urbas , T. Goschke , editor , Tagungsbericht der 9 .Jahrestagung der Gesellschaft f\u00fcr Kognitionswissenschaft ( KogWis 2008 , TU Dresden , 28.9.-1.10 .Nominiert f\u00fcr den Brain ProductsPoster Preis i m Rahmender KogWis'08 ( Platz 2 ) .", "label": "", "metadata": {}, "score": "89.762184"}
{"text": "In Nina Mishra Tom Fawcett , editor , ICML'03 : Proceedings of the Twentieth International Conference on Machine Learning ( Washington D.C. , USA , Aug. 21 - 24 , 2003 ) , pages 27 - 34 .AAAI Press , 2003 .", "label": "", "metadata": {}, "score": "89.97847"}
{"text": "Here 's a comprehensive list of inductive programming publications .If you wish your publications to be added , or some important papers are missing , then please send a message with the BibTex entries to the admin .Ramiro Aguilar , Luis Alonso , Vivian L\u00f2pez , and Mar\u00eda N. Moreno .", "label": "", "metadata": {}, "score": "90.29028"}
{"text": "We present the . concept of types in GP and introduce a typed GP system , .PolyGP , that supports polymorphism through the use of three . different kinds of type variable .We demonstrate the .usefulness of this kind of polymorphism in GP by evolving .", "label": "", "metadata": {}, "score": "90.38017"}
{"text": "Programs from the field of Inductiv ... . \" ...This thesis is about inductive learning , or learning from examples .The goal has been to investigate ways of improving learning algorithms .The chess end - game \" King and Rook against King \" ( KRK ) was chosen , and a number of benchmark learning tasks were defined within this domain , sufficient ... \" .", "label": "", "metadata": {}, "score": "91.02443"}
{"text": "Dagstuhl 's Impact .Please inform us when a publication was published as a result from your seminar .These publications are listed in the category Dagstuhl 's Impact and are presented on a special shelf on the ground floor of the library .", "label": "", "metadata": {}, "score": "91.40026"}
{"text": "Sigma 0 is a set of ground instances of C and all terms in Sigma 0 are terms in T , so Sigma 0 ' I(C ; T ) .The argument used in the previous lemma does not work here , because different terms in some ground instance need not relate to different variables .", "label": "", "metadata": {}, "score": "92.47482"}
{"text": "Sigma 0 is a set of ground instances of C and all terms in Sigma 0 are terms in T , so Sigma 0 ' I(C ; T ) .The argument used in the previous lemma does not work here , because different terms in some ground instance need not relate to different variables .", "label": "", "metadata": {}, "score": "92.47482"}
{"text": "Derek Partridge .The case for inductive programming .Computer , 30(1):36 - 41 , 1997 .methods .But induction , deduction 's ignored sibling , could . have a profound effect on the future development of .computer science theory and practice .", "label": "", "metadata": {}, "score": "92.5457"}
{"text": "pac - learnability .In particular , we show that the following .program classes are cryptographically hard to learn : . programs with an unbounded number of constant - depth linear .recursive clauses ; programs with one constant - depth . determinate clause containing an unbounded number of .", "label": "", "metadata": {}, "score": "93.766396"}
{"text": "A definite program clause is a clause with one positive and zero or more negative literals and a definite goal is a clause without positive literals .A Horn clause is either a definite program clause or a definite goal .If C is a clause , we use C+ to denote the positive literals in C , and CGamma to denote the negative literals in C. The empty clause , which represents a contradiction , is denoted by 2 .", "label": "", "metadata": {}, "score": "94.126785"}
{"text": "A definite program clause is a clause with one positive and zero or more negative literals and a definite goal is a clause without positive literals .A Horn clause is either a definite program clause or a definite goal .If C is a clause , we use C+ to denote the positive literals in C , and CGamma to denote the negative literals in C. The empty clause , which represents a contradiction , is denoted by 2 .", "label": "", "metadata": {}, "score": "94.126785"}
{"text": "In STOC'79 : Proceedings of the 11th annual ACM symposium on Theory of computing ( Atlanta , Georgia , USA , April30-May02 , 1979 ) , pages 130 - 141 , New York , NY , USA , 1979 .", "label": "", "metadata": {}, "score": "94.86057"}
{"text": "Springer .parallel programs and developing their efficient . implementations on parallel machines .The design process .starts with an intuitive , sequential algorithm and proceeds . by expressing it in terms of well - defined , pre - implemented .", "label": "", "metadata": {}, "score": "94.969025"}
{"text": "handling recursion code application , GP effort becomes .focused on the generation of recursion code .We employed .this method to evolve two recursive programs : strstr C . library function and programs that produce the Fibonacci . sequence .", "label": "", "metadata": {}, "score": "95.554634"}
{"text": "Springer .9th International Euro - Par Conference , Klagenfurt , Austria , Aug.\\,26 - -29 , 2003 .This paper develops a new , provably cost - optimal implementation of the DS ( double - scan ) skeleton for the divide - and - conquer paradigm .", "label": "", "metadata": {}, "score": "95.75787"}
{"text": ": If D is a tautology , then Doe is a tautology , so this case is obvious .Suppose D is not a tautology , then Doe is not a tautology .Since Sigma is ground , E must also be ground , so we have E ' Doe .", "label": "", "metadata": {}, "score": "97.037186"}
{"text": ": If D is a tautology , then Doe is a tautology , so this case is obvious .Suppose D is not a tautology , then Doe is not a tautology .Since Sigma is ground , E must also be ground , so we have E ' Doe .", "label": "", "metadata": {}, "score": "97.037186"}
{"text": "Tinker : A programming by demonstration system for beginning programmers .In Alan Cypher , editor , Watch What I Do : Programming by Demonstration , chapter 2 .MIT Press , Cambridge , MA , 1993 .Xiaofeng C. Ling .", "label": "", "metadata": {}, "score": "97.74765"}
{"text": "They are of significant chemical and commercial interest because of their use a ... \" .We present a novel application of ILP to the problem of diterpene structure elucidation from 13 C NMR spectra .Diterpenes are organic compounds of low molecular weight that are based on a skeleton of 20 carbon atoms .", "label": "", "metadata": {}, "score": "98.53844"}
{"text": "We report some recent developments from an ongoing project in which a chess endgame domain is providing benchmark experimental tests for the study of concept learning .The King and Rook against King ( KRK ) endgame is simple enough in chess terms but provides concept learning tasks which can be demanding , as evidenced in previous studies by a number of authors .", "label": "", "metadata": {}, "score": "100.187004"}
{"text": "The goal has been to investigate ways of improving learning algorithms .The chess end - game \" King and Rook against King \" ( KRK ) was chosen , and a number of benchmark learning tasks were defined within this domain , sufficient to over - challenge stateof -the - art learning algorithms .", "label": "", "metadata": {}, "score": "100.38508"}
{"text": "R is reflexive on Gamma , if xRx for every x 2 Gamma .R is transitive on Gamma , if for every x ; y ; z 2 Gamma , xRy and yRz implies xRz .R is symmetric on Gamma , if for every x ; y 2 Gamma , xRy implies yRx .", "label": "", "metadata": {}, "score": "103.82318"}
{"text": "R is reflexive on Gamma , if xRx for every x 2 Gamma .R is transitive on Gamma , if for every x ; y ; z 2 Gamma , xRy and yRz implies xRz .R is symmetric on Gamma , if for every x ; y 2 Gamma , xRy implies yRx .", "label": "", "metadata": {}, "score": "103.82318"}
{"text": "Proceedings , volume 3157 of Lecture Notes in Computer Science , pages 75 - 84 , Berlin / Heidelberg , 2004 .Springer .8th Pacific Rim International Conference on Artificial Intelligence , Auckland , New Zealand , Aug.\\,9 - -13 , 2004 .", "label": "", "metadata": {}, "score": "104.13504"}
{"text": "307 - 322 .Springer - Verlag .", "label": "", "metadata": {}, "score": "135.81827"}
