{"text": "FSTs have been applied to a variety of problems in speech and text processing , OCR , and information retrieval .Typically a weighted transducer is used to represent either hypothesis sets ( e.g. , word lattices ) or probabilistic models ( e.g. , ngram models , pronunciation models ) .", "label": "", "metadata": {}, "score": "39.782402"}
{"text": "Deal with this in two ways ( Mohri , Riley , and Sproat ( 1996 ) ) : .Break full composition cascade into collection of linked cascades creating intermediate weighted FST ( lattices ) and perform time/ space optimizations on these lattice - FST , e.g. , lazy composition , local determinization , path pruning .", "label": "", "metadata": {}, "score": "40.081673"}
{"text": "Deal with this in two ways ( Mohri , Riley , and Sproat ( 1996 ) ) : .Break full composition cascade into collection of linked cascades creating intermediate weighted FST ( lattices ) and perform time/ space optimizations on these lattice - FST , e.g. , lazy composition , local determinization , path pruning .", "label": "", "metadata": {}, "score": "40.081673"}
{"text": "International Journal of Foundations of Computer Science , 14(6 ) , 957 - 982 .[ PDF ] .Mohri , M. ( 2004 ) \" Weighted Finite - State Transducer Algorithms : An Overview . \"In Formal Languages and Applications .", "label": "", "metadata": {}, "score": "41.2306"}
{"text": "International Journal of Foundations of Computer Science , 14(6 ) , 957 - 982 .[ PDF ] .Mohri , M. ( 2004 ) \" Weighted Finite - State Transducer Algorithms : An Overview . \"In Formal Languages and Applications .", "label": "", "metadata": {}, "score": "41.2306"}
{"text": "Note in the discussion above , we assumed that we were operating on acoustic and written forms within the same language ; this need not be so !Given suitably - stated weighted FST cascades , can do various types of inter - language translation within this framework , , e.g. , Casacuberta and Vidar ( 2004 ) .", "label": "", "metadata": {}, "score": "41.5944"}
{"text": "Note in the discussion above , we assumed that we were operating on acoustic and written forms within the same language ; this need not be so !Given suitably - stated weighted FST cascades , can do various types of inter - language translation within this framework , , e.g. , Casacuberta and Vidar ( 2004 ) .", "label": "", "metadata": {}, "score": "41.5944"}
{"text": "148 .Physica - Verlag ; Berlin .[ PDF ] .Mohri , M. , Pereira , F. , and Riley , M. ( 2000 ) \" The Design Principles of a Weighted Finite - State Transducer Library .\" Theoretical Computer Science , 231 , 17 - 32 .", "label": "", "metadata": {}, "score": "42.953056"}
{"text": "148 .Physica - Verlag ; Berlin .[ PDF ] .Mohri , M. , Pereira , F. , and Riley , M. ( 2000 ) \" The Design Principles of a Weighted Finite - State Transducer Library .\" Theoretical Computer Science , 231 , 17 - 32 .", "label": "", "metadata": {}, "score": "42.953056"}
{"text": "[ PDF ] .Pereira , F. , Riley , M. , and Sproat , R. ( 1994 ) \" Weighted Rational Transductions and their Application to Human Language Processing . \"In Proceedings : Worskhop on Human Language Technology .Association for Computational Linguistics ; Somerset , NJ .", "label": "", "metadata": {}, "score": "43.689133"}
{"text": "[ PDF ] .Pereira , F. , Riley , M. , and Sproat , R. ( 1994 ) \" Weighted Rational Transductions and their Application to Human Language Processing . \"In Proceedings : Worskhop on Human Language Technology .Association for Computational Linguistics ; Somerset , NJ .", "label": "", "metadata": {}, "score": "43.689133"}
{"text": "[ PDF ] .Allauzen , C. and Mohri , M. ( 2002 ) \" p - Subsequentiable Transducers . \"In CIAA 2002 .Lecture Notes in Computer Science no . 2608 .Springer - Verlag ; Berlin .[ PDF ] .", "label": "", "metadata": {}, "score": "44.12858"}
{"text": "[ PDF ] .Allauzen , C. and Mohri , M. ( 2002 ) \" p - Subsequentiable Transducers . \"In CIAA 2002 .Lecture Notes in Computer Science no . 2608 .Springer - Verlag ; Berlin .[ PDF ] .", "label": "", "metadata": {}, "score": "44.12858"}
{"text": "The weights can be used to represent the cost of taking a particular transition .FSTs have been applied to a variety of problems in speech , natural language processing and information retrieval .Typically a weighted transducer is used to represent either hypothesis sets ( e.g. , speech lattices ) or probabilistic models ( e.g. , language models or pronunciation models ) .", "label": "", "metadata": {}, "score": "44.215942"}
{"text": "The toolkit is a collection of command - line tools and associated C++ API for manipulating finite - state transducers ( FSTs ) and acceptors ( FSAs ) and has been designed to enable research through its ... \" .We present the MIT Finite - State Transducer Toolkit and briefly describe research that it has benefitted .", "label": "", "metadata": {}, "score": "44.84993"}
{"text": "Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "44.97739"}
{"text": "Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "44.97739"}
{"text": "Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "44.97739"}
{"text": "Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "44.97739"}
{"text": "Mihov , S. and Maurel , D. ( 2000 ) \" Direct Construction of Minimal Acyclic Subsequential Transducers . \"In CIAA 2000 .Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .Mihov , S. and Schulz , K.U ..", "label": "", "metadata": {}, "score": "45.551445"}
{"text": "Mihov , S. and Maurel , D. ( 2000 ) \" Direct Construction of Minimal Acyclic Subsequential Transducers . \"In CIAA 2000 .Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .Mihov , S. and Schulz , K.U ..", "label": "", "metadata": {}, "score": "45.551445"}
{"text": "Mohri , M. , Pereira , F. , and Riley , M. ( 2002 ) \" Weighted Finite - State Transducers in Speech Recognition .\"Computer Speech & Language , 16(1 ) , 69 - 88 .[ PDF ] .", "label": "", "metadata": {}, "score": "46.358803"}
{"text": "Mohri , M. , Pereira , F. , and Riley , M. ( 2002 ) \" Weighted Finite - State Transducers in Speech Recognition .\"Computer Speech & Language , 16(1 ) , 69 - 88 .[ PDF ] .", "label": "", "metadata": {}, "score": "46.358803"}
{"text": "This work has been partially supported by Google Inc. .New version coming soon .Will include algorithms for learning kernels and kernel ridge regression .This library is being developed by C. Allauzen , M. Mohri and A. Rostami .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "46.443375"}
{"text": "The current focus of library is on rational kernels .It is based on the OpenFst library .This library was developed by C. Allauzen and M. Mohri .It is intended to be comprehensive , flexible , efficient and scale well to large problems .", "label": "", "metadata": {}, "score": "46.6082"}
{"text": "FSTs have key applications in speech recognition and synthesis , machine translation , optical character recognition , pattern matching , string processing , machine learning , information extraction and retrieval among others .Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .", "label": "", "metadata": {}, "score": "46.78823"}
{"text": "FSTs have key applications in speech recognition and synthesis , machine translation , optical character recognition , pattern matching , string processing , machine learning , information extraction and retrieval among others .Often a weighted transducer is used to represent a probabilistic model ( e.g. , an n - gram model , pronunciation model ) .", "label": "", "metadata": {}, "score": "46.78823"}
{"text": "The current focus of library is on rational kernels .It is based on the OpenFst library .Changed : .This library is being developed by C. Allauzen , M. Mohri and A. Rostami .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "46.814445"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .", "label": "", "metadata": {}, "score": "47.014977"}
{"text": "These determinizations are done by variations on the standard FSA determinization algorithm and also require exponential time and space in the worst case .Minimization algorithms are also known for particular classes of FST .Rules .There are many syntactic variants of rule - formalisms for encoding finite - state transducers .", "label": "", "metadata": {}, "score": "47.41246"}
{"text": "These determinizations are done by variations on the standard FSA determinization algorithm and also require exponential time and space in the worst case .Minimization algorithms are also known for particular classes of FST .Rules .There are many syntactic variants of rule - formalisms for encoding finite - state transducers .", "label": "", "metadata": {}, "score": "47.41246"}
{"text": "In 34rd Annual Meeting of the Association . for Computational Linguistics , Morristown , NJ .Association for .Computational Linguistics .( Soon to be available from CMP - LG ) .Richard Sproat and Michael Riley .1996a .\" Compilation of Weighted .", "label": "", "metadata": {}, "score": "47.76969"}
{"text": "Though the finite - state framework is a tad constricting in places ( especially wrt the auxiliary information that can be easily associated with a lexical form ) , it does provide a unified and standard methodology for creating and using lexicons .", "label": "", "metadata": {}, "score": "47.894608"}
{"text": "Though the finite - state framework is a tad constricting in places ( especially wrt the auxiliary information that can be easily associated with a lexical form ) , it does provide a unified and standard methodology for creating and using lexicons .", "label": "", "metadata": {}, "score": "47.894608"}
{"text": "We show special techniques to reduce the memory and computational requirements .These techniques are based on a compressed LM look - ahead tree .To compute the LM look - ahead tree probabilites in an efficient way , we present a backward dynamic programming scheme . \" ...", "label": "", "metadata": {}, "score": "48.109108"}
{"text": "Minimization and pushing operations are approximated .Our results have confirmed the efficiency of these approximations .Index Terms - Speech recognition , weighted finite - state transducers ( WFSTs ) .I. . ... nd is delayed until the identity of a word is determined .", "label": "", "metadata": {}, "score": "48.400627"}
{"text": "Many distinct formalisms proposed over the years ( SPE rewrite rules , two - level rules ( KIMMO ) , Declarative phonology and Optimality Theory constraints ) ; however , all of these have FST implementations !( see Kaplan and Kay ( 1994 ) and Wareham ( 1999 ) and references ) .", "label": "", "metadata": {}, "score": "48.535355"}
{"text": "Many distinct formalisms proposed over the years ( SPE rewrite rules , two - level rules ( KIMMO ) , Declarative phonology and Optimality Theory constraints ) ; however , all of these have FST implementations !( see Kaplan and Kay ( 1994 ) and Wareham ( 1999 ) and references ) .", "label": "", "metadata": {}, "score": "48.535355"}
{"text": "In many cases , the size of the model is also reduced , because redundant paths are eliminated .General determinization has the following advantagesover those approaches : networks need not be constructed as ... . \" ... this paper , we present two efficient look - ahead pruning techniques in beam search for large vocabulary continuous speech recognition .", "label": "", "metadata": {}, "score": "48.559464"}
{"text": "The weights can be used to represent the cost of taking a particular transition .Changed : .FSTs have been applied to a variety of problems in speech and text processing , OCR , and information retrieval .Typically a weighted transducer is used to represent either hypothesis sets ( e.g. , word lattices ) or probabilistic models ( e.g. , ngram models , pronunciation models ) .", "label": "", "metadata": {}, "score": "48.83101"}
{"text": "this paper , we present two efficient look - ahead pruning techniques in beam search for large vocabulary continuous speech recognition .Both techniques , the language model look - ahead and the phoneme look - ahead , are incorporated into the word conditioned search algorithm using a bigram language model and a lexical prefix tree [ 5].", "label": "", "metadata": {}, "score": "48.997234"}
{"text": "Lecture Notes in Computer Science no .2494 .Springer - Verlag .[PDF ] ( Presented by R. Keating ) .Kiraz , G.A. and Mobius , B. ( 1998 ) \" Multilingual Syllabification Using Weighted Finite - State Transducers .", "label": "", "metadata": {}, "score": "49.078133"}
{"text": "Lecture Notes in Computer Science no .2494 .Springer - Verlag .[PDF ] ( Presented by R. Keating ) .Kiraz , G.A. and Mobius , B. ( 1998 ) \" Multilingual Syllabification Using Weighted Finite - State Transducers .", "label": "", "metadata": {}, "score": "49.078133"}
{"text": "We describe the use of two new algorithms : weighted determinization and minimization [ 12].These algorithms transform recognition labeled networks into equi ... \" .The redundancy and the size of networks in large - vocabulary speech recognition systems can have a critical effect on their overall performance .", "label": "", "metadata": {}, "score": "49.72738"}
{"text": "The following papers give a sense of the range of applications that have already been investigated , and which we plan to continue investigating : Fernando Pereira , Michael Riley , and Richard Sproat .Weighted rational transductions and their application to human language processing .", "label": "", "metadata": {}, "score": "49.907394"}
{"text": "Weighted FSA have all standard FSA operations via modifications to standard FSA operation algorithms ( Mohri ( 2004 ) ; Mohri , Riley , and Sproat ( 1996 ) ) .Stating relation - operations in speech processing in terms of weighted FST not only places such operations in a simple framework , but also exposes opportunities for optimizations that were not readily available in previous speech processing software ( Pereira , Riley , and Sproat ( 1994 ) ) .", "label": "", "metadata": {}, "score": "49.995953"}
{"text": "Weighted FSA have all standard FSA operations via modifications to standard FSA operation algorithms ( Mohri ( 2004 ) ; Mohri , Riley , and Sproat ( 1996 ) ) .Stating relation - operations in speech processing in terms of weighted FST not only places such operations in a simple framework , but also exposes opportunities for optimizations that were not readily available in previous speech processing software ( Pereira , Riley , and Sproat ( 1994 ) ) .", "label": "", "metadata": {}, "score": "49.995953"}
{"text": "Lecture Notes in Artificial Intelligence no .3230 .Springer - Verlag ; Berlin .[ PDF ] .Vilares , M. , Otero , J. , and Grana , J. ( 2005 ) \" Regional Versus Global Finite - State Error Repair . \"", "label": "", "metadata": {}, "score": "50.014343"}
{"text": "Lecture Notes in Artificial Intelligence no .3230 .Springer - Verlag ; Berlin .[ PDF ] .Vilares , M. , Otero , J. , and Grana , J. ( 2005 ) \" Regional Versus Global Finite - State Error Repair . \"", "label": "", "metadata": {}, "score": "50.014343"}
{"text": ", cascades of morphophonological rules .Grammar Approximation ( see Nederhof ( 2000 ) and references ) .There are many methods for constructing finite - state grammars approximating context - free grammars , almost none of which have well - defined time or space complexities .", "label": "", "metadata": {}, "score": "50.479942"}
{"text": ", cascades of morphophonological rules .Grammar Approximation ( see Nederhof ( 2000 ) and references ) .There are many methods for constructing finite - state grammars approximating context - free grammars , almost none of which have well - defined time or space complexities .", "label": "", "metadata": {}, "score": "50.479942"}
{"text": "Furthermore , general transducer operations combine these representations flexibly and efficiently .Weighted determinization and minimization algorithms optimize their time and space requirements , and a weight pushing algorithm distributes the weights along the paths of a weighted transducer optimally for speech recognition .", "label": "", "metadata": {}, "score": "51.072105"}
{"text": "These algorithms transform recognition labeled networks into equivalent ones that require much less time and space in large - vocabulary speech recognition .They are both optimal : weighted determinization eliminates the number of alternatives at each state to the minimum , and weighted minimization reduces the size of deterministic networks to the smallest possible number of states and transitions .", "label": "", "metadata": {}, "score": "51.53381"}
{"text": "During processing , typically require most probable output associated with input .During implementation , these characteristics are the sources of modeling and search errors , respectively .Can implement such form - relations as weighted FST !Weighted FSA are FSA in which each transition now has an associated number , and each path from a start state to a finish state has an associated value equal to the sum of the transition - weights on that path .", "label": "", "metadata": {}, "score": "51.72801"}
{"text": "During processing , typically require most probable output associated with input .During implementation , these characteristics are the sources of modeling and search errors , respectively .Can implement such form - relations as weighted FST !Weighted FSA are FSA in which each transition now has an associated number , and each path from a start state to a finish state has an associated value equal to the sum of the transition - weights on that path .", "label": "", "metadata": {}, "score": "51.72801"}
{"text": "There may be many types of mechanisms for a particular task ; choose among these based on notions of ( descriptive ) adequacy , mechanism simplicity , and ( implementation ) efficiency .We will look at various finite - state mechanisms for NLP tasks .", "label": "", "metadata": {}, "score": "51.798477"}
{"text": "We show that WFSTs provide a common and natural representation for hidden Markov models ( HMMs ) , context - dependency , pronunciation dictionaries , grammars , and alternative recognition outputs .Furthermore , general tr ... \" .We survey the use of weighted finite - state transducers ( WFSTs ) in speech recognition .", "label": "", "metadata": {}, "score": "51.95408"}
{"text": "It is based on the OpenFst library .Changed : .This library was developed by C. Allauzen and M. Mohri .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "52.133114"}
{"text": "so.0 /usr / lib / libfstpdtscript . so.0.0.0 /usr / lib / libfstscript .so.0 /usr / lib / libfstscript . so.0.0.0 /usr / share / doc / openfst-1.2.7 /usr / share / doc / openfst-1.2.7/AUTHORS /usr / share / doc / openfst-1.2.7/COPYING /usr / share / doc / openfst-1.2.7/NEWS /usr / share / doc / openfst-1.2.7/README OpenFst is a library for constructing , combining , optimizing , and searching weighted finite - state transducers ( FSTs ) .", "label": "", "metadata": {}, "score": "52.14496"}
{"text": "This work has been partially supported by Google Inc. .This library is being developed by C. Allauzen , M. Mohri and A. Rostamizadeh .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "52.205402"}
{"text": "New version coming in January 2010 .Will include algorithms for learning kernels and kernel ridge regression .This library is being developed by C. Allauzen , M. Mohri and A. Rostamizadeh .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "52.20768"}
{"text": "Several types of finite - state transducers : .( Extended ) regular expressions .Finite - state machines ( FST proper ) .Rules .Start by examining these transducers and how they can recognize , generate , and reconstruct individual relations ; then we will look at how these transducers can be combined to implement multi - relation operations .", "label": "", "metadata": {}, "score": "52.551353"}
{"text": "Several types of finite - state transducers : .( Extended ) regular expressions .Finite - state machines ( FST proper ) .Rules .Start by examining these transducers and how they can recognize , generate , and reconstruct individual relations ; then we will look at how these transducers can be combined to implement multi - relation operations .", "label": "", "metadata": {}, "score": "52.551353"}
{"text": "[ PDF ] .Sproat , R. and Riley , M. ( 1996 ) \" Compilation of Weighted Finite - State Transducers from Decision Trees . \" In ACL'96 .[ PDF ] .Trancoso , I. , Caseiro , D. , Viana , C. , Silva , F. , and Mascarenhas , I. ( 2003 ) \" Pronunciation modeling using finite state transducers . \" In ICPhS'2003 .", "label": "", "metadata": {}, "score": "52.96763"}
{"text": "[ PDF ] .Sproat , R. and Riley , M. ( 1996 ) \" Compilation of Weighted Finite - State Transducers from Decision Trees . \" In ACL'96 .[ PDF ] .Trancoso , I. , Caseiro , D. , Viana , C. , Silva , F. , and Mascarenhas , I. ( 2003 ) \" Pronunciation modeling using finite state transducers . \" In ICPhS'2003 .", "label": "", "metadata": {}, "score": "52.96763"}
{"text": "3406 .Springer - Verlag ; Berlin .[ PDF ] .Voutilainen , A. ( 1998 ) \" Does tagging help parsing ?A case study on finite state parsing . \"In Karttunen , L. ( ed . )FSMNLP'98 : International Workshop on Finite State Methods in Natural Language Processing .", "label": "", "metadata": {}, "score": "53.287037"}
{"text": "3406 .Springer - Verlag ; Berlin .[ PDF ] .Voutilainen , A. ( 1998 ) \" Does tagging help parsing ?A case study on finite state parsing . \"In Karttunen , L. ( ed . )FSMNLP'98 : International Workshop on Finite State Methods in Natural Language Processing .", "label": "", "metadata": {}, "score": "53.287037"}
{"text": "There are additional types of relations which differ in how easy they are to implement , e.g. , ( sub)sequential functions .Tuesday , January 31 ( Lecture # 5 ) [ Nederhof ( 1996 ) ; Class Notes ] .Finite - State Transducers ( Cont'd ) .", "label": "", "metadata": {}, "score": "53.379272"}
{"text": "There are additional types of relations which differ in how easy they are to implement , e.g. , ( sub)sequential functions .Tuesday , January 31 ( Lecture # 5 ) [ Nederhof ( 1996 ) ; Class Notes ] .Finite - State Transducers ( Cont'd ) .", "label": "", "metadata": {}, "score": "53.379272"}
{"text": "Implemented by an extended finite - state approach , in which a cascade of FST recreates as many of the layers of constituents in the full parse tree as possible by combining tags into higher - order tags .Can implement as fixed set of \" stratum \" FST or a master FST that iterates until there is no change in the tag - sequence .", "label": "", "metadata": {}, "score": "53.489384"}
{"text": "Implemented by an extended finite - state approach , in which a cascade of FST recreates as many of the layers of constituents in the full parse tree as possible by combining tags into higher - order tags .Can implement as fixed set of \" stratum \" FST or a master FST that iterates until there is no change in the tag - sequence .", "label": "", "metadata": {}, "score": "53.489384"}
{"text": "( Lucchesi and Kowaltowski ( 1992 ) ; see also Grana et al ( 2001 ) and references ) .Construction of the numbered DAFA associated with a DAFA can be done in time linear in the size ( states + transitions ) of the given DAFA .", "label": "", "metadata": {}, "score": "53.55363"}
{"text": "( Lucchesi and Kowaltowski ( 1992 ) ; see also Grana et al ( 2001 ) and references ) .Construction of the numbered DAFA associated with a DAFA can be done in time linear in the size ( states + transitions ) of the given DAFA .", "label": "", "metadata": {}, "score": "53.55363"}
{"text": "Oddly enough , deterministic and non - deterministic FSA are equivalent in recognition power !Determinization algorithm ( HMU01 , Section 2.5.5 ) .Algorithm overview .Create state powerset .Establish start and finish states .Remove epsilon - moves .", "label": "", "metadata": {}, "score": "53.58552"}
{"text": "Oddly enough , deterministic and non - deterministic FSA are equivalent in recognition power !Determinization algorithm ( HMU01 , Section 2.5.5 ) .Algorithm overview .Create state powerset .Establish start and finish states .Remove epsilon - moves .", "label": "", "metadata": {}, "score": "53.58552"}
{"text": "67 - 71 ) .Algorithm overview .Creates minimal DFA from n -state DFA operating over alphabet with s symbols in O(sn^2 ) time ; this is , however , potentially still exponential time if the input DFA was created by the determinization algorithm above .", "label": "", "metadata": {}, "score": "54.414627"}
{"text": "67 - 71 ) .Algorithm overview .Creates minimal DFA from n -state DFA operating over alphabet with s symbols in O(sn^2 ) time ; this is , however , potentially still exponential time if the input DFA was created by the determinization algorithm above .", "label": "", "metadata": {}, "score": "54.414627"}
{"text": "This work has been partially supported by Google Inc. .kernels for machine learning applications .The current focus of library is on rational kernels .It is based on the OpenFst library .Changed : .This library was developed by C. Allauzen and M. Mohri .", "label": "", "metadata": {}, "score": "54.62932"}
{"text": "Changed : .FSTs have been applied to a variety of problems in speech , natural language processing and information retrieval .Typically a weighted transducer is used to represent either hypothesis sets ( e.g. , speech lattices ) or probabilistic models ( e.g. , language models or pronunciation models ) .", "label": "", "metadata": {}, "score": "54.799454"}
{"text": "[ PDF ] .Daciuk , J. , Mihov , S. , Watson , B.W. , and Watson , R.E. ( 2000 ) \" Incremental Construction of Acyclic Finite - State Automata . \"Computational Linguistics , 26(1 ) , 3 - 16 .", "label": "", "metadata": {}, "score": "54.893517"}
{"text": "[ PDF ] .Daciuk , J. , Mihov , S. , Watson , B.W. , and Watson , R.E. ( 2000 ) \" Incremental Construction of Acyclic Finite - State Automata . \"Computational Linguistics , 26(1 ) , 3 - 16 .", "label": "", "metadata": {}, "score": "54.893517"}
{"text": "Advanced Research Projects Agency , March 8 - -11 .Fernando Pereira and Michael Riley . \"Speech recognition by composition of weighted finite automata . \" CMP - LG archive paper 9603001 .Mehryar Mohri and Richard Sproat . \"An efficient compiler for .", "label": "", "metadata": {}, "score": "55.13633"}
{"text": "[ PDF ] .Casacuberta , F. and Vidal , E. ( 2004 ) \" Machine Translation with Inferred Stochastic Finite - State Transducers . \"Computational Linguistics , 30(2 ) , 205 - 225 .[ PDF ] .Chomsky , N. ( 1962 )", "label": "", "metadata": {}, "score": "55.159023"}
{"text": "[ PDF ] .Casacuberta , F. and Vidal , E. ( 2004 ) \" Machine Translation with Inferred Stochastic Finite - State Transducers . \"Computational Linguistics , 30(2 ) , 205 - 225 .[ PDF ] .Chomsky , N. ( 1962 )", "label": "", "metadata": {}, "score": "55.159023"}
{"text": "In CIAA 2004 .Lecture Notes in Computer Science no .3517 .Springer - Verlag ; Berlin .[ PDF ] .Beesley , K.R. and and Karttunen , L. ( 2000 ) \" Finite - state Non - concatenative Morphotactics . \"", "label": "", "metadata": {}, "score": "55.210888"}
{"text": "In CIAA 2004 .Lecture Notes in Computer Science no .3517 .Springer - Verlag ; Berlin .[ PDF ] .Beesley , K.R. and and Karttunen , L. ( 2000 ) \" Finite - state Non - concatenative Morphotactics . \"", "label": "", "metadata": {}, "score": "55.210888"}
{"text": "It is based on the OpenFst library .This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .", "label": "", "metadata": {}, "score": "55.212082"}
{"text": "Friburger , N. and Maurel , D. ( 2002 ) \" Finite State Transducer Cascade to Extract Proper Names in Texts . \"In CIAA 2001 Lecture Notes in Computer Science no .2494 .Springer - Verlag ; Berlin .[", "label": "", "metadata": {}, "score": "55.387535"}
{"text": "Friburger , N. and Maurel , D. ( 2002 ) \" Finite State Transducer Cascade to Extract Proper Names in Texts . \"In CIAA 2001 Lecture Notes in Computer Science no .2494 .Springer - Verlag ; Berlin .[", "label": "", "metadata": {}, "score": "55.387535"}
{"text": "There is strong evidence that there is no efficient algorithm for this problem ( i / o - deterministic FST Composition is NP - hard ( Wareham ( 1999 ) , Section 4.3.2 ; Wareham ( 2002 ) , Theorem 12 ) .", "label": "", "metadata": {}, "score": "55.453724"}
{"text": "There is strong evidence that there is no efficient algorithm for this problem ( i / o - deterministic FST Composition is NP - hard ( Wareham ( 1999 ) , Section 4.3.2 ; Wareham ( 2002 ) , Theorem 12 ) .", "label": "", "metadata": {}, "score": "55.453724"}
{"text": "Derived FST are typically smaller than HMM - FST and faster .Just how well do these approaches work ?Beware evaluation purely on the basis of how often individual words are tagged correctly -- the goal , after all , is reliable sentence parsing , and a bad tag - guess in a single word can mislead a parser relative to a sentence ( Abney ( 1996 ) ) .", "label": "", "metadata": {}, "score": "55.63706"}
{"text": "Derived FST are typically smaller than HMM - FST and faster .Just how well do these approaches work ?Beware evaluation purely on the basis of how often individual words are tagged correctly -- the goal , after all , is reliable sentence parsing , and a bad tag - guess in a single word can mislead a parser relative to a sentence ( Abney ( 1996 ) ) .", "label": "", "metadata": {}, "score": "55.63706"}
{"text": "This library is being developed by C. Allauzen , M. Mohri and A. Rostami .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "55.73985"}
{"text": "Model as finding the shortest accepted string in the intersection of the lexical recognizer and a special weighted finite - state e - automaton .Note that though each of these algorithms supports arbitrary distance thresholds , the increase in candidate - set size with threshold typically limits thresholds to values less than 4 in practice ; however , given the statistical rarity of multi - error misspellings , this is frequently sufficient .", "label": "", "metadata": {}, "score": "55.74032"}
{"text": "Model as finding the shortest accepted string in the intersection of the lexical recognizer and a special weighted finite - state e - automaton .Note that though each of these algorithms supports arbitrary distance thresholds , the increase in candidate - set size with threshold typically limits thresholds to values less than 4 in practice ; however , given the statistical rarity of multi - error misspellings , this is frequently sufficient .", "label": "", "metadata": {}, "score": "55.74032"}
{"text": "Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .[ PDF ] .Kiraz , G.A. ( 2000 ) \" Multi - tiered nonlinear morphology using multitape finite automata : A case study on Syraic and Arabic . \"", "label": "", "metadata": {}, "score": "55.77542"}
{"text": "Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .[ PDF ] .Kiraz , G.A. ( 2000 ) \" Multi - tiered nonlinear morphology using multitape finite automata : A case study on Syraic and Arabic . \"", "label": "", "metadata": {}, "score": "55.77542"}
{"text": "COLING'96 tutorial slides .[ PDF ] .Myers , E.W. and Miller , W. ( 1989 ) \" Approximate Matching of Regular Expressions .\" Bulletin of Mathematical Biology , 51 , 5 - 37 .[ PDF ] .Nederhof , M.-J. ( 1996 ) \" Introduction to Finite - State Techniques . \"", "label": "", "metadata": {}, "score": "55.961136"}
{"text": "COLING'96 tutorial slides .[ PDF ] .Myers , E.W. and Miller , W. ( 1989 ) \" Approximate Matching of Regular Expressions .\" Bulletin of Mathematical Biology , 51 , 5 - 37 .[ PDF ] .Nederhof , M.-J. ( 1996 ) \" Introduction to Finite - State Techniques . \"", "label": "", "metadata": {}, "score": "55.961136"}
{"text": "This makes language model pruning m .. by Isabel Trancoso , Senior Member - PhD Thesis , Universit de Rennes 1 , IRISA , 1996 . \" ...Abstract - This paper presents an algorithm for the composition of weighted finite - state transducers which is specially tailored to speech recognition applications : it composes the lexicon with the language model while simultaneously optimizing the resulting transducer .", "label": "", "metadata": {}, "score": "56.145844"}
{"text": "Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .The more familiar finite - state acceptor is represented as a transducer with each transition 's input and output the same .", "label": "", "metadata": {}, "score": "56.200607"}
{"text": "Constructing guesser transducers ( Section 9.5.4 , Beesley and Karttunen ( 2003 ) ) .General strategy : .Add guessed - form \" placeholder \" tag entries to the various root sub - lexicons to create an augmented lexical transducer .", "label": "", "metadata": {}, "score": "56.21028"}
{"text": "Constructing guesser transducers ( Section 9.5.4 , Beesley and Karttunen ( 2003 ) ) .General strategy : .Add guessed - form \" placeholder \" tag entries to the various root sub - lexicons to create an augmented lexical transducer .", "label": "", "metadata": {}, "score": "56.21028"}
{"text": "[ Abbreviated above as HU79 ] .Kaplan , R.M. and Kay , M. ( 1994 ) \" Regular Models of Phonological Rule Systems . \"Computational Linguistics , 20(3 ) , 331 - 378 .[ PDF ] .Kari , L. , Konstantinidis , S. , Perron , S. , Wozniak , G. , and Xu , J. ( 2003 ) \" Finite - state error.edit-systems and difference measures for languages and words .", "label": "", "metadata": {}, "score": "56.582615"}
{"text": "[ Abbreviated above as HU79 ] .Kaplan , R.M. and Kay , M. ( 1994 ) \" Regular Models of Phonological Rule Systems . \"Computational Linguistics , 20(3 ) , 331 - 378 .[ PDF ] .Kari , L. , Konstantinidis , S. , Perron , S. , Wozniak , G. , and Xu , J. ( 2003 ) \" Finite - state error.edit-systems and difference measures for languages and words .", "label": "", "metadata": {}, "score": "56.582615"}
{"text": "Finite - State Applications ( Cont'd ) .Spelling Checking and Correction ( Cont'd ) .Spelling correction ( Cont'd ) .Sample algorithms : .Oflazer ( 1996 ) [ error distance / arbitrary threshold / exhaustive ] .Depth - first search on lexical transducer , with pruning relative to cut - off error distance .", "label": "", "metadata": {}, "score": "56.5957"}
{"text": "Finite - State Applications ( Cont'd ) .Spelling Checking and Correction ( Cont'd ) .Spelling correction ( Cont'd ) .Sample algorithms : .Oflazer ( 1996 ) [ error distance / arbitrary threshold / exhaustive ] .Depth - first search on lexical transducer , with pruning relative to cut - off error distance .", "label": "", "metadata": {}, "score": "56.5957"}
{"text": "[ PDF ] .Roche , E. and Schabes , Y. ( eds . )( 1997 )Finite - State Natural Language Processing .The MIT Press ; Cambridge , MA .Rojc .M. and Kacic , Z. ( 2003 ) \" Efficient Development of Lexical Language Resources and their Representations . \"", "label": "", "metadata": {}, "score": "56.67592"}
{"text": "[ PDF ] .Roche , E. and Schabes , Y. ( eds . )( 1997 )Finite - State Natural Language Processing .The MIT Press ; Cambridge , MA .Rojc .M. and Kacic , Z. ( 2003 ) \" Efficient Development of Lexical Language Resources and their Representations . \"", "label": "", "metadata": {}, "score": "56.67592"}
{"text": "It is an open source project distributed under the Apache license .probabilistic model ( e.g. , an n - gram model , pronunciation model ) .FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded . by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "56.731667"}
{"text": "[ PDF ] .Hazen , T.J. , Hetherington , I.L. , Shu , H. , and Livesci , K. ( 2002 ) \" Pronunciation Modeling using a Finite - State Transducer Representation .\"In Proceedings of the ICSA Tutorial and Workshop on Pronunciation Modeling and Lexicon Adaptation .", "label": "", "metadata": {}, "score": "56.74716"}
{"text": "[ PDF ] .Hazen , T.J. , Hetherington , I.L. , Shu , H. , and Livesci , K. ( 2002 ) \" Pronunciation Modeling using a Finite - State Transducer Representation .\"In Proceedings of the ICSA Tutorial and Workshop on Pronunciation Modeling and Lexicon Adaptation .", "label": "", "metadata": {}, "score": "56.74716"}
{"text": "That being said , one should always keep in mind the computational time and space costs associated with certain finite - state operations ( nondeterminism , intersection , composition ) and thus try to strike a balance between ease of linguistic phenomena expression and implementation efficiency .", "label": "", "metadata": {}, "score": "56.842968"}
{"text": "That being said , one should always keep in mind the computational time and space costs associated with certain finite - state operations ( nondeterminism , intersection , composition ) and thus try to strike a balance between ease of linguistic phenomena expression and implementation efficiency .", "label": "", "metadata": {}, "score": "56.842968"}
{"text": "In CIAA 2001 .Lecture Notes in Computer Science no .2494 .Springer - Verlag ; Berlin .[ PDF ] .Hakkani - Tur , D.Z. , Oflazer , K. , and Tur , G. ( 2002 ) \" Statistical Morphological Disambiguation for Agglutinative Languages . \"", "label": "", "metadata": {}, "score": "56.890728"}
{"text": "In CIAA 2001 .Lecture Notes in Computer Science no .2494 .Springer - Verlag ; Berlin .[ PDF ] .Hakkani - Tur , D.Z. , Oflazer , K. , and Tur , G. ( 2002 ) \" Statistical Morphological Disambiguation for Agglutinative Languages . \"", "label": "", "metadata": {}, "score": "56.890728"}
{"text": "Consists of a number of programs ( xFST , lexc , lookup , tokenize , twolc ) -- focus on xFST interface .xFST is a command - line interface ; FSM ( both FSA and FST ) are specified as ( extended ) regular expressions ; can be easily manipulated or interrogated using standard FS operations ; has import / export capabilities ; all created FSM are automatically determinized and minimized .", "label": "", "metadata": {}, "score": "56.910255"}
{"text": "Consists of a number of programs ( xFST , lexc , lookup , tokenize , twolc ) -- focus on xFST interface .xFST is a command - line interface ; FSM ( both FSA and FST ) are specified as ( extended ) regular expressions ; can be easily manipulated or interrogated using standard FS operations ; has import / export capabilities ; all created FSM are automatically determinized and minimized .", "label": "", "metadata": {}, "score": "56.910255"}
{"text": "Weighted finite - state transducers are automata where each transition has an input label , an output label , and a weight .The more familiar .Line : 12 to 14 . binary relations between pairs of strings ( specifically , rational transductions ) .", "label": "", "metadata": {}, "score": "57.025482"}
{"text": "The acoustic pruning is refined by a unigram language model look - ahead [ 11].In the time conditioned search , the language model pruning is modified so that only the most likely word end hypotheses a .. \" ...", "label": "", "metadata": {}, "score": "57.036495"}
{"text": "52 .CSLI Publications , Stanford , CA .103 - 143 .Brill , E. ( 1995 ) \" Transformation - Based Error - Driven Learning and Natural Language Processing : A Case Study in Part - of - Speech Tagging . \"", "label": "", "metadata": {}, "score": "57.063725"}
{"text": "52 .CSLI Publications , Stanford , CA .103 - 143 .Brill , E. ( 1995 ) \" Transformation - Based Error - Driven Learning and Natural Language Processing : A Case Study in Part - of - Speech Tagging . \"", "label": "", "metadata": {}, "score": "57.063725"}
{"text": "Moreover , even perfect POS tagging may not help , as up to 30 % of actual sentences with different parses have identical POS tag - sequences ( Dalrymple ( 2006 ) ) .Additional problems may arise when treating agglutinative languages , in which lexical tags are complex and require very large training sets to produce non - empty distributions of cases ( see Hakkani - Tur , Oflazer , and Tur ( 2002 ) and Oflazer ( 2003 ) and references ) .", "label": "", "metadata": {}, "score": "57.098938"}
{"text": "Moreover , even perfect POS tagging may not help , as up to 30 % of actual sentences with different parses have identical POS tag - sequences ( Dalrymple ( 2006 ) ) .Additional problems may arise when treating agglutinative languages , in which lexical tags are complex and require very large training sets to produce non - empty distributions of cases ( see Hakkani - Tur , Oflazer , and Tur ( 2002 ) and Oflazer ( 2003 ) and references ) .", "label": "", "metadata": {}, "score": "57.098938"}
{"text": "Int .Conf . on Spoken Language Processing , 1996 . \" ...In this paper , we compare the search effort of the word conditioned and the time conditioned tree search methods .Both methods are based on a time - synchronous , left - to - right beam search using a treeorganized lexicon .", "label": "", "metadata": {}, "score": "57.183357"}
{"text": "FSTs can be optimized by determinization and minimization , models can be applied to hypothesis sets ( also represented as automata ) or cascaded .Changed : . by finite - state composition , and the best results can be selected by shortest - path algorithms . by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "57.42811"}
{"text": "Ritchie , G.D. , Russell , G.J. , Black , A.W. , and Pullman , S.G. ( 1991 ) Computational Morphology : Practical Mechanisms for the English Lexicon .The MIT Press ; Cambridge , MA .Roche , E. and Schabes , Y. ( 1995 ) \" Deterministic Part - of - Speech Tagging with Finite - State Transducers . \"", "label": "", "metadata": {}, "score": "57.585503"}
{"text": "Ritchie , G.D. , Russell , G.J. , Black , A.W. , and Pullman , S.G. ( 1991 ) Computational Morphology : Practical Mechanisms for the English Lexicon .The MIT Press ; Cambridge , MA .Roche , E. and Schabes , Y. ( 1995 ) \" Deterministic Part - of - Speech Tagging with Finite - State Transducers . \"", "label": "", "metadata": {}, "score": "57.585503"}
{"text": "[ PDF ] .Kornai , A. ( ed . )( 1999 ) Extended Finite - State Models of Language .Cambridge University Press .Kruskal , J.B. ( 1984 ) \" An Overview of Sequence Comparison . \" In D. Sankoff and J.B. Kruskal ( eds . )", "label": "", "metadata": {}, "score": "57.663494"}
{"text": "[ PDF ] .Kornai , A. ( ed . )( 1999 ) Extended Finite - State Models of Language .Cambridge University Press .Kruskal , J.B. ( 1984 ) \" An Overview of Sequence Comparison . \" In D. Sankoff and J.B. Kruskal ( eds . )", "label": "", "metadata": {}, "score": "57.663494"}
{"text": "In this paper , we compare the search effort of the word conditioned and the time conditioned tree search methods .Both methods are based on a time - synchronous , left - to - right beam search using a treeorganized lexicon .", "label": "", "metadata": {}, "score": "57.777092"}
{"text": "It is an open source project distributed under the Apache license .finite - state transducers are automata where each transition has an input label , an output label , and a weight .The more familiar finite - state acceptor is represented as a transducer with each .", "label": "", "metadata": {}, "score": "58.02558"}
{"text": "Depth - first search in lexical transducer with dynamic pruning .Exploit topological structure of lexical transducer to limit depth / type of both lookahead and backtracking on detecting error .Same asymptotic worst - case performance as Savary ( 2002 ) , but much better performance in practice .", "label": "", "metadata": {}, "score": "58.13345"}
{"text": "Depth - first search in lexical transducer with dynamic pruning .Exploit topological structure of lexical transducer to limit depth / type of both lookahead and backtracking on detecting error .Same asymptotic worst - case performance as Savary ( 2002 ) , but much better performance in practice .", "label": "", "metadata": {}, "score": "58.13345"}
{"text": "Examples of such requirements are the lexical tree organization of the pronunciation lexicon and the generation of a word graph instead of the single best sentence .In this paper , we attempt to systematically review the use of dynamic programming search strategies for small - vocabulary and large - vocabulary continuous speech recognition .", "label": "", "metadata": {}, "score": "58.4012"}
{"text": "Janua Lingguarum nr .Mouton & Co. .Daciuk , J. ( 2002 ) \" Comparison of Construction Algorithms for Minimal Acyclic , Deterministic , Finite - State Automata from Sets of Strings . \"In CIAA 2002 .Lecture Notes in Computer Science no . 2608 .", "label": "", "metadata": {}, "score": "58.4039"}
{"text": "Janua Lingguarum nr .Mouton & Co. .Daciuk , J. ( 2002 ) \" Comparison of Construction Algorithms for Minimal Acyclic , Deterministic , Finite - State Automata from Sets of Strings . \"In CIAA 2002 .Lecture Notes in Computer Science no . 2608 .", "label": "", "metadata": {}, "score": "58.4039"}
{"text": "Linguistic system environments , e.g. , multilingual text - to - speech development systems ( Rojc and Kacic ( 2003 ) ) .Increasing ease of use ( ascending ) ; increasing flexibility / efficiency(descending ) .When starting a FS project , be honest about development personnel needs and abilities and select the appropriate level .", "label": "", "metadata": {}, "score": "58.543087"}
{"text": "Linguistic system environments , e.g. , multilingual text - to - speech development systems ( Rojc and Kacic ( 2003 ) ) .Increasing ease of use ( ascending ) ; increasing flexibility / efficiency(descending ) .When starting a FS project , be honest about development personnel needs and abilities and select the appropriate level .", "label": "", "metadata": {}, "score": "58.543087"}
{"text": "Implementation details and experimental results are given for the VerbMobil task , a German spontaneous speech corpus .The 25.0 % word error rate ( WER ) of our within - word baseline system was reduced to 21.4 % with VTN and across - word models .", "label": "", "metadata": {}, "score": "59.026283"}
{"text": "[ PostScript / PDF ] .Nederhof , M.-J. ( 2000 ) \" Practical Experiments with Regular Approximation of Context - Free Languages . \"Computational Linguistics , 26(1 ) , 17 - 44 .[ PDF ] .Oflazer , K. ( 1996 ) \" Error - Tolerant Finite - State Recognition with Applications to Morphological Analysis and Spelling Correction . \"", "label": "", "metadata": {}, "score": "59.03598"}
{"text": "[ PostScript / PDF ] .Nederhof , M.-J. ( 2000 ) \" Practical Experiments with Regular Approximation of Context - Free Languages . \"Computational Linguistics , 26(1 ) , 17 - 44 .[ PDF ] .Oflazer , K. ( 1996 ) \" Error - Tolerant Finite - State Recognition with Applications to Morphological Analysis and Spelling Correction . \"", "label": "", "metadata": {}, "score": "59.03598"}
{"text": "References .Abney , S. ( 1996 ) \" Part - of - Speech Tagging and Partial Parsing . \"In Church , K. , Young , S. , and Bloothooft , G. ( eds . )Corpus - Based Methods in Language and Speech .", "label": "", "metadata": {}, "score": "59.044937"}
{"text": "References .Abney , S. ( 1996 ) \" Part - of - Speech Tagging and Partial Parsing . \"In Church , K. , Young , S. , and Bloothooft , G. ( eds . )Corpus - Based Methods in Language and Speech .", "label": "", "metadata": {}, "score": "59.044937"}
{"text": "We also study incremental methods to reduce the response time of the online speech recognizer .Finally , we present experimental off - line results for the three VERBMOBIL scenarios .We report on word error rates and real - time factors for both speaker independent and speaker dependent recognition . ... factor was 15 - -25 % .", "label": "", "metadata": {}, "score": "59.347797"}
{"text": "Syntax overview : transducer definitions + transducer application strategy .Does not actually perform compositions but simulates them at run - time ; runs slower but can save dramatic amounts of memory .Tuesday , March 21 ( Lecture # 12 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "59.748726"}
{"text": "Syntax overview : transducer definitions + transducer application strategy .Does not actually perform compositions but simulates them at run - time ; runs slower but can save dramatic amounts of memory .Tuesday , March 21 ( Lecture # 12 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "59.748726"}
{"text": "Storing basic forms .Three options .List .Deterministic acyclic finite automaton ( DAFA ) .Create trie by compacting list ; create DAFA by compacting / minimizing trie .Solution : incremental algorithms ( on sorted / unsorted word - lists ) which simultaneously create and minimize DAFA as they add words one at a time !", "label": "", "metadata": {}, "score": "59.79264"}
{"text": "Storing basic forms .Three options .List .Deterministic acyclic finite automaton ( DAFA ) .Create trie by compacting list ; create DAFA by compacting / minimizing trie .Solution : incremental algorithms ( on sorted / unsorted word - lists ) which simultaneously create and minimize DAFA as they add words one at a time !", "label": "", "metadata": {}, "score": "59.79264"}
{"text": "Parallel depth - first search on lexical transducer and universal Levenshtein automaton .Savary ( 2002 ) [ error distance / arbitrary threshold / nearest neighbor ] .Depth - first search in lexical transducer with dynamic pruning .Keep track of minimum error distance with counter ; avoids dynamic - programming calculation of error distance .", "label": "", "metadata": {}, "score": "59.96876"}
{"text": "Parallel depth - first search on lexical transducer and universal Levenshtein automaton .Savary ( 2002 ) [ error distance / arbitrary threshold / nearest neighbor ] .Depth - first search in lexical transducer with dynamic pruning .Keep track of minimum error distance with counter ; avoids dynamic - programming calculation of error distance .", "label": "", "metadata": {}, "score": "59.96876"}
{"text": "In 34rd Annual Meeting of the .Association for Computational Linguistics , Morristown , NJ .Association . for Computational Linguistics .( Soon to be available from CMP - LG ) .Richard Sproat . 1996b .Multilingual text analysis for text - to - speech . synthesis .", "label": "", "metadata": {}, "score": "60.2936"}
{"text": "We combine our earlier approach to context - dependent network representation with our algorithm for determinizing weighted networks to build optimized networks for large - vocabulary speech recognition combining an n - gram language model , a pronunciation dictionary and context - dependency modeling .", "label": "", "metadata": {}, "score": "60.3127"}
{"text": "We combine our earlier approach to context - dependent network representation with our algorithm for determinizing weighted networks to build optimized networks for large - vocabulary speech recognition combining an n - gram language model , a pronunciation dictionary and context - dependency modeling .", "label": "", "metadata": {}, "score": "60.3127"}
{"text": "Each of these tasks has finite - state implementations ; we will examine each of them in the remainder of this course , starting with the most basic , the construction and manipulation of lexicons .Building Robust and Efficient Lexicons .", "label": "", "metadata": {}, "score": "60.5007"}
{"text": "Each of these tasks has finite - state implementations ; we will examine each of them in the remainder of this course , starting with the most basic , the construction and manipulation of lexicons .Building Robust and Efficient Lexicons .", "label": "", "metadata": {}, "score": "60.5007"}
{"text": "[ PDF ] .Karttunen , L. ( 1998 ) \" The Proper Treatment of Optimality Theory in Computational Phonology .\" Technical Report ROA-258 - 0498 , Rutgers Optimality Archive .[ PDF ] .Karttunen , L. ( 2000 ) \" Applications of Finite - State Transducers in Natural Language Processing . \"", "label": "", "metadata": {}, "score": "60.50822"}
{"text": "[ PDF ] .Karttunen , L. ( 1998 ) \" The Proper Treatment of Optimality Theory in Computational Phonology .\" Technical Report ROA-258 - 0498 , Rutgers Optimality Archive .[ PDF ] .Karttunen , L. ( 2000 ) \" Applications of Finite - State Transducers in Natural Language Processing . \"", "label": "", "metadata": {}, "score": "60.50822"}
{"text": "This work has been partially supported by Google Inc. .This library was developed by C. Allauzen and M. Mohri .It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "60.739975"}
{"text": "6 .Noncoacces ... . by Achim Sixtus , Sirko Molau , Stephan Kanthak , Ralf Schl\u00fcter , Hermann Ney - Proc .IEEE Int .Conf . on Acoustics , Speech and Signal Processing , 2000 . \" ...This paper presents recent improvements of the RWTH large vocabulary continuous speech recognition system ( LVCSR ) .", "label": "", "metadata": {}, "score": "60.74327"}
{"text": "Fifth option possible relative to subsequential transducers ( Mohri ( 1996 ) ; Mihov and Maurel ( 2000 ) ) .( Mohri ( 1996 ) ) .Subsequent proposal adapts incremental DAFA creation algorithms to directly create minimized FST without intermediate FST memory overhead ( Mihov and Maurel ( 2000 ) ) .", "label": "", "metadata": {}, "score": "60.846603"}
{"text": "Fifth option possible relative to subsequential transducers ( Mohri ( 1996 ) ; Mihov and Maurel ( 2000 ) ) .( Mohri ( 1996 ) ) .Subsequent proposal adapts incremental DAFA creation algorithms to directly create minimized FST without intermediate FST memory overhead ( Mihov and Maurel ( 2000 ) ) .", "label": "", "metadata": {}, "score": "60.846603"}
{"text": "Lecture Notes in Computer Science no .3406 .Springer - Verlag ; Berlin .[ PDF ] .Vilares , M. , Otero , J. , and Vilares , J. ( 2006 ) \" Robust Spelling Correction . \"In CIAA 2005 .", "label": "", "metadata": {}, "score": "60.892235"}
{"text": "Lecture Notes in Computer Science no .3406 .Springer - Verlag ; Berlin .[ PDF ] .Vilares , M. , Otero , J. , and Vilares , J. ( 2006 ) \" Robust Spelling Correction . \"In CIAA 2005 .", "label": "", "metadata": {}, "score": "60.892235"}
{"text": "We will look at various finite - state mechanisms for NLP tasks .Focus first on recognition and generation problems ; these problems can be implemented by finite - state acceptors .Later on , when we talk about transformation problems , we will look at transformation problems , which are implemented by finite - state transducers .", "label": "", "metadata": {}, "score": "60.89277"}
{"text": "Intersection ( Kaplan and Kay ( 1994 ) , Section 3.3 ) .Algorithm overview ( state cross - product ; almost identical to classical FSA intersection alg except uses transition symbol - pair rather than transition symbol label identity ) .", "label": "", "metadata": {}, "score": "60.984413"}
{"text": "Intersection ( Kaplan and Kay ( 1994 ) , Section 3.3 ) .Algorithm overview ( state cross - product ; almost identical to classical FSA intersection alg except uses transition symbol - pair rather than transition symbol label identity ) .", "label": "", "metadata": {}, "score": "60.984413"}
{"text": "g a greatly pruned version of the ngram and then applying the \" rest \" of the n - gram on the fly during recognition .The use of the FST framework avoided having to use special - purpose search code .", "label": "", "metadata": {}, "score": "61.199455"}
{"text": "We will fo ... \" .This paper presents recent improvements of the RWTH large vocabulary continuous speech recognition system ( LVCSR ) .In particular , we will report on the integration of across - word models into the rst recognition pass , and describe better algorithms for fast vocal tract normalization ( VTN ) .", "label": "", "metadata": {}, "score": "61.51445"}
{"text": "We illustrate their use in several applications , and report the results of our experiments .Key words ... . by Stephan Kanthak , Achim Sixtus , Sirko Molau , Ralf Schl\u00fcter , Hermann Ney - in Verbmobil : Foundations of Speech - to - Speech Translation , W. Wahlster , Ed , 2000 . \" ... Abstract .", "label": "", "metadata": {}, "score": "61.687202"}
{"text": "This work has been partially supported by Google Inc. .New version coming soon .Will include algorithms for learning kernels and kernel ridge regression .OpenKernel is a library for creating , combining and using kernels for machine learning applications .", "label": "", "metadata": {}, "score": "61.826294"}
{"text": "In a third example , we show how general automata operations can be used to assemble lattices from different recognizers to improve recognition performance . \" ...Initially introduced in the late 1960s and early 1970s , dynamic programming algorithms have become increasingly popular in automatic speech recognition .", "label": "", "metadata": {}, "score": "61.849007"}
{"text": "Tuesday , April 4 .Thursday , April 6 .Student Presentations # 2 .Gerdemann , D. and van Noord , G. ( 2000 ) \" Approximation and Exactness in Finite State Optimality Theory . \"In SIGPHON 2000 .[", "label": "", "metadata": {}, "score": "61.900124"}
{"text": "Tuesday , April 4 .Thursday , April 6 .Student Presentations # 2 .Gerdemann , D. and van Noord , G. ( 2000 ) \" Approximation and Exactness in Finite State Optimality Theory . \"In SIGPHON 2000 .[", "label": "", "metadata": {}, "score": "61.900124"}
{"text": "Initially introduced in the late 1960s and early 1970s , dynamic programming algorithms have become increasingly popular in automatic speech recognition .There are two reasons why this has occurred : First , the dynamic programming strategy can be combined with avery efficient and practical pruning strategy so that very large search spaces can be handled .", "label": "", "metadata": {}, "score": "62.000797"}
{"text": "Such a process underlies efficient \" transparent \" transformational syntax parsing systems ( Berwick and Fong ( 1995 ) ) .Thursday , March 16 ( Lecture # 11 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "62.08885"}
{"text": "Such a process underlies efficient \" transparent \" transformational syntax parsing systems ( Berwick and Fong ( 1995 ) ) .Thursday , March 16 ( Lecture # 11 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "62.08885"}
{"text": "[ PDF ] .Beesley , K.R. and and Karttunen , L. ( 2003 ) Finite - State Morphology .CSLI Publications ; Stanford , CA .Berwick , R.C. and Fong , S. ( 1995 ) \" A quarter century of computation with transformational grammar . \" In J. Cole , G M. Green , and J.L. Morgan , eds . , Linguistics and Computation .", "label": "", "metadata": {}, "score": "62.11761"}
{"text": "[ PDF ] .Beesley , K.R. and and Karttunen , L. ( 2003 ) Finite - State Morphology .CSLI Publications ; Stanford , CA .Berwick , R.C. and Fong , S. ( 1995 ) \" A quarter century of computation with transformational grammar . \" In J. Cole , G M. Green , and J.L. Morgan , eds . , Linguistics and Computation .", "label": "", "metadata": {}, "score": "62.11761"}
{"text": "Storing complex forms + associated information .If using finite - state scheme to handle complex forms , can adapt options ( 3)-(5 ) for simple forms + associated information .Option ( 5 ) ( transducer - based ) perhaps most natural , and is that encoded in xFST ; however , restricts associated info to tags encoded in lexical forms .", "label": "", "metadata": {}, "score": "62.867058"}
{"text": "Storing complex forms + associated information .If using finite - state scheme to handle complex forms , can adapt options ( 3)-(5 ) for simple forms + associated information .Option ( 5 ) ( transducer - based ) perhaps most natural , and is that encoded in xFST ; however , restricts associated info to tags encoded in lexical forms .", "label": "", "metadata": {}, "score": "62.867058"}
{"text": "Incremental algorithms are not quite the fastest known algs but they are close ; moreover , given their minimal memory requirements , are the most practical .( Daciuk ( 2002 ) ) .Storing basic forms + associated information .Five options .", "label": "", "metadata": {}, "score": "62.878777"}
{"text": "Incremental algorithms are not quite the fastest known algs but they are close ; moreover , given their minimal memory requirements , are the most practical .( Daciuk ( 2002 ) ) .Storing basic forms + associated information .Five options .", "label": "", "metadata": {}, "score": "62.878777"}
{"text": "Lexical Analysis ( Sections 9.3 and 9.5 , Beesley and Karttunen ( 2003 ) ) .Analysis of lexicon - encoded known forms .Run lexical transducer in reverse on surface form to derive associated lexical form .If there are several language - variants , can run surface form against each of the associated lexical transducers until one succeeds .", "label": "", "metadata": {}, "score": "63.204514"}
{"text": "Lexical Analysis ( Sections 9.3 and 9.5 , Beesley and Karttunen ( 2003 ) ) .Analysis of lexicon - encoded known forms .Run lexical transducer in reverse on surface form to derive associated lexical form .If there are several language - variants , can run surface form against each of the associated lexical transducers until one succeeds .", "label": "", "metadata": {}, "score": "63.204514"}
{"text": "Computational Linguistics , 30(4 ) , 451 - 477 .[ PDF ] .Mohri , M. ( 1996 ) \" On some applications of finite - state automata theory to natural language processing . \"Natural Language Engineering , 2(1 ) , 61 - 80 .", "label": "", "metadata": {}, "score": "63.699623"}
{"text": "Computational Linguistics , 30(4 ) , 451 - 477 .[ PDF ] .Mohri , M. ( 1996 ) \" On some applications of finite - state automata theory to natural language processing . \"Natural Language Engineering , 2(1 ) , 61 - 80 .", "label": "", "metadata": {}, "score": "63.699623"}
{"text": "Algorithm overview ( state cross - product ; almost identical to FST intersection alg except uses identity of outer and inner symbols of first and second FST transition symbol - pairs ) .Can create an mn -state composition FST from input m - and n -state FSTs in O(mn ) time and space .", "label": "", "metadata": {}, "score": "63.96212"}
{"text": "Algorithm overview ( state cross - product ; almost identical to FST intersection alg except uses identity of outer and inner symbols of first and second FST transition symbol - pairs ) .Can create an mn -state composition FST from input m - and n -state FSTs in O(mn ) time and space .", "label": "", "metadata": {}, "score": "63.96212"}
{"text": "Suggested principles for FS project operation .Treat FS system development as a software engineering project -- proper specification and design procedures are essential .Make sure the underlying formal linguistic analysis is done before codings starts and this analysis is done well -- no development environment can save an inadequate or badly - done analysis from creating an inadequate , poorly - functioning FS system .", "label": "", "metadata": {}, "score": "64.120445"}
{"text": "Suggested principles for FS project operation .Treat FS system development as a software engineering project -- proper specification and design procedures are essential .Make sure the underlying formal linguistic analysis is done before codings starts and this analysis is done well -- no development environment can save an inadequate or badly - done analysis from creating an inadequate , poorly - functioning FS system .", "label": "", "metadata": {}, "score": "64.120445"}
{"text": "Wareham , H.T. ( 2001 ) \" The Parameterized Complexity of Intersection and Composition Operations on Sets of Finite - State Automata . \"In CIAA 2000 .Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .", "label": "", "metadata": {}, "score": "64.20927"}
{"text": "Wareham , H.T. ( 2001 ) \" The Parameterized Complexity of Intersection and Composition Operations on Sets of Finite - State Automata . \"In CIAA 2000 .Lecture Notes in Computer Science no .2088 .Springer - Verlag ; Berlin .", "label": "", "metadata": {}, "score": "64.20927"}
{"text": "Intersection ( HMU01 , pp .134 - 137 ) .Can create an mn -state intersection DFA from input m - and n -state DFAs in O(mn ) time and space .Beware cascading intersections !Subtraction ( HMU01 , p. 137 ) .", "label": "", "metadata": {}, "score": "64.23724"}
{"text": "Intersection ( HMU01 , pp .134 - 137 ) .Can create an mn -state intersection DFA from input m - and n -state DFAs in O(mn ) time and space .Beware cascading intersections !Subtraction ( HMU01 , p. 137 ) .", "label": "", "metadata": {}, "score": "64.23724"}
{"text": "Thursday , January 19 ( Lecture # 2 ) [ Nederhof ( 1996 ) ; Class Notes ] .Finite - State Acceptors ( Cont'd ) .Finite - State Machines ( Cont'd ) .Also known as finite - state automata ( FSA ) .", "label": "", "metadata": {}, "score": "64.47694"}
{"text": "Thursday , January 19 ( Lecture # 2 ) [ Nederhof ( 1996 ) ; Class Notes ] .Finite - State Acceptors ( Cont'd ) .Finite - State Machines ( Cont'd ) .Also known as finite - state automata ( FSA ) .", "label": "", "metadata": {}, "score": "64.47694"}
{"text": "There are several major difficulties with this approach -- namely , ordering the rewrite rules to take into account even the most elementary multi - error misspellings is difficult , and returned candidates are not ordered in any sensible way , e.g. , by number / probability of errors invoked .", "label": "", "metadata": {}, "score": "64.569115"}
{"text": "There are several major difficulties with this approach -- namely , ordering the rewrite rules to take into account even the most elementary multi - error misspellings is difficult , and returned candidates are not ordered in any sensible way , e.g. , by number / probability of errors invoked .", "label": "", "metadata": {}, "score": "64.569115"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license . by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "64.577324"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license . by finite - state composition , and the best results can be selected by shortest - path algorithms .", "label": "", "metadata": {}, "score": "64.577324"}
{"text": "Partial Parsing : Recover the largest possible sub - forest of the full parse - tree for a given sentence .Grammar Approximation : Derive a finite state grammar that encodes a sub / superset of the language recognized by a higher - level grammar that encodes the highest possible number of sentences that occur in practice .", "label": "", "metadata": {}, "score": "64.71511"}
{"text": "Partial Parsing : Recover the largest possible sub - forest of the full parse - tree for a given sentence .Grammar Approximation : Derive a finite state grammar that encodes a sub / superset of the language recognized by a higher - level grammar that encodes the highest possible number of sentences that occur in practice .", "label": "", "metadata": {}, "score": "64.71511"}
{"text": "so.0 /usr / lib / fst / compact8_unweighted_acceptor - fst . so.0.0.0 /usr / lib / fst / compact8_weighted_string - fst .so.0 /usr / lib / fst / compact8_weighted_string - fst . so.0.0.0 /usr / lib / fst / const16-fst .", "label": "", "metadata": {}, "score": "64.776"}
{"text": "Watson , B.W. ( 1999 ) \" Implementing and using finite automata toolkits . \"In Kornai , A. ( ed . )Directory .VISITING POSITION IN PHONOLOGY The Department of Linguistics at The University of Iowa solicits applications for a one - year visiting position in phonology for the 1996 - 97 academic year .", "label": "", "metadata": {}, "score": "64.823784"}
{"text": "[ PDF ] .Oflazer , K. ( 2003 ) \" Dependency Parsing with an Extended Finite - Stte Approach . \"Computational Linguistics , 29(4 ) , 515 - 544 .[ PDF ] .Oflazer , K. and Inkelas , S. ( 2003 ) \" A Finite State Pronounciation Lexicon for Turkish . \"", "label": "", "metadata": {}, "score": "64.9599"}
{"text": "[ PDF ] .Oflazer , K. ( 2003 ) \" Dependency Parsing with an Extended Finite - Stte Approach . \"Computational Linguistics , 29(4 ) , 515 - 544 .[ PDF ] .Oflazer , K. and Inkelas , S. ( 2003 ) \" A Finite State Pronounciation Lexicon for Turkish . \"", "label": "", "metadata": {}, "score": "64.9599"}
{"text": "Four options : .Code it yourself ( FSM algorithms / data structures from FS literature ) .FSM code libraries , e , g . , Allauzen et al ( 2004 ) , Mohri , Pereira , and Riley ( 2000 ) , Watson ( 1999 ) .", "label": "", "metadata": {}, "score": "64.97905"}
{"text": "Four options : .Code it yourself ( FSM algorithms / data structures from FS literature ) .FSM code libraries , e , g . , Allauzen et al ( 2004 ) , Mohri , Pereira , and Riley ( 2000 ) , Watson ( 1999 ) .", "label": "", "metadata": {}, "score": "64.97905"}
{"text": "[ PDF ] .Savary , A. ( 2002 ) \" Typographical Nearest - Neighbor Search in a Finite - State Lexicon and Its Application to Spelling Correction . \"In CIAA 2002 .Lecture Notes in Computer Science no .2494 .", "label": "", "metadata": {}, "score": "65.203476"}
{"text": "[ PDF ] .Savary , A. ( 2002 ) \" Typographical Nearest - Neighbor Search in a Finite - State Lexicon and Its Application to Spelling Correction . \"In CIAA 2002 .Lecture Notes in Computer Science no .2494 .", "label": "", "metadata": {}, "score": "65.203476"}
{"text": "so.0 /usr / lib64/fst / compact8_unweighted_acceptor - fst . so.0.0.0 /usr / lib64/fst / compact8_weighted_string - fst .so.0 /usr / lib64/fst / compact8_weighted_string - fst . so.0.0.0 /usr / lib64/fst / const16-fst .", "label": "", "metadata": {}, "score": "65.38927"}
{"text": "It is an open source project distributed under the Apache license .This library was developed by C. Allauzen and M. Mohri .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "65.45523"}
{"text": "Tuesday , March 28 ( Lecture # 14 ) [ Class Notes ] .Finite - State Applications ( Cont'd ) .Since Chomsky 's proof that finite - state grammars were inadequate for certain sentence - level syntactic phenomena , i.e. , recursive embedding ( see Chapter 3 , Chomsky ( 1962 ) and references ) , syntax parsing has focused primarily on higher - level grammar formalisms .", "label": "", "metadata": {}, "score": "65.5284"}
{"text": "Tuesday , March 28 ( Lecture # 14 ) [ Class Notes ] .Finite - State Applications ( Cont'd ) .Since Chomsky 's proof that finite - state grammars were inadequate for certain sentence - level syntactic phenomena , i.e. , recursive embedding ( see Chapter 3 , Chomsky ( 1962 ) and references ) , syntax parsing has focused primarily on higher - level grammar formalisms .", "label": "", "metadata": {}, "score": "65.5284"}
{"text": "This work has been partially supported by Google Inc. .New version coming soon .Will include algorithms for learning kernels and kernel ridge regression .New version coming soon .Will include algorithms for learning kernels and kernel ridge regression .", "label": "", "metadata": {}, "score": "65.76426"}
{"text": "Watson , B.W. ( 1999 ) \" Implementing and using finite automata toolkits . \"In Kornai , A. ( ed . )Tuesday , January 17 ( Lecture # 1 ) [ Nederhof ( 1996 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "65.87981"}
{"text": "[ PDF ] .Wagner , R.A. ( 1974 ) \" Order- n Correction for Regular Languages .\" Communication of the ACM , 17(5 ) , 265 - 268 .[ PDF ] .Wareham , H.T. ( 1999 ) Systematic Parameterized Complexity Analysis in Computational Phonology .", "label": "", "metadata": {}, "score": "66.04326"}
{"text": "[ PDF ] .Wagner , R.A. ( 1974 ) \" Order- n Correction for Regular Languages .\" Communication of the ACM , 17(5 ) , 265 - 268 .[ PDF ] .Wareham , H.T. ( 1999 ) Systematic Parameterized Complexity Analysis in Computational Phonology .", "label": "", "metadata": {}, "score": "66.04326"}
{"text": "Addison - Wesley ; Reading , MA .Lucchesi , C.L. and Kowaltowski , T. ( 1993 ) \" Applications of finite automata representing large vocabularies .\" Software - Practice and Experience , 23(1 ) , 15 - 20 .[", "label": "", "metadata": {}, "score": "66.41132"}
{"text": "Addison - Wesley ; Reading , MA .Lucchesi , C.L. and Kowaltowski , T. ( 1993 ) \" Applications of finite automata representing large vocabularies .\" Software - Practice and Experience , 23(1 ) , 15 - 20 .[", "label": "", "metadata": {}, "score": "66.41132"}
{"text": "Finite - State Transducers .Transducers operate on relations .A relation exists between the strings of a pair of languages ; in this course , we will be interested in rational relations , in which the two languages are both regular .", "label": "", "metadata": {}, "score": "66.42688"}
{"text": "Finite - State Transducers .Transducers operate on relations .A relation exists between the strings of a pair of languages ; in this course , we will be interested in rational relations , in which the two languages are both regular .", "label": "", "metadata": {}, "score": "66.42688"}
{"text": "Morphotactic models : .Finite - state ( continuation classes ) .Rule - based .Can have continuation - class loops .lexc strategies for irregular forms ( Beesley and Karttunen ( 2003 ) , Section 5.4 ) .Priority union .", "label": "", "metadata": {}, "score": "66.491554"}
{"text": "Morphotactic models : .Finite - state ( continuation classes ) .Rule - based .Can have continuation - class loops .lexc strategies for irregular forms ( Beesley and Karttunen ( 2003 ) , Section 5.4 ) .Priority union .", "label": "", "metadata": {}, "score": "66.491554"}
{"text": "Originated in mathematics community .Algebra over strings with three operations : concatenation , union , and Kleene star .The languages that are accepted by regular expressions are the regular languages .Finite - State Machines .Originated in the Engineering community ; inspired by the discrete finite neuron model proposed by McCoullough and Pitts in 1943 .", "label": "", "metadata": {}, "score": "66.56889"}
{"text": "Originated in mathematics community .Algebra over strings with three operations : concatenation , union , and Kleene star .The languages that are accepted by regular expressions are the regular languages .Finite - State Machines .Originated in the Engineering community ; inspired by the discrete finite neuron model proposed by McCoullough and Pitts in 1943 .", "label": "", "metadata": {}, "score": "66.56889"}
{"text": "Tzoukermann , E. and Radev , D.R. ( 1999 ) \" Use of Weighted Finite State Transducers in Part of Speech Tagging . \"In Kornai , A. ( ed . )[ PDF ] .Vilares , M. , Otero , J. , Barcala , F.M. , and Dominguez , J. ( 2004 ) \" Automatic Spelling Correction in Galician .", "label": "", "metadata": {}, "score": "66.60133"}
{"text": "Tzoukermann , E. and Radev , D.R. ( 1999 ) \" Use of Weighted Finite State Transducers in Part of Speech Tagging . \"In Kornai , A. ( ed . )[ PDF ] .Vilares , M. , Otero , J. , Barcala , F.M. , and Dominguez , J. ( 2004 ) \" Automatic Spelling Correction in Galician .", "label": "", "metadata": {}, "score": "66.60133"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78686"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78686"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78686"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78686"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78686"}
{"text": "Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .The weights can be used to represent the cost of taking a particular transition .", "label": "", "metadata": {}, "score": "66.78689"}
{"text": "OpenKernel is a library for creating , combining and using kernels for machine learning applications .The current focus of library is on rational kernels .It is based on the OpenFst library .Changed : .This library was developed by C. Allauzen and M. Mohri .", "label": "", "metadata": {}, "score": "67.01178"}
{"text": "Again , beware cascading intersections !There is strong evidence that there is no efficient algorithm for this problem ( Same - length FST Intersection is NP - hard ( Barton , Berwick and Ristad ( 1987 ) , Chapter 5 ; Wareham ( 1999 ) , Section 4.4.2 ; Wareham ( 2002 ) , Theorem 10 ) .", "label": "", "metadata": {}, "score": "67.15854"}
{"text": "Again , beware cascading intersections !There is strong evidence that there is no efficient algorithm for this problem ( Same - length FST Intersection is NP - hard ( Barton , Berwick and Ristad ( 1987 ) , Chapter 5 ; Wareham ( 1999 ) , Section 4.4.2 ; Wareham ( 2002 ) , Theorem 10 ) .", "label": "", "metadata": {}, "score": "67.15854"}
{"text": "Creates DFA from n -state NFA in O(n^32^n ) time and O(2^n ) space ( the latter can add up ) .DFA produced by this algorithm can be very exponentially larger ( in terms of # states ) than the input NFA ( HMU01 , Section 2.3.6 ) .", "label": "", "metadata": {}, "score": "67.31464"}
{"text": "Creates DFA from n -state NFA in O(n^32^n ) time and O(2^n ) space ( the latter can add up ) .DFA produced by this algorithm can be very exponentially larger ( in terms of # states ) than the input NFA ( HMU01 , Section 2.3.6 ) .", "label": "", "metadata": {}, "score": "67.31464"}
{"text": "In particular , we present acceleration methods for the search based on both within - word and across - word phoneme models .We also study incremental methods to reduce the res ... \" .Abstract .In this article we describe methods for improving the RWTH German speech recognizer used within the VERBMOBIL project .", "label": "", "metadata": {}, "score": "67.39022"}
{"text": "Operation : recognition / generation pretty standard , but not obvious how one does reconstruction .Finite - State Machines ( FST proper ) .Overview .Operation : recognition / generation of string - pairs ; reconstruction of output ( input ) string associated with given input ( output ) string .", "label": "", "metadata": {}, "score": "67.57457"}
{"text": "Operation : recognition / generation pretty standard , but not obvious how one does reconstruction .Finite - State Machines ( FST proper ) .Overview .Operation : recognition / generation of string - pairs ; reconstruction of output ( input ) string associated with given input ( output ) string .", "label": "", "metadata": {}, "score": "67.57457"}
{"text": "[ PDF ] .Sproat , R.M. ( 1992 ) Morphology and Computation .The MIT Press ; Cambridge , MA .Sproat , R. ( 1996 ) \" Multilingual Text Analysis for Text - to - Speech Synthesis . \"In ECAI'96 .", "label": "", "metadata": {}, "score": "67.62326"}
{"text": "[ PDF ] .Sproat , R.M. ( 1992 ) Morphology and Computation .The MIT Press ; Cambridge , MA .Sproat , R. ( 1996 ) \" Multilingual Text Analysis for Text - to - Speech Synthesis . \"In ECAI'96 .", "label": "", "metadata": {}, "score": "67.62326"}
{"text": "It is an open source project distributed under the Apache license .This work has been partially supported by Google Inc. .New version available now , includes algorithms for learning kernels and kernel ridge regression .This library is being developed by C. Allauzen , M. Mohri and A. Rostamizadeh .", "label": "", "metadata": {}, "score": "68.15405"}
{"text": "We extend both methods to handle trigram language models in a one -- pass strategy .Both methods were tested on a train schedule inquiry task ( 1 850 words , telephone speech ) and on the North American Business ( Nov.'94 ) development corpus ( 20 000 words ) . .", "label": "", "metadata": {}, "score": "69.2928"}
{"text": "This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "69.32687"}
{"text": "This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "69.32687"}
{"text": "Note that the alphabets of the two languages need not be the same , or even have a non - empty intersection .Relation operations .Composition .There are several types of finite - state relations , which differ in string - pair structure .", "label": "", "metadata": {}, "score": "69.33901"}
{"text": "Note that the alphabets of the two languages need not be the same , or even have a non - empty intersection .Relation operations .Composition .There are several types of finite - state relations , which differ in string - pair structure .", "label": "", "metadata": {}, "score": "69.33901"}
{"text": "NLP system : Lexicon + lexical / surface transformations .Three major ways of specifying lexical / surface transformations : .Ordered set of rules , e.g. , SPE generative phonology rule cascade .Intersection of lexical /surface form constraints e.g. , the KIMMO system ( see Barton , Berwick , and Ristad ( 1987 ) , Chapter 5 , and references ) , Declarative Phonology .", "label": "", "metadata": {}, "score": "69.447685"}
{"text": "NLP system : Lexicon + lexical / surface transformations .Three major ways of specifying lexical / surface transformations : .Ordered set of rules , e.g. , SPE generative phonology rule cascade .Intersection of lexical /surface form constraints e.g. , the KIMMO system ( see Barton , Berwick , and Ristad ( 1987 ) , Chapter 5 , and references ) , Declarative Phonology .", "label": "", "metadata": {}, "score": "69.447685"}
{"text": "INTRODUCTION The RWTH LVCSR system is a continuous Gaussian mixture density speech recognition system , which has been described in detail in [ 6].The baseline system is a trigram Vit ... . ... ss - word decoding can be accelerated drastically .", "label": "", "metadata": {}, "score": "69.46652"}
{"text": "so.0 /usr / lib64/fst / compact8_acceptor - fst . so.0.0.0 /usr / lib64/fst / compact8_string - fst .so.0 /usr / lib64/fst / compact8_string - fst . so.0.0.0 /usr / lib64/fst / compact8_unweighted - fst .", "label": "", "metadata": {}, "score": "70.40269"}
{"text": "Intersection .Several types of finite - state acceptors : .Regular expressions .Finite - state machines ( FSM ) .Regular grammars .Start by examining these acceptors and how they can recognize and generate individual languages ; then we will look at how these acceptors can be combined to implement multi - language operations .", "label": "", "metadata": {}, "score": "70.45514"}
{"text": "The acoustic model relating acoustic observations and phones typically has several intermediate levels dealing with the various mathematical transformations applied to the raw data , e.g. , sequences of audible - frequency energy samples ( 100 per second ) .The pronunciation model linking phones and written words also has several levels , one of which is the lexical form .", "label": "", "metadata": {}, "score": "70.55507"}
{"text": "The acoustic model relating acoustic observations and phones typically has several intermediate levels dealing with the various mathematical transformations applied to the raw data , e.g. , sequences of audible - frequency energy samples ( 100 per second ) .The pronunciation model linking phones and written words also has several levels , one of which is the lexical form .", "label": "", "metadata": {}, "score": "70.55507"}
{"text": "As complementation is not defined for FST , can not re - use the classical FSA subtraction construction in terms of intersection ; however , there is a direct construction for the subtraction FST of two same - length FST ( Kaplan and Kay ( 1994 ) , Section 3.3 ) .", "label": "", "metadata": {}, "score": "70.586426"}
{"text": "As complementation is not defined for FST , can not re - use the classical FSA subtraction construction in terms of intersection ; however , there is a direct construction for the subtraction FST of two same - length FST ( Kaplan and Kay ( 1994 ) , Section 3.3 ) .", "label": "", "metadata": {}, "score": "70.586426"}
{"text": "so.0 /usr / lib64/libfstpdtscript . so.0.0.0 /usr / lib64/libfstscript .so.0 /usr / lib64/libfstscript . so.0.0.0 /usr / share / doc / openfst-1.2.7 /usr / share / doc / openfst-1.2.7/AUTHORS /usr / share / doc / openfst-1.2.7/COPYING /usr / share / doc / openfst-1.2.7/NEWS /usr / share / doc / openfst-1.2.7/README CVS commit : pkgsrc / math / openfst .", "label": "", "metadata": {}, "score": "70.874146"}
{"text": "This will be the subject of our next lecture .Tuesday , February 21 .Thursday , February 23 .Tuesday , February 28 .Thursday , March 2 .Tuesday , March 7 .Student Presentations # 1 .Alegria , I. et al ( 2001 ) \" Using Finite State Technology in Natural Language Processing of Basque . \"", "label": "", "metadata": {}, "score": "71.114334"}
{"text": "This will be the subject of our next lecture .Tuesday , February 21 .Thursday , February 23 .Tuesday , February 28 .Thursday , March 2 .Tuesday , March 7 .Student Presentations # 1 .Alegria , I. et al ( 2001 ) \" Using Finite State Technology in Natural Language Processing of Basque . \"", "label": "", "metadata": {}, "score": "71.114334"}
{"text": "transition , configuration , acceptance .Operation ( recognition / generation ) .What happens if there is no transition ?Total vs. partial FSM .Types of machines : .Deterministic ( DFA ) .Non - Deterministic [ transition ambiguity / epsilon - moves ] ( NFA ) .", "label": "", "metadata": {}, "score": "71.39536"}
{"text": "transition , configuration , acceptance .Operation ( recognition / generation ) .What happens if there is no transition ?Total vs. partial FSM .Types of machines : .Deterministic ( DFA ) .Non - Deterministic [ transition ambiguity / epsilon - moves ] ( NFA ) .", "label": "", "metadata": {}, "score": "71.39536"}
{"text": "Complications : .Lexical transducers may be too large to fit in memory ; this occurs particularly in cases of language variation in which language - variant lexical transducers are created by composition of a subset of component transducers .Implementing the \" run until success \" procedure for a surface form relative to a group of lexical transducers can be intricate and possibly prone to coding error .", "label": "", "metadata": {}, "score": "71.39931"}
{"text": "Complications : .Lexical transducers may be too large to fit in memory ; this occurs particularly in cases of language variation in which language - variant lexical transducers are created by composition of a subset of component transducers .Implementing the \" run until success \" procedure for a surface form relative to a group of lexical transducers can be intricate and possibly prone to coding error .", "label": "", "metadata": {}, "score": "71.39931"}
{"text": "For the DARPA North American Business News task ( NAB ) , we give network sizes and recognition speeds and accuracies using bigram and trigram grammars with vocabulary sizes ranging from 10,000 to 160,000 words .With our construction , the fully - expanded NAB context - dependent networks contain only about twice as many arcs as the corresponding language models .", "label": "", "metadata": {}, "score": "71.53663"}
{"text": "Abstract - This paper presents an algorithm for the composition of weighted finite - state transducers which is specially tailored to speech recognition applications : it composes the lexicon with the language model while simultaneously optimizing the resulting transducer .Furthermore , it performs these computations \" on - the - fly \" to allow easier management of the tradeoff between offline and online computation and memory .", "label": "", "metadata": {}, "score": "71.70416"}
{"text": "Type of correction list ( ( ordered ) exhaustive vs. nearest neighbor ) .Nearest neighbor approaches suffice in many applications , as long lists of candidates are both hard to compute and discouraging for users to sort through ( Savary ( 2002 ) , p. 253 ) .", "label": "", "metadata": {}, "score": "71.93993"}
{"text": "Type of correction list ( ( ordered ) exhaustive vs. nearest neighbor ) .Nearest neighbor approaches suffice in many applications , as long lists of candidates are both hard to compute and discouraging for users to sort through ( Savary ( 2002 ) , p. 253 ) .", "label": "", "metadata": {}, "score": "71.93993"}
{"text": "so.0 /usr / lib64/fst / const64-fst . so.0.0.0 /usr / lib64/fst / const8-fst .so.0 /usr / lib64/fst / const8-fst . so.0.0.0 /usr / lib64/fst / ilabel_lookahead - fst .", "label": "", "metadata": {}, "score": "71.95643"}
{"text": "so.0 /usr / lib / fst / compact8_acceptor - fst . so.0.0.0 /usr / lib / fst / compact8_string - fst .so.0 /usr / lib / fst / compact8_string - fst . so.0.0.0 /usr / lib / fst / compact8_unweighted - fst .", "label": "", "metadata": {}, "score": "71.99115"}
{"text": "ASL 2.0 .Changelog .Files ./usr / lib / fst /usr / lib / fst / arc_lookahead - fst .so.0 /usr / lib / fst / arc_lookahead - fst . so.0.0.0 /usr / lib / fst / compact16_acceptor - fst .", "label": "", "metadata": {}, "score": "72.16619"}
{"text": "so.0 /usr / lib / fst / compact16_string - fst . so.0.0.0 /usr / lib / fst / compact16_unweighted - fst .so.0 /usr / lib / fst / compact16_unweighted - fst . so.0.0.0 /usr / lib / fst / compact16_unweighted_acceptor - fst .", "label": "", "metadata": {}, "score": "72.16936"}
{"text": "so.0 /usr / lib / fst / compact64_unweighted - fst . so.0.0.0 /usr / lib / fst / compact64_unweighted_acceptor - fst .so.0 /usr / lib / fst / compact64_unweighted_acceptor - fst . so.0.0.0 /usr / lib / fst / compact64_weighted_string - fst .", "label": "", "metadata": {}, "score": "72.21269"}
{"text": "Part - of - Speech ( POS )Tagging .Two finite - state approaches ( see Abney ( 1996 ) and references ) : .Statistical .To assign a tag to a word , look at some combination of the immediately preceding words and their assigned tags ; assign most probable tag based on distributions of this preceding information derived from a training set .", "label": "", "metadata": {}, "score": "72.36345"}
{"text": "Part - of - Speech ( POS )Tagging .Two finite - state approaches ( see Abney ( 1996 ) and references ) : .Statistical .To assign a tag to a word , look at some combination of the immediately preceding words and their assigned tags ; assign most probable tag based on distributions of this preceding information derived from a training set .", "label": "", "metadata": {}, "score": "72.36345"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .OpenKernel is a library for creating , combining and using rational kernels .", "label": "", "metadata": {}, "score": "73.04987"}
{"text": "The more familiar finite - state acceptor is represented as a transducer with each transition 's input and output label equal .Finite - state acceptors are used to represent sets of strings ( specifically , regular or rational sets ) ; finite - state transducers are used to represent binary relations between pairs of strings ( specifically , rational transductions ) .", "label": "", "metadata": {}, "score": "73.1083"}
{"text": "( C. Allauzen , M. Mohri ) .It is an open source project distributed under the Apache license .( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .", "label": "", "metadata": {}, "score": "73.181404"}
{"text": "so.0 /usr / lib64/fst / compact16_string - fst . so.0.0.0 /usr / lib64/fst / compact16_unweighted - fst .so.0 /usr / lib64/fst / compact16_unweighted - fst . so.0.0.0 /usr / lib64/fst / compact16_unweighted_acceptor - fst .", "label": "", "metadata": {}, "score": "73.243744"}
{"text": "Thursday , February 2 .Tuesday , February 7 ( Lecture # 6 ) [ Kaplan and Kay ( 1994 ) ; Class Notes ] .Finite - State Transducers ( Cont'd ) .Implement concatenation , union , and Kleene star by non-", "label": "", "metadata": {}, "score": "73.52591"}
{"text": "Thursday , February 2 .Tuesday , February 7 ( Lecture # 6 ) [ Kaplan and Kay ( 1994 ) ; Class Notes ] .Finite - State Transducers ( Cont'd ) .Implement concatenation , union , and Kleene star by non-", "label": "", "metadata": {}, "score": "73.52591"}
{"text": "Acta Informtica , 29 , 281 - 302 .Garey , M.R. , and Johnson , D.S. ( 1979 ) Computers and Intractability : A Guide to the Theory of NP - Completeness .W.H. Freeman ; San Francisco , CA .", "label": "", "metadata": {}, "score": "73.66212"}
{"text": "Acta Informtica , 29 , 281 - 302 .Garey , M.R. , and Johnson , D.S. ( 1979 ) Computers and Intractability : A Guide to the Theory of NP - Completeness .W.H. Freeman ; San Francisco , CA .", "label": "", "metadata": {}, "score": "73.66212"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .It is an open source project distributed under the Apache license .This work has been partially supported by Google Inc. .This library is being developed by C. Allauzen , M. Mohri and A. Rostamizadeh .", "label": "", "metadata": {}, "score": "73.87863"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .", "label": "", "metadata": {}, "score": "74.09564"}
{"text": "so.0 /usr / lib64/fst / compact16_weighted_string - fst . so.0.0.0 /usr / lib64/fst / compact64_acceptor - fst .so.0 /usr / lib64/fst / compact64_acceptor - fst . so.0.0.0 /usr / lib64/fst / compact64_string - fst .", "label": "", "metadata": {}, "score": "74.18537"}
{"text": "Can implement these transformations using FST and various FST combination operations !Note as FST are bidirectional , so are lexical transducers ; hence , can reconstruct surface or lexical forms from given lexical or surface forms with equal ease .Thursday , February 9 ( Lecture # 7 ) [ Karttunen ( 2000 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "74.19089"}
{"text": "Can implement these transformations using FST and various FST combination operations !Note as FST are bidirectional , so are lexical transducers ; hence , can reconstruct surface or lexical forms from given lexical or surface forms with equal ease .Thursday , February 9 ( Lecture # 7 ) [ Karttunen ( 2000 ) ; Class Notes ] .", "label": "", "metadata": {}, "score": "74.19089"}
{"text": "so.0 /usr / lib / fst / compact16_weighted_string - fst . so.0.0.0 /usr / lib / fst / compact64_acceptor - fst .so.0 /usr / lib / fst / compact64_acceptor - fst . so.0.0.0 /usr / lib / fst / compact64_string - fst .", "label": "", "metadata": {}, "score": "74.46954"}
{"text": "It is an open source project distributed under the Apache license .This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .", "label": "", "metadata": {}, "score": "74.48142"}
{"text": "Natural Language Engineering , to appear .[ PDF ] .Damerau , F.J. ( 1964 ) \" A Technique for Computer Detection and Correction of Spelling Errors .\" Communications of the ACM , 7(3 ) , 171 - 176 .", "label": "", "metadata": {}, "score": "74.61977"}
{"text": "Natural Language Engineering , to appear .[ PDF ] .Damerau , F.J. ( 1964 ) \" A Technique for Computer Detection and Correction of Spelling Errors .\" Communications of the ACM , 7(3 ) , 171 - 176 .", "label": "", "metadata": {}, "score": "74.61977"}
{"text": "It is an open source project distributed under the Apache license .This work has been partially supported by Google Inc. .This library was developed by C. Allauzen and M. Mohri .It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .", "label": "", "metadata": {}, "score": "74.95377"}
{"text": "( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .( C. Allauzen , M. Mohri ) .", "label": "", "metadata": {}, "score": "75.02966"}
{"text": "Later on , when we talk about transformation problems , we will look at transformation problems , which are implemented by finite - state transducers .Languages and language operations .Concatenation .Grouping ( Union ) .Repetition ( Kleene Star ) .", "label": "", "metadata": {}, "score": "75.23667"}
{"text": "Thursday , February 16 ( Lecture # 9 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .Finite - State Applications ( Cont'd ) .Building Robust and Efficient Lexicons ( Cont'd ) .Storing complex forms .", "label": "", "metadata": {}, "score": "75.427765"}
{"text": "Thursday , February 16 ( Lecture # 9 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .Finite - State Applications ( Cont'd ) .Building Robust and Efficient Lexicons ( Cont'd ) .Storing complex forms .", "label": "", "metadata": {}, "score": "75.427765"}
{"text": "This library was developed at Google Research and NYU 's Courant Institute .This library was developed at Google Research ( M. Riley , J. Schalkwyk , W. Skut ) and NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .", "label": "", "metadata": {}, "score": "75.759"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .it has been extensively tested .It is an open source project distributed under the Apache license .Status : Vendor Tag : TNF Release Tags : PKGSRC-20091103 N pkgsrc / math / openfst / Makefile N pkgsrc / math / openfst / DESCR N pkgsrc / math / openfst / distinfo N pkgsrc / math / openfst / PLIST No conflicts created by this import", "label": "", "metadata": {}, "score": "76.16702"}
{"text": "so.0 /usr / lib64/fst / olabel_lookahead - fst . so.0.0.0 /usr / lib64/libfst .so.0 /usr / lib64/libfst . so.0.0.0 /usr / lib64/libfstfar .so.0 /usr / lib64/libfstfar . so.0.0.0 /usr / lib64/libfstfarscript .", "label": "", "metadata": {}, "score": "76.48275"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large problems .It has been extensively tested .It is an open source project distributed under the Apache license .Tools . by Mehryar Mohri , Fernando Pereira , Michael Riley - COMPUTER SPEECH & amp ; LANGUAGE , 2002 . \" ...", "label": "", "metadata": {}, "score": "76.712875"}
{"text": "It is intended to be comprehensive , flexible , efficient and scale well to large - scale problems .It is an open source project distributed under the Apache license .This work has been partially supported by Google Inc. .New version coming soon .", "label": "", "metadata": {}, "score": "76.7285"}
{"text": "so.0 /usr / lib / fst / const64-fst . so.0.0.0 /usr / lib / fst / const8-fst .so.0 /usr / lib / fst / const8-fst . so.0.0.0 /usr / lib / fst / ilabel_lookahead - fst .", "label": "", "metadata": {}, "score": "76.78369"}
{"text": "Concatenation .Grouping ( Union ) .Repetition ( Kleene Star ) .Subtraction .Intersection .Several types of finite - state acceptors : .Regular expressions .Finite - state machines ( FSM ) .Regular grammars .Start by examining these acceptors and how they can recognize and generate individual languages ; then we will look at how these acceptors can be combined to implement multi - language operations .", "label": "", "metadata": {}, "score": "77.07"}
{"text": "Training process very easy ; however , derived HMM - FST can be very large and slow .Rule - Based .Two - phase process : assign initial guess - tags to the words in the sentence and then apply a set of context - based repair rules to fix these initial guesses .", "label": "", "metadata": {}, "score": "77.29306"}
{"text": "Training process very easy ; however , derived HMM - FST can be very large and slow .Rule - Based .Two - phase process : assign initial guess - tags to the words in the sentence and then apply a set of context - based repair rules to fix these initial guesses .", "label": "", "metadata": {}, "score": "77.29306"}
{"text": "h:24 : /usr / local / include / fst / tuple - weight .Update the default version of GCC used in the Ports Collection from GCC 4.6.4 to GCC 4.7.3 .This entails updating the lang / gcc port as well as changing the default in Mk / bsd . default - versions .", "label": "", "metadata": {}, "score": "77.310684"}
{"text": "Thursday , March 9 .Tuesday , March 14 ( Lecture # 10 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .Finite - State Applications ( Cont'd ) .Flag diacritics ( restricted unification ) ( Beesley and Karttunen ( 2003 ) , Chapter 7 ) .", "label": "", "metadata": {}, "score": "77.549835"}
{"text": "Thursday , March 9 .Tuesday , March 14 ( Lecture # 10 ) [ Beesley and Karttunen ( 2003 ) ; Class Notes ] .Finite - State Applications ( Cont'd ) .Flag diacritics ( restricted unification ) ( Beesley and Karttunen ( 2003 ) , Chapter 7 ) .", "label": "", "metadata": {}, "score": "77.549835"}
{"text": "so.0 /usr / lib64/fst / compact64_unweighted - fst . so.0.0.0 /usr / lib64/fst / compact64_unweighted_acceptor - fst .so.0 /usr / lib64/fst / compact64_unweighted_acceptor - fst . so.0.0.0 /usr / lib64/fst / compact64_weighted_string - fst .", "label": "", "metadata": {}, "score": "77.57916"}
{"text": "Hopcroft , J.E. , Motwani , R. , and Ullman , J.D. ( 2001 ) Introduction to Automata Theory , Languages , and Computation ( Second Edition ) .Addison - Wesley .[ Abbreviated above as HMU01 ] .Hopcroft , J.E. and Ullman , J.D. ( 1979 ) Introduction to Automata Theory , Languages , and Computation .", "label": "", "metadata": {}, "score": "77.63266"}
{"text": "Hopcroft , J.E. , Motwani , R. , and Ullman , J.D. ( 2001 ) Introduction to Automata Theory , Languages , and Computation ( Second Edition ) .Addison - Wesley .[ Abbreviated above as HMU01 ] .Hopcroft , J.E. and Ullman , J.D. ( 1979 ) Introduction to Automata Theory , Languages , and Computation .", "label": "", "metadata": {}, "score": "77.63266"}
{"text": "Measure of spelling error distance between two words , e.g. , Levenshtein / edit and weighted edit distance ( see Section 4 of Kruskal ( 1984 ) and references ) , error distance ( Du and Chang ( 1992 ) ) .", "label": "", "metadata": {}, "score": "77.883125"}
{"text": "Measure of spelling error distance between two words , e.g. , Levenshtein / edit and weighted edit distance ( see Section 4 of Kruskal ( 1984 ) and references ) , error distance ( Du and Chang ( 1992 ) ) .", "label": "", "metadata": {}, "score": "77.883125"}
{"text": "Trie with info encoded in final states .DAFA with info encoded in final states .Index - generating DAFA + subsidiary info arrays .FST relating form x info pairs .First three options progressively more compact ; however , even third option is problematic if # discreet forms of info is not a small finite - set , e.g. , syntactic - role vs. semantic info .", "label": "", "metadata": {}, "score": "78.18615"}
{"text": "Trie with info encoded in final states .DAFA with info encoded in final states .Index - generating DAFA + subsidiary info arrays .FST relating form x info pairs .First three options progressively more compact ; however , even third option is problematic if # discreet forms of info is not a small finite - set , e.g. , syntactic - role vs. semantic info .", "label": "", "metadata": {}, "score": "78.18615"}
{"text": "Vast majority of misspellings involve only one error , e.g. , approx .2 % of unknown words in a corpus due to multiple - error misspellings ( Ren and Perrault ( 1992 ) , cited on page 253 of Savary ( 2002 ) ) .", "label": "", "metadata": {}, "score": "78.18753"}
{"text": "Vast majority of misspellings involve only one error , e.g. , approx .2 % of unknown words in a corpus due to multiple - error misspellings ( Ren and Perrault ( 1992 ) , cited on page 253 of Savary ( 2002 ) ) .", "label": "", "metadata": {}, "score": "78.18753"}
{"text": "Wagner ( 1974 ) [ Levenshtein / edit distance / -- / nearest neighbor ] .Dynamic programming algorithm .Myers and Miller ( 1989 ) [ Levenshtein / edit distance / -- / nearest neighbor ] .Dynamic programming algorithm .", "label": "", "metadata": {}, "score": "78.9659"}
{"text": "Wagner ( 1974 ) [ Levenshtein / edit distance / -- / nearest neighbor ] .Dynamic programming algorithm .Myers and Miller ( 1989 ) [ Levenshtein / edit distance / -- / nearest neighbor ] .Dynamic programming algorithm .", "label": "", "metadata": {}, "score": "78.9659"}
{"text": "In file included from /usr / local / include / fst / fstlib .h:49: In file included from /usr / local / include / fst / fst .h:34 : In file included from /usr / local / include / fst / arc .", "label": "", "metadata": {}, "score": "78.96819"}
{"text": "Define a new lexical transducer by substituting the possible - root form transducers for the guessed - form root tags in the augmented lexical transducer .Implement the third of these steps using the substitute command ( which is a restricted form of the compile - replace operation ) .", "label": "", "metadata": {}, "score": "78.985374"}
{"text": "Define a new lexical transducer by substituting the possible - root form transducers for the guessed - form root tags in the augmented lexical transducer .Implement the third of these steps using the substitute command ( which is a restricted form of the compile - replace operation ) .", "label": "", "metadata": {}, "score": "78.985374"}
{"text": "Unknown forms are typically those in which a root unknown to the lexicon has been acted on by lexicon - encoded morphotactics .Create \" guesser \" transducer which encodes standard morphotactics but in which root forms are replaced by a sub - transducer that recognizes all phonologically - possible roots in the language on the surface side and adds a special lexical tag , e.g. , + guess , on the lexical side .", "label": "", "metadata": {}, "score": "78.9854"}
{"text": "Unknown forms are typically those in which a root unknown to the lexicon has been acted on by lexicon - encoded morphotactics .Create \" guesser \" transducer which encodes standard morphotactics but in which root forms are replaced by a sub - transducer that recognizes all phonologically - possible roots in the language on the surface side and adds a special lexical tag , e.g. , + guess , on the lexical side .", "label": "", "metadata": {}, "score": "78.9854"}
{"text": "finite - state acceptor is represented as a transducer with each transition 's input and output label equal .Finite - state acceptors are used to represent sets of strings ( specifically , regular or .Line : 19 to 19 .", "label": "", "metadata": {}, "score": "79.899796"}
{"text": "so.0 /usr / lib / fst / olabel_lookahead - fst . so.0.0.0 /usr / lib / libfst .so.0 /usr / lib / libfst . so.0.0.0 /usr / lib / libfstfar .so.0 /usr / lib / libfstfar . so.0.0.0 /usr / lib / libfstfarscript .", "label": "", "metadata": {}, "score": "79.94676"}
{"text": "It is an open source project distributed under the Apache license .This work has been partially supported by Google Inc. .New version coming in January 2010 .Will include algorithms for learning kernels and kernel ridge regression .New version available now , includes algorithms for learning kernels and kernel ridge regression .", "label": "", "metadata": {}, "score": "80.41727"}
{"text": "Line : 10 to 12 .This library was developed at NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .It is intended to be comprehensive , flexible , efficient and scale well to large problems .It is an open source project distributed under the Apache license .", "label": "", "metadata": {}, "score": "80.437614"}
{"text": "License .ASL 2.0 .Changelog .Files ./usr / lib64/fst /usr / lib64/fst / arc_lookahead - fst .so.0 /usr / lib64/fst / arc_lookahead - fst . so.0.0.0 /usr / lib64/fst / compact16_acceptor - fst .", "label": "", "metadata": {}, "score": "83.56709"}
{"text": "Part II , Bump PORTREVISIONs .PR : 182136 Supported by : Christoph Moench - Tegeder ( fixing many ports ) Tested by : bdrewery ( two -exp runs ) .- rename AL2 to APACHE20 in Mk / bsd .licenses.db.mk - svn move Templates / Licenses / AL2 Templates / Licenses / APACHE20 - add APACHE10 and APACHE11 to Mk / bsd .", "label": "", "metadata": {}, "score": "83.725555"}
{"text": "Problems that need to be handled ( Beesley and Karttunen ( 2003 ) , Sections 7.3.1 and 8.3 ) : .Adjacent dependencies , e.g. , English verb tense / person marking .Non - adjacent dependencies , e.g. , Arabic prefix / suffix co - occurrence .", "label": "", "metadata": {}, "score": "84.44438"}
{"text": "Problems that need to be handled ( Beesley and Karttunen ( 2003 ) , Sections 7.3.1 and 8.3 ) : .Adjacent dependencies , e.g. , English verb tense / person marking .Non - adjacent dependencies , e.g. , Arabic prefix / suffix co - occurrence .", "label": "", "metadata": {}, "score": "84.44438"}
{"text": "Spelling checking .Can be done relative to the surface - form automaton associated with a standard lexical transducer ; if the given surface form does not have an associated lexical form , it is misspelled .Spelling correction .Goal is to find list of candidate correct words for a given misspelled word ; choice of correction is then left to the user .", "label": "", "metadata": {}, "score": "85.191956"}
{"text": "Spelling checking .Can be done relative to the surface - form automaton associated with a standard lexical transducer ; if the given surface form does not have an associated lexical form , it is misspelled .Spelling correction .Goal is to find list of candidate correct words for a given misspelled word ; choice of correction is then left to the user .", "label": "", "metadata": {}, "score": "85.191956"}
{"text": "Ph.D. preferred .THE UNIVERSITY OF IOWA IS AN AFFIRMATIVE ACTION / EQUAL OPPORTUNITY EMPLOYER william - davies uiowa.edu .Bell Laboratories is seeking to hire a highly qualified candidate with a background in finite - state methods in natural language and speech processing .", "label": "", "metadata": {}, "score": "85.78778"}
{"text": "State Models of Language , Budapest , Hungary .European Conference on .Artificial Intelligence .( Soon to be available from CMP - LG ) .( Because of the diversity of applications for this technology , it is . unclear at present whether the position will be in the Linguistics .", "label": "", "metadata": {}, "score": "86.06485"}
{"text": "Speech Recognition Research Department : however departmental .assignments have no bearing on one 's collaborational possibilities . )Interested candidates should send CVs along with statements of .research interests to : .Richard Sproat .Speech Synthesis Research Department .", "label": "", "metadata": {}, "score": "86.87956"}
{"text": "This library was developed at Google Research ( M. Riley , J. Schalkwyk , W. Skut ) and NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .This library was developed at Google Research ( M. Riley , J. Schalkwyk , W. Skut ) and NYU 's Courant Institute ( C. Allauzen , M. Mohri ) .", "label": "", "metadata": {}, "score": "87.66861"}
{"text": "Tuesday , January 17 ( Lecture # 1 ) [ Nederhof ( 1996 ) ; Class Notes ] .Each of these tasks , whether relative to some linguistic theory or a real - world NLP implementation , is done relative to some sort of mechanism .", "label": "", "metadata": {}, "score": "88.09479"}
{"text": "Note that each underlying form of a word has a unique surface form but that each surface form may have many surface forms , e.g. , \" run \" ( noun / verb ) ; hence , lexical / surface forms have an implicit many - one mapping .", "label": "", "metadata": {}, "score": "89.79794"}
{"text": "Note that each underlying form of a word has a unique surface form but that each surface form may have many surface forms , e.g. , \" run \" ( noun / verb ) ; hence , lexical / surface forms have an implicit many - one mapping .", "label": "", "metadata": {}, "score": "89.79794"}
{"text": "View a string - pair member of a relation as a sequence of symbol - pairs drawn from extended alphabets , .i.e. , alphabets augmented by epsilon .Algebra over symbol - pair sequences with three operations : concatenation , union , and Kleene star .", "label": "", "metadata": {}, "score": "89.91388"}
{"text": "View a string - pair member of a relation as a sequence of symbol - pairs drawn from extended alphabets , .i.e. , alphabets augmented by epsilon .Algebra over symbol - pair sequences with three operations : concatenation , union , and Kleene star .", "label": "", "metadata": {}, "score": "89.91388"}
{"text": "Thursday , March 30 ( Lecture # 15 ) [ Class Notes ] .Is typically restricted to transforms between written and acoustic forms , i.e. , Text - to - Speech ( TTS ) systems ; however , it is useful to keep all four possible transforms in mind ( plus the two transforms between the written and lexical forms ) .", "label": "", "metadata": {}, "score": "92.84581"}
{"text": "Thursday , March 30 ( Lecture # 15 ) [ Class Notes ] .Is typically restricted to transforms between written and acoustic forms , i.e. , Text - to - Speech ( TTS ) systems ; however , it is useful to keep all four possible transforms in mind ( plus the two transforms between the written and lexical forms ) .", "label": "", "metadata": {}, "score": "92.84581"}
