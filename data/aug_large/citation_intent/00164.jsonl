{"text": "The component then completes .FIG .5 is a flow diagram that illustrates the processing of the fetch observations component of the prediction system in one embodiment .The component is passed a date and fetches observations and stores them in association with that observation date .", "label": "", "metadata": {}, "score": "37.5488"}
{"text": "The component then completes .FIG .5 is a flow diagram that illustrates the processing of the fetch observations component of the prediction system in one embodiment .The component is passed a date and fetches observations and stores them in association with that observation date .", "label": "", "metadata": {}, "score": "37.5488"}
{"text": "The values ( b 1 ... b n ) represent calculated regression weights associated with predictor variables ( X 1 ... X n ) .The predictor variable X 1 would be a measure of a student 's academic performance in the 1999 - 2000 school year .", "label": "", "metadata": {}, "score": "38.539734"}
{"text": "This means that 's and 's current outputs are based only on the current input .There is a variety of simple ways of representing reliability in : .Modelling probabilities of global prediction failures .Let be one - dimensional .", "label": "", "metadata": {}, "score": "39.546577"}
{"text": "This is a special case of the method described in [ 8 ] ( there a fully recurrent net was employed ) .Of course , other error functions are possible .For instance , with the experiments described below the confidence network predicted the the absolute value of the difference between 's ( one - dimensional ) output and the current target value .", "label": "", "metadata": {}, "score": "40.22003"}
{"text": "The component then returns that direction .FIG .19 is a flow diagram that illustrates the processing of the offer price protection component of the prediction system in one embodiment .The component is passed a market and a departure / return date representing the trip .", "label": "", "metadata": {}, "score": "41.069313"}
{"text": "The component then returns that direction .FIG .19 is a flow diagram that illustrates the processing of the offer price protection component of the prediction system in one embodiment .The component is passed a market and a departure / return date representing the trip .", "label": "", "metadata": {}, "score": "41.069313"}
{"text": "In one embodiment , the prediction system may use multi - level decision tree classifiers for the strong predictions and a single - level decision tree classifier for the weak predictions .For the multi - level decision tree classifiers , the prediction system may randomly generate the features to use for the test in each level of the decision tree and the training algorithm selects the best test for each node of the decision tree .", "label": "", "metadata": {}, "score": "42.313164"}
{"text": "In one embodiment , the prediction system may use multi - level decision tree classifiers for the strong predictions and a single - level decision tree classifier for the weak predictions .For the multi - level decision tree classifiers , the prediction system may randomly generate the features to use for the test in each level of the decision tree and the training algorithm selects the best test for each node of the decision tree .", "label": "", "metadata": {}, "score": "42.313164"}
{"text": "When the prediction system next makes a price - related prediction ( e.g. , price direction ) , the prediction system can use the sigmoid function to map the scores of the classifier to confidence levels .One skilled in the art will appreciate the many different learning techniques that can be used to generate a mapping from a score to a confidence level .", "label": "", "metadata": {}, "score": "42.539116"}
{"text": "When the prediction system next makes a price - related prediction ( e.g. , price direction ) , the prediction system can use the sigmoid function to map the scores of the classifier to confidence levels .One skilled in the art will appreciate the many different learning techniques that can be used to generate a mapping from a score to a confidence level .", "label": "", "metadata": {}, "score": "42.539116"}
{"text": "The prediction system may also learn a feature using a feature classifier , which then becomes part of the feature vector of the training data .After making the observations for an observation date , the prediction system then generates a feature vector for each trip of that observation date and stores the feature vector in the observation store .", "label": "", "metadata": {}, "score": "44.49331"}
{"text": "The prediction system may also learn a feature using a feature classifier , which then becomes part of the feature vector of the training data .After making the observations for an observation date , the prediction system then generates a feature vector for each trip of that observation date and stores the feature vector in the observation store .", "label": "", "metadata": {}, "score": "44.49331"}
{"text": "ACM Press ( 2004 ) .Rodrigues , G.N. , Roberts , G. , Emmerich , W. , Skene , J. : Reliability support for the model driven architecture .In : Proceedings of the ICSE Workshop on Software Architecture for Dependable Systems .", "label": "", "metadata": {}, "score": "44.66944"}
{"text": "Res .149(Issue 2 ) : 459 - 474 CrossRef MathSciNet .Elbaum , S. , Narla , S. : A methodology for operational profile refinement .In : Proceedings of the Annual Reliability and Maintainability Symposium ( 2001 ) .Gittens , M. , Lutfiyya , H. , Bauer , M. : An extended operational profile model .", "label": "", "metadata": {}, "score": "44.7403"}
{"text": "Show little or no relation to grade level .Show reliability over time .To demonstrate cross validation the teacher effectiveness indices were correlated with teacher evaluation ratings by principals on an instrument specifically designed for this purpose .The results can be seen in Table 1 .", "label": "", "metadata": {}, "score": "44.78898"}
{"text": "You do not have to enter each component screens one by one and set reliability parameters .You may save a lot of time by using advanced procedures , like : Abstract .Many future software systems will be distributed across a network , extensively providing different kinds of services for their users .", "label": "", "metadata": {}, "score": "44.941593"}
{"text": "FIG .16 is a flow diagram that illustrates the processing of the predict future - lower priced fare component of the prediction system in one embodiment .The component is passed an observation date and generates a score for each trip observed on the passed observation date indicating whether a future - lower priced fare should be offered for that trip .", "label": "", "metadata": {}, "score": "45.686077"}
{"text": "FIG .16 is a flow diagram that illustrates the processing of the predict future - lower priced fare component of the prediction system in one embodiment .The component is passed an observation date and generates a score for each trip observed on the passed observation date indicating whether a future - lower priced fare should be offered for that trip .", "label": "", "metadata": {}, "score": "45.686077"}
{"text": "McGregor , J.D. , Stafford , J.A. , Cho , I.-H. : Measuring component reliability .In : Proceedings of the 6th ICSE Workshop on Component - Based Software Engineering .IEEE , Portland ( 2003 ) .Roshandel , R. , Medvidovic , N. : Toward architecture - based reliability estimation .", "label": "", "metadata": {}, "score": "45.957123"}
{"text": "Accurate and reliable prediction is dependent on the reliability of the predictors .As predictors of academic performance we use standardized achievement tests that have demonstrated high reliability .We then maximize reliability by combining all available measures of academic performance for a given student for every year the student was in the district .", "label": "", "metadata": {}, "score": "45.968018"}
{"text": "Reliability and availability must be engineered into software from the onset of its development , and potential problems must be detected in the early stages , when it is easier and less expensive to implement modifications .The software architecture design phase is the first stage of software development in which it is possible to evaluate how well the quality requirements are being met .", "label": "", "metadata": {}, "score": "46.429802"}
{"text": "In block 1101 , the component selects the next price - related prediction .In decision block 1102 , if all the price - related predictions have already been selected , then the component returns , else the component continues at block 1103 .", "label": "", "metadata": {}, "score": "46.5199"}
{"text": "In block 1101 , the component selects the next price - related prediction .In decision block 1102 , if all the price - related predictions have already been selected , then the component returns , else the component continues at block 1103 .", "label": "", "metadata": {}, "score": "46.5199"}
{"text": "4 is a flow diagram that illustrates the processing of a generate predictions component of the prediction system in one embodiment .The component is passed a current date and a training date .The observation dates after the training date are within the labeling window .", "label": "", "metadata": {}, "score": "46.54438"}
{"text": "4 is a flow diagram that illustrates the processing of a generate predictions component of the prediction system in one embodiment .The component is passed a current date and a training date .The observation dates after the training date are within the labeling window .", "label": "", "metadata": {}, "score": "46.54438"}
{"text": "This result shows that a student scoring higher or lower than expected one year has nothing to do with whether the same student will score higher or lower the following year .Table 5 .Correlations Between Student Achievement Scores and Their Residuals Across Two Years ( 2003 - 2004 ) .", "label": "", "metadata": {}, "score": "46.69558"}
{"text": "For example , the classifiers may include a neural network - based classifier , a decision tree classifier , support vector machine , a family of linear classifiers , a Bayesian classifier , a Naive Bayesian classifier , a regression - based classifier , and so on .", "label": "", "metadata": {}, "score": "46.783775"}
{"text": "For example , the classifiers may include a neural network - based classifier , a decision tree classifier , support vector machine , a family of linear classifiers , a Bayesian classifier , a Naive Bayesian classifier , a regression - based classifier , and so on .", "label": "", "metadata": {}, "score": "46.783775"}
{"text": "The prediction system can periodically generate predictions and send those predictions to the user via one of the alternate communication channels .The alternate communications channel may include RSS feeds , electronic mail messages , text messages , telephone messages , and so on .", "label": "", "metadata": {}, "score": "46.887177"}
{"text": "The prediction system can periodically generate predictions and send those predictions to the user via one of the alternate communication channels .The alternate communications channel may include RSS feeds , electronic mail messages , text messages , telephone messages , and so on .", "label": "", "metadata": {}, "score": "46.887177"}
{"text": "10(2 ) : 14 - 32 CrossRef .Runeson , P. , Regnell , B. : Derivation of an integrated operational profile and use case model .In : Proceedings .The Ninth International Symposium on Software Reliability Engineering ( 1998 ) .", "label": "", "metadata": {}, "score": "46.97719"}
{"text": "In block 1310 , the component determines the confidence of the selected price direction and then returns .FIG .14 is a flow diagram that illustrates the processing of the identify best direction component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "47.004387"}
{"text": "In block 1310 , the component determines the confidence of the selected price direction and then returns .FIG .14 is a flow diagram that illustrates the processing of the identify best direction component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "47.004387"}
{"text": "The prediction system may invoke the generate predictions component on a daily basis .Alternatively , the prediction component may collect observations on a daily basis but train new classifiers less frequently ( e.g. , every fourth day ) .In block 401 , the component invokes the fetch observations component passing the current date to fetch observations for the current date .", "label": "", "metadata": {}, "score": "47.105736"}
{"text": "The prediction system may invoke the generate predictions component on a daily basis .Alternatively , the prediction component may collect observations on a daily basis but train new classifiers less frequently ( e.g. , every fourth day ) .In block 401 , the component invokes the fetch observations component passing the current date to fetch observations for the current date .", "label": "", "metadata": {}, "score": "47.105736"}
{"text": "A metric that is commonly used is based on information gain .Decision tree classifiers and appropriate metrics are described in Quinlan , J. R. , \" Programs for Machine Learning , \" Morgan Kaufmann Publishers , 1993 , which is hereby incorporated by reference .", "label": "", "metadata": {}, "score": "47.42727"}
{"text": "A metric that is commonly used is based on information gain .Decision tree classifiers and appropriate metrics are described in Quinlan , J. R. , \" Programs for Machine Learning , \" Morgan Kaufmann Publishers , 1993 , which is hereby incorporated by reference .", "label": "", "metadata": {}, "score": "47.42727"}
{"text": "Adaptive boosting combines the results of each separately run test into a single , very accurate classifier .In one embodiment , the prediction system uses adaptive boosting to train decision tree classifiers to predict the direction of airline ticket prices .", "label": "", "metadata": {}, "score": "47.578033"}
{"text": "Adaptive boosting combines the results of each separately run test into a single , very accurate classifier .In one embodiment , the prediction system uses adaptive boosting to train decision tree classifiers to predict the direction of airline ticket prices .", "label": "", "metadata": {}, "score": "47.578033"}
{"text": "The prediction system may generate a feature vector for each stay for each hotel market using various observation dates and generate a label for each feature vector based on the price or other attribute to be predicted in a labeling window .", "label": "", "metadata": {}, "score": "47.688858"}
{"text": "The prediction system may generate a feature vector for each stay for each hotel market using various observation dates and generate a label for each feature vector based on the price or other attribute to be predicted in a labeling window .", "label": "", "metadata": {}, "score": "47.688858"}
{"text": "The prediction system may collect the observations for all trips on a daily basis and store the observations in an observation store .In one embodiment , the prediction system uses the observations to train a classifier to generate price - related predictions .", "label": "", "metadata": {}, "score": "47.689606"}
{"text": "The prediction system may collect the observations for all trips on a daily basis and store the observations in an observation store .In one embodiment , the prediction system uses the observations to train a classifier to generate price - related predictions .", "label": "", "metadata": {}, "score": "47.689606"}
{"text": "The comparison reveals that none of the existing methods entirely fulfill the requirements that are defined in the framework .The comparison framework also defines the characteristics required of new reliability and availability analysis methods .Additionally , the framework is a valuable tool for selecting the best suitable method for architecture analysis .", "label": "", "metadata": {}, "score": "47.693546"}
{"text": "The component then loops to block 1305 to select the next direction .In block 1308 , the component invokes an identify best direction component to identify the price direction that is best to provide as the predicted price direction .In block 1309 , the component stores the best direction as the predicted direction for the trip represented by the selected market and the selected departure / return date .", "label": "", "metadata": {}, "score": "47.895737"}
{"text": "The component then loops to block 1305 to select the next direction .In block 1308 , the component invokes an identify best direction component to identify the price direction that is best to provide as the predicted price direction .In block 1309 , the component stores the best direction as the predicted direction for the trip represented by the selected market and the selected departure / return date .", "label": "", "metadata": {}, "score": "47.895737"}
{"text": "The prediction system may generate classifiers for each market to predict the amount of change in the up direction and in the down direction .The prediction system may generate training data for a market by labeling the feature vectors for each trip for that market based on the prices in the labeling window for various observation dates .", "label": "", "metadata": {}, "score": "48.11501"}
{"text": "The prediction system may generate classifiers for each market to predict the amount of change in the up direction and in the down direction .The prediction system may generate training data for a market by labeling the feature vectors for each trip for that market based on the prices in the labeling window for various observation dates .", "label": "", "metadata": {}, "score": "48.11501"}
{"text": "The architecture defines the functional form relating the inputs to the outputs ( in terms of network topology , unit connectivity , and activation functions ) .The search in weight space for a set of weights that minimizes the objective function is the training process .", "label": "", "metadata": {}, "score": "48.239174"}
{"text": "The architecture defines the functional form relating the inputs to the outputs ( in terms of network topology , unit connectivity , and activation functions ) .The search in weight space for a set of weights that minimizes the objective function is the training process .", "label": "", "metadata": {}, "score": "48.239174"}
{"text": "A student scoring at the same percentile would also demonstrate one year 's growth .The student would be scoring as expected based on past performance .While learning curves tend to be curvilinear over time , relative growth curves tend to be straight ( linear ) over time .", "label": "", "metadata": {}, "score": "48.30669"}
{"text": "To generate a label for the feature vectors of an observation date , the prediction system analyzes the feature vectors within the labeling window for that observation date to determine what label to assign to each trip for that observation date .", "label": "", "metadata": {}, "score": "48.32212"}
{"text": "To generate a label for the feature vectors of an observation date , the prediction system analyzes the feature vectors within the labeling window for that observation date to determine what label to assign to each trip for that observation date .", "label": "", "metadata": {}, "score": "48.32212"}
{"text": "The component stores the training weight and the label in the observation store and then loops to block 1001 to select the next submarket .FIG .11 is a flow diagram that illustrates the processing of the train classifiers component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "48.61704"}
{"text": "The component stores the training weight and the label in the observation store and then loops to block 1001 to select the next submarket .FIG .11 is a flow diagram that illustrates the processing of the train classifiers component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "48.61704"}
{"text": "Softw .Eng .18(2 ) : 130 - 147 CrossRef .Ledoux J. ( 1999 ) .Availability modeling of modular software .IEEE Trans .Reliability 48(2 ) : 159 - 168 CrossRef MathSciNet .Bachmann , F. , Bass , L. , Klein , M. : Moving from quality attribute requirements to architectural decisions .", "label": "", "metadata": {}, "score": "48.762394"}
{"text": "We demonstrate that the method can be flexibly applied to cross - platform , cross - species , and multiclass predictions without any optimization of analysis parameters .Environment and temperature ( if applicable and if differs from parent item - see Environment and Temperature Definition paragraph for more information ) .", "label": "", "metadata": {}, "score": "48.848953"}
{"text": "FIG .12 is a flow diagram that illustrates the processing of the classify observations component of the prediction system in one embodiment .The component is passed an observation date and classifies observations for that observation date based on the currently trained classifiers .", "label": "", "metadata": {}, "score": "48.851036"}
{"text": "FIG .12 is a flow diagram that illustrates the processing of the classify observations component of the prediction system in one embodiment .The component is passed an observation date and classifies observations for that observation date based on the currently trained classifiers .", "label": "", "metadata": {}, "score": "48.851036"}
{"text": "In addition , the data structures may be stored or transmitted via a data transmission medium , such as a signal on a communications link .Various communications links may be used to connect the prediction system to flight information sources and user computing devices , such as the Internet , a local area network , a wide area network , a point - to - point dial - up connection , a cell phone network , and so on .", "label": "", "metadata": {}, "score": "48.871582"}
{"text": "In addition , the data structures may be stored or transmitted via a data transmission medium , such as a signal on a communications link .Various communications links may be used to connect the prediction system to flight information sources and user computing devices , such as the Internet , a local area network , a wide area network , a point - to - point dial - up connection , a cell phone network , and so on .", "label": "", "metadata": {}, "score": "48.871582"}
{"text": "FIG .10 is a flow diagram that illustrates the processing of the assign future - lower priced fare labels component of the prediction system in one embodiment .The component is passed an observation date , a market , and a departure / return date identifying a particular trip at the observation date .", "label": "", "metadata": {}, "score": "48.88494"}
{"text": "FIG .10 is a flow diagram that illustrates the processing of the assign future - lower priced fare labels component of the prediction system in one embodiment .The component is passed an observation date , a market , and a departure / return date identifying a particular trip at the observation date .", "label": "", "metadata": {}, "score": "48.88494"}
{"text": "The prediction system can be used to present predictions in various ways .For example , a web - based system could receive trip - related queries from customers , and use the prediction system to make predictions for the trips , and present the results of those predictions to the customer .", "label": "", "metadata": {}, "score": "48.995262"}
{"text": "The prediction system can be used to present predictions in various ways .For example , a web - based system could receive trip - related queries from customers , and use the prediction system to make predictions for the trips , and present the results of those predictions to the customer .", "label": "", "metadata": {}, "score": "48.995262"}
{"text": "The derived features may include various moving average prices , changes in availability , and so on .Once a classifier is trained for a market , the prediction system can use the classifier to predict the various attributes ( e.g. , price direction and room availability ) .", "label": "", "metadata": {}, "score": "49.023743"}
{"text": "The derived features may include various moving average prices , changes in availability , and so on .Once a classifier is trained for a market , the prediction system can use the classifier to predict the various attributes ( e.g. , price direction and room availability ) .", "label": "", "metadata": {}, "score": "49.023743"}
{"text": "Typically , the functionality of the program modules may be combined or distributed as desired in various embodiments .For example , the functions of creating feature vectors , assigning labels , training classifiers , and predicting prices may all be performed on different computer systems .", "label": "", "metadata": {}, "score": "49.18972"}
{"text": "Typically , the functionality of the program modules may be combined or distributed as desired in various embodiments .For example , the functions of creating feature vectors , assigning labels , training classifiers , and predicting prices may all be performed on different computer systems .", "label": "", "metadata": {}, "score": "49.18972"}
{"text": "In such a case , a price direction based on the then - current price at the beginning of the day may not be appropriate for the current price in the middle of the day .As a result , the prediction system may in batch mode generate price - related predictions assuming different current prices .", "label": "", "metadata": {}, "score": "49.252792"}
{"text": "In such a case , a price direction based on the then - current price at the beginning of the day may not be appropriate for the current price in the middle of the day .As a result , the prediction system may in batch mode generate price - related predictions assuming different current prices .", "label": "", "metadata": {}, "score": "49.252792"}
{"text": "The price - related prediction may be a prediction of future price direction , of whether price protection should be offered on a trip ( described below ) , of whether a future - lower priced fare should be offered for a trip ( described below ) , and so on .", "label": "", "metadata": {}, "score": "49.716644"}
{"text": "The price - related prediction may be a prediction of future price direction , of whether price protection should be offered on a trip ( described below ) , of whether a future - lower priced fare should be offered for a trip ( described below ) , and so on .", "label": "", "metadata": {}, "score": "49.716644"}
{"text": "Each node has an associated rule that divides the data into two child groups or child nodes .A decision tree is constructed by recursively partitioning training data .At each node in the decision tree , the prediction system selects a partition that tends to maximize some metric .", "label": "", "metadata": {}, "score": "49.93017"}
{"text": "Each node has an associated rule that divides the data into two child groups or child nodes .A decision tree is constructed by recursively partitioning training data .At each node in the decision tree , the prediction system selects a partition that tends to maximize some metric .", "label": "", "metadata": {}, "score": "49.93017"}
{"text": "Edinburgh ( 2004 ) .Zarras , A. , Issarny , V. : Assessing software reliability at the architectural level .In : Proceedings of the 4th ACM SIGSOFT International Software Architecture Workshop .ACM , Ireland ( 2000 ) .Grassi , V. : Architecture - based dependability prediction for service - oriented computing .", "label": "", "metadata": {}, "score": "49.99548"}
{"text": "The prediction system also includes a search user interface component 190 , an input search component 191 , a determine price direction component 192 , an offer price protection component 193 , an offer future - lower priced fare component 194 , and a calculate confidence component 195 .", "label": "", "metadata": {}, "score": "50.23884"}
{"text": "The prediction system also includes a search user interface component 190 , an input search component 191 , a determine price direction component 192 , an offer price protection component 193 , an offer future - lower priced fare component 194 , and a calculate confidence component 195 .", "label": "", "metadata": {}, "score": "50.23884"}
{"text": "The current model minimizes the random variance component by using reliable measures of student performance .In signal detection terms the aim is to maximize the signal to noise ratio in the residual .Often researchers focus on modeling student performance in order to maximize prediction ( i.e. , large R 2 ) .", "label": "", "metadata": {}, "score": "50.262474"}
{"text": "\" The prediction system then assigns a label to each travel item for each observation date with enough subsequent observation dates to generate a label indicating what the prediction should have been for the travel item on the observation date .The prediction system then trains a classifier to make predictions for a travel item using the travel information and labels of the travel items as training data .", "label": "", "metadata": {}, "score": "50.58795"}
{"text": "\" The prediction system then assigns a label to each travel item for each observation date with enough subsequent observation dates to generate a label indicating what the prediction should have been for the travel item on the observation date .The prediction system then trains a classifier to make predictions for a travel item using the travel information and labels of the travel items as training data .", "label": "", "metadata": {}, "score": "50.58795"}
{"text": "In this paper , we define a framework for comparing reliability and availability analysis methods from the viewpoint of software architecture .Our contribution is the comparison of the existing analysis methods and techniques that can be used for reliability and availability prediction at the architectural level .", "label": "", "metadata": {}, "score": "50.80304"}
{"text": "Once more , the systematic effects of teacher were shown to be consistent over time .While this procedure demonstrated valid and reliable results it is based solely on individual student outcomes .A more comprehensive evaluation of teacher performance may require the combination of this method along with a method that is more sensitive to the teaching process .", "label": "", "metadata": {}, "score": "50.818535"}
{"text": "FIG .20 is a flow diagram that illustrates the processing of the offer future - lower priced fare component of the prediction system in one embodiment .The component is passed a market , a departure / return date , and a submarket representing a trip within a submarket .", "label": "", "metadata": {}, "score": "51.002083"}
{"text": "FIG .20 is a flow diagram that illustrates the processing of the offer future - lower priced fare component of the prediction system in one embodiment .The component is passed a market , a departure / return date , and a submarket representing a trip within a submarket .", "label": "", "metadata": {}, "score": "51.002083"}
{"text": "One technique uses a sequential minimal optimization algorithm that breaks the large quadratic programming problem down into a series of small quadratic programming problems that can be solved analytically .In one embodiment , the prediction system may use a neural network for classification .", "label": "", "metadata": {}, "score": "51.353695"}
{"text": "One technique uses a sequential minimal optimization algorithm that breaks the large quadratic programming problem down into a series of small quadratic programming problems that can be solved analytically .In one embodiment , the prediction system may use a neural network for classification .", "label": "", "metadata": {}, "score": "51.353695"}
{"text": "reliability_estimate . core . core .GetProbabilities : return probabilities else : return predicted , probabilities # Functions for testing and plotting # TODO Document those . evaluation . reliability . evaluation .testing .results : rels . append ( res .", "label": "", "metadata": {}, "score": "51.513027"}
{"text": "Because each classifier is trained using multiple markets , the classifier may be able to make accurate predictions for an event that occurs in one market for the first time based on similar events that occurred in other markets .When training a classifier with data from multiple markets , the prediction system may need to normalize the features .", "label": "", "metadata": {}, "score": "51.666824"}
{"text": "Because each classifier is trained using multiple markets , the classifier may be able to make accurate predictions for an event that occurs in one market for the first time based on similar events that occurred in other markets .When training a classifier with data from multiple markets , the prediction system may need to normalize the features .", "label": "", "metadata": {}, "score": "51.666824"}
{"text": "Reliability is not expected to by high given that teachers are working with a different groups of students every year and teachers that are failing to meet minimum standards are likely to be placed on a plan for improvement .Demonstrating the forth criterion of \" reliability of time \" is perhaps the most important aspect of a valid teacher effectiveness model .", "label": "", "metadata": {}, "score": "51.850155"}
{"text": "In one embodiment , the prediction system collects observations of flight information for all possible trips on a daily basis and stores the flight information in association with its observation date .A trip is defined as a particular market and a particular departure and return date combination .", "label": "", "metadata": {}, "score": "51.8526"}
{"text": "In one embodiment , the prediction system collects observations of flight information for all possible trips on a daily basis and stores the flight information in association with its observation date .A trip is defined as a particular market and a particular departure and return date combination .", "label": "", "metadata": {}, "score": "51.8526"}
{"text": "Information you provide in this evaluation will be used in conjunction with other measures to establish Teacher Effectiveness Ratings .Planning and Preparation .Develops and prioritizes learning goals and objectives .o Needs Improvement .o Meets Expectation .o Exceeds Expectation .", "label": "", "metadata": {}, "score": "51.864902"}
{"text": "To the extent that the aggregation of these residuals by classroom forms a systematic component indicates that the classroom a student is placed in has an impact on whether he or she will show gains or loses compared to expectation ( teacher component ) .", "label": "", "metadata": {}, "score": "51.869743"}
{"text": "A classifier , however , may provide a score not directly related to confidence level .In such a case , the prediction system trains a function to map the classifier scores to confidence levels .The prediction system may take the feature vectors for trips with observation dates with enough subsequent observation dates and generate labels indicating whether the price - related prediction for that trip was correct based on analysis of the actual observations within the labeling window .", "label": "", "metadata": {}, "score": "51.875694"}
{"text": "A classifier , however , may provide a score not directly related to confidence level .In such a case , the prediction system trains a function to map the classifier scores to confidence levels .The prediction system may take the feature vectors for trips with observation dates with enough subsequent observation dates and generate labels indicating whether the price - related prediction for that trip was correct based on analysis of the actual observations within the labeling window .", "label": "", "metadata": {}, "score": "51.875694"}
{"text": "Keywords .Reliability and availability analysis Software architecture Software components .Hofmeister , C. , Nord , R. , Soni , D. : Applied Software Architecture .Addison - Wesley , Reading , 397 p ( 1999 ) .Kruchten P. ( 1995 ) .", "label": "", "metadata": {}, "score": "51.91153"}
{"text": "In block 1006 , the component sets the minimum price to the selected price and then loops to block 1003 to select the next labeling date .In block 1007 , the component sets the training weight for the training data for the submarket of the selected trip to the absolute value of the future - lower priced fare plus overhead minus the minimum price .", "label": "", "metadata": {}, "score": "51.922455"}
{"text": "In block 1006 , the component sets the minimum price to the selected price and then loops to block 1003 to select the next labeling date .In block 1007 , the component sets the training weight for the training data for the submarket of the selected trip to the absolute value of the future - lower priced fare plus overhead minus the minimum price .", "label": "", "metadata": {}, "score": "51.922455"}
{"text": "Molter , G. : Integrating SAAM in Domain - centric and Reuse - based development process .In : Proceedings of the 2nd Nordic Workshop on Software Architecture ( 1999 ) .Kazman , R. , et al .:The architecture tradeoff analysis method .", "label": "", "metadata": {}, "score": "52.06743"}
{"text": "In one embodiment , the prediction system provides advice as to whether to wait or buy a ticket based on maximization of the purchaser 's expected profit .For example , the lowest fare may be expected to drop by 3 % with a probability of 0.8 , but the lowest fare may be expected to rise by 50 % with a probability of 0.2 .", "label": "", "metadata": {}, "score": "52.157127"}
{"text": "In one embodiment , the prediction system provides advice as to whether to wait or buy a ticket based on maximization of the purchaser 's expected profit .For example , the lowest fare may be expected to drop by 3 % with a probability of 0.8 , but the lowest fare may be expected to rise by 50 % with a probability of 0.2 .", "label": "", "metadata": {}, "score": "52.157127"}
{"text": "In one embodiment , the prediction system makes price - related predictions of items based on training a classifier using historical information including pricing information for the travel items and including labels relating to the price - related prediction that are generated automatically from subsequent historical information .", "label": "", "metadata": {}, "score": "52.196907"}
{"text": "In one embodiment , the prediction system makes price - related predictions of items based on training a classifier using historical information including pricing information for the travel items and including labels relating to the price - related prediction that are generated automatically from subsequent historical information .", "label": "", "metadata": {}, "score": "52.196907"}
{"text": "Thus , a feature vector for a trip represents an aggregation on information derived from the airline flights for that trip .The prediction system then generates a label for the price - related prediction for each trip for each observation date with enough subsequent observation dates to determine what the price - related predictions should have been for that observation date .", "label": "", "metadata": {}, "score": "52.510506"}
{"text": "Thus , a feature vector for a trip represents an aggregation on information derived from the airline flights for that trip .The prediction system then generates a label for the price - related prediction for each trip for each observation date with enough subsequent observation dates to determine what the price - related predictions should have been for that observation date .", "label": "", "metadata": {}, "score": "52.510506"}
{"text": "Furthermore , as medical device helping clinical decision making , the prediction needs to be made for each single patient with a measure of its reliability .To address these issues , there is a need for flexible prediction method less sensitive to difference in experimental and analytical conditions , applicable to each single patient , and providing measure of prediction confidence .", "label": "", "metadata": {}, "score": "52.69319"}
{"text": "This reliability measure can run out of memory fast if individual classifiers use a lot of memory , as it build m of them , thereby using : math:'m ' times memory for a single classifier .If instances for measuring predictions are given as a parameter , this class can only compute their reliability , which allows less memory use . \" core .", "label": "", "metadata": {}, "score": "52.86126"}
{"text": "See Calculation Defaults paragraph for more information about these default values .You may press Ok on item data dialog to close it and return to the product tree , where you may open the next component and perform the same procedure again .", "label": "", "metadata": {}, "score": "53.300976"}
{"text": "We introduce an additional ' confidence module ' ( not necessarily a neural network ) whose input at time is the real vector and whose output at time is the real vector , where the real vector is the internal state of .", "label": "", "metadata": {}, "score": "53.355476"}
{"text": "The prediction system can then generate a feature vector for a current observation and apply the classifier to the feature vector to predict the amount or percent of increase .When the prediction system determines that the likely direction will be up for a trip , the prediction system can retrieve the predicted amount of increase or use the percent of increase to generate likely amount of increase based on the current lowest price .", "label": "", "metadata": {}, "score": "53.415096"}
{"text": "The prediction system can then generate a feature vector for a current observation and apply the classifier to the feature vector to predict the amount or percent of increase .When the prediction system determines that the likely direction will be up for a trip , the prediction system can retrieve the predicted amount of increase or use the percent of increase to generate likely amount of increase based on the current lowest price .", "label": "", "metadata": {}, "score": "53.415096"}
{"text": "FIG .15 is a flow diagram that illustrates the processing of the predict price protection component of the prediction system in one embodiment .The component is passed an observation date and determines whether price protection should be offered for the trips observed on that observation date .", "label": "", "metadata": {}, "score": "53.49855"}
{"text": "FIG .15 is a flow diagram that illustrates the processing of the predict price protection component of the prediction system in one embodiment .The component is passed an observation date and determines whether price protection should be offered for the trips observed on that observation date .", "label": "", "metadata": {}, "score": "53.49855"}
{"text": "The user devices may include cell phones , personal digital assistants , smart phones , personal computers , programmable consumer electronics , digital cameras , and so on .The prediction system may be described in the general context of computer - executable instructions , such as program modules , executed by one or more computers or other devices .", "label": "", "metadata": {}, "score": "53.571648"}
{"text": "The user devices may include cell phones , personal digital assistants , smart phones , personal computers , programmable consumer electronics , digital cameras , and so on .The prediction system may be described in the general context of computer - executable instructions , such as program modules , executed by one or more computers or other devices .", "label": "", "metadata": {}, "score": "53.571648"}
{"text": "In decision block 1302 , if all the markets have already been selected , then the component continues at block 1310 , else the component continues at block 1303 .In block 1303 , the component selects the next departure / return date combination .", "label": "", "metadata": {}, "score": "54.203724"}
{"text": "In decision block 1302 , if all the markets have already been selected , then the component continues at block 1310 , else the component continues at block 1303 .In block 1303 , the component selects the next departure / return date combination .", "label": "", "metadata": {}, "score": "54.203724"}
{"text": "Accordingly , the invention is not limited except as by the appended claims .A method and system is provided for making price - related predictions of items based on training a classifier using historical information including pricing information for the items and labels relating to the price - related information that are generated automatically from the historical information ....", "label": "", "metadata": {}, "score": "54.230957"}
{"text": "Evaluating the Model .The utility of a teacher effectiveness model must be determined based on its validity and reliability .In order to demonstrate its validity and reliability it must meet four criteria : .Cross validate with other measures of teaching performance .", "label": "", "metadata": {}, "score": "54.346725"}
{"text": "Yacoub , S. , Cukic , B. , Ammar , H. : Scenario - based reliability analysis of component - based software .In : Proceedings of 10th International Symposium on Software Reliability Engineering ( ISSRE'99 ) ( 1999 ) .Krishnamurthy , S. , Mathur , A.P. : On the estimation of reliability of a software system using reliabilities of its components .", "label": "", "metadata": {}, "score": "54.379482"}
{"text": "The observation store also includes the feature vectors for each trip for each observation date along with the assigned labels for those observation dates within a labeling window of subsequent observation dates .The classifier store contains the parameters that represent the classifiers that were generated when the classifiers were trained .", "label": "", "metadata": {}, "score": "54.50776"}
{"text": "The observation store also includes the feature vectors for each trip for each observation date along with the assigned labels for those observation dates within a labeling window of subsequent observation dates .The classifier store contains the parameters that represent the classifiers that were generated when the classifiers were trained .", "label": "", "metadata": {}, "score": "54.50776"}
{"text": "Given equivalent variances a larger sample would have yielded a larger number of significant coefficients .Table 1 .Cross Validation of the Teacher Effectiveness Index ( TEI ) with a Specially Constructed Teacher Evaluation Questionnaire .Total .Overall Questionnaire .", "label": "", "metadata": {}, "score": "54.52575"}
{"text": "probabilities [ 0 ] .reliability_estimate [ i ] .signed_or_absolute , \\ res .results [ 0 ] .probabilities [ 0 ] .reliability_estimate [ i ] .method def get_prediction_error_list ( res ): return [ result .actual_class - result .", "label": "", "metadata": {}, "score": "54.607006"}
{"text": "From these results it can be seen that relative growth does not appear to change over time ( grade level ) .As a result effectiveness rating will be unrelated to grade level .Our investigations of teacher effectiveness using a 2-level HLM model removed systematic variance related to school and classroom effects resulting in an almost complete removal of systematic variance in the error component ( residual ) .", "label": "", "metadata": {}, "score": "54.632744"}
{"text": "The travel items may be airline trips , hotel rooms , rental cars , ship cruises , travel packages , or other travel - related items .The prediction system may collect the travel information at a specified observation rate ( e.g. , weekly , once daily , and twice daily ) or at a variable observation rate ( e.g. , weekly during a low demand period and daily during a high demand period ) .", "label": "", "metadata": {}, "score": "54.762135"}
{"text": "The travel items may be airline trips , hotel rooms , rental cars , ship cruises , travel packages , or other travel - related items .The prediction system may collect the travel information at a specified observation rate ( e.g. , weekly , once daily , and twice daily ) or at a variable observation rate ( e.g. , weekly during a low demand period and daily during a high demand period ) .", "label": "", "metadata": {}, "score": "54.762135"}
{"text": "IEEE Softw .12(6 ) : 42 - 50 CrossRef .Clements , P. , Northrop , L. : Software Product Lines : Practices and Patterns .Addison - Wesley , Boston , 608 p ( 2002 ) .Shooman , M. : Structural models for software reliability prediction .", "label": "", "metadata": {}, "score": "54.76979"}
{"text": "Alternatively , the type of room could simply be a feature of the feature vector representing hotel rooms in the market .The prediction system can collect hotel information on a daily or some other basis for various stays in each market similar to how information for airline trips are collected .", "label": "", "metadata": {}, "score": "54.906643"}
{"text": "Alternatively , the type of room could simply be a feature of the feature vector representing hotel rooms in the market .The prediction system can collect hotel information on a daily or some other basis for various stays in each market similar to how information for airline trips are collected .", "label": "", "metadata": {}, "score": "54.906643"}
{"text": "In decision block 1704 , if all such trips have already been selected , then the component continues at block 1707 , else the component continues at block 1705 .In block 1705 , the component increments the total price by the future - lower priced fare for the selected trip .", "label": "", "metadata": {}, "score": "55.44082"}
{"text": "In decision block 1704 , if all such trips have already been selected , then the component continues at block 1707 , else the component continues at block 1705 .In block 1705 , the component increments the total price by the future - lower priced fare for the selected trip .", "label": "", "metadata": {}, "score": "55.44082"}
{"text": "In block 508 , the component stores the flight information and then loops to block 505 to select the next return date .FIG .6 is a flow diagram that illustrates the processing of the generate feature vectors component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "55.48252"}
{"text": "In block 508 , the component stores the flight information and then loops to block 505 to select the next return date .FIG .6 is a flow diagram that illustrates the processing of the generate feature vectors component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "55.48252"}
{"text": "In block 803 , the component selects the next labeling date .In decision block 804 , if all the labeling dates have already been selected , then the component continues at block 806 , else the component continues at block 805 .", "label": "", "metadata": {}, "score": "55.571877"}
{"text": "In block 803 , the component selects the next labeling date .In decision block 804 , if all the labeling dates have already been selected , then the component continues at block 806 , else the component continues at block 805 .", "label": "", "metadata": {}, "score": "55.571877"}
{"text": "On the other hand , if the residual is to be used as a reliable measure of teacher effectiveness ( TEI ) then maximizing R 2 produces an unacceptably high random to systematic variance ratio .Removing all the systematic variance can be referred to as \" over modeling \" .", "label": "", "metadata": {}, "score": "55.60287"}
{"text": "In : Proceeding of the 9th International Software Reliability Engineering ( 1998 ) .Leangsuksun , C. , Song , H. , Shen , L. : Reliability modeling using UML .In : Proceeding of the 2003 International Conference on Software Engineering Research and Practice .", "label": "", "metadata": {}, "score": "55.617386"}
{"text": "The prediction system then stores the prediction for each trip .When a user subsequently requests flight information for a particular trip later that day , the prediction system retrieves the previously stored price - related prediction and presents it to the user .", "label": "", "metadata": {}, "score": "55.715904"}
{"text": "The prediction system then stores the prediction for each trip .When a user subsequently requests flight information for a particular trip later that day , the prediction system retrieves the previously stored price - related prediction and presents it to the user .", "label": "", "metadata": {}, "score": "55.715904"}
{"text": "In block 1305 , the component selects the next price direction .In decision block 1306 , if all the price directions have already been selected , then the component continues at block 1308 , else the component continues at block 1307 .", "label": "", "metadata": {}, "score": "55.891808"}
{"text": "In block 1305 , the component selects the next price direction .In decision block 1306 , if all the price directions have already been selected , then the component continues at block 1308 , else the component continues at block 1307 .", "label": "", "metadata": {}, "score": "55.891808"}
{"text": "In block 2001 , the component retrieves real - time flight information for the submarket of the passed trip from the flight information source .In block 2002 , the component selects the minimum price within the flight information .In block 2003 , the component retrieves the score from the future - lower priced fare table for the predicted price closest to the selected minimum price .", "label": "", "metadata": {}, "score": "55.988316"}
{"text": "In block 2001 , the component retrieves real - time flight information for the submarket of the passed trip from the flight information source .In block 2002 , the component selects the minimum price within the flight information .In block 2003 , the component retrieves the score from the future - lower priced fare table for the predicted price closest to the selected minimum price .", "label": "", "metadata": {}, "score": "55.988316"}
{"text": "The prediction system may present to the purchaser a graph of the probability of various fare decreases and fare increases .The graph may be a bar chart that , for different fare change amounts ( e.g. , $ 10 , $ 20 , $ 30 ) , shows the probability of an increase or a decrease by that amount .", "label": "", "metadata": {}, "score": "56.05771"}
{"text": "The prediction system may present to the purchaser a graph of the probability of various fare decreases and fare increases .The graph may be a bar chart that , for different fare change amounts ( e.g. , $ 10 , $ 20 , $ 30 ) , shows the probability of an increase or a decrease by that amount .", "label": "", "metadata": {}, "score": "56.05771"}
{"text": "For example , the prediction system may train a classifier using the training data collected from all markets .In such a case , the classifiers can be used to make predictions for trips in any market .The prediction system may select to train the classifiers using only training data derived from representative markets .", "label": "", "metadata": {}, "score": "56.084534"}
{"text": "For example , the prediction system may train a classifier using the training data collected from all markets .In such a case , the classifiers can be used to make predictions for trips in any market .The prediction system may select to train the classifiers using only training data derived from representative markets .", "label": "", "metadata": {}, "score": "56.084534"}
{"text": "Note that a greater value implies greater error .For classification , 1 minus the average Euclidean distance between class probability distributions predicted by the model , and distributions predicted by the individual bagged models , is used as the BAGV reliability measure .", "label": "", "metadata": {}, "score": "56.223373"}
{"text": "The correlations are more acceptable given that the two methods of evaluation are measuring different facets of education .The teacher evaluation focuses more on \" process \" while teacher effectiveness focuses more on \" outcomes \" .The Teacher Evaluation Questionnaire can be seen in Appendix B .", "label": "", "metadata": {}, "score": "56.35952"}
{"text": "At time there is a target output .The predictor 's goal is to make for all .After having provided a number of training examples for , usually will still make some errors , particularily if the training environment is noisy .", "label": "", "metadata": {}, "score": "56.657654"}
{"text": "Cheung R.C. ( 1980 ) .A user - oriented software reliability model .IEEE Trans .Softw .Eng .6(2 ) : 118 - 125 CrossRef MathSciNet .Musa J.D. ( 1993 ) .Operational profiles in software - reliability engineering .", "label": "", "metadata": {}, "score": "56.674805"}
{"text": "Goseva - Popstojanova K. and Trivedi K.S. ( 2001 ) .Architecture - based approach to reliability assessment of software systems .Perform .Evaluat . 45(2 - 3 ) : 179 - 204 MATH CrossRef .Littlewood B. ( 1979 ) .", "label": "", "metadata": {}, "score": "56.67623"}
{"text": "Accordingly , the invention is not limited except as by the appended claims .Consider an adaptive discrete time ' predictor ' ( not necessarily a neural network ) whose input at time is the real vector and whose output at time is the real vector , where the real vector represents the internal state of .", "label": "", "metadata": {}, "score": "56.752533"}
{"text": "The component quantizes or bucketizes the scores .In block 1701 , the component selects the next bucket starting with the bucket having the highest score .In decision block 1702 , if all the buckets have already been selected , then the component returns , else the component continues at block 1703 .", "label": "", "metadata": {}, "score": "56.770966"}
{"text": "The component quantizes or bucketizes the scores .In block 1701 , the component selects the next bucket starting with the bucket having the highest score .In decision block 1702 , if all the buckets have already been selected , then the component returns , else the component continues at block 1703 .", "label": "", "metadata": {}, "score": "56.770966"}
{"text": "In one embodiment , the prediction system may use a support vector machine for classification .A support vector machine operates by finding a hyper - surface in the space of possible inputs .This allows for correct classification of data that is similar to but not identical to the training data .", "label": "", "metadata": {}, "score": "56.837982"}
{"text": "In one embodiment , the prediction system may use a support vector machine for classification .A support vector machine operates by finding a hyper - surface in the space of possible inputs .This allows for correct classification of data that is similar to but not identical to the training data .", "label": "", "metadata": {}, "score": "56.837982"}
{"text": "The component determines the price direction from the price direction predictions generated during the batch processing .In block 1801 , the component retrieves real - time flight information for the passed trip from the flight information source .In block 1802 , the component selects the minimum price of the real - time flight information .", "label": "", "metadata": {}, "score": "56.846336"}
{"text": "The component determines the price direction from the price direction predictions generated during the batch processing .In block 1801 , the component retrieves real - time flight information for the passed trip from the flight information source .In block 1802 , the component selects the minimum price of the real - time flight information .", "label": "", "metadata": {}, "score": "56.846336"}
{"text": "After the classifiers are trained , the classify observations component classifies the current observations to generate the price - related predictions in batch mode .The classify observations component invokes a predict price direction component 181 , a predict price protection component 182 , and a predict future - lower priced fare component 183 , and a train confidence component .", "label": "", "metadata": {}, "score": "56.895046"}
{"text": "After the classifiers are trained , the classify observations component classifies the current observations to generate the price - related predictions in batch mode .The classify observations component invokes a predict price direction component 181 , a predict price protection component 182 , and a predict future - lower priced fare component 183 , and a train confidence component .", "label": "", "metadata": {}, "score": "56.895046"}
{"text": "In one embodiment , the prediction system uses a decision tree for classification .A decision tree classifier is used to classify data by applying rules of the tree to the data until a leaf node is reached .The data is then assigned the classification ( e.g. , increasing price direction or decreasing price direction ) of the leaf node .", "label": "", "metadata": {}, "score": "57.15792"}
{"text": "In one embodiment , the prediction system uses a decision tree for classification .A decision tree classifier is used to classify data by applying rules of the tree to the data until a leaf node is reached .The data is then assigned the classification ( e.g. , increasing price direction or decreasing price direction ) of the leaf node .", "label": "", "metadata": {}, "score": "57.15792"}
{"text": "The direction table contains an entry for various ticket prices that contains an indication of the direction associated with each ticket price and a confidence in the direction .When the prediction system generates price - related predictions in a batch mode , the predictions are based on the current prices of the tickets at the time the prediction is made .", "label": "", "metadata": {}, "score": "57.32464"}
{"text": "The direction table contains an entry for various ticket prices that contains an indication of the direction associated with each ticket price and a confidence in the direction .When the prediction system generates price - related predictions in a batch mode , the predictions are based on the current prices of the tickets at the time the prediction is made .", "label": "", "metadata": {}, "score": "57.32464"}
{"text": "As another example , when the predictions of direction within a market have not been particularly accurate , the prediction system may have a rule to change a strong up or down prediction to a weaker up or down prediction or reduce the confidence level .", "label": "", "metadata": {}, "score": "57.476425"}
{"text": "As another example , when the predictions of direction within a market have not been particularly accurate , the prediction system may have a rule to change a strong up or down prediction to a weaker up or down prediction or reduce the confidence level .", "label": "", "metadata": {}, "score": "57.476425"}
{"text": "The component then loops selecting each labeling date and collecting information to determine the label to generate for that trip .In block 901 , the component selects the next labeling date of the labeling window .In decision block 902 , if all the labeling dates have already been selected , then the component continues at block 905 , else the component continues at block 903 .", "label": "", "metadata": {}, "score": "57.861553"}
{"text": "The component then loops selecting each labeling date and collecting information to determine the label to generate for that trip .In block 901 , the component selects the next labeling date of the labeling window .In decision block 902 , if all the labeling dates have already been selected , then the component continues at block 905 , else the component continues at block 903 .", "label": "", "metadata": {}, "score": "57.861553"}
{"text": "If is a back - propagation net , an approximation of can be obtained by using gradient descent ( with a small learning rate ) for training at time to emit 's local prediction errors A Precipitation Climatology for Stations in the Tropical Basin ; Effects of ENSO References .", "label": "", "metadata": {}, "score": "58.07996"}
{"text": "The prediction store includes a future - lower priced fare threshold table 305 that contains a threshold indicating the future - lower priced fare score above which future - lower priced fares should be offered to users .The computing devices on which the prediction system may be implemented may include a central processing unit , memory , input devices ( e.g. , keyboard and pointing devices ) , output devices ( e.g. , display devices ) , and storage devices ( e.g. , disk drives ) .", "label": "", "metadata": {}, "score": "58.156807"}
{"text": "The prediction store includes a future - lower priced fare threshold table 305 that contains a threshold indicating the future - lower priced fare score above which future - lower priced fares should be offered to users .The computing devices on which the prediction system may be implemented may include a central processing unit , memory , input devices ( e.g. , keyboard and pointing devices ) , output devices ( e.g. , display devices ) , and storage devices ( e.g. , disk drives ) .", "label": "", "metadata": {}, "score": "58.156807"}
{"text": "In block 905 , the component calculates a training weight for the trip as the absolute value of the protection price minus the difference between the maximum price and the current price .In block 906 , the component sets the label to the sign of the protection price minus the difference between the maximum price and the current price .", "label": "", "metadata": {}, "score": "58.27323"}
{"text": "In block 905 , the component calculates a training weight for the trip as the absolute value of the protection price minus the difference between the maximum price and the current price .In block 906 , the component sets the label to the sign of the protection price minus the difference between the maximum price and the current price .", "label": "", "metadata": {}, "score": "58.27323"}
{"text": "The prediction system may collect flight information for each flight that includes market , departing date and time , returning date and time , airline , available seats , classes of available seats , number of stops , ticket restrictions , and so on .", "label": "", "metadata": {}, "score": "58.404007"}
{"text": "When the prediction system uses batch mode predicting , the prediction store contains the prediction for the current date for each trip of each market .The prediction system also includes a fetch observations component 161 , a filter observations component 162 , a generate feature vectors component 163 , a label training data component 164 , a train classifiers component 165 , and a classify observations component 166 .", "label": "", "metadata": {}, "score": "58.42275"}
{"text": "When the prediction system uses batch mode predicting , the prediction store contains the prediction for the current date for each trip of each market .The prediction system also includes a fetch observations component 161 , a filter observations component 162 , a generate feature vectors component 163 , a label training data component 164 , a train classifiers component 165 , and a classify observations component 166 .", "label": "", "metadata": {}, "score": "58.42275"}
{"text": "To minimize the effect of the classifier that uses such a feature , the prediction system reduces the effect a newly generated weak classifier will have on determining the training weights for the feature vectors for the next weak classifier that were incorrectly classified .", "label": "", "metadata": {}, "score": "58.442276"}
{"text": "To minimize the effect of the classifier that uses such a feature , the prediction system reduces the effect a newly generated weak classifier will have on determining the training weights for the feature vectors for the next weak classifier that were incorrectly classified .", "label": "", "metadata": {}, "score": "58.442276"}
{"text": "In block 1401 , the component selects the strong direction with the highest score .In decision block 1402 , if the highest score exceeds the threshold amount by more than the other scores of the strong directions , then the component returns the selected direction , else the component continues at block 1403 .", "label": "", "metadata": {}, "score": "58.679173"}
{"text": "In block 1401 , the component selects the strong direction with the highest score .In decision block 1402 , if the highest score exceeds the threshold amount by more than the other scores of the strong directions , then the component returns the selected direction , else the component continues at block 1403 .", "label": "", "metadata": {}, "score": "58.679173"}
{"text": "Classifier ' .: type res : : class:'Orange.evaluation.testing .ExperimentResults ' Return Spearman 's coefficient between the prediction error and each of the used reliability estimates .Also , return the p - value of each of the coefficients . \" results [ 0 ] .", "label": "", "metadata": {}, "score": "58.989975"}
{"text": "In block 1502 , if all the markets have already been selected , then the component returns , else the component continues at block 1503 .In block 1503 , the component selects the next departure / return date combination for the selected market .", "label": "", "metadata": {}, "score": "59.06089"}
{"text": "In block 1502 , if all the markets have already been selected , then the component returns , else the component continues at block 1503 .In block 1503 , the component selects the next departure / return date combination for the selected market .", "label": "", "metadata": {}, "score": "59.06089"}
{"text": "The residual value becomes the unit ( score ) of interest .The residual forms the Teacher Effectiveness Index ( TEI ) .While the TEI contains random variance it also contains systematic variance produced by variables that were not in the equation ( e.g. , teacher effects ) .", "label": "", "metadata": {}, "score": "59.099648"}
{"text": "Predictive skills of seasonal to annual rainfall variations in the U.S. affiliated Pacific Islands : Canonical correlation analysis and multivariate principal component regression approaches .J. Climate , 10 , in press .probabilities [ 0 ] .reliability_estimate [ i ] . estimate for result in res . results ] , \\ res .", "label": "", "metadata": {}, "score": "59.13089"}
{"text": "A core feature represents a feature generated from the flight information for a single observation date .Other features may indicate time of year ( e.g. , season ) , holiday season ( e.g. , spring break ) , and so on .", "label": "", "metadata": {}, "score": "59.26994"}
{"text": "A core feature represents a feature generated from the flight information for a single observation date .Other features may indicate time of year ( e.g. , season ) , holiday season ( e.g. , spring break ) , and so on .", "label": "", "metadata": {}, "score": "59.26994"}
{"text": "Each entry of the flight table contains the raw flight information collected from the flight information source by the fetch observation component .The departure / return table may also contain a feature vector for the corresponding trip generated by the generate feature vector component .", "label": "", "metadata": {}, "score": "59.36657"}
{"text": "Each entry of the flight table contains the raw flight information collected from the flight information source by the fetch observation component .The departure / return table may also contain a feature vector for the corresponding trip generated by the generate feature vector component .", "label": "", "metadata": {}, "score": "59.36657"}
{"text": "Singh , H. , et al .:A Bayesian approach to reliability prediction and assessment of component based systems .In : Proceedings of 12th International Symposium on Software Reliability Engineering ( ISSRE'01 ) .Hong Kong ( 2001 ) .", "label": "", "metadata": {}, "score": "59.3915"}
{"text": ": type res : : class:'Orange.evaluation.testing .ExperimentResults ' Return Pearson 's coefficient between the prediction error and each of the used reliability estimates .Also , return the p - value of each of the coefficients . \" results [ 0 ] .", "label": "", "metadata": {}, "score": "59.748226"}
{"text": "In block 1001 , the component selects the next submarket of the trip .In decision block 1002 , if all the submarkets have already been selected , then the component returns , else the component continues at block 1003 .In block 1003 , the component selects the next labeling date .", "label": "", "metadata": {}, "score": "59.75377"}
{"text": "In block 1001 , the component selects the next submarket of the trip .In decision block 1002 , if all the submarkets have already been selected , then the component returns , else the component continues at block 1003 .In block 1003 , the component selects the next labeling date .", "label": "", "metadata": {}, "score": "59.75377"}
{"text": "Note that a greater value implies greater prediction error .For classification , CNK is equal to 1 minus the average distance between predicted class distribution and ( trivial ) class distributions of the $ k$ nearest neighbours from the learning set .", "label": "", "metadata": {}, "score": "59.821938"}
{"text": "16 is a flow diagram that illustrates the processing of the predict future - lower priced fare component of the prediction system in one embodiment .FIG .17 is a flow diagram that illustrates the processing of the establish future - lower priced fare threshold component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "59.910286"}
{"text": "16 is a flow diagram that illustrates the processing of the predict future - lower priced fare component of the prediction system in one embodiment .FIG .17 is a flow diagram that illustrates the processing of the establish future - lower priced fare threshold component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "59.910286"}
{"text": "In : 8th International Conference on Fundamental Approaches to Software Engineering , FASE 2005 .Springer Lecture Notes in Computer Science , Edinburgh , ( 2005 ) .Thomason , M.G. , Whittaker , J.A. : Rare failure - state in a Markov chain model for software reliability .", "label": "", "metadata": {}, "score": "60.055363"}
{"text": "Mon .Wea . Rev. , 111 , 517 - 528 .Ropelewski , C.F. , J.E. Janowiak , and M.S , Halpert , 1985 : The analysis and display of real - time surface climate data .Mon .Wea . Rev. , 113 , 1101 - 1106 .", "label": "", "metadata": {}, "score": "60.056175"}
{"text": "Mon .Wea . Rev. , 111 , 517 - 528 .Ropelewski , C.F. , J.E. Janowiak , and M.S , Halpert , 1985 : The analysis and display of real - time surface climate data .Mon .Wea . Rev. , 113 , 1101 - 1106 .", "label": "", "metadata": {}, "score": "60.056175"}
{"text": "The left - over variance is called a \" residual \" in statistical terms , and it is used as a Teacher Effectiveness Index ( TEI ) .Having a well delineated operational definition of teacher effectiveness is a crucial first step to measuring or modeling teacher effectiveness .", "label": "", "metadata": {}, "score": "60.06319"}
{"text": "Adaptive boosting is an iterative process that runs multiple tests on a collection of training data .Adaptive boosting transforms a weak learning algorithm ( an algorithm that performs at a level only slightly better than chance ) into a strong learning algorithm ( an algorithm that displays a low error rate ) .", "label": "", "metadata": {}, "score": "60.20612"}
{"text": "Adaptive boosting is an iterative process that runs multiple tests on a collection of training data .Adaptive boosting transforms a weak learning algorithm ( an algorithm that performs at a level only slightly better than chance ) into a strong learning algorithm ( an algorithm that displays a low error rate ) .", "label": "", "metadata": {}, "score": "60.20612"}
{"text": "About this Article .Title .Survey of reliability and availability prediction methods from the viewpoint of software architecture Teaching ability ( effectiveness ) can be difficult to define and even more difficult to measure directly .Since teacher effectiveness is difficult to measure directly many researchers use statistical methods to remove variance that is considered to be \" beyond the teacher 's control \" .", "label": "", "metadata": {}, "score": "60.36921"}
{"text": "The prediction system may train a single classifier to classify the price direction for any market or may train a separate classifier for each market .The prediction system trains a classifier by generating a feature vector representing the flight information of a trip .", "label": "", "metadata": {}, "score": "60.480442"}
{"text": "The prediction system may train a single classifier to classify the price direction for any market or may train a separate classifier for each market .The prediction system trains a classifier by generating a feature vector representing the flight information of a trip .", "label": "", "metadata": {}, "score": "60.480442"}
{"text": "In block 1709 , the component sets the maximum profit divided by price equal to the total profit divided by the total price and loops to block 1701 to select the next bucket .FIG .18 is a flow diagram that illustrates the processing of the determine price direction component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "60.50662"}
{"text": "In block 1709 , the component sets the maximum profit divided by price equal to the total profit divided by the total price and loops to block 1701 to select the next bucket .FIG .18 is a flow diagram that illustrates the processing of the determine price direction component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "60.50662"}
{"text": "Edinburgh ( 2004 ) .ISO / IEC , Software Engineering - Product Quality .Part 1 : Quality Model ( 2001 ) .Ozekici S. and Soyer R. ( 2003 ) .Reliability of software with an operational profile .Eur .", "label": "", "metadata": {}, "score": "60.51642"}
{"text": "The prediction system collects flight information for flights on a daily basis or at another observation rate .The date that flight information is collected is referred to as the observation date of the flight information .The prediction system generates training data to train a classifier to make the price - related predictions using the flight information .", "label": "", "metadata": {}, "score": "60.647858"}
{"text": "The prediction system collects flight information for flights on a daily basis or at another observation rate .The date that flight information is collected is referred to as the observation date of the flight information .The prediction system generates training data to train a classifier to make the price - related predictions using the flight information .", "label": "", "metadata": {}, "score": "60.647858"}
{"text": "17 is a flow diagram that illustrates the processing of the establish future - lower priced fare threshold component of the prediction system in one embodiment .The component is passed a date and establishes a future - lower priced fare threshold indicating a minimum score for which future - lower priced fares may be offered .", "label": "", "metadata": {}, "score": "60.674637"}
{"text": "17 is a flow diagram that illustrates the processing of the establish future - lower priced fare threshold component of the prediction system in one embodiment .The component is passed a date and establishes a future - lower priced fare threshold indicating a minimum score for which future - lower priced fares may be offered .", "label": "", "metadata": {}, "score": "60.674637"}
{"text": "Modelling probabilities of local prediction failures .Let be -dimensional .Let for all appropriate . can be estimated by , where is the number of those times with and where is the number of those times with .Variations of method 1 and method 2 would not measure the probabilities of exact matches between predictions and reality but the probability of ' near - matches ' within a certain ( e.g. euclidian ) tolerance .", "label": "", "metadata": {}, "score": "60.77503"}
{"text": "One skilled in the art will appreciate that the increments for making the price - related predictions can be adjusted to the desired accuracy of predictions .The direction table includes an entry for each ticket price at which a prediction is made , the direction of the prediction , and confidence level of the prediction .", "label": "", "metadata": {}, "score": "60.81462"}
{"text": "One skilled in the art will appreciate that the increments for making the price - related predictions can be adjusted to the desired accuracy of predictions .The direction table includes an entry for each ticket price at which a prediction is made , the direction of the prediction , and confidence level of the prediction .", "label": "", "metadata": {}, "score": "60.81462"}
{"text": "The prediction system may also generate separate classifiers for different prediction periods such as the next seven days , the next two weeks , and the next month .The prediction system may also use various alternate communication channels for providing travel - related predictions .", "label": "", "metadata": {}, "score": "60.896378"}
{"text": "The prediction system may also generate separate classifiers for different prediction periods such as the next seven days , the next two weeks , and the next month .The prediction system may also use various alternate communication channels for providing travel - related predictions .", "label": "", "metadata": {}, "score": "60.896378"}
{"text": "8 is a flow diagram that illustrates the processing of the assign price direction labels component of the prediction system in one embodiment .The component is passed an observation date , a market , and a departure / return date specifying a specific trip at the observation date .", "label": "", "metadata": {}, "score": "61.22309"}
{"text": "8 is a flow diagram that illustrates the processing of the assign price direction labels component of the prediction system in one embodiment .The component is passed an observation date , a market , and a departure / return date specifying a specific trip at the observation date .", "label": "", "metadata": {}, "score": "61.22309"}
{"text": "Mon .Wea .Rev , 109 , 1150 - 1168 .Xie and Arkin , 1997 : Global Precipitation : A 17-year monthly analysis based on gauge observations , satellite estimates , and numerical model outputs , Bulletin of the American Meteorological Society , 78 , 2539 - 2558 .", "label": "", "metadata": {}, "score": "61.230324"}
{"text": "Since the residual still contains random variance ( error ) that can not be further partitioned we must estimate the proportion of the residual that is likely due to random error .We know that the average error in prediction over the entire population ( district ) is zero .", "label": "", "metadata": {}, "score": "61.238827"}
{"text": "However this manual provides some information for some implementation - specific or special cases - see next paragraphs .Fill in known parameter values .For parameters left undefined ( \" --- \" ) some typical default values will be taken .", "label": "", "metadata": {}, "score": "61.297554"}
{"text": "Additionally , table 5 shows no relationship between a student 's absolute level of performance and their associated residuals since every student serves as his or her own control .The aggregation of individual student residuals by classroom forms the TEI .", "label": "", "metadata": {}, "score": "61.366177"}
{"text": "For example , the first interval may be from midnight to 6 a.m. , the second interval may be 6 a.m. to 9 a.m. , and so on .The prediction system generates labels for trips on an observation date based on analysis of flight information for the trips on subsequent observation dates indicating the economics of offering a future - lower priced fare .", "label": "", "metadata": {}, "score": "61.439533"}
{"text": "For example , the first interval may be from midnight to 6 a.m. , the second interval may be 6 a.m. to 9 a.m. , and so on .The prediction system generates labels for trips on an observation date based on analysis of flight information for the trips on subsequent observation dates indicating the economics of offering a future - lower priced fare .", "label": "", "metadata": {}, "score": "61.439533"}
{"text": "In one embodiment , the conditions for determining whether the labeling window indicates a positive or a negative sample is represented by the following table .FIG .9 is a flow diagram that illustrates the processing of the assign price protection labels component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "61.550255"}
{"text": "In one embodiment , the conditions for determining whether the labeling window indicates a positive or a negative sample is represented by the following table .FIG .9 is a flow diagram that illustrates the processing of the assign price protection labels component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "61.550255"}
{"text": "IEEE , Boca Raton , ( 1999 ) .Gokhale , S. , Trivedi , K.S. : Reliability prediction and sensitivity analysis based on software architecture .In : Proceedings of the 3rd International Symposium on Software Reliability Engineering ( ISSRE 02 ) .", "label": "", "metadata": {}, "score": "61.79418"}
{"text": "The label training data component generates and assigns labels to each trip within each market .If the prediction system makes multiple types of price - related predictions , then the label training data component may invoke an assign price direction labels component 171 , an assign price protection labels component 172 , and an assign future - lower priced fare labels component 173 .", "label": "", "metadata": {}, "score": "61.943535"}
{"text": "The label training data component generates and assigns labels to each trip within each market .If the prediction system makes multiple types of price - related predictions , then the label training data component may invoke an assign price direction labels component 171 , an assign price protection labels component 172 , and an assign future - lower priced fare labels component 173 .", "label": "", "metadata": {}, "score": "61.943535"}
{"text": "A computing system for making a price - related prediction of airline ticket prices for trips , comprising : . a memory storing computer - executable instructions of : . a component that generates a feature vector for each trip for each observation date based on the provided flight information ; . a component that trains a classifier to make a price - related prediction for trips using the feature vectors and determined predictions for the prices as of observation dates for the trips ; and .", "label": "", "metadata": {}, "score": "62.144638"}
{"text": "Classifier ' .: type res : : class:'Orange.evaluation.testing .ExperimentResults ' Return average Pearson 's coefficient over all folds between prediction error and each of the used estimates . \" evaluation . scoring .results [ 0 ] .probabilities [ 0 ] .", "label": "", "metadata": {}, "score": "62.164066"}
{"text": "OMG , UML Profile for Schedulability , Performance , and Time Specification .Object Management Group ( 2003 ) .Greenfield , J. : UML Profile for EJB , in Technical report .Rational Software Corp ( 2001 ) .Rodrigues , G.N. : A model driven approach for software systems reliability .", "label": "", "metadata": {}, "score": "62.27382"}
{"text": "reliability_estimate [ 0 ] . estimate ) acc . append ( res .probabilities [ 0 ] [ res . xlim ( 0 . plt .plt . xlabel ( \" Reliability \" ) plt . ylabel ( \" Accuracy \" ) if file_name is None : plt . show ( ) else : plt . stats . spearmanr ( acc , rels ) [ 0 ]", "label": "", "metadata": {}, "score": "62.546234"}
{"text": "4 is a flow diagram that illustrates the processing of a generate predictions component of the prediction system in one embodiment .FIG .5 is a flow diagram that illustrates the processing of the fetch observations component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "62.72516"}
{"text": "4 is a flow diagram that illustrates the processing of a generate predictions component of the prediction system in one embodiment .FIG .5 is a flow diagram that illustrates the processing of the fetch observations component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "62.72516"}
{"text": "Price protection increases consumer confidence when making purchases by reducing the risk associated with fluctuating prices .A price protection system is described in U.S. patent application Ser .No .11/599,607 , entitled \" System and Method of Protecting Prices \" and filed on Nov. 13 , 2006 , which is hereby incorporated by reference .", "label": "", "metadata": {}, "score": "62.837997"}
{"text": "Price protection increases consumer confidence when making purchases by reducing the risk associated with fluctuating prices .A price protection system is described in U.S. patent application Ser .No .11/599,607 , entitled \" System and Method of Protecting Prices \" and filed on Nov. 13 , 2006 , which is hereby incorporated by reference .", "label": "", "metadata": {}, "score": "62.837997"}
{"text": "Thus , the prediction will not generate labels for observation dates that do not have enough subsequent observation dates to fill the labeling window .For example , if the labeling window includes seven observation dates ( assuming observations are made on a daily basis ) , then the prediction system will only generate labels for observation dates more than seven days in the past .", "label": "", "metadata": {}, "score": "63.039993"}
{"text": "Thus , the prediction will not generate labels for observation dates that do not have enough subsequent observation dates to fill the labeling window .For example , if the labeling window includes seven observation dates ( assuming observations are made on a daily basis ) , then the prediction system will only generate labels for observation dates more than seven days in the past .", "label": "", "metadata": {}, "score": "63.039993"}
{"text": "These results show teacher evaluation methods that simply rely on absolute year - end performance simply reward teachers in low stress classrooms and penalize teachers in high stress classrooms without taking into account any gains that may have been made .In order to address the third criteria of no relation between grade level and effectiveness rating residuals were correlated with grade at the student level .", "label": "", "metadata": {}, "score": "63.301346"}
{"text": "testing . data .Domain ( instances .domain . attributes , Orange . core .data .Table ( new_domain , instances ) for instance , prediction_error in izip ( new_dataset , prediction_errors ): instance .ensemble . forest .data .", "label": "", "metadata": {}, "score": "63.340977"}
{"text": "In block 605 , the component generates the core features for the selected trip .In block 606 , the component generates the derived features for the selected trip .In block 607 , the component stores the generated features in the observation store and then loops to block 603 to select the next departure / return date .", "label": "", "metadata": {}, "score": "63.34883"}
{"text": "In block 605 , the component generates the core features for the selected trip .In block 606 , the component generates the derived features for the selected trip .In block 607 , the component stores the generated features in the observation store and then loops to block 603 to select the next departure / return date .", "label": "", "metadata": {}, "score": "63.34883"}
{"text": "Springer , Edinburgh , ( 2004 ) .Wang , W.-L. , Wu , Y. , Chen , M.-H. : An architecture - based software reliability model .In : Pacific Rim International Symposium on Dependable Computing .IEEE , Hong Kong ( 1999 ) .", "label": "", "metadata": {}, "score": "63.41781"}
{"text": "The prediction system stores the labels of the trips in the observation store .After assigning labels to the trips at a prediction date , the prediction system then trains a classifier to make price - related predictions .For example , the prediction system may generate a classifier for each market to predict the price direction within that market .", "label": "", "metadata": {}, "score": "63.55932"}
{"text": "The prediction system stores the labels of the trips in the observation store .After assigning labels to the trips at a prediction date , the prediction system then trains a classifier to make price - related predictions .For example , the prediction system may generate a classifier for each market to predict the price direction within that market .", "label": "", "metadata": {}, "score": "63.55932"}
{"text": "The prediction system may also use observation dates for similar time periods in prior years to train a classifier .For example , the prediction system may train a classifier for making price - related predictions for departure and return dates around the year - end holidays or a spring break using only observations covering similar departure and return dates from previous years .", "label": "", "metadata": {}, "score": "63.563576"}
{"text": "The prediction system may also use observation dates for similar time periods in prior years to train a classifier .For example , the prediction system may train a classifier for making price - related predictions for departure and return dates around the year - end holidays or a spring break using only observations covering similar departure and return dates from previous years .", "label": "", "metadata": {}, "score": "63.563576"}
{"text": "For example , although trained with durations up to 8 days , the prediction system can make predictions for durations of 14 days or more .In one embodiment , the prediction system may provide a confidence level for a price - related prediction .", "label": "", "metadata": {}, "score": "63.67276"}
{"text": "For example , although trained with durations up to 8 days , the prediction system can make predictions for durations of 14 days or more .In one embodiment , the prediction system may provide a confidence level for a price - related prediction .", "label": "", "metadata": {}, "score": "63.67276"}
{"text": "A Markov chain model for statistical software testing .IEEE Trans .Softw .Eng .20(10 ) : 812 - 824 CrossRef .Jacobson , I. : Object - Oriented Software Engineering : A Use Case Driven Approach .Addison - Wesley , ACM Press , 400 p ( 1992 ) .", "label": "", "metadata": {}, "score": "63.810036"}
{"text": "13 is a flow diagram that illustrates the processing of the predict price directions component of the prediction system in one embodiment .The component is passed an observation date and determines price directions for the trips of that observation date .", "label": "", "metadata": {}, "score": "63.89537"}
{"text": "13 is a flow diagram that illustrates the processing of the predict price directions component of the prediction system in one embodiment .The component is passed an observation date and determines price directions for the trips of that observation date .", "label": "", "metadata": {}, "score": "63.89537"}
{"text": "McCall , J. , et al .:Methodology for Software Reliability Prediction .Rome Labs Technical Report , RADC - TR-87 - 171 , Vols I & II ( 1987 ) .Smidts , C. , Li , M. : Software Engineering Measures for Predicting Software Reliability in Safety Critical Digital Systems .", "label": "", "metadata": {}, "score": "63.947563"}
{"text": "For example , the search user interface component may offer price protection without providing information about the predicted direction or without offering a future - lower priced fare .Alternatively , the search user interface component may offer a future - lower priced fare without offering price protection or displaying a predicted price direction .", "label": "", "metadata": {}, "score": "63.959538"}
{"text": "For example , the search user interface component may offer price protection without providing information about the predicted direction or without offering a future - lower priced fare .Alternatively , the search user interface component may offer a future - lower priced fare without offering price protection or displaying a predicted price direction .", "label": "", "metadata": {}, "score": "63.959538"}
{"text": "The algorithm concentrates more and more on those examples in which its predecessors tended to show mistakes by weighting the training data for those mistakes more heavily .The algorithm tends to correct the errors made by earlier weak learners .The algorithm is adaptive because it adjusts to the error rates of its predecessors .", "label": "", "metadata": {}, "score": "64.02797"}
{"text": "The algorithm concentrates more and more on those examples in which its predecessors tended to show mistakes by weighting the training data for those mistakes more heavily .The algorithm tends to correct the errors made by earlier weak learners .The algorithm is adaptive because it adjusts to the error rates of its predecessors .", "label": "", "metadata": {}, "score": "64.02797"}
{"text": "14 is a flow diagram that illustrates the processing of the identify best direction component of the prediction system in one embodiment .FIG .15 is a flow diagram that illustrates the processing of the predict price protection component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "64.03033"}
{"text": "14 is a flow diagram that illustrates the processing of the identify best direction component of the prediction system in one embodiment .FIG .15 is a flow diagram that illustrates the processing of the predict price protection component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "64.03033"}
{"text": "For example , if a dignitary announces a trip to a city , the ticket prices may likely raise because of demand .If customers upon hearing the announcement rush to buy price protecting before a specific rule related to that announcement can be defined , the general rule will limit risk until the specific rule is defined .", "label": "", "metadata": {}, "score": "64.151535"}
{"text": "For example , if a dignitary announces a trip to a city , the ticket prices may likely raise because of demand .If customers upon hearing the announcement rush to buy price protecting before a specific rule related to that announcement can be defined , the general rule will limit risk until the specific rule is defined .", "label": "", "metadata": {}, "score": "64.151535"}
{"text": "J. Climate , 9 , 2020 - 2035 .Ji , M. , A. Kumar and A. Leetmaa , 1994b : An experimental coupled forecast system at the National Meteorological Center : Some early results .Tellus , 46A , 398 - 418 .", "label": "", "metadata": {}, "score": "64.25285"}
{"text": "J. Climate , 9 , 2020 - 2035 .Ji , M. , A. Kumar and A. Leetmaa , 1994b : An experimental coupled forecast system at the National Meteorological Center : Some early results .Tellus , 46A , 398 - 418 .", "label": "", "metadata": {}, "score": "64.25285"}
{"text": "Since the variance due to teacher effectiveness can not be partitioned from the variance that we consider error we must make a judgment as to whether the magnitude and the direction of the residual exceeds that of pure chance variation .To do this we simply calculate the standard error of the mean for any classroom and compare that to the population mean which we know to be zero with a standard deviation of 1 .", "label": "", "metadata": {}, "score": "64.58889"}
{"text": "The screen contains all parameters used in calculation model and formulas of the selected reliability prediction method for the selected component type .Each reliability prediction method has its own model , and models differ between component types - so each screen looks differently and has its own list of parameters .", "label": "", "metadata": {}, "score": "64.66788"}
{"text": "The prediction system then generates a feature vector for that trip .The prediction system submits that feature vector to the classifier for that particular market to identify the price - related prediction .The user interface may then present the flight information to the user along with the price - related prediction or an offer made because of the price - related prediction .", "label": "", "metadata": {}, "score": "64.68372"}
{"text": "The prediction system then generates a feature vector for that trip .The prediction system submits that feature vector to the classifier for that particular market to identify the price - related prediction .The user interface may then present the flight information to the user along with the price - related prediction or an offer made because of the price - related prediction .", "label": "", "metadata": {}, "score": "64.68372"}
{"text": "Best Predictors of Performance .The best predictor of future performance is past performance .While other variables including demographic variables like SES , mother 's educational level , or ethnicity may predict performance they are not part of our definition of teacher effectiveness .", "label": "", "metadata": {}, "score": "64.68869"}
{"text": "In block 601 , the component selects the next market .In decision block 602 , if all the markets have already been selected , then the component returns , else the component continues at block 603 .In block 603 , the component selects the next departure / return date .", "label": "", "metadata": {}, "score": "64.69841"}
{"text": "In block 601 , the component selects the next market .In decision block 602 , if all the markets have already been selected , then the component returns , else the component continues at block 603 .In block 603 , the component selects the next departure / return date .", "label": "", "metadata": {}, "score": "64.69841"}
{"text": "In classification , 1 minus the average distance between the predicted class probability distribution and the ( trivial ) probability distributions of the nearest neighbour .If a special value 0 is passed as : math:'k ' ( as is by default ) , it is set as 1/20 of data set size ( or 5 , whichever is greater ) .", "label": "", "metadata": {}, "score": "64.76475"}
{"text": "The predictions system may also provide RSS feeds to users who specify trips of interest .The prediction system may use business rules to control risk associated with predictions .For example , when a certain event in a city is announced ( e.g. , a visit by a dignitary ) , a rule may be established to not offer any future - lower price fares on trips to that city because of uncertainty in the fares .", "label": "", "metadata": {}, "score": "64.77516"}
{"text": "The predictions system may also provide RSS feeds to users who specify trips of interest .The prediction system may use business rules to control risk associated with predictions .For example , when a certain event in a city is announced ( e.g. , a visit by a dignitary ) , a rule may be established to not offer any future - lower price fares on trips to that city because of uncertainty in the fares .", "label": "", "metadata": {}, "score": "64.77516"}
{"text": "Thus , there are 36 possible submarkets : one for each combination of departure and return intervals .The prediction system may train the classifier to predict whether to offer future - lower priced fares on a submarket basis so that future - lower priced fares can be offered on a submarket basis .", "label": "", "metadata": {}, "score": "64.88315"}
{"text": "Thus , there are 36 possible submarkets : one for each combination of departure and return intervals .The prediction system may train the classifier to predict whether to offer future - lower priced fares on a submarket basis so that future - lower priced fares can be offered on a submarket basis .", "label": "", "metadata": {}, "score": "64.88315"}
{"text": "One skilled in the art will appreciate that the retrieved flight information can be for any number of departure dates and number of duration lengths combinations .The 630 possible trips are illustrated in the following table .After generating feature vectors for the trips of an observation date , the prediction system then assigns labels to the feature vectors for training a classifier to make the price - related predictions .", "label": "", "metadata": {}, "score": "64.88585"}
{"text": "One skilled in the art will appreciate that the retrieved flight information can be for any number of departure dates and number of duration lengths combinations .The 630 possible trips are illustrated in the following table .After generating feature vectors for the trips of an observation date , the prediction system then assigns labels to the feature vectors for training a classifier to make the price - related predictions .", "label": "", "metadata": {}, "score": "64.88585"}
{"text": "The prediction system generates labels for the trips on an observation date based on whether it would have been economical to sell price protection for the trips based on analysis of flight information for subsequent dates .The prediction system then trains classifiers to predict whether to offer price protection .", "label": "", "metadata": {}, "score": "64.90198"}
{"text": "The prediction system generates labels for the trips on an observation date based on whether it would have been economical to sell price protection for the trips based on analysis of flight information for subsequent dates .The prediction system then trains classifiers to predict whether to offer price protection .", "label": "", "metadata": {}, "score": "64.90198"}
{"text": "7 is a flow diagram that illustrates the processing of the label training data component of the prediction system in one embodiment .The component is passed a date and labels the feature vectors for that observation date based on the feature vectors for the observation dates within the labeling window .", "label": "", "metadata": {}, "score": "64.9871"}
{"text": "7 is a flow diagram that illustrates the processing of the label training data component of the prediction system in one embodiment .The component is passed a date and labels the feature vectors for that observation date based on the feature vectors for the observation dates within the labeling window .", "label": "", "metadata": {}, "score": "64.9871"}
{"text": "a processor for executing the computer - executable instructions stored in the memory .A computing system for making price - related predictions for airline trips , comprising : . a memory storing computer - executable instructions of : . a component that provides flight information for airline flights for trips on various observation dates , a trip having one or more available flights ; . a component that generates trip information for a trip by aggregating the flight information for the airline flights associated with the trip , the trip information being represented as feature vectors ; . a component that trains a classifier to make price - related predictions for trips using the feature vectors and their labels as training data ; and .", "label": "", "metadata": {}, "score": "65.39331"}
{"text": "Portland , USA ( 2003 ) .Fugua N.B. ( 2003 ) .The applicability of Markov analysis methods to reliability , maintainability and safety .Reliability Anal .Center START Sheet 10(2 ) : 8 .Dobrica , L. , Niemel\u00e4 , E. : Using UML notation extensions to model variability in product line architectures .", "label": "", "metadata": {}, "score": "65.472145"}
{"text": "In decision block 806 , if the direction condition is satisfied , then the component continues at block 807 to label the trip as a positive sample , else the component continues at block 808 to label the trip as a negative sample .", "label": "", "metadata": {}, "score": "65.49313"}
{"text": "In decision block 806 , if the direction condition is satisfied , then the component continues at block 807 to label the trip as a positive sample , else the component continues at block 808 to label the trip as a negative sample .", "label": "", "metadata": {}, "score": "65.49313"}
{"text": "20 is a flow diagram that illustrates the processing of the offer future - lower priced fare component of the prediction system in one embodiment .DETAILED DESCRIPTION .A method and system for making predictions for travel items is provided .", "label": "", "metadata": {}, "score": "65.71074"}
{"text": "20 is a flow diagram that illustrates the processing of the offer future - lower priced fare component of the prediction system in one embodiment .DETAILED DESCRIPTION .A method and system for making predictions for travel items is provided .", "label": "", "metadata": {}, "score": "65.71074"}
{"text": "Table 5 shows the results of a reliability analysis of residuals and observed scores at the individual student level .As can be seen the reliability of the observed scores is fairly high ranging from .74 to .84 along the diagonal .", "label": "", "metadata": {}, "score": "65.85513"}
{"text": "FIG .1 is a block diagram that illustrates components of the prediction system in one embodiment .The prediction system 150 is connected via communications link 120 to flight information source 110 and user devices 115 .The prediction system includes an observation store 151 , a classifier store 152 , and a prediction store 153 .", "label": "", "metadata": {}, "score": "65.91423"}
{"text": "FIG .1 is a block diagram that illustrates components of the prediction system in one embodiment .The prediction system 150 is connected via communications link 120 to flight information source 110 and user devices 115 .The prediction system includes an observation store 151 , a classifier store 152 , and a prediction store 153 .", "label": "", "metadata": {}, "score": "65.91423"}
{"text": "In block 501 , the component selects the next market .In decision block 502 , if all the markets have already been selected , then the component returns , else the component continues at block 503 .In block 503 , the component selects the next departure date .", "label": "", "metadata": {}, "score": "66.07031"}
{"text": "In block 501 , the component selects the next market .In decision block 502 , if all the markets have already been selected , then the component returns , else the component continues at block 503 .In block 503 , the component selects the next departure date .", "label": "", "metadata": {}, "score": "66.07031"}
{"text": "A prediction system provides price - related predictions for airline tickets .The prediction system collects flight information for flights on a daily basis .The prediction system generates training data to train a classifier to make the price - related predictions using the flight information .", "label": "", "metadata": {}, "score": "66.1865"}
{"text": "A prediction system provides price - related predictions for airline tickets .The prediction system collects flight information for flights on a daily basis .The prediction system generates training data to train a classifier to make the price - related predictions using the flight information .", "label": "", "metadata": {}, "score": "66.1865"}
{"text": "Mon .Wea .Rev , 115 , 2161 - 2165 .Trenberth , K.E. , 1984 : Signal versus noise in the Southern Oscillation .Mon .Wea .Rev , 112 , 326 - 332 .Van Loon , H. and R.A. Madden , 1981 : The Southern Oscillation .", "label": "", "metadata": {}, "score": "66.20722"}
{"text": "Mon .Wea .Rev , 115 , 2161 - 2165 .Trenberth , K.E. , 1984 : Signal versus noise in the Southern Oscillation .Mon .Wea .Rev , 112 , 326 - 332 .Van Loon , H. and R.A. Madden , 1981 : The Southern Oscillation .", "label": "", "metadata": {}, "score": "66.20722"}
{"text": "For example , if the prediction system has labeled trips from October 1 through December 31 , then for each market , the prediction system retrieves the feature vectors and labels for each trip within that market that was observed between October 1 and December 31 .", "label": "", "metadata": {}, "score": "66.286964"}
{"text": "For example , if the prediction system has labeled trips from October 1 through December 31 , then for each market , the prediction system retrieves the feature vectors and labels for each trip within that market that was observed between October 1 and December 31 .", "label": "", "metadata": {}, "score": "66.286964"}
{"text": "In block 1901 , the component retrieves real - time flight information for the trip from the flight information source .In block 1902 , the component selects the minimum price of the flight information .In block 1903 , the component retrieves a flag from the price protection table for a predicted price that is closest to the selected minimum price .", "label": "", "metadata": {}, "score": "66.46902"}
{"text": "In block 1901 , the component retrieves real - time flight information for the trip from the flight information source .In block 1902 , the component selects the minimum price of the flight information .In block 1903 , the component retrieves a flag from the price protection table for a predicted price that is closest to the selected minimum price .", "label": "", "metadata": {}, "score": "66.46902"}
{"text": "Barnston , A.G. , M. Chelliah and S.B. Goldenberg , 1997 : Documentation of a highly ENSO - related SST region in the equatorial Pacific .Atmosphere - Ocean , 35 , 367 - 383 .Carson , D.J. , 1998 : Seasonal forecasting .", "label": "", "metadata": {}, "score": "66.53808"}
{"text": "Barnston , A.G. , M. Chelliah and S.B. Goldenberg , 1997 : Documentation of a highly ENSO - related SST region in the equatorial Pacific .Atmosphere - Ocean , 35 , 367 - 383 .Carson , D.J. , 1998 : Seasonal forecasting .", "label": "", "metadata": {}, "score": "66.53808"}
{"text": "Tellus , 46A , 497 - 511 .Barnett , T.P. , M. Latif , N. Graham , M. Flugel , S. Pazan and W. White , 1993 : ENSO and ENSO - related predictability : Part 1 - Prediction of equatorial Pacific sea surface temperatures with a hybrid coupled ocean - atmosphere model .", "label": "", "metadata": {}, "score": "66.54291"}
{"text": "sample .SubsetIndicesCV ( data , self .evaluation .testing .reliability_classifier ( instance , Orange . core .GetProbabilities ) .reliability_estimate for e in re : if e . chosen [ 0 ] and e . estimate return [ Estimate ( r , self .", "label": "", "metadata": {}, "score": "66.84436"}
{"text": "For example , the ticket prices to a particular city may spike when a dignitary announces plans to visit that city the following week .The filter observations component may also randomly copy non - price flight information for a specific flight from the next observation to the previous observation to account for uncertainty in the correlation between price flight information and non - price flight information .", "label": "", "metadata": {}, "score": "66.878235"}
{"text": "For example , the ticket prices to a particular city may spike when a dignitary announces plans to visit that city the following week .The filter observations component may also randomly copy non - price flight information for a specific flight from the next observation to the previous observation to account for uncertainty in the correlation between price flight information and non - price flight information .", "label": "", "metadata": {}, "score": "66.878235"}
{"text": "Balmaseda , M.A. , Anderson , D.L.T. and M.K. Davey , 1994 : ENSO prediction using a dynamical ocean model coupled to statistical atmospheres .Tellus , 46A , 497 - 511 .Barnett , T.P. , M. Latif , N. Graham , M. Flugel , S. Pazan and W. White , 1993 : ENSO and ENSO - related predictability : Part 1 - Prediction of equatorial Pacific sea surface temperatures with a hybrid coupled ocean - atmosphere model .", "label": "", "metadata": {}, "score": "66.99717"}
{"text": "10 is a flow diagram that illustrates the processing of the assign future - lower priced fare labels component of the prediction system in one embodiment .FIG .11 is a flow diagram that illustrates the processing of the train classifiers component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "67.209946"}
{"text": "10 is a flow diagram that illustrates the processing of the assign future - lower priced fare labels component of the prediction system in one embodiment .FIG .11 is a flow diagram that illustrates the processing of the train classifiers component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "67.209946"}
{"text": "In : Third International Workshop on Software and Performance .Rome ( 2002 ) .OMG , UML Profile for Modeling Quality of Service and Fault Tolerance Characteristics and Mechanisms .Revised submission , Object Management Group ( 2003 ) .Cortellessa , V. , Pompei , A. : Towards a UML Profile for QoS : A Contribution in the Reliability Domain .", "label": "", "metadata": {}, "score": "67.292854"}
{"text": "FIG .3 is a block diagram that illustrates data structures of the prediction store in one embodiment .The prediction store 300 includes a market table 301 with an entry for each market .Each entry contains a reference to a departure / return table 302 that contains an entry for each departure / return date combination for that market ( i.e. , each trip within that market ) .", "label": "", "metadata": {}, "score": "67.37629"}
{"text": "FIG .3 is a block diagram that illustrates data structures of the prediction store in one embodiment .The prediction store 300 includes a market table 301 with an entry for each market .Each entry contains a reference to a departure / return table 302 that contains an entry for each departure / return date combination for that market ( i.e. , each trip within that market ) .", "label": "", "metadata": {}, "score": "67.37629"}
{"text": "From the foregoing , it will be appreciated that specific embodiments of the invention have been described herein for purposes of illustration , but that various modifications may be made without deviating from the spirit and scope of the invention .For example , one skilled in the art will appreciate that a trip could alternately be defined as being one way .", "label": "", "metadata": {}, "score": "67.383575"}
{"text": "From the foregoing , it will be appreciated that specific embodiments of the invention have been described herein for purposes of illustration , but that various modifications may be made without deviating from the spirit and scope of the invention .For example , one skilled in the art will appreciate that a trip could alternately be defined as being one way .", "label": "", "metadata": {}, "score": "67.383575"}
{"text": "12 is a flow diagram that illustrates the processing of the classify observations component of the prediction system in one embodiment .FIG .13 is a flow diagram that illustrates the processing of the predict price directions component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "67.717766"}
{"text": "12 is a flow diagram that illustrates the processing of the classify observations component of the prediction system in one embodiment .FIG .13 is a flow diagram that illustrates the processing of the predict price directions component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "67.717766"}
{"text": "Descriptor .The default is Hellinger distance .: type distance : function : rtype : : class:'Orange.evaluation.reliability .CNeighboursClassifier ' For regression , CNK is defined for an unlabeled instance as a difference between average label of its nearest neighbours and its prediction .", "label": "", "metadata": {}, "score": "67.84567"}
{"text": "IEEE Trans .Reliability 28(3 ) : 241 - 246 MATH CrossRef .Douglass , B.P. : Doing Hard Time : Developing Real - Time Systems with UML , Objects , Frameworks , and Patterns .Addison Wesley Professional , 800 p ( 1999 ) .", "label": "", "metadata": {}, "score": "67.85689"}
{"text": "The score being predicted ( Y ' ) is the student 's actual performance for the current school year 2003 - 2004 .A student 's actual observed score ( Obs ) is compared to the student 's predicted score based on past performance .", "label": "", "metadata": {}, "score": "67.923"}
{"text": "_ _ dict _ _ . update ( kwds ) self . estimators is None : self .: param instances : Data instances to learn from . return Classifier ( instances , self .box_learner , self . estimators , self . blending , new_domain , blending_classifier ) class Classifier : \" \" \" A reliability estimation wrapper for classifiers .", "label": "", "metadata": {}, "score": "67.92786"}
{"text": "Gokhale , S.S. , Trivedi , K.S. : Dependency characterization in path - based approaches to architecture - based software reliability prediction .In : Proceedings of the IEEE Workshop on Application - Specific Software Engineering Technology , ASSET-98 ( 1998 ) .", "label": "", "metadata": {}, "score": "67.953926"}
{"text": "attribute : : estimate A numerical reliability estimate . attribute : : signed_or_absolute Determines whether the method used gives a signed or absolute result .Has a value of either : obj:'SIGNED ' or : obj:'ABSOLUTE ' .attribute : : method An integer ID of reliability estimation method used .", "label": "", "metadata": {}, "score": "67.98225"}
{"text": "For example , the party may offer future - lower priced fares at a 7 % discount off the current lowest price when such offering would be economically profitable .If the party offers the trip for the future - lower priced fare and the user accepts the offer , the party will then try to buy an actual ticket at the lowest possible price over the next few days .", "label": "", "metadata": {}, "score": "68.05847"}
{"text": "For example , the party may offer future - lower priced fares at a 7 % discount off the current lowest price when such offering would be economically profitable .If the party offers the trip for the future - lower priced fare and the user accepts the offer , the party will then try to buy an actual ticket at the lowest possible price over the next few days .", "label": "", "metadata": {}, "score": "68.05847"}
{"text": "FIG .1 is a block diagram that illustrates components of the prediction system in one embodiment .FIG .2 is a block diagram that illustrates data structures of the observation store in one embodiment .FIG .3 is a block diagram that illustrates data structures of the prediction store in one embodiment .", "label": "", "metadata": {}, "score": "68.46658"}
{"text": "FIG .1 is a block diagram that illustrates components of the prediction system in one embodiment .FIG .2 is a block diagram that illustrates data structures of the observation store in one embodiment .FIG .3 is a block diagram that illustrates data structures of the prediction store in one embodiment .", "label": "", "metadata": {}, "score": "68.46658"}
{"text": "The results of this analysis can be seen in Table 4 .Table 4 .Correlations Between Grade and Residuals used to calculate the Teacher Effectiveness Index ( TEI ) .Residual .Grade level .Reading .Math .Writing .", "label": "", "metadata": {}, "score": "68.53993"}
{"text": "For example , the labeling window could include , for airline tickets , seven observations , for hotel rooms , seven or fourteen observations , for used automobiles , one or two observations , and so on .Thus , the prediction system trains the classifier using feature vectors generated from observation dates with enough subsequent observation dates to generate labels .", "label": "", "metadata": {}, "score": "68.6897"}
{"text": "For example , the labeling window could include , for airline tickets , seven observations , for hotel rooms , seven or fourteen observations , for used automobiles , one or two observations , and so on .Thus , the prediction system trains the classifier using feature vectors generated from observation dates with enough subsequent observation dates to generate labels .", "label": "", "metadata": {}, "score": "68.6897"}
{"text": "a processor for executing the computer - executable instructions stored in the memory .The computing system of .claim 16 wherein a separate classifier is trained for each market , a market being a combination of a departure location and a return location .", "label": "", "metadata": {}, "score": "68.9018"}
{"text": "If the party purchases a ticket for more than the future - lower priced fare minus overhead , the party loses money .Because ticket prices generally vary based on departure and return time of day , the prediction system may divide the trips of a market into submarkets based on time of day .", "label": "", "metadata": {}, "score": "68.97229"}
{"text": "If the party purchases a ticket for more than the future - lower priced fare minus overhead , the party loses money .Because ticket prices generally vary based on departure and return time of day , the prediction system may divide the trips of a market into submarkets based on time of day .", "label": "", "metadata": {}, "score": "68.97229"}
{"text": "In decision block 702 , if all the markets have already been selected , then the component returns , else the component continues at block 703 .In block 703 , the component selects the next departure / return date .In decision block 704 , if all the departure / return dates for the selected market have already been selected , then the component loops to block 701 to select the next market , else the component continues at block 705 .", "label": "", "metadata": {}, "score": "68.98319"}
{"text": "In decision block 702 , if all the markets have already been selected , then the component returns , else the component continues at block 703 .In block 703 , the component selects the next departure / return date .In decision block 704 , if all the departure / return dates for the selected market have already been selected , then the component loops to block 701 to select the next market , else the component continues at block 705 .", "label": "", "metadata": {}, "score": "68.98319"}
{"text": "The component then loops to block 1703 to select the next trip for the selected bucket .In decision block 1707 , if the total profit divided by the total price is greater than the maximum profit divided by price encountered so far , then the component continues at block 1708 , else the component loops to block 1701 to select the next bucket .", "label": "", "metadata": {}, "score": "68.98944"}
{"text": "The component then loops to block 1703 to select the next trip for the selected bucket .In decision block 1707 , if the total profit divided by the total price is greater than the maximum profit divided by price encountered so far , then the component continues at block 1708 , else the component loops to block 1701 to select the next bucket .", "label": "", "metadata": {}, "score": "68.98944"}
{"text": "18 is a flow diagram that illustrates the processing of the determine price direction component of the prediction system in one embodiment .FIG .19 is a flow diagram that illustrates the processing of the offer price protection component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "69.02913"}
{"text": "18 is a flow diagram that illustrates the processing of the determine price direction component of the prediction system in one embodiment .FIG .19 is a flow diagram that illustrates the processing of the offer price protection component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "69.02913"}
{"text": "Professional Responsibility A method and system is provided for making price - related predictions of items based on training a classifier using historical information including pricing information for the items and labels relating to the price - related information that are generated automatically from the historical information ....", "label": "", "metadata": {}, "score": "69.244446"}
{"text": "FIG .2 is a block diagram that illustrates data structures of the observation store in one embodiment .The observation store 200 includes an observation date table 201 that contains an entry for each observation date starting with the most current observation date .", "label": "", "metadata": {}, "score": "69.25563"}
{"text": "FIG .2 is a block diagram that illustrates data structures of the observation store in one embodiment .The observation store 200 includes an observation date table 201 that contains an entry for each observation date starting with the most current observation date .", "label": "", "metadata": {}, "score": "69.25563"}
{"text": "Mon .Wea . Rev. , 125 , 789 - 808 .Kleeman , R. , 1993 : On the dependence of hindcast skill on ocean thermodynamics in a coupled ocean - atmosphere model .J. Climate , 6 , 2012 - 2033 .", "label": "", "metadata": {}, "score": "69.35791"}
{"text": "Mon .Wea . Rev. , 125 , 789 - 808 .Kleeman , R. , 1993 : On the dependence of hindcast skill on ocean thermodynamics in a coupled ocean - atmosphere model .J. Climate , 6 , 2012 - 2033 .", "label": "", "metadata": {}, "score": "69.35791"}
{"text": "Residuals and Error Variance .In accordance with our definition of teacher effectiveness the only variable modeled was the student 's growth .That is , the only variance removed was that associated with student performance .The residual or TEI has two components , systematic variance associated with variables that were not included in the model ( e.g. , teacher effects ) , and random variance associated with unreliable measures .", "label": "", "metadata": {}, "score": "69.43755"}
{"text": "In what follows , is the th component of a vector , denotes the expectation operator , denotes the dimensionality of vector , denotes the absolute value of scalar , denotes the conditional probability of given , and denotes the conditional expectation of given .", "label": "", "metadata": {}, "score": "69.53301"}
{"text": "What is Relative Growth ?Growth for the purposes of this investigation is defined as \" a student 's rank order standing within his or her cohort group over time \" .Here the term \" cohort \" is defined as all students at the same grade level across the district .", "label": "", "metadata": {}, "score": "69.76723"}
{"text": "6 is a flow diagram that illustrates the processing of the generate feature vectors component of the prediction system in one embodiment .FIG .7 is a flow diagram that illustrates the processing of the label training data component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "70.04727"}
{"text": "6 is a flow diagram that illustrates the processing of the generate feature vectors component of the prediction system in one embodiment .FIG .7 is a flow diagram that illustrates the processing of the label training data component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "70.04727"}
{"text": "probabilities [ 0 ] .reliability_estimate [ i ] .text_description for result in res . results ] def get_pearson_r ( res ): \" \" \" : param res : results of evaluation , done using learners , wrapped into : class:'Orange.evaluation.reliability .", "label": "", "metadata": {}, "score": "70.171646"}
{"text": "Scientific Publications .Nearest template prediction : a single - sample - based flexible class prediction with confidence assessment .Gene - expression signature - based disease classification and clinical outcome prediction has not been widely introduced in clinical medicine as initially expected , mainly due to the lack of extensive validation needed for its clinical deployment .", "label": "", "metadata": {}, "score": "70.25119"}
{"text": "o Meets Expectation .o Exceeds Expectation .Instruction .Uses effective questioning and discussion techniques .o Needs Improvement .o Meets Expectation .o Exceeds Expectation .Provides positive student feedback and reinforcement routinely .o Needs Improvement .o Meets Expectation .", "label": "", "metadata": {}, "score": "70.28457"}
{"text": "The hotel rooms for a particular hotel market ( e.g. , city and hotel rating ) may be aggregated in a similar manner to how the airline flight information for a flight market is aggregated .For example , the four star hotels in New York City can represent one market , the one star hotels in New York City can represent another market , the four star hotels in Las Vegas can represent yet another market , and so on .", "label": "", "metadata": {}, "score": "70.63802"}
{"text": "The hotel rooms for a particular hotel market ( e.g. , city and hotel rating ) may be aggregated in a similar manner to how the airline flight information for a flight market is aggregated .For example , the four star hotels in New York City can represent one market , the one star hotels in New York City can represent another market , the four star hotels in Las Vegas can represent yet another market , and so on .", "label": "", "metadata": {}, "score": "70.63802"}
{"text": "In block 706 , the component invokes the assign price protection labels component to indicate whether price protection should have been offered for the trip .In block 707 , the component invokes the assign future - lower priced fare labels component to indicate whether future - lower priced fares should have been offered for the trip and then loops to block 703 to select the next departure / return date .", "label": "", "metadata": {}, "score": "70.72536"}
{"text": "In block 706 , the component invokes the assign price protection labels component to indicate whether price protection should have been offered for the trip .In block 707 , the component invokes the assign future - lower priced fare labels component to indicate whether future - lower priced fares should have been offered for the trip and then loops to block 703 to select the next departure / return date .", "label": "", "metadata": {}, "score": "70.72536"}
{"text": "Scenario - based analysis of software architecture .IEEE Softw .13(6 ) : 47 - 55 CrossRef .Lassing , N. , Rijsenbrij , D. , van Vilet , H. : On software architecture analysis of flexibility , complexity of changes : size is n't everything .", "label": "", "metadata": {}, "score": "70.87844"}
{"text": "The search user interface component then accesses the flight information source to retrieve real - time flight information for the trip of interest .The search user interface component then invokes the determine price direction component , the offer price protection component , and the offer future - lower priced fare component to generate price - related predictions for the desired trip .", "label": "", "metadata": {}, "score": "70.8982"}
{"text": "The search user interface component then accesses the flight information source to retrieve real - time flight information for the trip of interest .The search user interface component then invokes the determine price direction component , the offer price protection component , and the offer future - lower priced fare component to generate price - related predictions for the desired trip .", "label": "", "metadata": {}, "score": "70.8982"}
{"text": "BaggingVarianceCNeighboursClassifier ' BVCK is a combination ( average ) of Bagging variance and local modeling of prediction error . \" cnk ( instances , learner ) return BaggingVarianceCNeighboursClassifier ( bagv_classifier , cnk_classifier ) class BaggingVarianceCNeighboursClassifier : def _ _ init _ _ ( self , bagv_classifier , cnk_classifier ): self .", "label": "", "metadata": {}, "score": "70.96535"}
{"text": "In block 505 , the component selects the next return date for the selected departure date .In decision block 506 , if all the return dates have already been selected , then the component loops to block 503 to select the next departure date , else the component continues at block 507 .", "label": "", "metadata": {}, "score": "70.98386"}
{"text": "In block 505 , the component selects the next return date for the selected departure date .In decision block 506 , if all the return dates have already been selected , then the component loops to block 503 to select the next departure date , else the component continues at block 507 .", "label": "", "metadata": {}, "score": "70.98386"}
{"text": "8 is a flow diagram that illustrates the processing of the assign price direction labels component of the prediction system in one embodiment .FIG .9 is a flow diagram that illustrates the processing of the assign price protection labels component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "71.03658"}
{"text": "8 is a flow diagram that illustrates the processing of the assign price direction labels component of the prediction system in one embodiment .FIG .9 is a flow diagram that illustrates the processing of the assign price protection labels component of the prediction system in one embodiment .", "label": "", "metadata": {}, "score": "71.03658"}
{"text": "The default is Hellinger distance .: rtype : : class:'Orange.evaluation.reliability .LocalCrossValidationClassifier ' : math:'k ' nearest neighbours to the given instance are found and put in a separate data set .On this data set , a leave - one - out validation is performed .", "label": "", "metadata": {}, "score": "71.18086"}
{"text": "Where ( N ) represents the number of all fourth grade students in the district for example .The TEI score for any teacher is the average residual value for individuals in his or her classroom .The teacher 's effectiveness score ( TEI ) can be expressed as : .", "label": "", "metadata": {}, "score": "71.27521"}
{"text": "If on the next day , December 21 , the prediction system collects the flight information for the same trip , it will have another observation for the trip but with an observation date of December 21 .The prediction system may collect flight information for each flight that includes market , departing date and time , returning date and time , airline , available seats , classes of available seats , number of stops , ticket restrictions , and so on .", "label": "", "metadata": {}, "score": "71.3015"}
{"text": "claim 16 wherein a single classifier is trained for multiple markets , a market being a combination of a departure location and a return location .The computing system of .claim 16 wherein a classifier is trained for a market using feature vectors and labels of a different market , a market being a combination of a departure location and a return location .", "label": "", "metadata": {}, "score": "71.37068"}
{"text": "Most students have at least two assessments a year , the Stanford 9 , and either the AIMS or the CCSA depending on the grade level of the student .In addition , the two - level HLM tended to over model by removing classroom effects which were the effects we were interested in ( i.e. , it tended to remove all the systemic variance from the residual ) .", "label": "", "metadata": {}, "score": "71.47374"}
{"text": "testing .cross_validation ( [ self .results [ 0 ] .probabilities [ 0 ] . procentage ]all_borders . estimator ( instances ) return DescriptiveAnalysisClassifier ( estimator_classifier , all_borders , self .desc ) class DescriptiveAnalysisClassifier : def _ _ init _ _ ( self , estimator_classifier , all_borders , desc ): self . core .", "label": "", "metadata": {}, "score": "71.4927"}
{"text": "One skilled in the art will appreciate that many different levels of price direction may be predicted such as only up and down , only up , the five mentioned above plus very up or very down , and so on .", "label": "", "metadata": {}, "score": "71.73035"}
{"text": "One skilled in the art will appreciate that many different levels of price direction may be predicted such as only up and down , only up , the five mentioned above plus very up or very down , and so on .", "label": "", "metadata": {}, "score": "71.73035"}
{"text": "In block 801 , the component selects the next direction ( e.g. , up and flat or up ) .In decision block 802 , if all the directions have already been selected , then the component returns , else the component continues at block 803 .", "label": "", "metadata": {}, "score": "71.882675"}
{"text": "In block 801 , the component selects the next direction ( e.g. , up and flat or up ) .In decision block 802 , if all the directions have already been selected , then the component returns , else the component continues at block 803 .", "label": "", "metadata": {}, "score": "71.882675"}
{"text": "Mon .Wea .Rev , 109 , 1150 - 1168 .Yu , Z.-P. , P.-S. Chu and T. Schroeder , 1997 :Predictive skills of seasonal to annual rainfall variations in the U.S. affiliated Pacific Islands : Canonical correlation analysis and multivariate principal component regression approaches .", "label": "", "metadata": {}, "score": "71.9803"}
{"text": "In block 1202 , the component invokes the predict price protection component to determine whether to offer price protection for the trips on the observation date .In block 1203 , the component invokes the predict future - lower priced fare component to determine whether to offer future - lower priced fares for the submarkets of the trips on the observation date .", "label": "", "metadata": {}, "score": "71.99405"}
{"text": "In block 1202 , the component invokes the predict price protection component to determine whether to offer price protection for the trips on the observation date .In block 1203 , the component invokes the predict future - lower priced fare component to determine whether to offer future - lower priced fares for the submarkets of the trips on the observation date .", "label": "", "metadata": {}, "score": "71.99405"}
{"text": "With the standard error of the mean we can test whether the classroom mean is significantly different from the population mean of zero .A 95 % confidence interval can be constructed around the obtained classroom mean .If the 95 % interval includes the population mean we can not say with confidence that the effectiveness rating differs from the population mean by more than can be accounted for by chance alone .", "label": "", "metadata": {}, "score": "72.154236"}
{"text": "After computing different sensitivity predictions using different values of : math:'\\epsilon ' , the prediction are combined into SAvar and SAbias .SAbias can be used in a signed or absolute form .getclass ( ) .value for ex in instances : if ex .", "label": "", "metadata": {}, "score": "72.396515"}
{"text": "Given that there was no need for a multilevel analysis of the data and maximizing R 2 was not our ultimate goal we chose simple multiple regression as our statistical method of analysis .1 Students were tested using the Stanford 9 , .", "label": "", "metadata": {}, "score": "72.507965"}
{"text": "Barnston , A.G. and Y. He , 1996 : Skill of CCA forecasts of 3-month mean surface climate in Hawaii and Alaska .J. Climate , 9 , 2579 - 2605 .Barnston , A.G. , C. F. Ropelewski , 1992 : Prediction of ENSO episodes using canonical correlation analysis .", "label": "", "metadata": {}, "score": "72.78667"}
{"text": "Barnston , A.G. and Y. He , 1996 : Skill of CCA forecasts of 3-month mean surface climate in Hawaii and Alaska .J. Climate , 9 , 2579 - 2605 .Barnston , A.G. , C. F. Ropelewski , 1992 : Prediction of ENSO episodes using canonical correlation analysis .", "label": "", "metadata": {}, "score": "72.78667"}
{"text": "o Needs Improvement .o Meets Expectation .o Exceeds Expectation .Classroom Environment .Creates an environment of mutual respect and rapport .o Needs Improvement .o Meets Expectation .o Exceeds Expectation .Creates a culture that encourages learning .", "label": "", "metadata": {}, "score": "72.83757"}
{"text": "If the calculated upper limit is less than zero we could say with 95 % confidence that the mean of the residuals for that classroom is a sample from a population with a mean less than zero .Conversely , if the calculated lower limit is greater than zero we could say with equal confidence that the \" true \" population mean is greater than zero .", "label": "", "metadata": {}, "score": "72.89132"}
{"text": "rf_classifier ( new_instance , Orange . core .GetValue ) return [ Estimate ( value . exp ( - 1 .Default : gaussian .: type K : function : param d_measure : distance measure for inter - instance distance .", "label": "", "metadata": {}, "score": "72.89691"}
{"text": "In block 1505 , the component applies the classifier to generate a score indicating whether the trip represented by the selected market and departure / return date should have price protection offered .In decision block 1506 , if the score is greater than a price protection threshold , then the component continues at block 1507 , else the component loops to block 1503 to select the next departure / return date for the selected market .", "label": "", "metadata": {}, "score": "72.916534"}
{"text": "In block 1505 , the component applies the classifier to generate a score indicating whether the trip represented by the selected market and departure / return date should have price protection offered .In decision block 1506 , if the score is greater than a price protection threshold , then the component continues at block 1507 , else the component loops to block 1503 to select the next departure / return date for the selected market .", "label": "", "metadata": {}, "score": "72.916534"}
{"text": "Portland ( 2003 ) .Everett , W. : Software component reliability analysis .In : IEEE Symposium on Application - Specific Systems and Software Engineering and Technology .Richardson ( 1999 ) .Voas J.M. ( 1998 ) .Certifying off - the - shelf software components .", "label": "", "metadata": {}, "score": "72.9308"}
{"text": "Wea . Rev. , 115 , 1606 - 1626 .Ropelewski , C.F. , and M.S. Halpert , 1996 : Quantifying Southern Oscillation - precipitation relationships .J. Climate , 9 , 1043 - 1959 .Ropelewski , C.F. and P.D. Jones , 1987 :", "label": "", "metadata": {}, "score": "73.163185"}
{"text": "Wea . Rev. , 115 , 1606 - 1626 .Ropelewski , C.F. , and M.S. Halpert , 1996 : Quantifying Southern Oscillation - precipitation relationships .J. Climate , 9 , 1043 - 1959 .Ropelewski , C.F. and P.D. Jones , 1987 :", "label": "", "metadata": {}, "score": "73.163185"}
{"text": "Students showing either year to year gains or year to year loses tended to come from the same classrooms .Table 6 .Correlations Between Teacher Effectiveness Ratings ( TEI ) Across Two Years ( 2003 - 2004 ) .Overall TEI 2003 .", "label": "", "metadata": {}, "score": "73.19978"}
{"text": "DistanceConstructor ' : rtype : : class:'Orange.evaluation.reliability .ParzenWindowDensityBasedClassifier ' Returns a value that estimates a density of problem space around the instance being predicted .\" distance .K ( self .max_density - self . estimators is None : self .", "label": "", "metadata": {}, "score": "73.3423"}
{"text": "attribute : : icv_method An integer ID of reliability estimation method that performed best , as determined by ICV , and of which estimate is stored in the : obj:'estimate ' field .( : obj:'None ' when ICV was not used . ) attribute : : icv_method_name Name ( string ) of reliability estimation method that performed best , as determined by ICV .", "label": "", "metadata": {}, "score": "73.65492"}
{"text": "In block 403 , the component invokes the label training data component to label the feature vectors using the observations fetched after the training date ( i.e. , during the labeling window ) .In block 404 , the component invokes the train classifiers component to train classifiers using the training data as of the training date .", "label": "", "metadata": {}, "score": "74.02371"}
{"text": "In block 403 , the component invokes the label training data component to label the feature vectors using the observations fetched after the training date ( i.e. , during the labeling window ) .In block 404 , the component invokes the train classifiers component to train classifiers using the training data as of the training date .", "label": "", "metadata": {}, "score": "74.02371"}
{"text": "Airline B may have a flight that departs at 10 a.m. on January 1 and returns at 12 p.m. on January 5 , and a flight that departs at 3 p.m. on January 1 and returns at 12 p.m. on January 5 .", "label": "", "metadata": {}, "score": "75.24145"}
{"text": "Airline B may have a flight that departs at 10 a.m. on January 1 and returns at 12 p.m. on January 5 , and a flight that departs at 3 p.m. on January 1 and returns at 12 p.m. on January 5 .", "label": "", "metadata": {}, "score": "75.24145"}
{"text": "In block 1608 , the component stores the generated score in association with the selected market , departure / return date combination , and submarket .The component then loops to block 1605 to select the next submarket .In block 1609 , the component invokes a component to establish the future - lower priced fare threshold for scores above which future - lower priced fares may be offered .", "label": "", "metadata": {}, "score": "76.250656"}
{"text": "In block 1608 , the component stores the generated score in association with the selected market , departure / return date combination , and submarket .The component then loops to block 1605 to select the next submarket .In block 1609 , the component invokes a component to establish the future - lower priced fare threshold for scores above which future - lower priced fares may be offered .", "label": "", "metadata": {}, "score": "76.250656"}
{"text": "claim 1 wherein each display page includes an icon representing a score for a data element .The method of . claim 2 wherein the icon representing a score indicates a favorable data element , neutral data element , or an unfavorable data element .", "label": "", "metadata": {}, "score": "76.28485"}
{"text": "A dynamical one - month lead seasonal rainfall prediction for March to May 1997 for the north - eastern area of South America .Experimental Long - Lead Forecast Bulletin , NOAA , 6 , March 1997 , 25 - 28 .", "label": "", "metadata": {}, "score": "76.65812"}
{"text": "A dynamical one - month lead seasonal rainfall prediction for March to May 1997 for the north - eastern area of South America .Experimental Long - Lead Forecast Bulletin , NOAA , 6 , March 1997 , 25 - 28 .", "label": "", "metadata": {}, "score": "76.65812"}
{"text": "value - k_minus .value + k_minus .Note that for this method , in contrast with all others , a greater estimate means lower reliability ( greater expected error ) . \" classifier ( instance , Orange . classification .Classifier .", "label": "", "metadata": {}, "score": "76.6885"}
{"text": "The fetch observations component stores the flight information in the observation store .The filter observations component is responsible for filtering the observations to remove information that may negatively impact the ability of the prediction system to accurately make predictions .For example , the filter observations component may identify when an airline is offering its tickets at a \" sale \" price for a particular market and not use the sale ticket prices when training the classifier .", "label": "", "metadata": {}, "score": "77.13301"}
{"text": "The fetch observations component stores the flight information in the observation store .The filter observations component is responsible for filtering the observations to remove information that may negatively impact the ability of the prediction system to accurately make predictions .For example , the filter observations component may identify when an airline is offering its tickets at a \" sale \" price for a particular market and not use the sale ticket prices when training the classifier .", "label": "", "metadata": {}, "score": "77.13301"}
{"text": "If the minimum price has increased significantly within the labeling window , then the prediction system may assign a label indicating that that the airline ticket for that trip is likely to increase .If the minimum price has decreased significantly within the labeling window , then the prediction system may assign a label indicating that the airline ticket price for that trip is likely to decrease .", "label": "", "metadata": {}, "score": "77.133606"}
{"text": "If the minimum price has increased significantly within the labeling window , then the prediction system may assign a label indicating that that the airline ticket for that trip is likely to increase .If the minimum price has decreased significantly within the labeling window , then the prediction system may assign a label indicating that the airline ticket price for that trip is likely to decrease .", "label": "", "metadata": {}, "score": "77.133606"}
{"text": "CROSS REFERENCE TO RELATED APPLICATION .This application claims the benefit of U.S. Provisional Patent Application No .60/774,967 filed Feb. 17 , 2006 , and entitled \" FARE FORECASTING SYSTEM ( OMNIBUS ) , \" which application is hereby incorporated by reference in its entirety .", "label": "", "metadata": {}, "score": "77.69621"}
{"text": "The prices of items may change frequently when the items are of a limited quantity and are perishable ( e.g. , concert tickets and airline tickets ) .A large number of types of items may have such frequent price changes , such as airline tickets , car rentals , hotel rentals , gasoline , food products , jewelry , various types of services , etc .", "label": "", "metadata": {}, "score": "77.7169"}
{"text": "The prices of items may change frequently when the items are of a limited quantity and are perishable ( e.g. , concert tickets and airline tickets ) .A large number of types of items may have such frequent price changes , such as airline tickets , car rentals , hotel rentals , gasoline , food products , jewelry , various types of services , etc .", "label": "", "metadata": {}, "score": "77.7169"}
{"text": "For example , the prediction system can be used to predict the likely availability of seats for a trip or hotel rooms .In the case of airlineseats , the prediction system may label the feature vectors of the trips based on comparison of availability for the observation date being labeled and labeling window that include the next 30 observation dates .", "label": "", "metadata": {}, "score": "77.85988"}
{"text": "For example , the prediction system can be used to predict the likely availability of seats for a trip or hotel rooms .In the case of airlineseats , the prediction system may label the feature vectors of the trips based on comparison of availability for the observation date being labeled and labeling window that include the next 30 observation dates .", "label": "", "metadata": {}, "score": "77.85988"}
{"text": "The computing system of .claim 7 wherein the derived features of a trip are derived from flight information of flights of the trip for multiple observation dates .The computing system of .The computing system of . claim 1 including a component that receives from a user an identification of a target trip , retrieves a generated price - related prediction for the target trip , and presents to the user an indication of the retrieved price - related prediction .", "label": "", "metadata": {}, "score": "78.00859"}
{"text": "a processor for executing the computer - executable instructions stored in the memory .The computer of .claim 9 wherein each display page includes an icon representing a score for a data element .The computer of .claim 10 wherein the icon representing a score indicates a favorable data element , neutral data element , or an unfavorable data element .", "label": "", "metadata": {}, "score": "78.015076"}
{"text": "CROSS REFERENCE TO RELATED APPLICATION .The present application is a continuation of U.S. patent application Ser .No .12/037,775 , filed Feb. 26 , 2008 , and entitled \" TRIP COMPARISON SYSTEM , \" which application is a continuation of U.S. patent application Ser .", "label": "", "metadata": {}, "score": "78.0225"}
{"text": "normalized : p . normalize ( ) if not q .normalized : q . sqrt ( p [ i ] ) - math . dot ( x , y ) / ( numpy . linalg . linalg .norm ( q ) ) class Estimate : \" \" \" Reliability estimate .", "label": "", "metadata": {}, "score": "78.15857"}
{"text": "claim 1 wherein the price - related prediction is whether price protection should be offered .The computing system of .claim 1 wherein the price - related prediction is whether a future - lower priced fare should be offered .The computing system of .", "label": "", "metadata": {}, "score": "79.79671"}
{"text": "Different reliability estimation algorithms can be used on the chosen learner .This learner works as any other and can be used as one , but it returns the classifier , wrapped into an instance of : class:'Orange.evaluation.reliability .Classifier ' .", "label": "", "metadata": {}, "score": "79.81773"}
{"text": "It would be impractical to manually label such a large number of trips .For example , on January 8 , the prediction system may collect the flight information for all trips and generate the corresponding feature vectors .The feature vectors for the observation dates of January 2 through January 8 are considered to be the labeling window for feature vectors for the observation date of January 1 .", "label": "", "metadata": {}, "score": "79.914856"}
{"text": "It would be impractical to manually label such a large number of trips .For example , on January 8 , the prediction system may collect the flight information for all trips and generate the corresponding feature vectors .The feature vectors for the observation dates of January 2 through January 8 are considered to be the labeling window for feature vectors for the observation date of January 1 .", "label": "", "metadata": {}, "score": "79.914856"}
{"text": "GetValue ): \" \" \" Classify and estimate reliability of estimation for a new instance .: param instance : instance to be classified . classifier ( instance , Orange . core . statistics . distribution .Continuous ( ) # with warnings.catch_warnings ( ) : # warnings.simplefilter(\"ignore \" ) probabilities . setattr ( ' reliability_estimate ' , [ ] ) # Calculate all the estimates and add them to the results for estimate in self .", "label": "", "metadata": {}, "score": "79.91942"}
{"text": "The filter component may also remove price information that is apparently incorrect .For example , due to a collection error , the price of a flight may be unusually low ( e.g. , $ 1 ) or unusually high ( e.g. , $ 999,999 ) .", "label": "", "metadata": {}, "score": "80.280045"}
{"text": "The filter component may also remove price information that is apparently incorrect .For example , due to a collection error , the price of a flight may be unusually low ( e.g. , $ 1 ) or unusually high ( e.g. , $ 999,999 ) .", "label": "", "metadata": {}, "score": "80.280045"}
{"text": "The computing system of .claim 1 wherein the component that generates feature vectors generates core features and derived features .The computing system of .claim 7 wherein the core features of a trip are derived from flight information of flights of the trip having the same observation date .", "label": "", "metadata": {}, "score": "80.68927"}
{"text": "Each observation has an associated observation date that is the date the flight information for the flights of a trip was collected .For example , on December 20 , the prediction system may collect the flight information for all flights from Seattle to Boston departing on January 1 and returning on January 5 .", "label": "", "metadata": {}, "score": "80.92172"}
{"text": "Each observation has an associated observation date that is the date the flight information for the flights of a trip was collected .For example , on December 20 , the prediction system may collect the flight information for all flights from Seattle to Boston departing on January 1 and returning on January 5 .", "label": "", "metadata": {}, "score": "80.92172"}
{"text": "For example , at the ticket price of $ 200 , the flag indicates that price protection should be offered .The price table includes an entry for each possible ticket price that contains a reference to a future - lower priced fare table 314 for that trip at that ticket price .", "label": "", "metadata": {}, "score": "81.08151"}
{"text": "For example , at the ticket price of $ 200 , the flag indicates that price protection should be offered .The price table includes an entry for each possible ticket price that contains a reference to a future - lower priced fare table 314 for that trip at that ticket price .", "label": "", "metadata": {}, "score": "81.08151"}
{"text": "Descriptor . distance ) class CNeighboursClassifier : def _ _ init _ _ ( self , nearest_neighbours , k , distance ): self .nearest_neighbours ( instance , self .k ) ] # average label of neighbors if ex . domain .", "label": "", "metadata": {}, "score": "81.17909"}
{"text": "a processor for executing the computer - executable instructions stored in the memory .The computing system of .claim 1 wherein the price - related prediction is direction of airline ticket price .The computing system of . claim 2 wherein the component that trains the classifier trains a separate classifier for each possible direction of airline ticket price .", "label": "", "metadata": {}, "score": "81.30119"}
{"text": "feature .Descriptor . getclass ( ) .value return [ Estimate ( CNK , SIGNED , CNK_SIGNED ) , Estimate ( abs ( CNK ) , ABSOLUTE , CNK_ABSOLUTE ) ] elif ex . domain .class_var .feature .Descriptor . classification . knn . distance ( probabilities , knn_c ( ex , Orange . classification .", "label": "", "metadata": {}, "score": "81.829056"}
{"text": ": Availability prediction and modeling of high availability OSCAR cluster .In : IEEE International Conference on Cluster Computing .Hong Kong ( 2003 ) .Laprie J.C. and Kanoun K. ( 1992 ) .X - ware reliability and availability modeling .", "label": "", "metadata": {}, "score": "81.833176"}
{"text": "Each market table contains an entry for each market that contains a reference to a departure / return table 221 - 222 .The departure / return table contains an entry for each possible trip within the associated market .Each entry identifies the departure / return date of the trip and contains a reference to a flight table 231 - 232 .", "label": "", "metadata": {}, "score": "81.90302"}
{"text": "Each market table contains an entry for each market that contains a reference to a departure / return table 221 - 222 .The departure / return table contains an entry for each possible trip within the associated market .Each entry identifies the departure / return date of the trip and contains a reference to a flight table 231 - 232 .", "label": "", "metadata": {}, "score": "81.90302"}
{"text": "Multiple Regression ( MR ) vs. Hierarchical Linear Modeling ( HLM ) .Two and three level HLM models maximize prediction by accounting for additional variance resulting from the interaction between variables at different hierarchical levels ( e.g. , school and classroom ) .", "label": "", "metadata": {}, "score": "82.671974"}
{"text": "In block 1601 , the component selects the next market .In decision block 1602 , if all the markets have already been selected , then the component continues at block 1609 , else the component continues at block 1603 .In block 1603 , the component selects the next departure / return date for the selected market .", "label": "", "metadata": {}, "score": "82.759895"}
{"text": "In block 1601 , the component selects the next market .In decision block 1602 , if all the markets have already been selected , then the component continues at block 1609 , else the component continues at block 1603 .In block 1603 , the component selects the next departure / return date for the selected market .", "label": "", "metadata": {}, "score": "82.759895"}
{"text": "J. Climate , 11 , accepted .Lander , M.A. , 1994 : Meteorological factors associated with drought on Guam .Tech .Report No . 75 , Water and Energy Research Institute of the Western Pacific ( WERI ) , University of Guam , Mangilao , Guam , 39 pp .", "label": "", "metadata": {}, "score": "83.42238"}
{"text": "J. Climate , 11 , accepted .Lander , M.A. , 1994 : Meteorological factors associated with drought on Guam .Tech .Report No . 75 , Water and Energy Research Institute of the Western Pacific ( WERI ) , University of Guam , Mangilao , Guam , 39 pp .", "label": "", "metadata": {}, "score": "83.42238"}
{"text": "For example , a search engine service may request predictions for trips to Florida , when a user submits the query \" Florida resorts .\" The search engine can then provide a related prediction with the search results .Alternatively , an advertising system may bid to place an advertisement for queries that include the keyword \" Florida . \"", "label": "", "metadata": {}, "score": "83.59732"}
{"text": "For example , a search engine service may request predictions for trips to Florida , when a user submits the query \" Florida resorts .\" The search engine can then provide a related prediction with the search results .Alternatively , an advertising system may bid to place an advertisement for queries that include the keyword \" Florida . \"", "label": "", "metadata": {}, "score": "83.59732"}
{"text": "The price directions of flat or up and flat or down are considered weak predictions because it can not be predicted whether the price will stay flat or go in the indicated direction .The price prediction system may favor making strong predictions to provide a definitive prediction of price direction .", "label": "", "metadata": {}, "score": "83.61545"}
{"text": "The price directions of flat or up and flat or down are considered weak predictions because it can not be predicted whether the price will stay flat or go in the indicated direction .The price prediction system may favor making strong predictions to provide a definitive prediction of price direction .", "label": "", "metadata": {}, "score": "83.61545"}
{"text": "save_data : self .stacking_classifier self .reliability_classifier ( instance , Orange . core .GetProbabilities ) .estimate ) for e in re ] + [ \" ? \" ] data .Instance ( self . estimators is None : self .", "label": "", "metadata": {}, "score": "83.84352"}
{"text": "GetBoth ) for borders , estimate in zip ( self .all_borders , probabilities .reliability_estimate ): estimate .desc [ 0 ] for lower_border , text_desc in zip ( borders , self .desc ): if estimate . core . core .", "label": "", "metadata": {}, "score": "83.9214"}
{"text": "These results are presented in Table 2 . %Free / Reduced .STRESS .As can be seen the teacher effectiveness ratings are unrelated to the demographic makeup of the classroom .All Ethnic groups .Data reflects all grade levels across the district .", "label": "", "metadata": {}, "score": "83.98282"}
{"text": "For example , a person may fly from Seattle to Boston , Boston to Atlanta , and then from Atlanta to Seattle .A trip may also include a specific submarket or a specific flight .One skilled in the art will appreciate that the prediction system can be used to make predictions on a non - travel related item .", "label": "", "metadata": {}, "score": "84.02988"}
{"text": "For example , a person may fly from Seattle to Boston , Boston to Atlanta , and then from Atlanta to Seattle .A trip may also include a specific submarket or a specific flight .One skilled in the art will appreciate that the prediction system can be used to make predictions on a non - travel related item .", "label": "", "metadata": {}, "score": "84.02988"}
{"text": "distance . feature .Descriptor .k , nnm , mid ) class MahalanobisClassifier : def _ _ init _ _ ( self , k , nnm , mid ): self .mid ] .value for ex in self . nnm ( instance , self . core .", "label": "", "metadata": {}, "score": "84.11507"}
{"text": "class_var .feature .Descriptor . core . domain .class_var . distance ( returned_value , Orange . statistics . distribution . exp ( - knn [ i ] [ self .distance_id ] ) if self .domain .class_var .", "label": "", "metadata": {}, "score": "86.49267"}
{"text": "data .Table ( self .data .Instance ( instance ) # Append it to the data r_data .e : # + epsilon r_data [ - 1 ] . setclass ( predicted .max_value - self . core .GetValue ) # -epsilon r_data [ - 1 ] . setclass ( predicted .", "label": "", "metadata": {}, "score": "86.76946"}
{"text": "In block 1605 , the component selects the next submarket for the selected market and selected departure / return date combination .In decision block 1606 , if all such submarkets have already been selected , then the component looks to block 1603 to select the next departure / return date , else the component continues at block 1607 .", "label": "", "metadata": {}, "score": "87.549515"}
{"text": "In block 1605 , the component selects the next submarket for the selected market and selected departure / return date combination .In decision block 1606 , if all such submarkets have already been selected , then the component looks to block 1603 to select the next departure / return date , else the component continues at block 1607 .", "label": "", "metadata": {}, "score": "87.549515"}
{"text": "After the training , the prediction system is ready to make predictions using the classifier .For example , the prediction system may be used in conjunction with a user interface that provides airline flight information .A user may be interested in flight information for a particular trip , that is , a particular market ( e.g. , Seattle to Boston ) for a particular departure and return date combination ( e.g. , departing February 1 and returning February 5 ) .", "label": "", "metadata": {}, "score": "87.64404"}
{"text": "After the training , the prediction system is ready to make predictions using the classifier .For example , the prediction system may be used in conjunction with a user interface that provides airline flight information .A user may be interested in flight information for a particular trip , that is , a particular market ( e.g. , Seattle to Boston ) for a particular departure and return date combination ( e.g. , departing February 1 and returning February 5 ) .", "label": "", "metadata": {}, "score": "87.64404"}
{"text": "sample .SubsetIndicesCV ( data , self . core .value - pred [ 0 ] .data . sample . core .value - pred [ 0 ] .value data_cv . feature .data .Domain ( newfeatures , Orange . feature .", "label": "", "metadata": {}, "score": "87.813705"}
{"text": "select_with_repeat . misc .Random ( randseed ) self .domain .class_var .feature .Descriptor .for_instances ) # Create bagged classifiers using sampling with replacement for i in xrange ( self .for_instances : # predict reliability for testing instances and throw cl away for instance , hi in zip ( self .", "label": "", "metadata": {}, "score": "88.047615"}
{"text": "Descriptor . nearest_neighbours ( instance , self . learner ( Orange . data .Table ( train ) ) if instance .domain .class_var .feature .Descriptor . core .getclass ( ) .value - returned_value . value ) elif instance .", "label": "", "metadata": {}, "score": "89.816345"}
{"text": "For example , if the query is \" Florida resorts , \" the advertisement may list the predicted lowest fares from various departure cities to various locations in Florida .The prediction system may also publish predictions to various subscribers .For example , a travel web site may subscribe to receive predictions of the lowest fares for various U.S. cities to various African cities .", "label": "", "metadata": {}, "score": "90.83368"}
{"text": "For example , if the query is \" Florida resorts , \" the advertisement may list the predicted lowest fares from various departure cities to various locations in Florida .The prediction system may also publish predictions to various subscribers .For example , a travel web site may subscribe to receive predictions of the lowest fares for various U.S. cities to various African cities .", "label": "", "metadata": {}, "score": "90.83368"}
{"text": "claim 1 wherein each generated display page includes a \" buy now \" button for purchasing tickets for the outbound flight and the return flight .The method of .claim 1 wherein each display page includes the price of the trip represented by the outbound flight and the return flight .", "label": "", "metadata": {}, "score": "91.35557"}
{"text": "getclass ( ) .value if ex .getclass ( ) .getclass ( ) .value return SensitivityAnalysisClassifier ( self .e , instances , min_value ,max_value , learner ) class SensitivityAnalysisClassifier : def _ _ init _ _ ( self , e , instances , min_value ,", "label": "", "metadata": {}, "score": "91.50786"}
{"text": "claim 1 wherein the price - related predictions for trips for an observation date are generated in batch mode .The computing system of . claim 13 wherein the price - related predictions for a trip are generated assuming different current airline ticket prices for the trip .", "label": "", "metadata": {}, "score": "92.12081"}
{"text": "Instance ( self . distance ( inst , self .average_instance ) return [ Estimate ( mahalanobis_to_center , ABSOLUTE , MAHAL_TO_CENTER_ABSOLUTE ) ] class BaggingVarianceCNeighbours : \" \" \" : param bagv : Instance of Bagging Variance estimator .: type bagv : : class:'BaggingVariance ' : param cnk : Instance of CNK estimator .", "label": "", "metadata": {}, "score": "92.273056"}
{"text": "A departure and return date combination may be January 1 and January 5 or January 2 and January 5 .Each trip may have multiple available flights .For example , the trip from Seattle to Boston departing on January 1 and returning on January 5 may have four available flights .", "label": "", "metadata": {}, "score": "93.134254"}
{"text": "A departure and return date combination may be January 1 and January 5 or January 2 and January 5 .Each trip may have multiple available flights .For example , the trip from Seattle to Boston departing on January 1 and returning on January 5 may have four available flights .", "label": "", "metadata": {}, "score": "93.134254"}
{"text": "J. Royal Meteor .Soc . , submitted .Science , 269 , 1699 - 1702 .Chu , P.S. , 1989 : Hawaiian drought and the Southern Oscillation .Int .J. Climatol . , 9 , 619 - 631 .", "label": "", "metadata": {}, "score": "93.87127"}
{"text": "J. Royal Meteor .Soc . , submitted .Science , 269 , 1699 - 1702 .Chu , P.S. , 1989 : Hawaiian drought and the Southern Oscillation .Int .J. Climatol . , 9 , 619 - 631 .", "label": "", "metadata": {}, "score": "93.87127"}
{"text": "classifier ) for c in self .domain .class_var .feature .Descriptor .value for i in range ( len ( instance .domain . attributes ) ) ) def _ bagged_value ( instance , c , classifier ): if instance .", "label": "", "metadata": {}, "score": "96.60001"}
{"text": "claim 1 wherein the computing device is a web server and the display page is a web page .The method of .claim 1 wherein the aircraft dimensions include aircraft width and aircraft length .The method of .claim 1 wherein the seat information includes seat layout and seat pitch .", "label": "", "metadata": {}, "score": "97.97298"}
{"text": "DomainContinuizer .Ignore dc . core .DomainContinuizer .NormalizeBySpan dc . core .DomainContinuizer . distance .data .Instance ( new_instances .domain , list ( instance_avg ) + [ \" ? \" ] ) return MahalanobisToCenterClassifier ( distance , average_instance , new_domain ) class MahalanobisToCenterClassifier : def _ _ init _ _ ( self , distance , average_instance , new_domain ): self .", "label": "", "metadata": {}, "score": "98.36247"}
{"text": "claim 9 wherein each generated display page includes a \" buy now \" button for purchasing tickets for the outbound flight and the return flight .The computer of .claim 9 wherein each display page includes the price of the trip represented by the outbound flight and the return flight .", "label": "", "metadata": {}, "score": "98.971924"}
{"text": "class_var .feature .Descriptor .Continuous : return c ( instance , Orange . core .GetValue ) .value elif instance .domain .class_var .feature .Descriptor . core .GetProbabilities ) return euclidean_dist ( c ( instance , Orange . core .", "label": "", "metadata": {}, "score": "101.48305"}
{"text": "Also , a trip may include an arrival location that is separate from the return location .For example , a trip could have a departure location of Seattle , an arrival location of Boston , and a return location of New York City when a person flies from Seattle to Boston and on return flies from New York City to Seattle .", "label": "", "metadata": {}, "score": "101.967995"}
{"text": "Also , a trip may include an arrival location that is separate from the return location .For example , a trip could have a departure location of Seattle , an arrival location of Boston , and a return location of New York City when a person flies from Seattle to Boston and on return flies from New York City to Seattle .", "label": "", "metadata": {}, "score": "101.967995"}
{"text": "claim 9 wherein the display page is a web page .The computer of .claim 9 wherein the aircraft dimensions include aircraft width and aircraft length .The computer of .claim 9 wherein the seat information includes seat layout and seat pitch .", "label": "", "metadata": {}, "score": "104.51558"}
{"text": "A method performed by a computing device with a processor and memory for providing a trip comparison user interface for flight information , the method comprising : . displaying a trip overview information button , a trip comparison information button , an airport details information button , and an airline details information button ; . receiving from a user an indication of trip , the trip including an outbound flight leaving from a outbound airport and a return flight leaving from a return airport ; . receiving from the user a selection of one of the displayed buttons to indicate the type of trip comparison information to be displayed ; . determining whether the type of trip comparison information indicates trip overview information ; . upon determining that the type of trip comparison information indicates trip overview information , . retrieving trip overview information from the data store ; and . determining whether the type of trip comparison information indicates flight details information ; . upon determining that the type of trip comparison information indicates flight details information , . retrieving flight details information from the data store ; and . determining whether the type of trip comparison information indicates airport details information ; . upon determining that the type of trip comparison information indicates airport details information , . retrieving airport details information from the data store ; and . determining whether the type of trip comparison information indicates airline details information ; . upon determining that the type of trip comparison information indicates airline details information , . retrieving airline details information from the data store ; and . outputting the generated display page for display to the user .", "label": "", "metadata": {}, "score": "107.36748"}
